const main = (function() {
    class DenoStdInternalError extends Error {
        constructor(message){
            super(message);
            this.name = "DenoStdInternalError";
        }
    }
    function assert(expr, msg = "") {
        if (!expr) {
            throw new DenoStdInternalError(msg);
        }
    }
    function unreachable() {
        throw new DenoStdInternalError("unreachable");
    }
    const osType = (()=>{
        const { Deno: Deno1 } = globalThis;
        if (typeof Deno1?.build?.os === "string") {
            return Deno1.build.os;
        }
        const { navigator } = globalThis;
        if (navigator?.appVersion?.includes?.("Win")) {
            return "windows";
        }
        return "linux";
    })();
    const isWindows = osType === "windows";
    const isLinux = osType === "linux";
    function uvTranslateSysError(sysErrno) {
        switch(sysErrno){
            case 5:
                return "EACCES";
            case 998:
                return "EACCES";
            case 10013:
                return "EACCES";
            case 1920:
                return "EACCES";
            case 1227:
                return "EADDRINUSE";
            case 10048:
                return "EADDRINUSE";
            case 10049:
                return "EADDRNOTAVAIL";
            case 10047:
                return "EAFNOSUPPORT";
            case 10035:
                return "EAGAIN";
            case 10037:
                return "EALREADY";
            case 1004:
                return "EBADF";
            case 6:
                return "EBADF";
            case 33:
                return "EBUSY";
            case 231:
                return "EBUSY";
            case 32:
                return "EBUSY";
            case 995:
                return "ECANCELED";
            case 10004:
                return "ECANCELED";
            case 1113:
                return "ECHARSET";
            case 1236:
                return "ECONNABORTED";
            case 10053:
                return "ECONNABORTED";
            case 1225:
                return "ECONNREFUSED";
            case 10061:
                return "ECONNREFUSED";
            case 64:
                return "ECONNRESET";
            case 10054:
                return "ECONNRESET";
            case 183:
                return "EEXIST";
            case 80:
                return "EEXIST";
            case 111:
                return "EFAULT";
            case 10014:
                return "EFAULT";
            case 1232:
                return "EHOSTUNREACH";
            case 10065:
                return "EHOSTUNREACH";
            case 122:
                return "EINVAL";
            case 13:
                return "EINVAL";
            case 123:
                return "EINVAL";
            case 87:
                return "EINVAL";
            case 10022:
                return "EINVAL";
            case 10046:
                return "EINVAL";
            case 1102:
                return "EIO";
            case 1111:
                return "EIO";
            case 23:
                return "EIO";
            case 1166:
                return "EIO";
            case 1165:
                return "EIO";
            case 1393:
                return "EIO";
            case 1129:
                return "EIO";
            case 1101:
                return "EIO";
            case 31:
                return "EIO";
            case 1106:
                return "EIO";
            case 1117:
                return "EIO";
            case 1104:
                return "EIO";
            case 205:
                return "EIO";
            case 110:
                return "EIO";
            case 1103:
                return "EIO";
            case 156:
                return "EIO";
            case 10056:
                return "EISCONN";
            case 1921:
                return "ELOOP";
            case 4:
                return "EMFILE";
            case 10024:
                return "EMFILE";
            case 10040:
                return "EMSGSIZE";
            case 206:
                return "ENAMETOOLONG";
            case 1231:
                return "ENETUNREACH";
            case 10051:
                return "ENETUNREACH";
            case 10055:
                return "ENOBUFS";
            case 161:
                return "ENOENT";
            case 267:
                return "ENOTDIR";
            case 203:
                return "ENOENT";
            case 2:
                return "ENOENT";
            case 15:
                return "ENOENT";
            case 4392:
                return "ENOENT";
            case 126:
                return "ENOENT";
            case 3:
                return "ENOENT";
            case 11001:
                return "ENOENT";
            case 11004:
                return "ENOENT";
            case 8:
                return "ENOMEM";
            case 14:
                return "ENOMEM";
            case 82:
                return "ENOSPC";
            case 112:
                return "ENOSPC";
            case 277:
                return "ENOSPC";
            case 1100:
                return "ENOSPC";
            case 39:
                return "ENOSPC";
            case 2250:
                return "ENOTCONN";
            case 10057:
                return "ENOTCONN";
            case 145:
                return "ENOTEMPTY";
            case 10038:
                return "ENOTSOCK";
            case 50:
                return "ENOTSUP";
            case 109:
                return "EOF";
            case 1314:
                return "EPERM";
            case 230:
                return "EPIPE";
            case 232:
                return "EPIPE";
            case 233:
                return "EPIPE";
            case 10058:
                return "EPIPE";
            case 10043:
                return "EPROTONOSUPPORT";
            case 19:
                return "EROFS";
            case 121:
                return "ETIMEDOUT";
            case 10060:
                return "ETIMEDOUT";
            case 17:
                return "EXDEV";
            case 1:
                return "EISDIR";
            case 208:
                return "E2BIG";
            case 10044:
                return "ESOCKTNOSUPPORT";
            default:
                return "UNKNOWN";
        }
    }
    const codeToErrorWindows = [
        [
            -4093,
            [
                "E2BIG",
                "argument list too long"
            ]
        ],
        [
            -4092,
            [
                "EACCES",
                "permission denied"
            ]
        ],
        [
            -4091,
            [
                "EADDRINUSE",
                "address already in use"
            ]
        ],
        [
            -4090,
            [
                "EADDRNOTAVAIL",
                "address not available"
            ]
        ],
        [
            -4089,
            [
                "EAFNOSUPPORT",
                "address family not supported"
            ]
        ],
        [
            -4088,
            [
                "EAGAIN",
                "resource temporarily unavailable"
            ]
        ],
        [
            -3000,
            [
                "EAI_ADDRFAMILY",
                "address family not supported"
            ]
        ],
        [
            -3001,
            [
                "EAI_AGAIN",
                "temporary failure"
            ]
        ],
        [
            -3002,
            [
                "EAI_BADFLAGS",
                "bad ai_flags value"
            ]
        ],
        [
            -3013,
            [
                "EAI_BADHINTS",
                "invalid value for hints"
            ]
        ],
        [
            -3003,
            [
                "EAI_CANCELED",
                "request canceled"
            ]
        ],
        [
            -3004,
            [
                "EAI_FAIL",
                "permanent failure"
            ]
        ],
        [
            -3005,
            [
                "EAI_FAMILY",
                "ai_family not supported"
            ]
        ],
        [
            -3006,
            [
                "EAI_MEMORY",
                "out of memory"
            ]
        ],
        [
            -3007,
            [
                "EAI_NODATA",
                "no address"
            ]
        ],
        [
            -3008,
            [
                "EAI_NONAME",
                "unknown node or service"
            ]
        ],
        [
            -3009,
            [
                "EAI_OVERFLOW",
                "argument buffer overflow"
            ]
        ],
        [
            -3014,
            [
                "EAI_PROTOCOL",
                "resolved protocol is unknown"
            ]
        ],
        [
            -3010,
            [
                "EAI_SERVICE",
                "service not available for socket type"
            ]
        ],
        [
            -3011,
            [
                "EAI_SOCKTYPE",
                "socket type not supported"
            ]
        ],
        [
            -4084,
            [
                "EALREADY",
                "connection already in progress"
            ]
        ],
        [
            -4083,
            [
                "EBADF",
                "bad file descriptor"
            ]
        ],
        [
            -4082,
            [
                "EBUSY",
                "resource busy or locked"
            ]
        ],
        [
            -4081,
            [
                "ECANCELED",
                "operation canceled"
            ]
        ],
        [
            -4080,
            [
                "ECHARSET",
                "invalid Unicode character"
            ]
        ],
        [
            -4079,
            [
                "ECONNABORTED",
                "software caused connection abort"
            ]
        ],
        [
            -4078,
            [
                "ECONNREFUSED",
                "connection refused"
            ]
        ],
        [
            -4077,
            [
                "ECONNRESET",
                "connection reset by peer"
            ]
        ],
        [
            -4076,
            [
                "EDESTADDRREQ",
                "destination address required"
            ]
        ],
        [
            -4075,
            [
                "EEXIST",
                "file already exists"
            ]
        ],
        [
            -4074,
            [
                "EFAULT",
                "bad address in system call argument"
            ]
        ],
        [
            -4036,
            [
                "EFBIG",
                "file too large"
            ]
        ],
        [
            -4073,
            [
                "EHOSTUNREACH",
                "host is unreachable"
            ]
        ],
        [
            -4072,
            [
                "EINTR",
                "interrupted system call"
            ]
        ],
        [
            -4071,
            [
                "EINVAL",
                "invalid argument"
            ]
        ],
        [
            -4070,
            [
                "EIO",
                "i/o error"
            ]
        ],
        [
            -4069,
            [
                "EISCONN",
                "socket is already connected"
            ]
        ],
        [
            -4068,
            [
                "EISDIR",
                "illegal operation on a directory"
            ]
        ],
        [
            -4067,
            [
                "ELOOP",
                "too many symbolic links encountered"
            ]
        ],
        [
            -4066,
            [
                "EMFILE",
                "too many open files"
            ]
        ],
        [
            -4065,
            [
                "EMSGSIZE",
                "message too long"
            ]
        ],
        [
            -4064,
            [
                "ENAMETOOLONG",
                "name too long"
            ]
        ],
        [
            -4063,
            [
                "ENETDOWN",
                "network is down"
            ]
        ],
        [
            -4062,
            [
                "ENETUNREACH",
                "network is unreachable"
            ]
        ],
        [
            -4061,
            [
                "ENFILE",
                "file table overflow"
            ]
        ],
        [
            -4060,
            [
                "ENOBUFS",
                "no buffer space available"
            ]
        ],
        [
            -4059,
            [
                "ENODEV",
                "no such device"
            ]
        ],
        [
            -4058,
            [
                "ENOENT",
                "no such file or directory"
            ]
        ],
        [
            -4057,
            [
                "ENOMEM",
                "not enough memory"
            ]
        ],
        [
            -4056,
            [
                "ENONET",
                "machine is not on the network"
            ]
        ],
        [
            -4035,
            [
                "ENOPROTOOPT",
                "protocol not available"
            ]
        ],
        [
            -4055,
            [
                "ENOSPC",
                "no space left on device"
            ]
        ],
        [
            -4054,
            [
                "ENOSYS",
                "function not implemented"
            ]
        ],
        [
            -4053,
            [
                "ENOTCONN",
                "socket is not connected"
            ]
        ],
        [
            -4052,
            [
                "ENOTDIR",
                "not a directory"
            ]
        ],
        [
            -4051,
            [
                "ENOTEMPTY",
                "directory not empty"
            ]
        ],
        [
            -4050,
            [
                "ENOTSOCK",
                "socket operation on non-socket"
            ]
        ],
        [
            -4049,
            [
                "ENOTSUP",
                "operation not supported on socket"
            ]
        ],
        [
            -4048,
            [
                "EPERM",
                "operation not permitted"
            ]
        ],
        [
            -4047,
            [
                "EPIPE",
                "broken pipe"
            ]
        ],
        [
            -4046,
            [
                "EPROTO",
                "protocol error"
            ]
        ],
        [
            -4045,
            [
                "EPROTONOSUPPORT",
                "protocol not supported"
            ]
        ],
        [
            -4044,
            [
                "EPROTOTYPE",
                "protocol wrong type for socket"
            ]
        ],
        [
            -4034,
            [
                "ERANGE",
                "result too large"
            ]
        ],
        [
            -4043,
            [
                "EROFS",
                "read-only file system"
            ]
        ],
        [
            -4042,
            [
                "ESHUTDOWN",
                "cannot send after transport endpoint shutdown"
            ]
        ],
        [
            -4041,
            [
                "ESPIPE",
                "invalid seek"
            ]
        ],
        [
            -4040,
            [
                "ESRCH",
                "no such process"
            ]
        ],
        [
            -4039,
            [
                "ETIMEDOUT",
                "connection timed out"
            ]
        ],
        [
            -4038,
            [
                "ETXTBSY",
                "text file is busy"
            ]
        ],
        [
            -4037,
            [
                "EXDEV",
                "cross-device link not permitted"
            ]
        ],
        [
            -4094,
            [
                "UNKNOWN",
                "unknown error"
            ]
        ],
        [
            -4095,
            [
                "EOF",
                "end of file"
            ]
        ],
        [
            -4033,
            [
                "ENXIO",
                "no such device or address"
            ]
        ],
        [
            -4032,
            [
                "EMLINK",
                "too many links"
            ]
        ],
        [
            -4031,
            [
                "EHOSTDOWN",
                "host is down"
            ]
        ],
        [
            -4030,
            [
                "EREMOTEIO",
                "remote I/O error"
            ]
        ],
        [
            -4029,
            [
                "ENOTTY",
                "inappropriate ioctl for device"
            ]
        ],
        [
            -4028,
            [
                "EFTYPE",
                "inappropriate file type or format"
            ]
        ],
        [
            -4027,
            [
                "EILSEQ",
                "illegal byte sequence"
            ]
        ]
    ];
    const errorToCodeWindows = codeToErrorWindows.map(([status, [error]])=>[
            error,
            status
        ]);
    const codeToErrorDarwin = [
        [
            -7,
            [
                "E2BIG",
                "argument list too long"
            ]
        ],
        [
            -13,
            [
                "EACCES",
                "permission denied"
            ]
        ],
        [
            -48,
            [
                "EADDRINUSE",
                "address already in use"
            ]
        ],
        [
            -49,
            [
                "EADDRNOTAVAIL",
                "address not available"
            ]
        ],
        [
            -47,
            [
                "EAFNOSUPPORT",
                "address family not supported"
            ]
        ],
        [
            -35,
            [
                "EAGAIN",
                "resource temporarily unavailable"
            ]
        ],
        [
            -3000,
            [
                "EAI_ADDRFAMILY",
                "address family not supported"
            ]
        ],
        [
            -3001,
            [
                "EAI_AGAIN",
                "temporary failure"
            ]
        ],
        [
            -3002,
            [
                "EAI_BADFLAGS",
                "bad ai_flags value"
            ]
        ],
        [
            -3013,
            [
                "EAI_BADHINTS",
                "invalid value for hints"
            ]
        ],
        [
            -3003,
            [
                "EAI_CANCELED",
                "request canceled"
            ]
        ],
        [
            -3004,
            [
                "EAI_FAIL",
                "permanent failure"
            ]
        ],
        [
            -3005,
            [
                "EAI_FAMILY",
                "ai_family not supported"
            ]
        ],
        [
            -3006,
            [
                "EAI_MEMORY",
                "out of memory"
            ]
        ],
        [
            -3007,
            [
                "EAI_NODATA",
                "no address"
            ]
        ],
        [
            -3008,
            [
                "EAI_NONAME",
                "unknown node or service"
            ]
        ],
        [
            -3009,
            [
                "EAI_OVERFLOW",
                "argument buffer overflow"
            ]
        ],
        [
            -3014,
            [
                "EAI_PROTOCOL",
                "resolved protocol is unknown"
            ]
        ],
        [
            -3010,
            [
                "EAI_SERVICE",
                "service not available for socket type"
            ]
        ],
        [
            -3011,
            [
                "EAI_SOCKTYPE",
                "socket type not supported"
            ]
        ],
        [
            -37,
            [
                "EALREADY",
                "connection already in progress"
            ]
        ],
        [
            -9,
            [
                "EBADF",
                "bad file descriptor"
            ]
        ],
        [
            -16,
            [
                "EBUSY",
                "resource busy or locked"
            ]
        ],
        [
            -89,
            [
                "ECANCELED",
                "operation canceled"
            ]
        ],
        [
            -4080,
            [
                "ECHARSET",
                "invalid Unicode character"
            ]
        ],
        [
            -53,
            [
                "ECONNABORTED",
                "software caused connection abort"
            ]
        ],
        [
            -61,
            [
                "ECONNREFUSED",
                "connection refused"
            ]
        ],
        [
            -54,
            [
                "ECONNRESET",
                "connection reset by peer"
            ]
        ],
        [
            -39,
            [
                "EDESTADDRREQ",
                "destination address required"
            ]
        ],
        [
            -17,
            [
                "EEXIST",
                "file already exists"
            ]
        ],
        [
            -14,
            [
                "EFAULT",
                "bad address in system call argument"
            ]
        ],
        [
            -27,
            [
                "EFBIG",
                "file too large"
            ]
        ],
        [
            -65,
            [
                "EHOSTUNREACH",
                "host is unreachable"
            ]
        ],
        [
            -4,
            [
                "EINTR",
                "interrupted system call"
            ]
        ],
        [
            -22,
            [
                "EINVAL",
                "invalid argument"
            ]
        ],
        [
            -5,
            [
                "EIO",
                "i/o error"
            ]
        ],
        [
            -56,
            [
                "EISCONN",
                "socket is already connected"
            ]
        ],
        [
            -21,
            [
                "EISDIR",
                "illegal operation on a directory"
            ]
        ],
        [
            -62,
            [
                "ELOOP",
                "too many symbolic links encountered"
            ]
        ],
        [
            -24,
            [
                "EMFILE",
                "too many open files"
            ]
        ],
        [
            -40,
            [
                "EMSGSIZE",
                "message too long"
            ]
        ],
        [
            -63,
            [
                "ENAMETOOLONG",
                "name too long"
            ]
        ],
        [
            -50,
            [
                "ENETDOWN",
                "network is down"
            ]
        ],
        [
            -51,
            [
                "ENETUNREACH",
                "network is unreachable"
            ]
        ],
        [
            -23,
            [
                "ENFILE",
                "file table overflow"
            ]
        ],
        [
            -55,
            [
                "ENOBUFS",
                "no buffer space available"
            ]
        ],
        [
            -19,
            [
                "ENODEV",
                "no such device"
            ]
        ],
        [
            -2,
            [
                "ENOENT",
                "no such file or directory"
            ]
        ],
        [
            -12,
            [
                "ENOMEM",
                "not enough memory"
            ]
        ],
        [
            -4056,
            [
                "ENONET",
                "machine is not on the network"
            ]
        ],
        [
            -42,
            [
                "ENOPROTOOPT",
                "protocol not available"
            ]
        ],
        [
            -28,
            [
                "ENOSPC",
                "no space left on device"
            ]
        ],
        [
            -78,
            [
                "ENOSYS",
                "function not implemented"
            ]
        ],
        [
            -57,
            [
                "ENOTCONN",
                "socket is not connected"
            ]
        ],
        [
            -20,
            [
                "ENOTDIR",
                "not a directory"
            ]
        ],
        [
            -66,
            [
                "ENOTEMPTY",
                "directory not empty"
            ]
        ],
        [
            -38,
            [
                "ENOTSOCK",
                "socket operation on non-socket"
            ]
        ],
        [
            -45,
            [
                "ENOTSUP",
                "operation not supported on socket"
            ]
        ],
        [
            -1,
            [
                "EPERM",
                "operation not permitted"
            ]
        ],
        [
            -32,
            [
                "EPIPE",
                "broken pipe"
            ]
        ],
        [
            -100,
            [
                "EPROTO",
                "protocol error"
            ]
        ],
        [
            -43,
            [
                "EPROTONOSUPPORT",
                "protocol not supported"
            ]
        ],
        [
            -41,
            [
                "EPROTOTYPE",
                "protocol wrong type for socket"
            ]
        ],
        [
            -34,
            [
                "ERANGE",
                "result too large"
            ]
        ],
        [
            -30,
            [
                "EROFS",
                "read-only file system"
            ]
        ],
        [
            -58,
            [
                "ESHUTDOWN",
                "cannot send after transport endpoint shutdown"
            ]
        ],
        [
            -29,
            [
                "ESPIPE",
                "invalid seek"
            ]
        ],
        [
            -3,
            [
                "ESRCH",
                "no such process"
            ]
        ],
        [
            -60,
            [
                "ETIMEDOUT",
                "connection timed out"
            ]
        ],
        [
            -26,
            [
                "ETXTBSY",
                "text file is busy"
            ]
        ],
        [
            -18,
            [
                "EXDEV",
                "cross-device link not permitted"
            ]
        ],
        [
            -4094,
            [
                "UNKNOWN",
                "unknown error"
            ]
        ],
        [
            -4095,
            [
                "EOF",
                "end of file"
            ]
        ],
        [
            -6,
            [
                "ENXIO",
                "no such device or address"
            ]
        ],
        [
            -31,
            [
                "EMLINK",
                "too many links"
            ]
        ],
        [
            -64,
            [
                "EHOSTDOWN",
                "host is down"
            ]
        ],
        [
            -4030,
            [
                "EREMOTEIO",
                "remote I/O error"
            ]
        ],
        [
            -25,
            [
                "ENOTTY",
                "inappropriate ioctl for device"
            ]
        ],
        [
            -79,
            [
                "EFTYPE",
                "inappropriate file type or format"
            ]
        ],
        [
            -92,
            [
                "EILSEQ",
                "illegal byte sequence"
            ]
        ]
    ];
    const errorToCodeDarwin = codeToErrorDarwin.map(([status, [code]])=>[
            code,
            status
        ]);
    const codeToErrorLinux = [
        [
            -7,
            [
                "E2BIG",
                "argument list too long"
            ]
        ],
        [
            -13,
            [
                "EACCES",
                "permission denied"
            ]
        ],
        [
            -98,
            [
                "EADDRINUSE",
                "address already in use"
            ]
        ],
        [
            -99,
            [
                "EADDRNOTAVAIL",
                "address not available"
            ]
        ],
        [
            -97,
            [
                "EAFNOSUPPORT",
                "address family not supported"
            ]
        ],
        [
            -11,
            [
                "EAGAIN",
                "resource temporarily unavailable"
            ]
        ],
        [
            -3000,
            [
                "EAI_ADDRFAMILY",
                "address family not supported"
            ]
        ],
        [
            -3001,
            [
                "EAI_AGAIN",
                "temporary failure"
            ]
        ],
        [
            -3002,
            [
                "EAI_BADFLAGS",
                "bad ai_flags value"
            ]
        ],
        [
            -3013,
            [
                "EAI_BADHINTS",
                "invalid value for hints"
            ]
        ],
        [
            -3003,
            [
                "EAI_CANCELED",
                "request canceled"
            ]
        ],
        [
            -3004,
            [
                "EAI_FAIL",
                "permanent failure"
            ]
        ],
        [
            -3005,
            [
                "EAI_FAMILY",
                "ai_family not supported"
            ]
        ],
        [
            -3006,
            [
                "EAI_MEMORY",
                "out of memory"
            ]
        ],
        [
            -3007,
            [
                "EAI_NODATA",
                "no address"
            ]
        ],
        [
            -3008,
            [
                "EAI_NONAME",
                "unknown node or service"
            ]
        ],
        [
            -3009,
            [
                "EAI_OVERFLOW",
                "argument buffer overflow"
            ]
        ],
        [
            -3014,
            [
                "EAI_PROTOCOL",
                "resolved protocol is unknown"
            ]
        ],
        [
            -3010,
            [
                "EAI_SERVICE",
                "service not available for socket type"
            ]
        ],
        [
            -3011,
            [
                "EAI_SOCKTYPE",
                "socket type not supported"
            ]
        ],
        [
            -114,
            [
                "EALREADY",
                "connection already in progress"
            ]
        ],
        [
            -9,
            [
                "EBADF",
                "bad file descriptor"
            ]
        ],
        [
            -16,
            [
                "EBUSY",
                "resource busy or locked"
            ]
        ],
        [
            -125,
            [
                "ECANCELED",
                "operation canceled"
            ]
        ],
        [
            -4080,
            [
                "ECHARSET",
                "invalid Unicode character"
            ]
        ],
        [
            -103,
            [
                "ECONNABORTED",
                "software caused connection abort"
            ]
        ],
        [
            -111,
            [
                "ECONNREFUSED",
                "connection refused"
            ]
        ],
        [
            -104,
            [
                "ECONNRESET",
                "connection reset by peer"
            ]
        ],
        [
            -89,
            [
                "EDESTADDRREQ",
                "destination address required"
            ]
        ],
        [
            -17,
            [
                "EEXIST",
                "file already exists"
            ]
        ],
        [
            -14,
            [
                "EFAULT",
                "bad address in system call argument"
            ]
        ],
        [
            -27,
            [
                "EFBIG",
                "file too large"
            ]
        ],
        [
            -113,
            [
                "EHOSTUNREACH",
                "host is unreachable"
            ]
        ],
        [
            -4,
            [
                "EINTR",
                "interrupted system call"
            ]
        ],
        [
            -22,
            [
                "EINVAL",
                "invalid argument"
            ]
        ],
        [
            -5,
            [
                "EIO",
                "i/o error"
            ]
        ],
        [
            -106,
            [
                "EISCONN",
                "socket is already connected"
            ]
        ],
        [
            -21,
            [
                "EISDIR",
                "illegal operation on a directory"
            ]
        ],
        [
            -40,
            [
                "ELOOP",
                "too many symbolic links encountered"
            ]
        ],
        [
            -24,
            [
                "EMFILE",
                "too many open files"
            ]
        ],
        [
            -90,
            [
                "EMSGSIZE",
                "message too long"
            ]
        ],
        [
            -36,
            [
                "ENAMETOOLONG",
                "name too long"
            ]
        ],
        [
            -100,
            [
                "ENETDOWN",
                "network is down"
            ]
        ],
        [
            -101,
            [
                "ENETUNREACH",
                "network is unreachable"
            ]
        ],
        [
            -23,
            [
                "ENFILE",
                "file table overflow"
            ]
        ],
        [
            -105,
            [
                "ENOBUFS",
                "no buffer space available"
            ]
        ],
        [
            -19,
            [
                "ENODEV",
                "no such device"
            ]
        ],
        [
            -2,
            [
                "ENOENT",
                "no such file or directory"
            ]
        ],
        [
            -12,
            [
                "ENOMEM",
                "not enough memory"
            ]
        ],
        [
            -64,
            [
                "ENONET",
                "machine is not on the network"
            ]
        ],
        [
            -92,
            [
                "ENOPROTOOPT",
                "protocol not available"
            ]
        ],
        [
            -28,
            [
                "ENOSPC",
                "no space left on device"
            ]
        ],
        [
            -38,
            [
                "ENOSYS",
                "function not implemented"
            ]
        ],
        [
            -107,
            [
                "ENOTCONN",
                "socket is not connected"
            ]
        ],
        [
            -20,
            [
                "ENOTDIR",
                "not a directory"
            ]
        ],
        [
            -39,
            [
                "ENOTEMPTY",
                "directory not empty"
            ]
        ],
        [
            -88,
            [
                "ENOTSOCK",
                "socket operation on non-socket"
            ]
        ],
        [
            -95,
            [
                "ENOTSUP",
                "operation not supported on socket"
            ]
        ],
        [
            -1,
            [
                "EPERM",
                "operation not permitted"
            ]
        ],
        [
            -32,
            [
                "EPIPE",
                "broken pipe"
            ]
        ],
        [
            -71,
            [
                "EPROTO",
                "protocol error"
            ]
        ],
        [
            -93,
            [
                "EPROTONOSUPPORT",
                "protocol not supported"
            ]
        ],
        [
            -91,
            [
                "EPROTOTYPE",
                "protocol wrong type for socket"
            ]
        ],
        [
            -34,
            [
                "ERANGE",
                "result too large"
            ]
        ],
        [
            -30,
            [
                "EROFS",
                "read-only file system"
            ]
        ],
        [
            -108,
            [
                "ESHUTDOWN",
                "cannot send after transport endpoint shutdown"
            ]
        ],
        [
            -29,
            [
                "ESPIPE",
                "invalid seek"
            ]
        ],
        [
            -3,
            [
                "ESRCH",
                "no such process"
            ]
        ],
        [
            -110,
            [
                "ETIMEDOUT",
                "connection timed out"
            ]
        ],
        [
            -26,
            [
                "ETXTBSY",
                "text file is busy"
            ]
        ],
        [
            -18,
            [
                "EXDEV",
                "cross-device link not permitted"
            ]
        ],
        [
            -4094,
            [
                "UNKNOWN",
                "unknown error"
            ]
        ],
        [
            -4095,
            [
                "EOF",
                "end of file"
            ]
        ],
        [
            -6,
            [
                "ENXIO",
                "no such device or address"
            ]
        ],
        [
            -31,
            [
                "EMLINK",
                "too many links"
            ]
        ],
        [
            -112,
            [
                "EHOSTDOWN",
                "host is down"
            ]
        ],
        [
            -121,
            [
                "EREMOTEIO",
                "remote I/O error"
            ]
        ],
        [
            -25,
            [
                "ENOTTY",
                "inappropriate ioctl for device"
            ]
        ],
        [
            -4028,
            [
                "EFTYPE",
                "inappropriate file type or format"
            ]
        ],
        [
            -84,
            [
                "EILSEQ",
                "illegal byte sequence"
            ]
        ]
    ];
    const errorToCodeLinux = codeToErrorLinux.map(([status, [code]])=>[
            code,
            status
        ]);
    const codeToErrorFreebsd = [
        [
            -7,
            [
                "E2BIG",
                "argument list too long"
            ]
        ],
        [
            -13,
            [
                "EACCES",
                "permission denied"
            ]
        ],
        [
            -48,
            [
                "EADDRINUSE",
                "address already in use"
            ]
        ],
        [
            -49,
            [
                "EADDRNOTAVAIL",
                "address not available"
            ]
        ],
        [
            -47,
            [
                "EAFNOSUPPORT",
                "address family not supported"
            ]
        ],
        [
            -35,
            [
                "EAGAIN",
                "resource temporarily unavailable"
            ]
        ],
        [
            -3000,
            [
                "EAI_ADDRFAMILY",
                "address family not supported"
            ]
        ],
        [
            -3001,
            [
                "EAI_AGAIN",
                "temporary failure"
            ]
        ],
        [
            -3002,
            [
                "EAI_BADFLAGS",
                "bad ai_flags value"
            ]
        ],
        [
            -3013,
            [
                "EAI_BADHINTS",
                "invalid value for hints"
            ]
        ],
        [
            -3003,
            [
                "EAI_CANCELED",
                "request canceled"
            ]
        ],
        [
            -3004,
            [
                "EAI_FAIL",
                "permanent failure"
            ]
        ],
        [
            -3005,
            [
                "EAI_FAMILY",
                "ai_family not supported"
            ]
        ],
        [
            -3006,
            [
                "EAI_MEMORY",
                "out of memory"
            ]
        ],
        [
            -3007,
            [
                "EAI_NODATA",
                "no address"
            ]
        ],
        [
            -3008,
            [
                "EAI_NONAME",
                "unknown node or service"
            ]
        ],
        [
            -3009,
            [
                "EAI_OVERFLOW",
                "argument buffer overflow"
            ]
        ],
        [
            -3014,
            [
                "EAI_PROTOCOL",
                "resolved protocol is unknown"
            ]
        ],
        [
            -3010,
            [
                "EAI_SERVICE",
                "service not available for socket type"
            ]
        ],
        [
            -3011,
            [
                "EAI_SOCKTYPE",
                "socket type not supported"
            ]
        ],
        [
            -37,
            [
                "EALREADY",
                "connection already in progress"
            ]
        ],
        [
            -9,
            [
                "EBADF",
                "bad file descriptor"
            ]
        ],
        [
            -16,
            [
                "EBUSY",
                "resource busy or locked"
            ]
        ],
        [
            -85,
            [
                "ECANCELED",
                "operation canceled"
            ]
        ],
        [
            -4080,
            [
                "ECHARSET",
                "invalid Unicode character"
            ]
        ],
        [
            -53,
            [
                "ECONNABORTED",
                "software caused connection abort"
            ]
        ],
        [
            -61,
            [
                "ECONNREFUSED",
                "connection refused"
            ]
        ],
        [
            -54,
            [
                "ECONNRESET",
                "connection reset by peer"
            ]
        ],
        [
            -39,
            [
                "EDESTADDRREQ",
                "destination address required"
            ]
        ],
        [
            -17,
            [
                "EEXIST",
                "file already exists"
            ]
        ],
        [
            -14,
            [
                "EFAULT",
                "bad address in system call argument"
            ]
        ],
        [
            -27,
            [
                "EFBIG",
                "file too large"
            ]
        ],
        [
            -65,
            [
                "EHOSTUNREACH",
                "host is unreachable"
            ]
        ],
        [
            -4,
            [
                "EINTR",
                "interrupted system call"
            ]
        ],
        [
            -22,
            [
                "EINVAL",
                "invalid argument"
            ]
        ],
        [
            -5,
            [
                "EIO",
                "i/o error"
            ]
        ],
        [
            -56,
            [
                "EISCONN",
                "socket is already connected"
            ]
        ],
        [
            -21,
            [
                "EISDIR",
                "illegal operation on a directory"
            ]
        ],
        [
            -62,
            [
                "ELOOP",
                "too many symbolic links encountered"
            ]
        ],
        [
            -24,
            [
                "EMFILE",
                "too many open files"
            ]
        ],
        [
            -40,
            [
                "EMSGSIZE",
                "message too long"
            ]
        ],
        [
            -63,
            [
                "ENAMETOOLONG",
                "name too long"
            ]
        ],
        [
            -50,
            [
                "ENETDOWN",
                "network is down"
            ]
        ],
        [
            -51,
            [
                "ENETUNREACH",
                "network is unreachable"
            ]
        ],
        [
            -23,
            [
                "ENFILE",
                "file table overflow"
            ]
        ],
        [
            -55,
            [
                "ENOBUFS",
                "no buffer space available"
            ]
        ],
        [
            -19,
            [
                "ENODEV",
                "no such device"
            ]
        ],
        [
            -2,
            [
                "ENOENT",
                "no such file or directory"
            ]
        ],
        [
            -12,
            [
                "ENOMEM",
                "not enough memory"
            ]
        ],
        [
            -4056,
            [
                "ENONET",
                "machine is not on the network"
            ]
        ],
        [
            -42,
            [
                "ENOPROTOOPT",
                "protocol not available"
            ]
        ],
        [
            -28,
            [
                "ENOSPC",
                "no space left on device"
            ]
        ],
        [
            -78,
            [
                "ENOSYS",
                "function not implemented"
            ]
        ],
        [
            -57,
            [
                "ENOTCONN",
                "socket is not connected"
            ]
        ],
        [
            -20,
            [
                "ENOTDIR",
                "not a directory"
            ]
        ],
        [
            -66,
            [
                "ENOTEMPTY",
                "directory not empty"
            ]
        ],
        [
            -38,
            [
                "ENOTSOCK",
                "socket operation on non-socket"
            ]
        ],
        [
            -45,
            [
                "ENOTSUP",
                "operation not supported on socket"
            ]
        ],
        [
            -84,
            [
                "EOVERFLOW",
                "value too large for defined data type"
            ]
        ],
        [
            -1,
            [
                "EPERM",
                "operation not permitted"
            ]
        ],
        [
            -32,
            [
                "EPIPE",
                "broken pipe"
            ]
        ],
        [
            -92,
            [
                "EPROTO",
                "protocol error"
            ]
        ],
        [
            -43,
            [
                "EPROTONOSUPPORT",
                "protocol not supported"
            ]
        ],
        [
            -41,
            [
                "EPROTOTYPE",
                "protocol wrong type for socket"
            ]
        ],
        [
            -34,
            [
                "ERANGE",
                "result too large"
            ]
        ],
        [
            -30,
            [
                "EROFS",
                "read-only file system"
            ]
        ],
        [
            -58,
            [
                "ESHUTDOWN",
                "cannot send after transport endpoint shutdown"
            ]
        ],
        [
            -29,
            [
                "ESPIPE",
                "invalid seek"
            ]
        ],
        [
            -3,
            [
                "ESRCH",
                "no such process"
            ]
        ],
        [
            -60,
            [
                "ETIMEDOUT",
                "connection timed out"
            ]
        ],
        [
            -26,
            [
                "ETXTBSY",
                "text file is busy"
            ]
        ],
        [
            -18,
            [
                "EXDEV",
                "cross-device link not permitted"
            ]
        ],
        [
            -4094,
            [
                "UNKNOWN",
                "unknown error"
            ]
        ],
        [
            -4095,
            [
                "EOF",
                "end of file"
            ]
        ],
        [
            -6,
            [
                "ENXIO",
                "no such device or address"
            ]
        ],
        [
            -31,
            [
                "EMLINK",
                "too many links"
            ]
        ],
        [
            -64,
            [
                "EHOSTDOWN",
                "host is down"
            ]
        ],
        [
            -4030,
            [
                "EREMOTEIO",
                "remote I/O error"
            ]
        ],
        [
            -25,
            [
                "ENOTTY",
                "inappropriate ioctl for device"
            ]
        ],
        [
            -79,
            [
                "EFTYPE",
                "inappropriate file type or format"
            ]
        ],
        [
            -86,
            [
                "EILSEQ",
                "illegal byte sequence"
            ]
        ],
        [
            -44,
            [
                "ESOCKTNOSUPPORT",
                "socket type not supported"
            ]
        ]
    ];
    const errorToCodeFreebsd = codeToErrorFreebsd.map(([status, [code]])=>[
            code,
            status
        ]);
    const errorMap = new Map(osType === "windows" ? codeToErrorWindows : osType === "darwin" ? codeToErrorDarwin : osType === "linux" ? codeToErrorLinux : osType === "freebsd" ? codeToErrorFreebsd : unreachable());
    const codeMap = new Map(osType === "windows" ? errorToCodeWindows : osType === "darwin" ? errorToCodeDarwin : osType === "linux" ? errorToCodeLinux : osType === "freebsd" ? errorToCodeFreebsd : unreachable());
    function mapSysErrnoToUvErrno(sysErrno) {
        if (osType === "windows") {
            const code = uvTranslateSysError(sysErrno);
            return codeMap.get(code) ?? -sysErrno;
        } else {
            return -sysErrno;
        }
    }
    const UV_EAI_MEMORY = codeMap.get("EAI_MEMORY");
    const UV_EBADF = codeMap.get("EBADF");
    const UV_EEXIST = codeMap.get("EEXIST");
    const UV_EINVAL = codeMap.get("EINVAL");
    const UV_ENOENT = codeMap.get("ENOENT");
    const UV_ENOTSOCK = codeMap.get("ENOTSOCK");
    const UV_UNKNOWN = codeMap.get("UNKNOWN");
    const mod = {
        errorMap: errorMap,
        codeMap: codeMap,
        mapSysErrnoToUvErrno: mapSysErrnoToUvErrno,
        UV_EAI_MEMORY: UV_EAI_MEMORY,
        UV_EBADF: UV_EBADF,
        UV_EEXIST: UV_EEXIST,
        UV_EINVAL: UV_EINVAL,
        UV_ENOENT: UV_ENOENT,
        UV_ENOTSOCK: UV_ENOTSOCK,
        UV_UNKNOWN: UV_UNKNOWN
    };
    const codes = {};
    function notImplemented(msg) {
        const message = msg ? `Not implemented: ${msg}` : "Not implemented";
        throw new Error(message);
    }
    function warnNotImplemented(msg) {
        const message = msg ? `Warning: Not implemented: ${msg}` : "Warning: Not implemented";
        console.warn(message);
    }
    TextDecoder;
    TextEncoder;
    function spliceOne(list, index) {
        for(; index + 1 < list.length; index++)list[index] = list[index + 1];
        list.pop();
    }
    function normalizeEncoding(enc) {
        if (enc == null || enc === "utf8" || enc === "utf-8") return "utf8";
        return slowCases(enc);
    }
    function slowCases(enc) {
        switch(enc.length){
            case 4:
                if (enc === "UTF8") return "utf8";
                if (enc === "ucs2" || enc === "UCS2") return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf8") return "utf8";
                if (enc === "ucs2") return "utf16le";
                break;
            case 3:
                if (enc === "hex" || enc === "HEX" || `${enc}`.toLowerCase() === "hex") {
                    return "hex";
                }
                break;
            case 5:
                if (enc === "ascii") return "ascii";
                if (enc === "ucs-2") return "utf16le";
                if (enc === "UTF-8") return "utf8";
                if (enc === "ASCII") return "ascii";
                if (enc === "UCS-2") return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf-8") return "utf8";
                if (enc === "ascii") return "ascii";
                if (enc === "ucs-2") return "utf16le";
                break;
            case 6:
                if (enc === "base64") return "base64";
                if (enc === "latin1" || enc === "binary") return "latin1";
                if (enc === "BASE64") return "base64";
                if (enc === "LATIN1" || enc === "BINARY") return "latin1";
                enc = `${enc}`.toLowerCase();
                if (enc === "base64") return "base64";
                if (enc === "latin1" || enc === "binary") return "latin1";
                break;
            case 7:
                if (enc === "utf16le" || enc === "UTF16LE" || `${enc}`.toLowerCase() === "utf16le") {
                    return "utf16le";
                }
                break;
            case 8:
                if (enc === "utf-16le" || enc === "UTF-16LE" || `${enc}`.toLowerCase() === "utf-16le") {
                    return "utf16le";
                }
                break;
            default:
                if (enc === "") return "utf8";
        }
    }
    const NumberIsSafeInteger = Number.isSafeInteger;
    function getSystemErrorName(code) {
        if (typeof code !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE("err", "number", code);
        }
        if (code >= 0 || !NumberIsSafeInteger(code)) {
            throw new codes.ERR_OUT_OF_RANGE("err", "a negative integer", code);
        }
        return errorMap.get(code)?.[0];
    }
    let DenoCore;
    const { Deno: Deno1 } = globalThis;
    if (Deno1?.[Deno1.internal]?.core) {
        DenoCore = Deno1[Deno1.internal].core;
    } else if (Deno1?.core) {
        DenoCore = Deno1.core;
    } else {
        DenoCore = {};
    }
    const core = {
        runMicrotasks: DenoCore.runMicrotasks ?? function() {
            throw new Error("Deno.core.runMicrotasks() is not supported in this environment");
        },
        setHasTickScheduled: DenoCore.setHasTickScheduled ?? function() {
            throw new Error("Deno.core.setHasTickScheduled() is not supported in this environment");
        },
        hasTickScheduled: DenoCore.hasTickScheduled ?? function() {
            throw new Error("Deno.core.hasTickScheduled() is not supported in this environment");
        },
        setNextTickCallback: DenoCore.setNextTickCallback ?? undefined,
        setMacrotaskCallback: DenoCore.setMacrotaskCallback ?? function() {
            throw new Error("Deno.core.setNextTickCallback() is not supported in this environment");
        },
        evalContext: DenoCore.evalContext ?? function(_code, _filename) {
            throw new Error("Deno.core.evalContext is not supported in this environment");
        },
        encode: DenoCore.encode ?? function(chunk) {
            return new TextEncoder().encode(chunk);
        },
        eventLoopHasMoreWork: DenoCore.eventLoopHasMoreWork ?? function() {
            return false;
        },
        isProxy: DenoCore.isProxy ?? function() {
            return false;
        },
        getPromiseDetails: DenoCore.getPromiseDetails ?? function(_promise) {
            throw new Error("Deno.core.getPromiseDetails is not supported in this environment");
        },
        setPromiseHooks: DenoCore.setPromiseHooks ?? function() {
            throw new Error("Deno.core.setPromiseHooks is not supported in this environment");
        },
        ops: DenoCore.ops ?? {
            op_napi_open (_filename) {
                throw new Error("Node API is not supported in this environment");
            }
        }
    };
    const _toString = Object.prototype.toString;
    const _bigIntValueOf = BigInt.prototype.valueOf;
    const _booleanValueOf = Boolean.prototype.valueOf;
    const _dateValueOf = Date.prototype.valueOf;
    const _numberValueOf = Number.prototype.valueOf;
    const _stringValueOf = String.prototype.valueOf;
    const _symbolValueOf = Symbol.prototype.valueOf;
    const _weakMapHas = WeakMap.prototype.has;
    const _weakSetHas = WeakSet.prototype.has;
    const _getArrayBufferByteLength = Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, "byteLength").get;
    const _getSharedArrayBufferByteLength = globalThis.SharedArrayBuffer ? Object.getOwnPropertyDescriptor(SharedArrayBuffer.prototype, "byteLength").get : undefined;
    const _getTypedArrayToStringTag = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array).prototype, Symbol.toStringTag).get;
    const _getSetSize = Object.getOwnPropertyDescriptor(Set.prototype, "size").get;
    const _getMapSize = Object.getOwnPropertyDescriptor(Map.prototype, "size").get;
    function isObjectLike(value) {
        return value !== null && typeof value === "object";
    }
    function isAnyArrayBuffer(value) {
        return isArrayBuffer(value) || isSharedArrayBuffer(value);
    }
    function isArgumentsObject(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === undefined && _toString.call(value) === "[object Arguments]";
    }
    function isArrayBuffer(value) {
        try {
            _getArrayBufferByteLength.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isAsyncFunction(value) {
        return typeof value === "function" && value[Symbol.toStringTag] === "AsyncFunction";
    }
    function isBooleanObject(value) {
        if (!isObjectLike(value)) {
            return false;
        }
        try {
            _booleanValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isBoxedPrimitive(value) {
        return isBooleanObject(value) || isStringObject(value) || isNumberObject(value) || isSymbolObject(value) || isBigIntObject(value);
    }
    function isDataView(value) {
        return ArrayBuffer.isView(value) && _getTypedArrayToStringTag.call(value) === undefined;
    }
    function isDate(value) {
        try {
            _dateValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isGeneratorFunction(value) {
        return typeof value === "function" && value[Symbol.toStringTag] === "GeneratorFunction";
    }
    function isGeneratorObject(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === "Generator";
    }
    function isMap(value) {
        try {
            _getMapSize.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isMapIterator(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === "Map Iterator";
    }
    function isModuleNamespaceObject(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === "Module";
    }
    function isNativeError(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === undefined && _toString.call(value) === "[object Error]";
    }
    function isNumberObject(value) {
        if (!isObjectLike(value)) {
            return false;
        }
        try {
            _numberValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isBigIntObject(value) {
        if (!isObjectLike(value)) {
            return false;
        }
        try {
            _bigIntValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isPromise(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === "Promise";
    }
    function isProxy(value) {
        return core.isProxy(value);
    }
    function isRegExp(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === undefined && _toString.call(value) === "[object RegExp]";
    }
    function isSet(value) {
        try {
            _getSetSize.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isSetIterator(value) {
        return isObjectLike(value) && value[Symbol.toStringTag] === "Set Iterator";
    }
    function isSharedArrayBuffer(value) {
        if (_getSharedArrayBufferByteLength === undefined) {
            return false;
        }
        try {
            _getSharedArrayBufferByteLength.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isStringObject(value) {
        if (!isObjectLike(value)) {
            return false;
        }
        try {
            _stringValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isSymbolObject(value) {
        if (!isObjectLike(value)) {
            return false;
        }
        try {
            _symbolValueOf.call(value);
            return true;
        } catch  {
            return false;
        }
    }
    function isWeakMap(value) {
        try {
            _weakMapHas.call(value, null);
            return true;
        } catch  {
            return false;
        }
    }
    function isWeakSet(value) {
        try {
            _weakSetHas.call(value, null);
            return true;
        } catch  {
            return false;
        }
    }
    const __default = {
        isAsyncFunction,
        isGeneratorFunction,
        isAnyArrayBuffer,
        isArrayBuffer,
        isArgumentsObject,
        isBoxedPrimitive,
        isDataView,
        isMap,
        isMapIterator,
        isModuleNamespaceObject,
        isNativeError,
        isPromise,
        isSet,
        isSetIterator,
        isWeakMap,
        isWeakSet,
        isRegExp,
        isDate,
        isStringObject,
        isNumberObject,
        isBooleanObject,
        isBigIntObject
    };
    const mod1 = {
        isAnyArrayBuffer: isAnyArrayBuffer,
        isArgumentsObject: isArgumentsObject,
        isArrayBuffer: isArrayBuffer,
        isAsyncFunction: isAsyncFunction,
        isBooleanObject: isBooleanObject,
        isBoxedPrimitive: isBoxedPrimitive,
        isDataView: isDataView,
        isDate: isDate,
        isGeneratorFunction: isGeneratorFunction,
        isGeneratorObject: isGeneratorObject,
        isMap: isMap,
        isMapIterator: isMapIterator,
        isModuleNamespaceObject: isModuleNamespaceObject,
        isNativeError: isNativeError,
        isNumberObject: isNumberObject,
        isBigIntObject: isBigIntObject,
        isPromise: isPromise,
        isProxy: isProxy,
        isRegExp: isRegExp,
        isSet: isSet,
        isSetIterator: isSetIterator,
        isSharedArrayBuffer: isSharedArrayBuffer,
        isStringObject: isStringObject,
        isSymbolObject: isSymbolObject,
        isWeakMap: isWeakMap,
        isWeakSet: isWeakSet,
        default: __default
    };
    Symbol("kHandle");
    Symbol("kKeyObject");
    Symbol("kKeyType");
    const _getTypedArrayToStringTag1 = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(Uint8Array).prototype, Symbol.toStringTag).get;
    function isArrayBufferView(value) {
        return ArrayBuffer.isView(value);
    }
    function isTypedArray(value) {
        return _getTypedArrayToStringTag1.call(value) !== undefined;
    }
    function isUint8Array(value) {
        return _getTypedArrayToStringTag1.call(value) === "Uint8Array";
    }
    const { isDate: isDate1, isArgumentsObject: isArgumentsObject1, isBigIntObject: isBigIntObject1, isBooleanObject: isBooleanObject1, isNumberObject: isNumberObject1, isStringObject: isStringObject1, isSymbolObject: isSymbolObject1, isNativeError: isNativeError1, isRegExp: isRegExp1, isAsyncFunction: isAsyncFunction1, isGeneratorFunction: isGeneratorFunction1, isGeneratorObject: isGeneratorObject1, isPromise: isPromise1, isMap: isMap1, isSet: isSet1, isMapIterator: isMapIterator1, isSetIterator: isSetIterator1, isWeakMap: isWeakMap1, isWeakSet: isWeakSet1, isArrayBuffer: isArrayBuffer1, isDataView: isDataView1, isSharedArrayBuffer: isSharedArrayBuffer1, isProxy: isProxy1, isModuleNamespaceObject: isModuleNamespaceObject1, isAnyArrayBuffer: isAnyArrayBuffer1, isBoxedPrimitive: isBoxedPrimitive1 } = mod1;
    function hideStackFrames(fn) {
        const hidden = "__node_internal_" + fn.name;
        Object.defineProperty(fn, "name", {
            value: hidden
        });
        return fn;
    }
    function normalizeEncoding1(enc) {
        if (enc == null || enc === "utf8" || enc === "utf-8") return "utf8";
        return slowCases1(enc);
    }
    function slowCases1(enc) {
        switch(enc.length){
            case 4:
                if (enc === "UTF8") return "utf8";
                if (enc === "ucs2" || enc === "UCS2") return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf8") return "utf8";
                if (enc === "ucs2") return "utf16le";
                break;
            case 3:
                if (enc === "hex" || enc === "HEX" || `${enc}`.toLowerCase() === "hex") {
                    return "hex";
                }
                break;
            case 5:
                if (enc === "ascii") return "ascii";
                if (enc === "ucs-2") return "utf16le";
                if (enc === "UTF-8") return "utf8";
                if (enc === "ASCII") return "ascii";
                if (enc === "UCS-2") return "utf16le";
                enc = `${enc}`.toLowerCase();
                if (enc === "utf-8") return "utf8";
                if (enc === "ascii") return "ascii";
                if (enc === "ucs-2") return "utf16le";
                break;
            case 6:
                if (enc === "base64") return "base64";
                if (enc === "latin1" || enc === "binary") return "latin1";
                if (enc === "BASE64") return "base64";
                if (enc === "LATIN1" || enc === "BINARY") return "latin1";
                enc = `${enc}`.toLowerCase();
                if (enc === "base64") return "base64";
                if (enc === "latin1" || enc === "binary") return "latin1";
                break;
            case 7:
                if (enc === "utf16le" || enc === "UTF16LE" || `${enc}`.toLowerCase() === "utf16le") {
                    return "utf16le";
                }
                break;
            case 8:
                if (enc === "utf-16le" || enc === "UTF-16LE" || `${enc}`.toLowerCase() === "utf-16le") {
                    return "utf16le";
                }
                break;
            case 9:
                if (enc === "base64url" || enc === "BASE64URL" || `${enc}`.toLowerCase() === "base64url") {
                    return "base64url";
                }
                break;
            default:
                if (enc === "") return "utf8";
        }
    }
    function isInt32(value) {
        return value === (value | 0);
    }
    function isUint32(value) {
        return value === value >>> 0;
    }
    const validateBuffer = hideStackFrames((buffer, name = "buffer")=>{
        if (!isArrayBufferView(buffer)) {
            throw new codes.ERR_INVALID_ARG_TYPE(name, [
                "Buffer",
                "TypedArray",
                "DataView"
            ], buffer);
        }
    });
    hideStackFrames((value, name, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER)=>{
        if (typeof value !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
        if (!Number.isInteger(value)) {
            throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
        }
        if (value < min || value > max) {
            throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
        }
    });
    const validateObject = hideStackFrames((value, name, options)=>{
        const useDefaultOptions = options == null;
        const allowArray = useDefaultOptions ? false : options.allowArray;
        const allowFunction = useDefaultOptions ? false : options.allowFunction;
        const nullable = useDefaultOptions ? false : options.nullable;
        if (!nullable && value === null || !allowArray && Array.isArray(value) || typeof value !== "object" && (!allowFunction || typeof value !== "function")) {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "Object", value);
        }
    });
    hideStackFrames((value, name, min = -2147483648, max = 2147483647)=>{
        if (!isInt32(value)) {
            if (typeof value !== "number") {
                throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
            }
            if (!Number.isInteger(value)) {
                throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
            }
            throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
        }
        if (value < min || value > max) {
            throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
        }
    });
    hideStackFrames((value, name, positive)=>{
        if (!isUint32(value)) {
            if (typeof value !== "number") {
                throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
            }
            if (!Number.isInteger(value)) {
                throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
            }
            const min = positive ? 1 : 0;
            throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && < 4294967296`, value);
        }
        if (positive && value === 0) {
            throw new codes.ERR_OUT_OF_RANGE(name, ">= 1 && < 4294967296", value);
        }
    });
    function validateString(value, name) {
        if (typeof value !== "string") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "string", value);
        }
    }
    function validateBoolean(value, name) {
        if (typeof value !== "boolean") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "boolean", value);
        }
    }
    hideStackFrames((value, name, oneOf)=>{
        if (!Array.prototype.includes.call(oneOf, value)) {
            const allowed = Array.prototype.join.call(Array.prototype.map.call(oneOf, (v)=>typeof v === "string" ? `'${v}'` : String(v)), ", ");
            const reason = "must be one of: " + allowed;
            throw new codes.ERR_INVALID_ARG_VALUE(name, value, reason);
        }
    });
    const validateAbortSignal = hideStackFrames((signal, name)=>{
        if (signal !== undefined && (signal === null || typeof signal !== "object" || !("aborted" in signal))) {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "AbortSignal", signal);
        }
    });
    const validateFunction = hideStackFrames((value, name)=>{
        if (typeof value !== "function") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "Function", value);
        }
    });
    hideStackFrames((value, name, minLength = 0)=>{
        if (!Array.isArray(value)) {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "Array", value);
        }
        if (value.length < minLength) {
            const reason = `must be longer than ${minLength}`;
            throw new codes.ERR_INVALID_ARG_VALUE(name, value, reason);
        }
    });
    function guessHandleType(_fd) {
        notImplemented("util.guessHandleType");
    }
    const isNumericLookup = {};
    function isArrayIndex(value) {
        switch(typeof value){
            case "number":
                return value >= 0 && (value | 0) === value;
            case "string":
                {
                    const result = isNumericLookup[value];
                    if (result !== void 0) {
                        return result;
                    }
                    const length = value.length;
                    if (length === 0) {
                        return isNumericLookup[value] = false;
                    }
                    let ch = 0;
                    let i = 0;
                    for(; i < length; ++i){
                        ch = value.charCodeAt(i);
                        if (i === 0 && ch === 0x30 && length > 1 || ch < 0x30 || ch > 0x39) {
                            return isNumericLookup[value] = false;
                        }
                    }
                    return isNumericLookup[value] = true;
                }
            default:
                return false;
        }
    }
    function getOwnNonIndexProperties(obj, filter) {
        let allProperties = [
            ...Object.getOwnPropertyNames(obj),
            ...Object.getOwnPropertySymbols(obj)
        ];
        if (Array.isArray(obj)) {
            allProperties = allProperties.filter((k)=>!isArrayIndex(k));
        }
        if (filter === 0) {
            return allProperties;
        }
        const result = [];
        for (const key of allProperties){
            const desc = Object.getOwnPropertyDescriptor(obj, key);
            if (desc === undefined) {
                continue;
            }
            if (filter & 1 && !desc.writable) {
                continue;
            }
            if (filter & 2 && !desc.enumerable) {
                continue;
            }
            if (filter & 4 && !desc.configurable) {
                continue;
            }
            if (filter & 8 && typeof key === "string") {
                continue;
            }
            if (filter & 16 && typeof key === "symbol") {
                continue;
            }
            result.push(key);
        }
        return result;
    }
    const mod2 = function() {
        return {
            guessHandleType: guessHandleType,
            ALL_PROPERTIES: 0,
            ONLY_WRITABLE: 1,
            ONLY_ENUMERABLE: 2,
            ONLY_CONFIGURABLE: 4,
            ONLY_ENUM_WRITABLE: 6,
            SKIP_STRINGS: 8,
            SKIP_SYMBOLS: 16,
            isArrayIndex: isArrayIndex,
            getOwnNonIndexProperties: getOwnNonIndexProperties
        };
    }();
    const kObjectType = 0;
    const kArrayExtrasType = 2;
    const kRejected = 2;
    const meta = [
        '\\x00',
        '\\x01',
        '\\x02',
        '\\x03',
        '\\x04',
        '\\x05',
        '\\x06',
        '\\x07',
        '\\b',
        '\\t',
        '\\n',
        '\\x0B',
        '\\f',
        '\\r',
        '\\x0E',
        '\\x0F',
        '\\x10',
        '\\x11',
        '\\x12',
        '\\x13',
        '\\x14',
        '\\x15',
        '\\x16',
        '\\x17',
        '\\x18',
        '\\x19',
        '\\x1A',
        '\\x1B',
        '\\x1C',
        '\\x1D',
        '\\x1E',
        '\\x1F',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        "\\'",
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '\\\\',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '',
        '\\x7F',
        '\\x80',
        '\\x81',
        '\\x82',
        '\\x83',
        '\\x84',
        '\\x85',
        '\\x86',
        '\\x87',
        '\\x88',
        '\\x89',
        '\\x8A',
        '\\x8B',
        '\\x8C',
        '\\x8D',
        '\\x8E',
        '\\x8F',
        '\\x90',
        '\\x91',
        '\\x92',
        '\\x93',
        '\\x94',
        '\\x95',
        '\\x96',
        '\\x97',
        '\\x98',
        '\\x99',
        '\\x9A',
        '\\x9B',
        '\\x9C',
        '\\x9D',
        '\\x9E',
        '\\x9F'
    ];
    const isUndetectableObject = (v)=>typeof v === "undefined" && v !== undefined;
    const strEscapeSequencesRegExp = /[\x00-\x1f\x27\x5c\x7f-\x9f]/;
    const strEscapeSequencesReplacer = /[\x00-\x1f\x27\x5c\x7f-\x9f]/g;
    const strEscapeSequencesRegExpSingle = /[\x00-\x1f\x5c\x7f-\x9f]/;
    const strEscapeSequencesReplacerSingle = /[\x00-\x1f\x5c\x7f-\x9f]/g;
    const keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;
    const numberRegExp = /^(0|[1-9][0-9]*)$/;
    const nodeModulesRegExp = /[/\\]node_modules[/\\](.+?)(?=[/\\])/g;
    const classRegExp = /^(\s+[^(]*?)\s*{/;
    const stripCommentsRegExp = /(\/\/.*?\n)|(\/\*(.|\n)*?\*\/)/g;
    const inspectDefaultOptions = {
        showHidden: false,
        depth: 2,
        colors: false,
        customInspect: true,
        showProxy: false,
        maxArrayLength: 100,
        maxStringLength: 10000,
        breakLength: 80,
        compact: 3,
        sorted: false,
        getters: false
    };
    function getUserOptions(ctx, isCrossContext) {
        const ret = {
            stylize: ctx.stylize,
            showHidden: ctx.showHidden,
            depth: ctx.depth,
            colors: ctx.colors,
            customInspect: ctx.customInspect,
            showProxy: ctx.showProxy,
            maxArrayLength: ctx.maxArrayLength,
            maxStringLength: ctx.maxStringLength,
            breakLength: ctx.breakLength,
            compact: ctx.compact,
            sorted: ctx.sorted,
            getters: ctx.getters,
            ...ctx.userOptions
        };
        if (isCrossContext) {
            Object.setPrototypeOf(ret, null);
            for (const key of Object.keys(ret)){
                if ((typeof ret[key] === "object" || typeof ret[key] === "function") && ret[key] !== null) {
                    delete ret[key];
                }
            }
            ret.stylize = Object.setPrototypeOf((value, flavour)=>{
                let stylized;
                try {
                    stylized = `${ctx.stylize(value, flavour)}`;
                } catch  {}
                if (typeof stylized !== "string") return value;
                return stylized;
            }, null);
        }
        return ret;
    }
    function inspect(value, opts) {
        const ctx = {
            budget: {},
            indentationLvl: 0,
            seen: [],
            currentDepth: 0,
            stylize: stylizeNoColor,
            showHidden: inspectDefaultOptions.showHidden,
            depth: inspectDefaultOptions.depth,
            colors: inspectDefaultOptions.colors,
            customInspect: inspectDefaultOptions.customInspect,
            showProxy: inspectDefaultOptions.showProxy,
            maxArrayLength: inspectDefaultOptions.maxArrayLength,
            maxStringLength: inspectDefaultOptions.maxStringLength,
            breakLength: inspectDefaultOptions.breakLength,
            compact: inspectDefaultOptions.compact,
            sorted: inspectDefaultOptions.sorted,
            getters: inspectDefaultOptions.getters
        };
        if (arguments.length > 1) {
            if (arguments.length > 2) {
                if (arguments[2] !== undefined) {
                    ctx.depth = arguments[2];
                }
                if (arguments.length > 3 && arguments[3] !== undefined) {
                    ctx.colors = arguments[3];
                }
            }
            if (typeof opts === "boolean") {
                ctx.showHidden = opts;
            } else if (opts) {
                const optKeys = Object.keys(opts);
                for(let i = 0; i < optKeys.length; ++i){
                    const key = optKeys[i];
                    if (inspectDefaultOptions.hasOwnProperty(key) || key === "stylize") {
                        ctx[key] = opts[key];
                    } else if (ctx.userOptions === undefined) {
                        ctx.userOptions = opts;
                    }
                }
            }
        }
        if (ctx.colors) ctx.stylize = stylizeWithColor;
        if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;
        if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;
        return formatValue(ctx, value, 0);
    }
    const customInspectSymbol = Symbol.for("nodejs.util.inspect.custom");
    inspect.custom = customInspectSymbol;
    Object.defineProperty(inspect, "defaultOptions", {
        get () {
            return inspectDefaultOptions;
        },
        set (options) {
            validateObject(options, "options");
            return Object.assign(inspectDefaultOptions, options);
        }
    });
    const defaultFG = 39;
    const defaultBG = 49;
    inspect.colors = Object.assign(Object.create(null), {
        reset: [
            0,
            0
        ],
        bold: [
            1,
            22
        ],
        dim: [
            2,
            22
        ],
        italic: [
            3,
            23
        ],
        underline: [
            4,
            24
        ],
        blink: [
            5,
            25
        ],
        inverse: [
            7,
            27
        ],
        hidden: [
            8,
            28
        ],
        strikethrough: [
            9,
            29
        ],
        doubleunderline: [
            21,
            24
        ],
        black: [
            30,
            defaultFG
        ],
        red: [
            31,
            defaultFG
        ],
        green: [
            32,
            defaultFG
        ],
        yellow: [
            33,
            defaultFG
        ],
        blue: [
            34,
            defaultFG
        ],
        magenta: [
            35,
            defaultFG
        ],
        cyan: [
            36,
            defaultFG
        ],
        white: [
            37,
            defaultFG
        ],
        bgBlack: [
            40,
            defaultBG
        ],
        bgRed: [
            41,
            defaultBG
        ],
        bgGreen: [
            42,
            defaultBG
        ],
        bgYellow: [
            43,
            defaultBG
        ],
        bgBlue: [
            44,
            defaultBG
        ],
        bgMagenta: [
            45,
            defaultBG
        ],
        bgCyan: [
            46,
            defaultBG
        ],
        bgWhite: [
            47,
            defaultBG
        ],
        framed: [
            51,
            54
        ],
        overlined: [
            53,
            55
        ],
        gray: [
            90,
            defaultFG
        ],
        redBright: [
            91,
            defaultFG
        ],
        greenBright: [
            92,
            defaultFG
        ],
        yellowBright: [
            93,
            defaultFG
        ],
        blueBright: [
            94,
            defaultFG
        ],
        magentaBright: [
            95,
            defaultFG
        ],
        cyanBright: [
            96,
            defaultFG
        ],
        whiteBright: [
            97,
            defaultFG
        ],
        bgGray: [
            100,
            defaultBG
        ],
        bgRedBright: [
            101,
            defaultBG
        ],
        bgGreenBright: [
            102,
            defaultBG
        ],
        bgYellowBright: [
            103,
            defaultBG
        ],
        bgBlueBright: [
            104,
            defaultBG
        ],
        bgMagentaBright: [
            105,
            defaultBG
        ],
        bgCyanBright: [
            106,
            defaultBG
        ],
        bgWhiteBright: [
            107,
            defaultBG
        ]
    });
    function defineColorAlias(target, alias) {
        Object.defineProperty(inspect.colors, alias, {
            get () {
                return this[target];
            },
            set (value) {
                this[target] = value;
            },
            configurable: true,
            enumerable: false
        });
    }
    defineColorAlias("gray", "grey");
    defineColorAlias("gray", "blackBright");
    defineColorAlias("bgGray", "bgGrey");
    defineColorAlias("bgGray", "bgBlackBright");
    defineColorAlias("dim", "faint");
    defineColorAlias("strikethrough", "crossedout");
    defineColorAlias("strikethrough", "strikeThrough");
    defineColorAlias("strikethrough", "crossedOut");
    defineColorAlias("hidden", "conceal");
    defineColorAlias("inverse", "swapColors");
    defineColorAlias("inverse", "swapcolors");
    defineColorAlias("doubleunderline", "doubleUnderline");
    inspect.styles = Object.assign(Object.create(null), {
        special: "cyan",
        number: "yellow",
        bigint: "yellow",
        boolean: "yellow",
        undefined: "grey",
        null: "bold",
        string: "green",
        symbol: "green",
        date: "magenta",
        regexp: "red",
        module: "underline"
    });
    function addQuotes(str, quotes) {
        if (quotes === -1) {
            return `"${str}"`;
        }
        if (quotes === -2) {
            return `\`${str}\``;
        }
        return `'${str}'`;
    }
    const escapeFn = (str)=>meta[str.charCodeAt(0)];
    function strEscape(str) {
        let escapeTest = strEscapeSequencesRegExp;
        let escapeReplace = strEscapeSequencesReplacer;
        let singleQuote = 39;
        if (str.includes("'")) {
            if (!str.includes('"')) {
                singleQuote = -1;
            } else if (!str.includes("`") && !str.includes("${")) {
                singleQuote = -2;
            }
            if (singleQuote !== 39) {
                escapeTest = strEscapeSequencesRegExpSingle;
                escapeReplace = strEscapeSequencesReplacerSingle;
            }
        }
        if (str.length < 5000 && !escapeTest.test(str)) {
            return addQuotes(str, singleQuote);
        }
        if (str.length > 100) {
            str = str.replace(escapeReplace, escapeFn);
            return addQuotes(str, singleQuote);
        }
        let result = "";
        let last = 0;
        const lastIndex = str.length;
        for(let i = 0; i < lastIndex; i++){
            const point = str.charCodeAt(i);
            if (point === singleQuote || point === 92 || point < 32 || point > 126 && point < 160) {
                if (last === i) {
                    result += meta[point];
                } else {
                    result += `${str.slice(last, i)}${meta[point]}`;
                }
                last = i + 1;
            }
        }
        if (last !== lastIndex) {
            result += str.slice(last);
        }
        return addQuotes(result, singleQuote);
    }
    function stylizeWithColor(str, styleType) {
        const style = inspect.styles[styleType];
        if (style !== undefined) {
            const color = inspect.colors[style];
            if (color !== undefined) {
                return `\u001b[${color[0]}m${str}\u001b[${color[1]}m`;
            }
        }
        return str;
    }
    function stylizeNoColor(str) {
        return str;
    }
    function formatValue(ctx, value, recurseTimes, typedArray) {
        if (typeof value !== "object" && typeof value !== "function" && !isUndetectableObject(value)) {
            return formatPrimitive(ctx.stylize, value, ctx);
        }
        if (value === null) {
            return ctx.stylize("null", "null");
        }
        const context = value;
        const proxy = undefined;
        if (ctx.customInspect) {
            const maybeCustom = value[customInspectSymbol];
            if (typeof maybeCustom === "function" && maybeCustom !== inspect && !(value.constructor && value.constructor.prototype === value)) {
                const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;
                const isCrossContext = proxy !== undefined || !(context instanceof Object);
                const ret = maybeCustom.call(context, depth, getUserOptions(ctx, isCrossContext));
                if (ret !== context) {
                    if (typeof ret !== "string") {
                        return formatValue(ctx, ret, recurseTimes);
                    }
                    return ret.replace(/\n/g, `\n${" ".repeat(ctx.indentationLvl)}`);
                }
            }
        }
        if (ctx.seen.includes(value)) {
            let index = 1;
            if (ctx.circular === undefined) {
                ctx.circular = new Map();
                ctx.circular.set(value, index);
            } else {
                index = ctx.circular.get(value);
                if (index === undefined) {
                    index = ctx.circular.size + 1;
                    ctx.circular.set(value, index);
                }
            }
            return ctx.stylize(`[Circular *${index}]`, "special");
        }
        return formatRaw(ctx, value, recurseTimes, typedArray);
    }
    function formatRaw(ctx, value, recurseTimes, typedArray) {
        let keys;
        let protoProps;
        if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {
            protoProps = [];
        }
        const constructor = getConstructorName(value, ctx, recurseTimes, protoProps);
        if (protoProps !== undefined && protoProps.length === 0) {
            protoProps = undefined;
        }
        let tag = value[Symbol.toStringTag];
        if (typeof tag !== "string") {
            tag = "";
        }
        let base = "";
        let formatter = getEmptyFormatArray;
        let braces;
        let noIterator = true;
        let i = 0;
        const filter = ctx.showHidden ? 0 : 2;
        let extrasType = 0;
        if (value[Symbol.iterator] || constructor === null) {
            noIterator = false;
            if (Array.isArray(value)) {
                const prefix = constructor !== "Array" || tag !== "" ? getPrefix(constructor, tag, "Array", `(${value.length})`) : "";
                keys = getOwnNonIndexProperties(value, filter);
                braces = [
                    `${prefix}[`,
                    "]"
                ];
                if (value.length === 0 && keys.length === 0 && protoProps === undefined) {
                    return `${braces[0]}]`;
                }
                extrasType = kArrayExtrasType;
                formatter = formatArray;
            } else if (isSet1(value)) {
                const size = value.size;
                const prefix = getPrefix(constructor, tag, "Set", `(${size})`);
                keys = getKeys(value, ctx.showHidden);
                formatter = constructor !== null ? formatSet.bind(null, value) : formatSet.bind(null, value.values());
                if (size === 0 && keys.length === 0 && protoProps === undefined) {
                    return `${prefix}{}`;
                }
                braces = [
                    `${prefix}{`,
                    "}"
                ];
            } else if (isMap1(value)) {
                const size = value.size;
                const prefix = getPrefix(constructor, tag, "Map", `(${size})`);
                keys = getKeys(value, ctx.showHidden);
                formatter = constructor !== null ? formatMap.bind(null, value) : formatMap.bind(null, value.entries());
                if (size === 0 && keys.length === 0 && protoProps === undefined) {
                    return `${prefix}{}`;
                }
                braces = [
                    `${prefix}{`,
                    "}"
                ];
            } else if (isTypedArray(value)) {
                keys = getOwnNonIndexProperties(value, filter);
                const bound = value;
                const fallback = "";
                if (constructor === null) {}
                const size = value.length;
                const prefix = getPrefix(constructor, tag, fallback, `(${size})`);
                braces = [
                    `${prefix}[`,
                    "]"
                ];
                if (value.length === 0 && keys.length === 0 && !ctx.showHidden) {
                    return `${braces[0]}]`;
                }
                formatter = formatTypedArray.bind(null, bound, size);
                extrasType = kArrayExtrasType;
            } else if (isMapIterator1(value)) {
                keys = getKeys(value, ctx.showHidden);
                braces = getIteratorBraces("Map", tag);
                formatter = formatIterator.bind(null, braces);
            } else if (isSetIterator1(value)) {
                keys = getKeys(value, ctx.showHidden);
                braces = getIteratorBraces("Set", tag);
                formatter = formatIterator.bind(null, braces);
            } else {
                noIterator = true;
            }
        }
        if (noIterator) {
            keys = getKeys(value, ctx.showHidden);
            braces = [
                "{",
                "}"
            ];
            if (constructor === "Object") {
                if (isArgumentsObject1(value)) {
                    braces[0] = "[Arguments] {";
                } else if (tag !== "") {
                    braces[0] = `${getPrefix(constructor, tag, "Object")}{`;
                }
                if (keys.length === 0 && protoProps === undefined) {
                    return `${braces[0]}}`;
                }
            } else if (typeof value === "function") {
                base = getFunctionBase(value, constructor, tag);
                if (keys.length === 0 && protoProps === undefined) {
                    return ctx.stylize(base, "special");
                }
            } else if (isRegExp1(value)) {
                base = RegExp(constructor !== null ? value : new RegExp(value)).toString();
                const prefix = getPrefix(constructor, tag, "RegExp");
                if (prefix !== "RegExp ") {
                    base = `${prefix}${base}`;
                }
                if (keys.length === 0 && protoProps === undefined || recurseTimes > ctx.depth && ctx.depth !== null) {
                    return ctx.stylize(base, "regexp");
                }
            } else if (isDate1(value)) {
                base = Number.isNaN(value.getTime()) ? value.toString() : value.toISOString();
                const prefix = getPrefix(constructor, tag, "Date");
                if (prefix !== "Date ") {
                    base = `${prefix}${base}`;
                }
                if (keys.length === 0 && protoProps === undefined) {
                    return ctx.stylize(base, "date");
                }
            } else if (value instanceof Error) {
                base = formatError(value, constructor, tag, ctx, keys);
                if (keys.length === 0 && protoProps === undefined) {
                    return base;
                }
            } else if (isAnyArrayBuffer1(value)) {
                const arrayType = isArrayBuffer1(value) ? "ArrayBuffer" : "SharedArrayBuffer";
                const prefix = getPrefix(constructor, tag, arrayType);
                if (typedArray === undefined) {
                    formatter = formatArrayBuffer;
                } else if (keys.length === 0 && protoProps === undefined) {
                    return prefix + `{ byteLength: ${formatNumber(ctx.stylize, value.byteLength)} }`;
                }
                braces[0] = `${prefix}{`;
                Array.prototype.unshift.call(keys, "byteLength");
            } else if (isDataView1(value)) {
                braces[0] = `${getPrefix(constructor, tag, "DataView")}{`;
                Array.prototype.unshift.call(keys, "byteLength", "byteOffset", "buffer");
            } else if (isPromise1(value)) {
                braces[0] = `${getPrefix(constructor, tag, "Promise")}{`;
                formatter = formatPromise;
            } else if (isWeakSet1(value)) {
                braces[0] = `${getPrefix(constructor, tag, "WeakSet")}{`;
                formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;
            } else if (isWeakMap1(value)) {
                braces[0] = `${getPrefix(constructor, tag, "WeakMap")}{`;
                formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;
            } else if (isModuleNamespaceObject1(value)) {
                braces[0] = `${getPrefix(constructor, tag, "Module")}{`;
                formatter = formatNamespaceObject.bind(null, keys);
            } else if (isBoxedPrimitive1(value)) {
                base = getBoxedBase(value, ctx, keys, constructor, tag);
                if (keys.length === 0 && protoProps === undefined) {
                    return base;
                }
            } else {
                if (keys.length === 0 && protoProps === undefined) {
                    return `${getCtxStyle(value, constructor, tag)}{}`;
                }
                braces[0] = `${getCtxStyle(value, constructor, tag)}{`;
            }
        }
        if (recurseTimes > ctx.depth && ctx.depth !== null) {
            let constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
            if (constructor !== null) {
                constructorName = `[${constructorName}]`;
            }
            return ctx.stylize(constructorName, "special");
        }
        recurseTimes += 1;
        ctx.seen.push(value);
        ctx.currentDepth = recurseTimes;
        let output;
        const indentationLvl = ctx.indentationLvl;
        try {
            output = formatter(ctx, value, recurseTimes);
            for(i = 0; i < keys.length; i++){
                output.push(formatProperty(ctx, value, recurseTimes, keys[i], extrasType));
            }
            if (protoProps !== undefined) {
                output.push(...protoProps);
            }
        } catch (err) {
            const constructorName = getCtxStyle(value, constructor, tag).slice(0, -1);
            return handleMaxCallStackSize(ctx, err, constructorName, indentationLvl);
        }
        if (ctx.circular !== undefined) {
            const index = ctx.circular.get(value);
            if (index !== undefined) {
                const reference = ctx.stylize(`<ref *${index}>`, "special");
                if (ctx.compact !== true) {
                    base = base === "" ? reference : `${reference} ${base}`;
                } else {
                    braces[0] = `${reference} ${braces[0]}`;
                }
            }
        }
        ctx.seen.pop();
        if (ctx.sorted) {
            const comparator = ctx.sorted === true ? undefined : ctx.sorted;
            if (extrasType === 0) {
                output = output.sort(comparator);
            } else if (keys.length > 1) {
                const sorted = output.slice(output.length - keys.length).sort(comparator);
                output.splice(output.length - keys.length, keys.length, ...sorted);
            }
        }
        const res = reduceToSingleString(ctx, output, base, braces, extrasType, recurseTimes, value);
        const budget = ctx.budget[ctx.indentationLvl] || 0;
        const newLength = budget + res.length;
        ctx.budget[ctx.indentationLvl] = newLength;
        if (newLength > 2 ** 27) {
            ctx.depth = -1;
        }
        return res;
    }
    const builtInObjects = new Set(Object.getOwnPropertyNames(globalThis).filter((e)=>/^[A-Z][a-zA-Z0-9]+$/.test(e)));
    function addPrototypeProperties(ctx, main, obj, recurseTimes, output) {
        let depth = 0;
        let keys;
        let keySet;
        do {
            if (depth !== 0 || main === obj) {
                obj = Object.getPrototypeOf(obj);
                if (obj === null) {
                    return;
                }
                const descriptor = Object.getOwnPropertyDescriptor(obj, "constructor");
                if (descriptor !== undefined && typeof descriptor.value === "function" && builtInObjects.has(descriptor.value.name)) {
                    return;
                }
            }
            if (depth === 0) {
                keySet = new Set();
            } else {
                Array.prototype.forEach.call(keys, (key)=>keySet.add(key));
            }
            keys = Reflect.ownKeys(obj);
            Array.prototype.push.call(ctx.seen, main);
            for (const key of keys){
                if (key === "constructor" || main.hasOwnProperty(key) || depth !== 0 && keySet.has(key)) {
                    continue;
                }
                const desc = Object.getOwnPropertyDescriptor(obj, key);
                if (typeof desc.value === "function") {
                    continue;
                }
                const value = formatProperty(ctx, obj, recurseTimes, key, 0, desc, main);
                if (ctx.colors) {
                    Array.prototype.push.call(output, `\u001b[2m${value}\u001b[22m`);
                } else {
                    Array.prototype.push.call(output, value);
                }
            }
            Array.prototype.pop.call(ctx.seen);
        }while (++depth !== 3)
    }
    function getConstructorName(obj, ctx, recurseTimes, protoProps) {
        let firstProto;
        const tmp = obj;
        while(obj || isUndetectableObject(obj)){
            const descriptor = Object.getOwnPropertyDescriptor(obj, "constructor");
            if (descriptor !== undefined && typeof descriptor.value === "function" && descriptor.value.name !== "" && isInstanceof(tmp, descriptor.value)) {
                if (protoProps !== undefined && (firstProto !== obj || !builtInObjects.has(descriptor.value.name))) {
                    addPrototypeProperties(ctx, tmp, firstProto || tmp, recurseTimes, protoProps);
                }
                return descriptor.value.name;
            }
            obj = Object.getPrototypeOf(obj);
            if (firstProto === undefined) {
                firstProto = obj;
            }
        }
        if (firstProto === null) {
            return null;
        }
        const res = undefined;
        if (recurseTimes > ctx.depth && ctx.depth !== null) {
            return `${res} <Complex prototype>`;
        }
        const protoConstr = getConstructorName(firstProto, ctx, recurseTimes + 1, protoProps);
        if (protoConstr === null) {
            return `${res} <${inspect(firstProto, {
                ...ctx,
                customInspect: false,
                depth: -1
            })}>`;
        }
        return `${res} <${protoConstr}>`;
    }
    function formatPrimitive(fn, value, ctx) {
        if (typeof value === "string") {
            let trailer = "";
            if (value.length > ctx.maxStringLength) {
                const remaining = value.length - ctx.maxStringLength;
                value = value.slice(0, ctx.maxStringLength);
                trailer = `... ${remaining} more character${remaining > 1 ? "s" : ""}`;
            }
            if (ctx.compact !== true && value.length > 16 && value.length > ctx.breakLength - ctx.indentationLvl - 4) {
                return value.split(/(?<=\n)/).map((line)=>fn(strEscape(line), "string")).join(` +\n${" ".repeat(ctx.indentationLvl + 2)}`) + trailer;
            }
            return fn(strEscape(value), "string") + trailer;
        }
        if (typeof value === "number") {
            return formatNumber(fn, value);
        }
        if (typeof value === "bigint") {
            return formatBigInt(fn, value);
        }
        if (typeof value === "boolean") {
            return fn(`${value}`, "boolean");
        }
        if (typeof value === "undefined") {
            return fn("undefined", "undefined");
        }
        return fn(value.toString(), "symbol");
    }
    function getEmptyFormatArray() {
        return [];
    }
    function isInstanceof(object, proto) {
        try {
            return object instanceof proto;
        } catch  {
            return false;
        }
    }
    function getPrefix(constructor, tag, fallback, size = "") {
        if (constructor === null) {
            if (tag !== "" && fallback !== tag) {
                return `[${fallback}${size}: null prototype] [${tag}] `;
            }
            return `[${fallback}${size}: null prototype] `;
        }
        if (tag !== "" && constructor !== tag) {
            return `${constructor}${size} [${tag}] `;
        }
        return `${constructor}${size} `;
    }
    function formatArray(ctx, value, recurseTimes) {
        const valLen = value.length;
        const len = Math.min(Math.max(0, ctx.maxArrayLength), valLen);
        const remaining = valLen - len;
        const output = [];
        for(let i = 0; i < len; i++){
            if (!value.hasOwnProperty(i)) {
                return formatSpecialArray(ctx, value, recurseTimes, len, output, i);
            }
            output.push(formatProperty(ctx, value, recurseTimes, i, 1));
        }
        if (remaining > 0) {
            output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
        }
        return output;
    }
    function getCtxStyle(_value, constructor, tag) {
        let fallback = "";
        if (constructor === null) {
            if (fallback === tag) {
                fallback = "Object";
            }
        }
        return getPrefix(constructor, tag, fallback);
    }
    function getKeys(value, showHidden) {
        let keys;
        const symbols = Object.getOwnPropertySymbols(value);
        if (showHidden) {
            keys = Object.getOwnPropertyNames(value);
            if (symbols.length !== 0) {
                Array.prototype.push.apply(keys, symbols);
            }
        } else {
            try {
                keys = Object.keys(value);
            } catch (_err) {
                keys = Object.getOwnPropertyNames(value);
            }
            if (symbols.length !== 0) {}
        }
        return keys;
    }
    function formatSet(value, ctx, _ignored, recurseTimes) {
        const output = [];
        ctx.indentationLvl += 2;
        for (const v of value){
            Array.prototype.push.call(output, formatValue(ctx, v, recurseTimes));
        }
        ctx.indentationLvl -= 2;
        return output;
    }
    function formatMap(value, ctx, _gnored, recurseTimes) {
        const output = [];
        ctx.indentationLvl += 2;
        for (const { 0: k, 1: v } of value){
            output.push(`${formatValue(ctx, k, recurseTimes)} => ${formatValue(ctx, v, recurseTimes)}`);
        }
        ctx.indentationLvl -= 2;
        return output;
    }
    function formatTypedArray(value, length, ctx, _ignored, recurseTimes) {
        const maxLength = Math.min(Math.max(0, ctx.maxArrayLength), length);
        const remaining = value.length - maxLength;
        const output = new Array(maxLength);
        const elementFormatter = value.length > 0 && typeof value[0] === "number" ? formatNumber : formatBigInt;
        for(let i = 0; i < maxLength; ++i){
            output[i] = elementFormatter(ctx.stylize, value[i]);
        }
        if (remaining > 0) {
            output[maxLength] = `... ${remaining} more item${remaining > 1 ? "s" : ""}`;
        }
        if (ctx.showHidden) {
            ctx.indentationLvl += 2;
            for (const key of [
                "BYTES_PER_ELEMENT",
                "length",
                "byteLength",
                "byteOffset",
                "buffer"
            ]){
                const str = formatValue(ctx, value[key], recurseTimes, true);
                Array.prototype.push.call(output, `[${key}]: ${str}`);
            }
            ctx.indentationLvl -= 2;
        }
        return output;
    }
    function getIteratorBraces(type, tag) {
        if (tag !== `${type} Iterator`) {
            if (tag !== "") {
                tag += "] [";
            }
            tag += `${type} Iterator`;
        }
        return [
            `[${tag}] {`,
            "}"
        ];
    }
    function formatIterator(braces, ctx, value, recurseTimes) {
        const { 0: entries, 1: isKeyValue } = value;
        if (isKeyValue) {
            braces[0] = braces[0].replace(/ Iterator] {$/, " Entries] {");
            return formatMapIterInner(ctx, recurseTimes, entries, 2);
        }
        return formatSetIterInner(ctx, recurseTimes, entries, 1);
    }
    function getFunctionBase(value, constructor, tag) {
        const stringified = Function.prototype.toString.call(value);
        if (stringified.slice(0, 5) === "class" && stringified.endsWith("}")) {
            const slice = stringified.slice(5, -1);
            const bracketIndex = slice.indexOf("{");
            if (bracketIndex !== -1 && (!slice.slice(0, bracketIndex).includes("(") || classRegExp.test(slice.replace(stripCommentsRegExp)))) {
                return getClassBase(value, constructor, tag);
            }
        }
        let type = "Function";
        if (isGeneratorFunction1(value)) {
            type = `Generator${type}`;
        }
        if (isAsyncFunction1(value)) {
            type = `Async${type}`;
        }
        let base = `[${type}`;
        if (constructor === null) {
            base += " (null prototype)";
        }
        if (value.name === "") {
            base += " (anonymous)";
        } else {
            base += `: ${value.name}`;
        }
        base += "]";
        if (constructor !== type && constructor !== null) {
            base += ` ${constructor}`;
        }
        if (tag !== "" && constructor !== tag) {
            base += ` [${tag}]`;
        }
        return base;
    }
    function formatError(err, constructor, tag, ctx, keys) {
        const name = err.name != null ? String(err.name) : "Error";
        let len = name.length;
        let stack = err.stack ? String(err.stack) : err.toString();
        if (!ctx.showHidden && keys.length !== 0) {
            for (const name of [
                "name",
                "message",
                "stack"
            ]){
                const index = keys.indexOf(name);
                if (index !== -1 && stack.includes(err[name])) {
                    keys.splice(index, 1);
                }
            }
        }
        if (constructor === null || name.endsWith("Error") && stack.startsWith(name) && (stack.length === len || stack[len] === ":" || stack[len] === "\n")) {
            let fallback = "Error";
            if (constructor === null) {
                const start = stack.match(/^([A-Z][a-z_ A-Z0-9[\]()-]+)(?::|\n {4}at)/) || stack.match(/^([a-z_A-Z0-9-]*Error)$/);
                fallback = start && start[1] || "";
                len = fallback.length;
                fallback = fallback || "Error";
            }
            const prefix = getPrefix(constructor, tag, fallback).slice(0, -1);
            if (name !== prefix) {
                if (prefix.includes(name)) {
                    if (len === 0) {
                        stack = `${prefix}: ${stack}`;
                    } else {
                        stack = `${prefix}${stack.slice(len)}`;
                    }
                } else {
                    stack = `${prefix} [${name}]${stack.slice(len)}`;
                }
            }
        }
        let pos = err.message && stack.indexOf(err.message) || -1;
        if (pos !== -1) {
            pos += err.message.length;
        }
        const stackStart = stack.indexOf("\n    at", pos);
        if (stackStart === -1) {
            stack = `[${stack}]`;
        } else if (ctx.colors) {
            let newStack = stack.slice(0, stackStart);
            const lines = stack.slice(stackStart + 1).split("\n");
            for (const line of lines){
                let nodeModule;
                newStack += "\n";
                let pos = 0;
                while(nodeModule = nodeModulesRegExp.exec(line)){
                    newStack += line.slice(pos, nodeModule.index + 14);
                    newStack += ctx.stylize(nodeModule[1], "module");
                    pos = nodeModule.index + nodeModule[0].length;
                }
                newStack += pos === 0 ? line : line.slice(pos);
            }
            stack = newStack;
        }
        if (ctx.indentationLvl !== 0) {
            const indentation = " ".repeat(ctx.indentationLvl);
            stack = stack.replace(/\n/g, `\n${indentation}`);
        }
        return stack;
    }
    let hexSlice;
    function formatArrayBuffer(ctx, value) {
        let buffer;
        try {
            buffer = new Uint8Array(value);
        } catch  {
            return [
                ctx.stylize("(detached)", "special")
            ];
        }
        let str = hexSlice(buffer, 0, Math.min(ctx.maxArrayLength, buffer.length)).replace(/(.{2})/g, "$1 ").trim();
        const remaining = buffer.length - ctx.maxArrayLength;
        if (remaining > 0) {
            str += ` ... ${remaining} more byte${remaining > 1 ? "s" : ""}`;
        }
        return [
            `${ctx.stylize("[Uint8Contents]", "special")}: <${str}>`
        ];
    }
    function formatNumber(fn, value) {
        return fn(Object.is(value, -0) ? "-0" : `${value}`, "number");
    }
    function formatPromise(ctx, value, recurseTimes) {
        let output;
        const { 0: state, 1: result } = value;
        if (state === 0) {
            output = [
                ctx.stylize("<pending>", "special")
            ];
        } else {
            ctx.indentationLvl += 2;
            const str = formatValue(ctx, result, recurseTimes);
            ctx.indentationLvl -= 2;
            output = [
                state === kRejected ? `${ctx.stylize("<rejected>", "special")} ${str}` : str
            ];
        }
        return output;
    }
    function formatWeakCollection(ctx) {
        return [
            ctx.stylize("<items unknown>", "special")
        ];
    }
    function formatWeakSet(ctx, value, recurseTimes) {
        const entries = value;
        return formatSetIterInner(ctx, recurseTimes, entries, 0);
    }
    function formatWeakMap(ctx, value, recurseTimes) {
        const entries = value;
        return formatMapIterInner(ctx, recurseTimes, entries, 0);
    }
    function formatProperty(ctx, value, recurseTimes, key, type, desc, original = value) {
        let name, str;
        let extra = " ";
        desc = desc || Object.getOwnPropertyDescriptor(value, key) || {
            value: value[key],
            enumerable: true
        };
        if (desc.value !== undefined) {
            const diff = ctx.compact !== true || type !== 0 ? 2 : 3;
            ctx.indentationLvl += diff;
            str = formatValue(ctx, desc.value, recurseTimes);
            if (diff === 3 && ctx.breakLength < getStringWidth(str, ctx.colors)) {
                extra = `\n${" ".repeat(ctx.indentationLvl)}`;
            }
            ctx.indentationLvl -= diff;
        } else if (desc.get !== undefined) {
            const label = desc.set !== undefined ? "Getter/Setter" : "Getter";
            const s = ctx.stylize;
            const sp = "special";
            if (ctx.getters && (ctx.getters === true || ctx.getters === "get" && desc.set === undefined || ctx.getters === "set" && desc.set !== undefined)) {
                try {
                    const tmp = desc.get.call(original);
                    ctx.indentationLvl += 2;
                    if (tmp === null) {
                        str = `${s(`[${label}:`, sp)} ${s("null", "null")}${s("]", sp)}`;
                    } else if (typeof tmp === "object") {
                        str = `${s(`[${label}]`, sp)} ${formatValue(ctx, tmp, recurseTimes)}`;
                    } else {
                        const primitive = formatPrimitive(s, tmp, ctx);
                        str = `${s(`[${label}:`, sp)} ${primitive}${s("]", sp)}`;
                    }
                    ctx.indentationLvl -= 2;
                } catch (err) {
                    const message = `<Inspection threw (${err.message})>`;
                    str = `${s(`[${label}:`, sp)} ${message}${s("]", sp)}`;
                }
            } else {
                str = ctx.stylize(`[${label}]`, sp);
            }
        } else if (desc.set !== undefined) {
            str = ctx.stylize("[Setter]", "special");
        } else {
            str = ctx.stylize("undefined", "undefined");
        }
        if (type === 1) {
            return str;
        }
        if (typeof key === "symbol") {
            const tmp = key.toString().replace(strEscapeSequencesReplacer, escapeFn);
            name = `[${ctx.stylize(tmp, "symbol")}]`;
        } else if (key === "__proto__") {
            name = "['__proto__']";
        } else if (desc.enumerable === false) {
            const tmp = key.replace(strEscapeSequencesReplacer, escapeFn);
            name = `[${tmp}]`;
        } else if (keyStrRegExp.test(key)) {
            name = ctx.stylize(key, "name");
        } else {
            name = ctx.stylize(strEscape(key), "string");
        }
        return `${name}:${extra}${str}`;
    }
    function handleMaxCallStackSize(_ctx, _err, _constructorName, _indentationLvl) {}
    const colorRegExp = /\u001b\[\d\d?m/g;
    function removeColors(str) {
        return str.replace(colorRegExp, "");
    }
    function isBelowBreakLength(ctx, output, start, base) {
        let totalLength = output.length + start;
        if (totalLength + output.length > ctx.breakLength) {
            return false;
        }
        for(let i = 0; i < output.length; i++){
            if (ctx.colors) {
                totalLength += removeColors(output[i]).length;
            } else {
                totalLength += output[i].length;
            }
            if (totalLength > ctx.breakLength) {
                return false;
            }
        }
        return base === "" || !base.includes("\n");
    }
    function formatBigInt(fn, value) {
        return fn(`${value}n`, "bigint");
    }
    function formatNamespaceObject(keys, ctx, value, recurseTimes) {
        const output = new Array(keys.length);
        for(let i = 0; i < keys.length; i++){
            try {
                output[i] = formatProperty(ctx, value, recurseTimes, keys[i], kObjectType);
            } catch (_err) {
                const tmp = {
                    [keys[i]]: ""
                };
                output[i] = formatProperty(ctx, tmp, recurseTimes, keys[i], kObjectType);
                const pos = output[i].lastIndexOf(" ");
                output[i] = output[i].slice(0, pos + 1) + ctx.stylize("<uninitialized>", "special");
            }
        }
        keys.length = 0;
        return output;
    }
    function formatSpecialArray(ctx, value, recurseTimes, maxLength, output, i) {
        const keys = Object.keys(value);
        let index = i;
        for(; i < keys.length && output.length < maxLength; i++){
            const key = keys[i];
            const tmp = +key;
            if (tmp > 2 ** 32 - 2) {
                break;
            }
            if (`${index}` !== key) {
                if (!numberRegExp.test(key)) {
                    break;
                }
                const emptyItems = tmp - index;
                const ending = emptyItems > 1 ? "s" : "";
                const message = `<${emptyItems} empty item${ending}>`;
                output.push(ctx.stylize(message, "undefined"));
                index = tmp;
                if (output.length === maxLength) {
                    break;
                }
            }
            output.push(formatProperty(ctx, value, recurseTimes, key, 1));
            index++;
        }
        const remaining = value.length - index;
        if (output.length !== maxLength) {
            if (remaining > 0) {
                const ending = remaining > 1 ? "s" : "";
                const message = `<${remaining} empty item${ending}>`;
                output.push(ctx.stylize(message, "undefined"));
            }
        } else if (remaining > 0) {
            output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
        }
        return output;
    }
    function getBoxedBase(value, ctx, keys, constructor, tag) {
        let type;
        if (isNumberObject1(value)) {
            type = "Number";
        } else if (isStringObject1(value)) {
            type = "String";
            keys.splice(0, value.length);
        } else if (isBooleanObject1(value)) {
            type = "Boolean";
        } else if (isBigIntObject1(value)) {
            type = "BigInt";
        } else {
            type = "Symbol";
        }
        let base = `[${type}`;
        if (type !== constructor) {
            if (constructor === null) {
                base += " (null prototype)";
            } else {
                base += ` (${constructor})`;
            }
        }
        base += `: ${formatPrimitive(stylizeNoColor, value.valueOf(), ctx)}]`;
        if (tag !== "" && tag !== constructor) {
            base += ` [${tag}]`;
        }
        if (keys.length !== 0 || ctx.stylize === stylizeNoColor) {
            return base;
        }
        return ctx.stylize(base, type.toLowerCase());
    }
    function getClassBase(value, constructor, tag) {
        const hasName = value.hasOwnProperty("name");
        const name = hasName && value.name || "(anonymous)";
        let base = `class ${name}`;
        if (constructor !== "Function" && constructor !== null) {
            base += ` [${constructor}]`;
        }
        if (tag !== "" && constructor !== tag) {
            base += ` [${tag}]`;
        }
        if (constructor !== null) {
            const superName = Object.getPrototypeOf(value).name;
            if (superName) {
                base += ` extends ${superName}`;
            }
        } else {
            base += " extends [null prototype]";
        }
        return `[${base}]`;
    }
    function reduceToSingleString(ctx, output, base, braces, extrasType, recurseTimes, value) {
        if (ctx.compact !== true) {
            if (typeof ctx.compact === "number" && ctx.compact >= 1) {
                const entries = output.length;
                if (extrasType === 2 && entries > 6) {
                    output = groupArrayElements(ctx, output, value);
                }
                if (ctx.currentDepth - recurseTimes < ctx.compact && entries === output.length) {
                    const start = output.length + ctx.indentationLvl + braces[0].length + base.length + 10;
                    if (isBelowBreakLength(ctx, output, start, base)) {
                        return `${base ? `${base} ` : ""}${braces[0]} ${join(output, ", ")}` + ` ${braces[1]}`;
                    }
                }
            }
            const indentation = `\n${" ".repeat(ctx.indentationLvl)}`;
            return `${base ? `${base} ` : ""}${braces[0]}${indentation}  ` + `${join(output, `,${indentation}  `)}${indentation}${braces[1]}`;
        }
        if (isBelowBreakLength(ctx, output, 0, base)) {
            return `${braces[0]}${base ? ` ${base}` : ""} ${join(output, ", ")} ` + braces[1];
        }
        const indentation = " ".repeat(ctx.indentationLvl);
        const ln = base === "" && braces[0].length === 1 ? " " : `${base ? ` ${base}` : ""}\n${indentation}  `;
        return `${braces[0]}${ln}${join(output, `,\n${indentation}  `)} ${braces[1]}`;
    }
    function join(output, separator) {
        let str = "";
        if (output.length !== 0) {
            const lastIndex = output.length - 1;
            for(let i = 0; i < lastIndex; i++){
                str += output[i];
                str += separator;
            }
            str += output[lastIndex];
        }
        return str;
    }
    function groupArrayElements(ctx, output, value) {
        let totalLength = 0;
        let maxLength = 0;
        let i = 0;
        let outputLength = output.length;
        if (ctx.maxArrayLength < output.length) {
            outputLength--;
        }
        const separatorSpace = 2;
        const dataLen = new Array(outputLength);
        for(; i < outputLength; i++){
            const len = getStringWidth(output[i], ctx.colors);
            dataLen[i] = len;
            totalLength += len + separatorSpace;
            if (maxLength < len) {
                maxLength = len;
            }
        }
        const actualMax = maxLength + 2;
        if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength && (totalLength / actualMax > 5 || maxLength <= 6)) {
            const averageBias = Math.sqrt(actualMax - totalLength / output.length);
            const biasedMax = Math.max(actualMax - 3 - averageBias, 1);
            const columns = Math.min(Math.round(Math.sqrt(2.5 * biasedMax * outputLength) / biasedMax), Math.floor((ctx.breakLength - ctx.indentationLvl) / actualMax), ctx.compact * 4, 15);
            if (columns <= 1) {
                return output;
            }
            const tmp = [];
            const maxLineLength = [];
            for(let i = 0; i < columns; i++){
                let lineMaxLength = 0;
                for(let j = i; j < output.length; j += columns){
                    if (dataLen[j] > lineMaxLength) {
                        lineMaxLength = dataLen[j];
                    }
                }
                lineMaxLength += separatorSpace;
                maxLineLength[i] = lineMaxLength;
            }
            let order = String.prototype.padStart;
            if (value !== undefined) {
                for(let i = 0; i < output.length; i++){
                    if (typeof value[i] !== "number" && typeof value[i] !== "bigint") {
                        order = String.prototype.padEnd;
                        break;
                    }
                }
            }
            for(let i = 0; i < outputLength; i += columns){
                const max = Math.min(i + columns, outputLength);
                let str = "";
                let j = i;
                for(; j < max - 1; j++){
                    const padding = maxLineLength[j - i] + output[j].length - dataLen[j];
                    str += `${output[j]}, `.padStart(padding, " ");
                }
                if (order === String.prototype.padStart) {
                    const padding = maxLineLength[j - i] + output[j].length - dataLen[j] - 2;
                    str += output[j].padStart(padding, " ");
                } else {
                    str += output[j];
                }
                Array.prototype.push.call(tmp, str);
            }
            if (ctx.maxArrayLength < output.length) {
                Array.prototype.push.call(tmp, output[outputLength]);
            }
            output = tmp;
        }
        return output;
    }
    function formatMapIterInner(ctx, recurseTimes, entries, state) {
        const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
        const len = entries.length / 2;
        const remaining = len - maxArrayLength;
        const maxLength = Math.min(maxArrayLength, len);
        let output = new Array(maxLength);
        let i = 0;
        ctx.indentationLvl += 2;
        if (state === 0) {
            for(; i < maxLength; i++){
                const pos = i * 2;
                output[i] = `${formatValue(ctx, entries[pos], recurseTimes)} => ${formatValue(ctx, entries[pos + 1], recurseTimes)}`;
            }
            if (!ctx.sorted) {
                output = output.sort();
            }
        } else {
            for(; i < maxLength; i++){
                const pos = i * 2;
                const res = [
                    formatValue(ctx, entries[pos], recurseTimes),
                    formatValue(ctx, entries[pos + 1], recurseTimes)
                ];
                output[i] = reduceToSingleString(ctx, res, "", [
                    "[",
                    "]"
                ], kArrayExtrasType, recurseTimes);
            }
        }
        ctx.indentationLvl -= 2;
        if (remaining > 0) {
            output.push(`... ${remaining} more item${remaining > 1 ? "s" : ""}`);
        }
        return output;
    }
    function formatSetIterInner(ctx, recurseTimes, entries, state) {
        const maxArrayLength = Math.max(ctx.maxArrayLength, 0);
        const maxLength = Math.min(maxArrayLength, entries.length);
        const output = new Array(maxLength);
        ctx.indentationLvl += 2;
        for(let i = 0; i < maxLength; i++){
            output[i] = formatValue(ctx, entries[i], recurseTimes);
        }
        ctx.indentationLvl -= 2;
        if (state === 0 && !ctx.sorted) {
            output.sort();
        }
        const remaining = entries.length - maxLength;
        if (remaining > 0) {
            Array.prototype.push.call(output, `... ${remaining} more item${remaining > 1 ? "s" : ""}`);
        }
        return output;
    }
    const ansiPattern = "[\\u001B\\u009B][[\\]()#;?]*" + "(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*" + "|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)" + "|(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))";
    const ansi = new RegExp(ansiPattern, "g");
    function getStringWidth(str, removeControlChars = true) {
        let width = 0;
        if (removeControlChars) {
            str = stripVTControlCharacters(str);
        }
        str = str.normalize("NFC");
        for (const __char of str[Symbol.iterator]()){
            const code = __char.codePointAt(0);
            if (isFullWidthCodePoint(code)) {
                width += 2;
            } else if (!isZeroWidthCodePoint(code)) {
                width++;
            }
        }
        return width;
    }
    const isFullWidthCodePoint = (code)=>{
        return code >= 0x1100 && (code <= 0x115f || code === 0x2329 || code === 0x232a || code >= 0x2e80 && code <= 0x3247 && code !== 0x303f || code >= 0x3250 && code <= 0x4dbf || code >= 0x4e00 && code <= 0xa4c6 || code >= 0xa960 && code <= 0xa97c || code >= 0xac00 && code <= 0xd7a3 || code >= 0xf900 && code <= 0xfaff || code >= 0xfe10 && code <= 0xfe19 || code >= 0xfe30 && code <= 0xfe6b || code >= 0xff01 && code <= 0xff60 || code >= 0xffe0 && code <= 0xffe6 || code >= 0x1b000 && code <= 0x1b001 || code >= 0x1f200 && code <= 0x1f251 || code >= 0x1f300 && code <= 0x1f64f || code >= 0x20000 && code <= 0x3fffd);
    };
    const isZeroWidthCodePoint = (code)=>{
        return code <= 0x1F || code >= 0x7F && code <= 0x9F || code >= 0x300 && code <= 0x36F || code >= 0x200B && code <= 0x200F || code >= 0x20D0 && code <= 0x20FF || code >= 0xFE00 && code <= 0xFE0F || code >= 0xFE20 && code <= 0xFE2F || code >= 0xE0100 && code <= 0xE01EF;
    };
    function stripVTControlCharacters(str) {
        validateString(str, "str");
        return str.replace(ansi, "");
    }
    let os;
    if (Deno.build.os === "darwin") {
        os = {
            UV_UDP_REUSEADDR: 4,
            dlopen: {
                RTLD_LAZY: 1,
                RTLD_NOW: 2,
                RTLD_GLOBAL: 8,
                RTLD_LOCAL: 4
            },
            errno: {
                E2BIG: 7,
                EACCES: 13,
                EADDRINUSE: 48,
                EADDRNOTAVAIL: 49,
                EAFNOSUPPORT: 47,
                EAGAIN: 35,
                EALREADY: 37,
                EBADF: 9,
                EBADMSG: 94,
                EBUSY: 16,
                ECANCELED: 89,
                ECHILD: 10,
                ECONNABORTED: 53,
                ECONNREFUSED: 61,
                ECONNRESET: 54,
                EDEADLK: 11,
                EDESTADDRREQ: 39,
                EDOM: 33,
                EDQUOT: 69,
                EEXIST: 17,
                EFAULT: 14,
                EFBIG: 27,
                EHOSTUNREACH: 65,
                EIDRM: 90,
                EILSEQ: 92,
                EINPROGRESS: 36,
                EINTR: 4,
                EINVAL: 22,
                EIO: 5,
                EISCONN: 56,
                EISDIR: 21,
                ELOOP: 62,
                EMFILE: 24,
                EMLINK: 31,
                EMSGSIZE: 40,
                EMULTIHOP: 95,
                ENAMETOOLONG: 63,
                ENETDOWN: 50,
                ENETRESET: 52,
                ENETUNREACH: 51,
                ENFILE: 23,
                ENOBUFS: 55,
                ENODATA: 96,
                ENODEV: 19,
                ENOENT: 2,
                ENOEXEC: 8,
                ENOLCK: 77,
                ENOLINK: 97,
                ENOMEM: 12,
                ENOMSG: 91,
                ENOPROTOOPT: 42,
                ENOSPC: 28,
                ENOSR: 98,
                ENOSTR: 99,
                ENOSYS: 78,
                ENOTCONN: 57,
                ENOTDIR: 20,
                ENOTEMPTY: 66,
                ENOTSOCK: 38,
                ENOTSUP: 45,
                ENOTTY: 25,
                ENXIO: 6,
                EOPNOTSUPP: 102,
                EOVERFLOW: 84,
                EPERM: 1,
                EPIPE: 32,
                EPROTO: 100,
                EPROTONOSUPPORT: 43,
                EPROTOTYPE: 41,
                ERANGE: 34,
                EROFS: 30,
                ESPIPE: 29,
                ESRCH: 3,
                ESTALE: 70,
                ETIME: 101,
                ETIMEDOUT: 60,
                ETXTBSY: 26,
                EWOULDBLOCK: 35,
                EXDEV: 18
            },
            signals: {
                SIGHUP: 1,
                SIGINT: 2,
                SIGQUIT: 3,
                SIGILL: 4,
                SIGTRAP: 5,
                SIGABRT: 6,
                SIGIOT: 6,
                SIGBUS: 10,
                SIGFPE: 8,
                SIGKILL: 9,
                SIGUSR1: 30,
                SIGSEGV: 11,
                SIGUSR2: 31,
                SIGPIPE: 13,
                SIGALRM: 14,
                SIGTERM: 15,
                SIGCHLD: 20,
                SIGCONT: 19,
                SIGSTOP: 17,
                SIGTSTP: 18,
                SIGTTIN: 21,
                SIGTTOU: 22,
                SIGURG: 16,
                SIGXCPU: 24,
                SIGXFSZ: 25,
                SIGVTALRM: 26,
                SIGPROF: 27,
                SIGWINCH: 28,
                SIGIO: 23,
                SIGINFO: 29,
                SIGSYS: 12
            },
            priority: {
                PRIORITY_LOW: 19,
                PRIORITY_BELOW_NORMAL: 10,
                PRIORITY_NORMAL: 0,
                PRIORITY_ABOVE_NORMAL: -7,
                PRIORITY_HIGH: -14,
                PRIORITY_HIGHEST: -20
            }
        };
    } else if (Deno.build.os === "linux") {
        os = {
            UV_UDP_REUSEADDR: 4,
            dlopen: {
                RTLD_LAZY: 1,
                RTLD_NOW: 2,
                RTLD_GLOBAL: 256,
                RTLD_LOCAL: 0,
                RTLD_DEEPBIND: 8
            },
            errno: {
                E2BIG: 7,
                EACCES: 13,
                EADDRINUSE: 98,
                EADDRNOTAVAIL: 99,
                EAFNOSUPPORT: 97,
                EAGAIN: 11,
                EALREADY: 114,
                EBADF: 9,
                EBADMSG: 74,
                EBUSY: 16,
                ECANCELED: 125,
                ECHILD: 10,
                ECONNABORTED: 103,
                ECONNREFUSED: 111,
                ECONNRESET: 104,
                EDEADLK: 35,
                EDESTADDRREQ: 89,
                EDOM: 33,
                EDQUOT: 122,
                EEXIST: 17,
                EFAULT: 14,
                EFBIG: 27,
                EHOSTUNREACH: 113,
                EIDRM: 43,
                EILSEQ: 84,
                EINPROGRESS: 115,
                EINTR: 4,
                EINVAL: 22,
                EIO: 5,
                EISCONN: 106,
                EISDIR: 21,
                ELOOP: 40,
                EMFILE: 24,
                EMLINK: 31,
                EMSGSIZE: 90,
                EMULTIHOP: 72,
                ENAMETOOLONG: 36,
                ENETDOWN: 100,
                ENETRESET: 102,
                ENETUNREACH: 101,
                ENFILE: 23,
                ENOBUFS: 105,
                ENODATA: 61,
                ENODEV: 19,
                ENOENT: 2,
                ENOEXEC: 8,
                ENOLCK: 37,
                ENOLINK: 67,
                ENOMEM: 12,
                ENOMSG: 42,
                ENOPROTOOPT: 92,
                ENOSPC: 28,
                ENOSR: 63,
                ENOSTR: 60,
                ENOSYS: 38,
                ENOTCONN: 107,
                ENOTDIR: 20,
                ENOTEMPTY: 39,
                ENOTSOCK: 88,
                ENOTSUP: 95,
                ENOTTY: 25,
                ENXIO: 6,
                EOPNOTSUPP: 95,
                EOVERFLOW: 75,
                EPERM: 1,
                EPIPE: 32,
                EPROTO: 71,
                EPROTONOSUPPORT: 93,
                EPROTOTYPE: 91,
                ERANGE: 34,
                EROFS: 30,
                ESPIPE: 29,
                ESRCH: 3,
                ESTALE: 116,
                ETIME: 62,
                ETIMEDOUT: 110,
                ETXTBSY: 26,
                EWOULDBLOCK: 11,
                EXDEV: 18
            },
            signals: {
                SIGHUP: 1,
                SIGINT: 2,
                SIGQUIT: 3,
                SIGILL: 4,
                SIGTRAP: 5,
                SIGABRT: 6,
                SIGIOT: 6,
                SIGBUS: 7,
                SIGFPE: 8,
                SIGKILL: 9,
                SIGUSR1: 10,
                SIGSEGV: 11,
                SIGUSR2: 12,
                SIGPIPE: 13,
                SIGALRM: 14,
                SIGTERM: 15,
                SIGCHLD: 17,
                SIGSTKFLT: 16,
                SIGCONT: 18,
                SIGSTOP: 19,
                SIGTSTP: 20,
                SIGTTIN: 21,
                SIGTTOU: 22,
                SIGURG: 23,
                SIGXCPU: 24,
                SIGXFSZ: 25,
                SIGVTALRM: 26,
                SIGPROF: 27,
                SIGWINCH: 28,
                SIGIO: 29,
                SIGPOLL: 29,
                SIGPWR: 30,
                SIGSYS: 31,
                SIGUNUSED: 31
            },
            priority: {
                PRIORITY_LOW: 19,
                PRIORITY_BELOW_NORMAL: 10,
                PRIORITY_NORMAL: 0,
                PRIORITY_ABOVE_NORMAL: -7,
                PRIORITY_HIGH: -14,
                PRIORITY_HIGHEST: -20
            }
        };
    } else {
        os = {
            UV_UDP_REUSEADDR: 4,
            dlopen: {},
            errno: {
                E2BIG: 7,
                EACCES: 13,
                EADDRINUSE: 100,
                EADDRNOTAVAIL: 101,
                EAFNOSUPPORT: 102,
                EAGAIN: 11,
                EALREADY: 103,
                EBADF: 9,
                EBADMSG: 104,
                EBUSY: 16,
                ECANCELED: 105,
                ECHILD: 10,
                ECONNABORTED: 106,
                ECONNREFUSED: 107,
                ECONNRESET: 108,
                EDEADLK: 36,
                EDESTADDRREQ: 109,
                EDOM: 33,
                EEXIST: 17,
                EFAULT: 14,
                EFBIG: 27,
                EHOSTUNREACH: 110,
                EIDRM: 111,
                EILSEQ: 42,
                EINPROGRESS: 112,
                EINTR: 4,
                EINVAL: 22,
                EIO: 5,
                EISCONN: 113,
                EISDIR: 21,
                ELOOP: 114,
                EMFILE: 24,
                EMLINK: 31,
                EMSGSIZE: 115,
                ENAMETOOLONG: 38,
                ENETDOWN: 116,
                ENETRESET: 117,
                ENETUNREACH: 118,
                ENFILE: 23,
                ENOBUFS: 119,
                ENODATA: 120,
                ENODEV: 19,
                ENOENT: 2,
                ENOEXEC: 8,
                ENOLCK: 39,
                ENOLINK: 121,
                ENOMEM: 12,
                ENOMSG: 122,
                ENOPROTOOPT: 123,
                ENOSPC: 28,
                ENOSR: 124,
                ENOSTR: 125,
                ENOSYS: 40,
                ENOTCONN: 126,
                ENOTDIR: 20,
                ENOTEMPTY: 41,
                ENOTSOCK: 128,
                ENOTSUP: 129,
                ENOTTY: 25,
                ENXIO: 6,
                EOPNOTSUPP: 130,
                EOVERFLOW: 132,
                EPERM: 1,
                EPIPE: 32,
                EPROTO: 134,
                EPROTONOSUPPORT: 135,
                EPROTOTYPE: 136,
                ERANGE: 34,
                EROFS: 30,
                ESPIPE: 29,
                ESRCH: 3,
                ETIME: 137,
                ETIMEDOUT: 138,
                ETXTBSY: 139,
                EWOULDBLOCK: 140,
                EXDEV: 18,
                WSAEINTR: 10004,
                WSAEBADF: 10009,
                WSAEACCES: 10013,
                WSAEFAULT: 10014,
                WSAEINVAL: 10022,
                WSAEMFILE: 10024,
                WSAEWOULDBLOCK: 10035,
                WSAEINPROGRESS: 10036,
                WSAEALREADY: 10037,
                WSAENOTSOCK: 10038,
                WSAEDESTADDRREQ: 10039,
                WSAEMSGSIZE: 10040,
                WSAEPROTOTYPE: 10041,
                WSAENOPROTOOPT: 10042,
                WSAEPROTONOSUPPORT: 10043,
                WSAESOCKTNOSUPPORT: 10044,
                WSAEOPNOTSUPP: 10045,
                WSAEPFNOSUPPORT: 10046,
                WSAEAFNOSUPPORT: 10047,
                WSAEADDRINUSE: 10048,
                WSAEADDRNOTAVAIL: 10049,
                WSAENETDOWN: 10050,
                WSAENETUNREACH: 10051,
                WSAENETRESET: 10052,
                WSAECONNABORTED: 10053,
                WSAECONNRESET: 10054,
                WSAENOBUFS: 10055,
                WSAEISCONN: 10056,
                WSAENOTCONN: 10057,
                WSAESHUTDOWN: 10058,
                WSAETOOMANYREFS: 10059,
                WSAETIMEDOUT: 10060,
                WSAECONNREFUSED: 10061,
                WSAELOOP: 10062,
                WSAENAMETOOLONG: 10063,
                WSAEHOSTDOWN: 10064,
                WSAEHOSTUNREACH: 10065,
                WSAENOTEMPTY: 10066,
                WSAEPROCLIM: 10067,
                WSAEUSERS: 10068,
                WSAEDQUOT: 10069,
                WSAESTALE: 10070,
                WSAEREMOTE: 10071,
                WSASYSNOTREADY: 10091,
                WSAVERNOTSUPPORTED: 10092,
                WSANOTINITIALISED: 10093,
                WSAEDISCON: 10101,
                WSAENOMORE: 10102,
                WSAECANCELLED: 10103,
                WSAEINVALIDPROCTABLE: 10104,
                WSAEINVALIDPROVIDER: 10105,
                WSAEPROVIDERFAILEDINIT: 10106,
                WSASYSCALLFAILURE: 10107,
                WSASERVICE_NOT_FOUND: 10108,
                WSATYPE_NOT_FOUND: 10109,
                WSA_E_NO_MORE: 10110,
                WSA_E_CANCELLED: 10111,
                WSAEREFUSED: 10112
            },
            signals: {
                SIGHUP: 1,
                SIGINT: 2,
                SIGILL: 4,
                SIGABRT: 22,
                SIGFPE: 8,
                SIGKILL: 9,
                SIGSEGV: 11,
                SIGTERM: 15,
                SIGBREAK: 21,
                SIGWINCH: 28
            },
            priority: {
                PRIORITY_LOW: 19,
                PRIORITY_BELOW_NORMAL: 10,
                PRIORITY_NORMAL: 0,
                PRIORITY_ABOVE_NORMAL: -7,
                PRIORITY_HIGH: -14,
                PRIORITY_HIGHEST: -20
            }
        };
    }
    const fs = {
        UV_FS_SYMLINK_DIR: 1,
        UV_FS_SYMLINK_JUNCTION: 2,
        O_RDONLY: 0,
        O_WRONLY: 1,
        O_RDWR: 2,
        UV_DIRENT_UNKNOWN: 0,
        UV_DIRENT_FILE: 1,
        UV_DIRENT_DIR: 2,
        UV_DIRENT_LINK: 3,
        UV_DIRENT_FIFO: 4,
        UV_DIRENT_SOCKET: 5,
        UV_DIRENT_CHAR: 6,
        UV_DIRENT_BLOCK: 7,
        S_IFMT: 61440,
        S_IFREG: 32768,
        S_IFDIR: 16384,
        S_IFCHR: 8192,
        S_IFBLK: 24576,
        S_IFIFO: 4096,
        S_IFLNK: 40960,
        S_IFSOCK: 49152,
        O_CREAT: 512,
        O_EXCL: 2048,
        UV_FS_O_FILEMAP: 0,
        O_NOCTTY: 131072,
        O_TRUNC: 1024,
        O_APPEND: 8,
        O_DIRECTORY: 1048576,
        O_NOFOLLOW: 256,
        O_SYNC: 128,
        O_DSYNC: 4194304,
        O_SYMLINK: 2097152,
        O_NONBLOCK: 4,
        S_IRWXU: 448,
        S_IRUSR: 256,
        S_IWUSR: 128,
        S_IXUSR: 64,
        S_IRWXG: 56,
        S_IRGRP: 32,
        S_IWGRP: 16,
        S_IXGRP: 8,
        S_IRWXO: 7,
        S_IROTH: 4,
        S_IWOTH: 2,
        S_IXOTH: 1,
        F_OK: 0,
        R_OK: 4,
        W_OK: 2,
        X_OK: 1,
        UV_FS_COPYFILE_EXCL: 1,
        COPYFILE_EXCL: 1,
        UV_FS_COPYFILE_FICLONE: 2,
        COPYFILE_FICLONE: 2,
        UV_FS_COPYFILE_FICLONE_FORCE: 4,
        COPYFILE_FICLONE_FORCE: 4
    };
    const crypto = {
        OPENSSL_VERSION_NUMBER: 269488319,
        SSL_OP_ALL: 2147485780,
        SSL_OP_ALLOW_NO_DHE_KEX: 1024,
        SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: 262144,
        SSL_OP_CIPHER_SERVER_PREFERENCE: 4194304,
        SSL_OP_CISCO_ANYCONNECT: 32768,
        SSL_OP_COOKIE_EXCHANGE: 8192,
        SSL_OP_CRYPTOPRO_TLSEXT_BUG: 2147483648,
        SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: 2048,
        SSL_OP_EPHEMERAL_RSA: 0,
        SSL_OP_LEGACY_SERVER_CONNECT: 4,
        SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: 0,
        SSL_OP_MICROSOFT_SESS_ID_BUG: 0,
        SSL_OP_MSIE_SSLV2_RSA_PADDING: 0,
        SSL_OP_NETSCAPE_CA_DN_BUG: 0,
        SSL_OP_NETSCAPE_CHALLENGE_BUG: 0,
        SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: 0,
        SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: 0,
        SSL_OP_NO_COMPRESSION: 131072,
        SSL_OP_NO_ENCRYPT_THEN_MAC: 524288,
        SSL_OP_NO_QUERY_MTU: 4096,
        SSL_OP_NO_RENEGOTIATION: 1073741824,
        SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: 65536,
        SSL_OP_NO_SSLv2: 0,
        SSL_OP_NO_SSLv3: 33554432,
        SSL_OP_NO_TICKET: 16384,
        SSL_OP_NO_TLSv1: 67108864,
        SSL_OP_NO_TLSv1_1: 268435456,
        SSL_OP_NO_TLSv1_2: 134217728,
        SSL_OP_NO_TLSv1_3: 536870912,
        SSL_OP_PKCS1_CHECK_1: 0,
        SSL_OP_PKCS1_CHECK_2: 0,
        SSL_OP_PRIORITIZE_CHACHA: 2097152,
        SSL_OP_SINGLE_DH_USE: 0,
        SSL_OP_SINGLE_ECDH_USE: 0,
        SSL_OP_SSLEAY_080_CLIENT_DH_BUG: 0,
        SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: 0,
        SSL_OP_TLS_BLOCK_PADDING_BUG: 0,
        SSL_OP_TLS_D5_BUG: 0,
        SSL_OP_TLS_ROLLBACK_BUG: 8388608,
        ENGINE_METHOD_RSA: 1,
        ENGINE_METHOD_DSA: 2,
        ENGINE_METHOD_DH: 4,
        ENGINE_METHOD_RAND: 8,
        ENGINE_METHOD_EC: 2048,
        ENGINE_METHOD_CIPHERS: 64,
        ENGINE_METHOD_DIGESTS: 128,
        ENGINE_METHOD_PKEY_METHS: 512,
        ENGINE_METHOD_PKEY_ASN1_METHS: 1024,
        ENGINE_METHOD_ALL: 65535,
        ENGINE_METHOD_NONE: 0,
        DH_CHECK_P_NOT_SAFE_PRIME: 2,
        DH_CHECK_P_NOT_PRIME: 1,
        DH_UNABLE_TO_CHECK_GENERATOR: 4,
        DH_NOT_SUITABLE_GENERATOR: 8,
        ALPN_ENABLED: 1,
        RSA_PKCS1_PADDING: 1,
        RSA_SSLV23_PADDING: 2,
        RSA_NO_PADDING: 3,
        RSA_PKCS1_OAEP_PADDING: 4,
        RSA_X931_PADDING: 5,
        RSA_PKCS1_PSS_PADDING: 6,
        RSA_PSS_SALTLEN_DIGEST: -1,
        RSA_PSS_SALTLEN_MAX_SIGN: -2,
        RSA_PSS_SALTLEN_AUTO: -2,
        defaultCoreCipherList: "TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA",
        TLS1_VERSION: 769,
        TLS1_1_VERSION: 770,
        TLS1_2_VERSION: 771,
        TLS1_3_VERSION: 772,
        POINT_CONVERSION_COMPRESSED: 2,
        POINT_CONVERSION_UNCOMPRESSED: 4,
        POINT_CONVERSION_HYBRID: 6
    };
    const zlib = {
        Z_NO_FLUSH: 0,
        Z_PARTIAL_FLUSH: 1,
        Z_SYNC_FLUSH: 2,
        Z_FULL_FLUSH: 3,
        Z_FINISH: 4,
        Z_BLOCK: 5,
        Z_OK: 0,
        Z_STREAM_END: 1,
        Z_NEED_DICT: 2,
        Z_ERRNO: -1,
        Z_STREAM_ERROR: -2,
        Z_DATA_ERROR: -3,
        Z_MEM_ERROR: -4,
        Z_BUF_ERROR: -5,
        Z_VERSION_ERROR: -6,
        Z_NO_COMPRESSION: 0,
        Z_BEST_SPEED: 1,
        Z_BEST_COMPRESSION: 9,
        Z_DEFAULT_COMPRESSION: -1,
        Z_FILTERED: 1,
        Z_HUFFMAN_ONLY: 2,
        Z_RLE: 3,
        Z_FIXED: 4,
        Z_DEFAULT_STRATEGY: 0,
        ZLIB_VERNUM: 4784,
        DEFLATE: 1,
        INFLATE: 2,
        GZIP: 3,
        GUNZIP: 4,
        DEFLATERAW: 5,
        INFLATERAW: 6,
        UNZIP: 7,
        BROTLI_DECODE: 8,
        BROTLI_ENCODE: 9,
        Z_MIN_WINDOWBITS: 8,
        Z_MAX_WINDOWBITS: 15,
        Z_DEFAULT_WINDOWBITS: 15,
        Z_MIN_CHUNK: 64,
        Z_MAX_CHUNK: Infinity,
        Z_DEFAULT_CHUNK: 16384,
        Z_MIN_MEMLEVEL: 1,
        Z_MAX_MEMLEVEL: 9,
        Z_DEFAULT_MEMLEVEL: 8,
        Z_MIN_LEVEL: -1,
        Z_MAX_LEVEL: 9,
        Z_DEFAULT_LEVEL: -1,
        BROTLI_OPERATION_PROCESS: 0,
        BROTLI_OPERATION_FLUSH: 1,
        BROTLI_OPERATION_FINISH: 2,
        BROTLI_OPERATION_EMIT_METADATA: 3,
        BROTLI_PARAM_MODE: 0,
        BROTLI_MODE_GENERIC: 0,
        BROTLI_MODE_TEXT: 1,
        BROTLI_MODE_FONT: 2,
        BROTLI_DEFAULT_MODE: 0,
        BROTLI_PARAM_QUALITY: 1,
        BROTLI_MIN_QUALITY: 0,
        BROTLI_MAX_QUALITY: 11,
        BROTLI_DEFAULT_QUALITY: 11,
        BROTLI_PARAM_LGWIN: 2,
        BROTLI_MIN_WINDOW_BITS: 10,
        BROTLI_MAX_WINDOW_BITS: 24,
        BROTLI_LARGE_MAX_WINDOW_BITS: 30,
        BROTLI_DEFAULT_WINDOW: 22,
        BROTLI_PARAM_LGBLOCK: 3,
        BROTLI_MIN_INPUT_BLOCK_BITS: 16,
        BROTLI_MAX_INPUT_BLOCK_BITS: 24,
        BROTLI_PARAM_DISABLE_LITERAL_CONTEXT_MODELING: 4,
        BROTLI_PARAM_SIZE_HINT: 5,
        BROTLI_PARAM_LARGE_WINDOW: 6,
        BROTLI_PARAM_NPOSTFIX: 7,
        BROTLI_PARAM_NDIRECT: 8,
        BROTLI_DECODER_RESULT_ERROR: 0,
        BROTLI_DECODER_RESULT_SUCCESS: 1,
        BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT: 2,
        BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT: 3,
        BROTLI_DECODER_PARAM_DISABLE_RING_BUFFER_REALLOCATION: 0,
        BROTLI_DECODER_PARAM_LARGE_WINDOW: 1,
        BROTLI_DECODER_NO_ERROR: 0,
        BROTLI_DECODER_SUCCESS: 1,
        BROTLI_DECODER_NEEDS_MORE_INPUT: 2,
        BROTLI_DECODER_NEEDS_MORE_OUTPUT: 3,
        BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_NIBBLE: -1,
        BROTLI_DECODER_ERROR_FORMAT_RESERVED: -2,
        BROTLI_DECODER_ERROR_FORMAT_EXUBERANT_META_NIBBLE: -3,
        BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_ALPHABET: -4,
        BROTLI_DECODER_ERROR_FORMAT_SIMPLE_HUFFMAN_SAME: -5,
        BROTLI_DECODER_ERROR_FORMAT_CL_SPACE: -6,
        BROTLI_DECODER_ERROR_FORMAT_HUFFMAN_SPACE: -7,
        BROTLI_DECODER_ERROR_FORMAT_CONTEXT_MAP_REPEAT: -8,
        BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_1: -9,
        BROTLI_DECODER_ERROR_FORMAT_BLOCK_LENGTH_2: -10,
        BROTLI_DECODER_ERROR_FORMAT_TRANSFORM: -11,
        BROTLI_DECODER_ERROR_FORMAT_DICTIONARY: -12,
        BROTLI_DECODER_ERROR_FORMAT_WINDOW_BITS: -13,
        BROTLI_DECODER_ERROR_FORMAT_PADDING_1: -14,
        BROTLI_DECODER_ERROR_FORMAT_PADDING_2: -15,
        BROTLI_DECODER_ERROR_FORMAT_DISTANCE: -16,
        BROTLI_DECODER_ERROR_DICTIONARY_NOT_SET: -19,
        BROTLI_DECODER_ERROR_INVALID_ARGUMENTS: -20,
        BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MODES: -21,
        BROTLI_DECODER_ERROR_ALLOC_TREE_GROUPS: -22,
        BROTLI_DECODER_ERROR_ALLOC_CONTEXT_MAP: -25,
        BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_1: -26,
        BROTLI_DECODER_ERROR_ALLOC_RING_BUFFER_2: -27,
        BROTLI_DECODER_ERROR_ALLOC_BLOCK_TYPE_TREES: -30,
        BROTLI_DECODER_ERROR_UNREACHABLE: -31
    };
    const trace = {
        TRACE_EVENT_PHASE_BEGIN: 66,
        TRACE_EVENT_PHASE_END: 69,
        TRACE_EVENT_PHASE_COMPLETE: 88,
        TRACE_EVENT_PHASE_INSTANT: 73,
        TRACE_EVENT_PHASE_ASYNC_BEGIN: 83,
        TRACE_EVENT_PHASE_ASYNC_STEP_INTO: 84,
        TRACE_EVENT_PHASE_ASYNC_STEP_PAST: 112,
        TRACE_EVENT_PHASE_ASYNC_END: 70,
        TRACE_EVENT_PHASE_NESTABLE_ASYNC_BEGIN: 98,
        TRACE_EVENT_PHASE_NESTABLE_ASYNC_END: 101,
        TRACE_EVENT_PHASE_NESTABLE_ASYNC_INSTANT: 110,
        TRACE_EVENT_PHASE_FLOW_BEGIN: 115,
        TRACE_EVENT_PHASE_FLOW_STEP: 116,
        TRACE_EVENT_PHASE_FLOW_END: 102,
        TRACE_EVENT_PHASE_METADATA: 77,
        TRACE_EVENT_PHASE_COUNTER: 67,
        TRACE_EVENT_PHASE_SAMPLE: 80,
        TRACE_EVENT_PHASE_CREATE_OBJECT: 78,
        TRACE_EVENT_PHASE_SNAPSHOT_OBJECT: 79,
        TRACE_EVENT_PHASE_DELETE_OBJECT: 68,
        TRACE_EVENT_PHASE_MEMORY_DUMP: 118,
        TRACE_EVENT_PHASE_MARK: 82,
        TRACE_EVENT_PHASE_CLOCK_SYNC: 99,
        TRACE_EVENT_PHASE_ENTER_CONTEXT: 40,
        TRACE_EVENT_PHASE_LEAVE_CONTEXT: 41,
        TRACE_EVENT_PHASE_LINK_IDS: 61
    };
    const mod3 = {
        os: os,
        fs: fs,
        crypto: crypto,
        zlib: zlib,
        trace: trace
    };
    const { errno: { ENOTDIR, ENOENT } } = os;
    const kIsNodeError = Symbol("kIsNodeError");
    const classRegExp1 = /^([A-Z][a-z0-9]*)+$/;
    const kTypes = [
        "string",
        "function",
        "number",
        "object",
        "Function",
        "Object",
        "boolean",
        "bigint",
        "symbol"
    ];
    class AbortError extends Error {
        code;
        constructor(message = "The operation was aborted", options){
            if (options !== undefined && typeof options !== "object") {
                throw new codes.ERR_INVALID_ARG_TYPE("options", "Object", options);
            }
            super(message, options);
            this.code = "ABORT_ERR";
            this.name = "AbortError";
        }
    }
    function addNumericalSeparator(val) {
        let res = "";
        let i = val.length;
        const start = val[0] === "-" ? 1 : 0;
        for(; i >= start + 4; i -= 3){
            res = `_${val.slice(i - 3, i)}${res}`;
        }
        return `${val.slice(0, i)}${res}`;
    }
    const captureLargerStackTrace = hideStackFrames(function captureLargerStackTrace(err) {
        Error.captureStackTrace(err);
        return err;
    });
    hideStackFrames(function uvExceptionWithHostPort(err, syscall, address, port) {
        const { 0: code, 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;
        const message = `${syscall} ${code}: ${uvmsg}`;
        let details = "";
        if (port && port > 0) {
            details = ` ${address}:${port}`;
        } else if (address) {
            details = ` ${address}`;
        }
        const ex = new Error(`${message}${details}`);
        ex.code = code;
        ex.errno = err;
        ex.syscall = syscall;
        ex.address = address;
        if (port) {
            ex.port = port;
        }
        return captureLargerStackTrace(ex);
    });
    const errnoException = hideStackFrames(function errnoException(err, syscall, original) {
        const code = getSystemErrorName(err);
        const message = original ? `${syscall} ${code} ${original}` : `${syscall} ${code}`;
        const ex = new Error(message);
        ex.errno = err;
        ex.code = code;
        ex.syscall = syscall;
        return captureLargerStackTrace(ex);
    });
    function uvErrmapGet(name) {
        return errorMap.get(name);
    }
    const uvUnmappedError = [
        "UNKNOWN",
        "unknown error"
    ];
    hideStackFrames(function uvException(ctx) {
        const { 0: code, 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;
        let message = `${code}: ${ctx.message || uvmsg}, ${ctx.syscall}`;
        let path;
        let dest;
        if (ctx.path) {
            path = ctx.path.toString();
            message += ` '${path}'`;
        }
        if (ctx.dest) {
            dest = ctx.dest.toString();
            message += ` -> '${dest}'`;
        }
        const err = new Error(message);
        for (const prop of Object.keys(ctx)){
            if (prop === "message" || prop === "path" || prop === "dest") {
                continue;
            }
            err[prop] = ctx[prop];
        }
        err.code = code;
        if (path) {
            err.path = path;
        }
        if (dest) {
            err.dest = dest;
        }
        return captureLargerStackTrace(err);
    });
    hideStackFrames(function exceptionWithHostPort(err, syscall, address, port, additional) {
        const code = getSystemErrorName(err);
        let details = "";
        if (port && port > 0) {
            details = ` ${address}:${port}`;
        } else if (address) {
            details = ` ${address}`;
        }
        if (additional) {
            details += ` - Local (${additional})`;
        }
        const ex = new Error(`${syscall} ${code}${details}`);
        ex.errno = err;
        ex.code = code;
        ex.syscall = syscall;
        ex.address = address;
        if (port) {
            ex.port = port;
        }
        return captureLargerStackTrace(ex);
    });
    hideStackFrames(function(code, syscall, hostname) {
        let errno;
        if (typeof code === "number") {
            errno = code;
            if (code === codeMap.get("EAI_NODATA") || code === codeMap.get("EAI_NONAME")) {
                code = "ENOTFOUND";
            } else {
                code = getSystemErrorName(code);
            }
        }
        const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ""}`;
        const ex = new Error(message);
        ex.errno = errno;
        ex.code = code;
        ex.syscall = syscall;
        if (hostname) {
            ex.hostname = hostname;
        }
        return captureLargerStackTrace(ex);
    });
    class NodeErrorAbstraction extends Error {
        code;
        constructor(name, code, message){
            super(message);
            this.code = code;
            this.name = name;
            this.stack = this.stack && `${name} [${this.code}]${this.stack.slice(20)}`;
        }
        toString() {
            return `${this.name} [${this.code}]: ${this.message}`;
        }
    }
    class NodeError extends NodeErrorAbstraction {
        constructor(code, message){
            super(Error.prototype.name, code, message);
        }
    }
    class NodeRangeError extends NodeErrorAbstraction {
        constructor(code, message){
            super(RangeError.prototype.name, code, message);
            Object.setPrototypeOf(this, RangeError.prototype);
            this.toString = function() {
                return `${this.name} [${this.code}]: ${this.message}`;
            };
        }
    }
    class NodeTypeError extends NodeErrorAbstraction {
        constructor(code, message){
            super(TypeError.prototype.name, code, message);
            Object.setPrototypeOf(this, TypeError.prototype);
            this.toString = function() {
                return `${this.name} [${this.code}]: ${this.message}`;
            };
        }
    }
    class NodeSystemError extends NodeErrorAbstraction {
        constructor(key, context, msgPrefix){
            let message = `${msgPrefix}: ${context.syscall} returned ` + `${context.code} (${context.message})`;
            if (context.path !== undefined) {
                message += ` ${context.path}`;
            }
            if (context.dest !== undefined) {
                message += ` => ${context.dest}`;
            }
            super("SystemError", key, message);
            captureLargerStackTrace(this);
            Object.defineProperties(this, {
                [kIsNodeError]: {
                    value: true,
                    enumerable: false,
                    writable: false,
                    configurable: true
                },
                info: {
                    value: context,
                    enumerable: true,
                    configurable: true,
                    writable: false
                },
                errno: {
                    get () {
                        return context.errno;
                    },
                    set: (value)=>{
                        context.errno = value;
                    },
                    enumerable: true,
                    configurable: true
                },
                syscall: {
                    get () {
                        return context.syscall;
                    },
                    set: (value)=>{
                        context.syscall = value;
                    },
                    enumerable: true,
                    configurable: true
                }
            });
            if (context.path !== undefined) {
                Object.defineProperty(this, "path", {
                    get () {
                        return context.path;
                    },
                    set: (value)=>{
                        context.path = value;
                    },
                    enumerable: true,
                    configurable: true
                });
            }
            if (context.dest !== undefined) {
                Object.defineProperty(this, "dest", {
                    get () {
                        return context.dest;
                    },
                    set: (value)=>{
                        context.dest = value;
                    },
                    enumerable: true,
                    configurable: true
                });
            }
        }
        toString() {
            return `${this.name} [${this.code}]: ${this.message}`;
        }
    }
    function makeSystemErrorWithCode(key, msgPrfix) {
        return class NodeError extends NodeSystemError {
            constructor(ctx){
                super(key, ctx, msgPrfix);
            }
        };
    }
    makeSystemErrorWithCode("ERR_FS_EISDIR", "Path is a directory");
    function createInvalidArgType(name, expected) {
        expected = Array.isArray(expected) ? expected : [
            expected
        ];
        let msg = "The ";
        if (name.endsWith(" argument")) {
            msg += `${name} `;
        } else {
            const type = name.includes(".") ? "property" : "argument";
            msg += `"${name}" ${type} `;
        }
        msg += "must be ";
        const types = [];
        const instances = [];
        const other = [];
        for (const value of expected){
            if (kTypes.includes(value)) {
                types.push(value.toLocaleLowerCase());
            } else if (classRegExp1.test(value)) {
                instances.push(value);
            } else {
                other.push(value);
            }
        }
        if (instances.length > 0) {
            const pos = types.indexOf("object");
            if (pos !== -1) {
                types.splice(pos, 1);
                instances.push("Object");
            }
        }
        if (types.length > 0) {
            if (types.length > 2) {
                const last = types.pop();
                msg += `one of type ${types.join(", ")}, or ${last}`;
            } else if (types.length === 2) {
                msg += `one of type ${types[0]} or ${types[1]}`;
            } else {
                msg += `of type ${types[0]}`;
            }
            if (instances.length > 0 || other.length > 0) {
                msg += " or ";
            }
        }
        if (instances.length > 0) {
            if (instances.length > 2) {
                const last = instances.pop();
                msg += `an instance of ${instances.join(", ")}, or ${last}`;
            } else {
                msg += `an instance of ${instances[0]}`;
                if (instances.length === 2) {
                    msg += ` or ${instances[1]}`;
                }
            }
            if (other.length > 0) {
                msg += " or ";
            }
        }
        if (other.length > 0) {
            if (other.length > 2) {
                const last = other.pop();
                msg += `one of ${other.join(", ")}, or ${last}`;
            } else if (other.length === 2) {
                msg += `one of ${other[0]} or ${other[1]}`;
            } else {
                if (other[0].toLowerCase() !== other[0]) {
                    msg += "an ";
                }
                msg += `${other[0]}`;
            }
        }
        return msg;
    }
    class ERR_INVALID_ARG_TYPE_RANGE extends NodeRangeError {
        constructor(name, expected, actual){
            const msg = createInvalidArgType(name, expected);
            super("ERR_INVALID_ARG_TYPE", `${msg}.${invalidArgTypeHelper(actual)}`);
        }
    }
    class ERR_INVALID_ARG_TYPE extends NodeTypeError {
        constructor(name, expected, actual){
            const msg = createInvalidArgType(name, expected);
            super("ERR_INVALID_ARG_TYPE", `${msg}.${invalidArgTypeHelper(actual)}`);
        }
        static RangeError = ERR_INVALID_ARG_TYPE_RANGE;
    }
    class ERR_INVALID_ARG_VALUE_RANGE extends NodeRangeError {
        constructor(name, value, reason = "is invalid"){
            const type = name.includes(".") ? "property" : "argument";
            const inspected = inspect(value);
            super("ERR_INVALID_ARG_VALUE", `The ${type} '${name}' ${reason}. Received ${inspected}`);
        }
    }
    class ERR_INVALID_ARG_VALUE extends NodeTypeError {
        constructor(name, value, reason = "is invalid"){
            const type = name.includes(".") ? "property" : "argument";
            const inspected = inspect(value);
            super("ERR_INVALID_ARG_VALUE", `The ${type} '${name}' ${reason}. Received ${inspected}`);
        }
        static RangeError = ERR_INVALID_ARG_VALUE_RANGE;
    }
    function invalidArgTypeHelper(input) {
        if (input == null) {
            return ` Received ${input}`;
        }
        if (typeof input === "function" && input.name) {
            return ` Received function ${input.name}`;
        }
        if (typeof input === "object") {
            if (input.constructor && input.constructor.name) {
                return ` Received an instance of ${input.constructor.name}`;
            }
            return ` Received ${inspect(input, {
                depth: -1
            })}`;
        }
        let inspected = inspect(input, {
            colors: false
        });
        if (inspected.length > 25) {
            inspected = `${inspected.slice(0, 25)}...`;
        }
        return ` Received type ${typeof input} (${inspected})`;
    }
    class ERR_OUT_OF_RANGE extends RangeError {
        code = "ERR_OUT_OF_RANGE";
        constructor(str, range, input, replaceDefaultBoolean = false){
            assert(range, 'Missing "range" argument');
            let msg = replaceDefaultBoolean ? str : `The value of "${str}" is out of range.`;
            let received;
            if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
                received = addNumericalSeparator(String(input));
            } else if (typeof input === "bigint") {
                received = String(input);
                if (input > 2n ** 32n || input < -(2n ** 32n)) {
                    received = addNumericalSeparator(received);
                }
                received += "n";
            } else {
                received = inspect(input);
            }
            msg += ` It must be ${range}. Received ${received}`;
            super(msg);
            const { name } = this;
            this.name = `${name} [${this.code}]`;
            this.stack;
            this.name = name;
        }
    }
    class ERR_BUFFER_OUT_OF_BOUNDS extends NodeRangeError {
        constructor(name){
            super("ERR_BUFFER_OUT_OF_BOUNDS", name ? `"${name}" is outside of buffer bounds` : "Attempt to access memory outside buffer bounds");
        }
    }
    class ERR_INVALID_CURSOR_POS extends NodeTypeError {
        constructor(){
            super("ERR_INVALID_CURSOR_POS", `Cannot set cursor row without setting its column`);
        }
    }
    class ERR_IPC_CHANNEL_CLOSED extends NodeError {
        constructor(){
            super("ERR_IPC_CHANNEL_CLOSED", `Channel closed`);
        }
    }
    class ERR_SOCKET_BAD_PORT extends NodeRangeError {
        constructor(name, port, allowZero = true){
            assert(typeof allowZero === "boolean", "The 'allowZero' argument must be of type boolean.");
            const operator = allowZero ? ">=" : ">";
            super("ERR_SOCKET_BAD_PORT", `${name} should be ${operator} 0 and < 65536. Received ${port}.`);
        }
    }
    class ERR_STREAM_PREMATURE_CLOSE extends NodeError {
        constructor(){
            super("ERR_STREAM_PREMATURE_CLOSE", `Premature close`);
        }
    }
    class ERR_UNHANDLED_ERROR extends NodeError {
        constructor(x){
            super("ERR_UNHANDLED_ERROR", `Unhandled error. (${x})`);
        }
    }
    class ERR_UNKNOWN_ENCODING extends NodeTypeError {
        constructor(x){
            super("ERR_UNKNOWN_ENCODING", `Unknown encoding: ${x}`);
        }
    }
    class ERR_UNKNOWN_SIGNAL extends NodeTypeError {
        constructor(x){
            super("ERR_UNKNOWN_SIGNAL", `Unknown signal: ${x}`);
        }
    }
    function aggregateTwoErrors(innerError, outerError) {
        if (innerError && outerError && innerError !== outerError) {
            if (Array.isArray(outerError.errors)) {
                outerError.errors.push(innerError);
                return outerError;
            }
            const err = new AggregateError([
                outerError,
                innerError
            ], outerError.message);
            err.code = outerError.code;
            return err;
        }
        return innerError || outerError;
    }
    codes.ERR_IPC_CHANNEL_CLOSED = ERR_IPC_CHANNEL_CLOSED;
    codes.ERR_INVALID_ARG_TYPE = ERR_INVALID_ARG_TYPE;
    codes.ERR_INVALID_ARG_VALUE = ERR_INVALID_ARG_VALUE;
    codes.ERR_OUT_OF_RANGE = ERR_OUT_OF_RANGE;
    codes.ERR_SOCKET_BAD_PORT = ERR_SOCKET_BAD_PORT;
    codes.ERR_BUFFER_OUT_OF_BOUNDS = ERR_BUFFER_OUT_OF_BOUNDS;
    codes.ERR_UNKNOWN_ENCODING = ERR_UNKNOWN_ENCODING;
    hideStackFrames(function genericNodeError(message, errorProperties) {
        const err = new Error(message);
        Object.assign(err, errorProperties);
        return err;
    });
    "use strict";
    const kRejection = Symbol.for("nodejs.rejection");
    const kCapture = Symbol("kCapture");
    const kErrorMonitor = Symbol("events.errorMonitor");
    const kMaxEventTargetListeners = Symbol("events.maxEventTargetListeners");
    const kMaxEventTargetListenersWarned = Symbol("events.maxEventTargetListenersWarned");
    function EventEmitter(opts) {
        EventEmitter.init.call(this, opts);
    }
    EventEmitter.on = on;
    EventEmitter.once = once;
    EventEmitter.getEventListeners = getEventListeners;
    EventEmitter.setMaxListeners = setMaxListeners;
    EventEmitter.listenerCount = listenerCount;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.usingDomains = false;
    EventEmitter.captureRejectionSymbol = kRejection;
    EventEmitter.captureRejectionSymbol;
    EventEmitter.errorMonitor;
    Object.defineProperty(EventEmitter, "captureRejections", {
        get () {
            return EventEmitter.prototype[kCapture];
        },
        set (value) {
            validateBoolean(value, "EventEmitter.captureRejections");
            EventEmitter.prototype[kCapture] = value;
        },
        enumerable: true
    });
    EventEmitter.errorMonitor = kErrorMonitor;
    Object.defineProperty(EventEmitter.prototype, kCapture, {
        value: false,
        writable: true,
        enumerable: false
    });
    EventEmitter.prototype._events = undefined;
    EventEmitter.prototype._eventsCount = 0;
    EventEmitter.prototype._maxListeners = undefined;
    let defaultMaxListeners = 10;
    function checkListener(listener) {
        validateFunction(listener, "listener");
    }
    Object.defineProperty(EventEmitter, "defaultMaxListeners", {
        enumerable: true,
        get: function() {
            return defaultMaxListeners;
        },
        set: function(arg) {
            if (typeof arg !== "number" || arg < 0 || Number.isNaN(arg)) {
                throw new ERR_OUT_OF_RANGE("defaultMaxListeners", "a non-negative number", arg);
            }
            defaultMaxListeners = arg;
        }
    });
    Object.defineProperties(EventEmitter, {
        kMaxEventTargetListeners: {
            value: kMaxEventTargetListeners,
            enumerable: false,
            configurable: false,
            writable: false
        },
        kMaxEventTargetListenersWarned: {
            value: kMaxEventTargetListenersWarned,
            enumerable: false,
            configurable: false,
            writable: false
        }
    });
    function setMaxListeners(n = defaultMaxListeners, ...eventTargets) {
        if (typeof n !== "number" || n < 0 || Number.isNaN(n)) {
            throw new ERR_OUT_OF_RANGE("n", "a non-negative number", n);
        }
        if (eventTargets.length === 0) {
            defaultMaxListeners = n;
        } else {
            for(let i = 0; i < eventTargets.length; i++){
                const target = eventTargets[i];
                if (target instanceof EventTarget) {
                    target[kMaxEventTargetListeners] = n;
                    target[kMaxEventTargetListenersWarned] = false;
                } else if (typeof target.setMaxListeners === "function") {
                    target.setMaxListeners(n);
                } else {
                    throw new ERR_INVALID_ARG_TYPE("eventTargets", [
                        "EventEmitter",
                        "EventTarget"
                    ], target);
                }
            }
        }
    }
    EventEmitter.init = function(opts) {
        if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
            this._events = Object.create(null);
            this._eventsCount = 0;
        }
        this._maxListeners = this._maxListeners || undefined;
        if (opts?.captureRejections) {
            validateBoolean(opts.captureRejections, "options.captureRejections");
            this[kCapture] = Boolean(opts.captureRejections);
        } else {
            this[kCapture] = EventEmitter.prototype[kCapture];
        }
    };
    function addCatch(that, promise, type, args) {
        if (!that[kCapture]) {
            return;
        }
        try {
            const then = promise.then;
            if (typeof then === "function") {
                then.call(promise, undefined, function(err) {
                    process.nextTick(emitUnhandledRejectionOrErr, that, err, type, args);
                });
            }
        } catch (err) {
            that.emit("error", err);
        }
    }
    function emitUnhandledRejectionOrErr(ee, err, type, args) {
        if (typeof ee[kRejection] === "function") {
            ee[kRejection](err, type, ...args);
        } else {
            const prev = ee[kCapture];
            try {
                ee[kCapture] = false;
                ee.emit("error", err);
            } finally{
                ee[kCapture] = prev;
            }
        }
    }
    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
        if (typeof n !== "number" || n < 0 || Number.isNaN(n)) {
            throw new ERR_OUT_OF_RANGE("n", "a non-negative number", n);
        }
        this._maxListeners = n;
        return this;
    };
    function _getMaxListeners(that) {
        if (that._maxListeners === undefined) {
            return EventEmitter.defaultMaxListeners;
        }
        return that._maxListeners;
    }
    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
        return _getMaxListeners(this);
    };
    EventEmitter.prototype.emit = function emit(type, ...args) {
        let doError = type === "error";
        const events = this._events;
        if (events !== undefined) {
            if (doError && events[kErrorMonitor] !== undefined) {
                this.emit(kErrorMonitor, ...args);
            }
            doError = doError && events.error === undefined;
        } else if (!doError) {
            return false;
        }
        if (doError) {
            let er;
            if (args.length > 0) {
                er = args[0];
            }
            if (er instanceof Error) {
                try {
                    const capture = {};
                    Error.captureStackTrace(capture, EventEmitter.prototype.emit);
                } catch  {}
                throw er;
            }
            let stringifiedEr;
            try {
                stringifiedEr = inspect(er);
            } catch  {
                stringifiedEr = er;
            }
            const err = new ERR_UNHANDLED_ERROR(stringifiedEr);
            err.context = er;
            throw err;
        }
        const handler = events[type];
        if (handler === undefined) {
            return false;
        }
        if (typeof handler === "function") {
            const result = handler.apply(this, args);
            if (result !== undefined && result !== null) {
                addCatch(this, result, type, args);
            }
        } else {
            const len = handler.length;
            const listeners = arrayClone(handler);
            for(let i = 0; i < len; ++i){
                const result = listeners[i].apply(this, args);
                if (result !== undefined && result !== null) {
                    addCatch(this, result, type, args);
                }
            }
        }
        return true;
    };
    function _addListener(target, type, listener, prepend) {
        let m;
        let events;
        let existing;
        checkListener(listener);
        events = target._events;
        if (events === undefined) {
            events = target._events = Object.create(null);
            target._eventsCount = 0;
        } else {
            if (events.newListener !== undefined) {
                target.emit("newListener", type, listener.listener ?? listener);
                events = target._events;
            }
            existing = events[type];
        }
        if (existing === undefined) {
            events[type] = listener;
            ++target._eventsCount;
        } else {
            if (typeof existing === "function") {
                existing = events[type] = prepend ? [
                    listener,
                    existing
                ] : [
                    existing,
                    listener
                ];
            } else if (prepend) {
                existing.unshift(listener);
            } else {
                existing.push(listener);
            }
            m = _getMaxListeners(target);
            if (m > 0 && existing.length > m && !existing.warned) {
                existing.warned = true;
                const w = new Error("Possible EventEmitter memory leak detected. " + `${existing.length} ${String(type)} listeners ` + `added to ${inspect(target, {
                    depth: -1
                })}. Use ` + "emitter.setMaxListeners() to increase limit");
                w.name = "MaxListenersExceededWarning";
                w.emitter = target;
                w.type = type;
                w.count = existing.length;
                process.emitWarning(w);
            }
        }
        return target;
    }
    EventEmitter.prototype.addListener = function addListener(type, listener) {
        return _addListener(this, type, listener, false);
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.prependListener = function prependListener(type, listener) {
        return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
        if (!this.fired) {
            this.target.removeListener(this.type, this.wrapFn);
            this.fired = true;
            if (arguments.length === 0) {
                return this.listener.call(this.target);
            }
            return this.listener.apply(this.target, arguments);
        }
    }
    function _onceWrap(target, type, listener) {
        const state = {
            fired: false,
            wrapFn: undefined,
            target,
            type,
            listener
        };
        const wrapped = onceWrapper.bind(state);
        wrapped.listener = listener;
        state.wrapFn = wrapped;
        return wrapped;
    }
    EventEmitter.prototype.once = function once(type, listener) {
        checkListener(listener);
        this.on(type, _onceWrap(this, type, listener));
        return this;
    };
    EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
        checkListener(listener);
        this.prependListener(type, _onceWrap(this, type, listener));
        return this;
    };
    EventEmitter.prototype.removeListener = function removeListener(type, listener) {
        checkListener(listener);
        const events = this._events;
        if (events === undefined) {
            return this;
        }
        const list = events[type];
        if (list === undefined) {
            return this;
        }
        if (list === listener || list.listener === listener) {
            if (--this._eventsCount === 0) {
                this._events = Object.create(null);
            } else {
                delete events[type];
                if (events.removeListener) {
                    this.emit("removeListener", type, list.listener || listener);
                }
            }
        } else if (typeof list !== "function") {
            let position = -1;
            for(let i = list.length - 1; i >= 0; i--){
                if (list[i] === listener || list[i].listener === listener) {
                    position = i;
                    break;
                }
            }
            if (position < 0) {
                return this;
            }
            if (position === 0) {
                list.shift();
            } else {
                spliceOne(list, position);
            }
            if (list.length === 1) {
                events[type] = list[0];
            }
            if (events.removeListener !== undefined) {
                this.emit("removeListener", type, listener);
            }
        }
        return this;
    };
    EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
    EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
        const events = this._events;
        if (events === undefined) {
            return this;
        }
        if (events.removeListener === undefined) {
            if (arguments.length === 0) {
                this._events = Object.create(null);
                this._eventsCount = 0;
            } else if (events[type] !== undefined) {
                if (--this._eventsCount === 0) {
                    this._events = Object.create(null);
                } else {
                    delete events[type];
                }
            }
            return this;
        }
        if (arguments.length === 0) {
            for (const key of Reflect.ownKeys(events)){
                if (key === "removeListener") continue;
                this.removeAllListeners(key);
            }
            this.removeAllListeners("removeListener");
            this._events = Object.create(null);
            this._eventsCount = 0;
            return this;
        }
        const listeners = events[type];
        if (typeof listeners === "function") {
            this.removeListener(type, listeners);
        } else if (listeners !== undefined) {
            for(let i = listeners.length - 1; i >= 0; i--){
                this.removeListener(type, listeners[i]);
            }
        }
        return this;
    };
    function _listeners(target, type, unwrap) {
        const events = target._events;
        if (events === undefined) {
            return [];
        }
        const evlistener = events[type];
        if (evlistener === undefined) {
            return [];
        }
        if (typeof evlistener === "function") {
            return unwrap ? [
                evlistener.listener || evlistener
            ] : [
                evlistener
            ];
        }
        return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener);
    }
    EventEmitter.prototype.listeners = function listeners(type) {
        return _listeners(this, type, true);
    };
    EventEmitter.prototype.rawListeners = function rawListeners(type) {
        return _listeners(this, type, false);
    };
    const _listenerCount = function listenerCount(type) {
        const events = this._events;
        if (events !== undefined) {
            const evlistener = events[type];
            if (typeof evlistener === "function") {
                return 1;
            } else if (evlistener !== undefined) {
                return evlistener.length;
            }
        }
        return 0;
    };
    EventEmitter.prototype.listenerCount = _listenerCount;
    function listenerCount(emitter, type) {
        if (typeof emitter.listenerCount === "function") {
            return emitter.listenerCount(type);
        }
        return _listenerCount.call(emitter, type);
    }
    EventEmitter.prototype.eventNames = function eventNames() {
        return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
    };
    function arrayClone(arr) {
        switch(arr.length){
            case 2:
                return [
                    arr[0],
                    arr[1]
                ];
            case 3:
                return [
                    arr[0],
                    arr[1],
                    arr[2]
                ];
            case 4:
                return [
                    arr[0],
                    arr[1],
                    arr[2],
                    arr[3]
                ];
            case 5:
                return [
                    arr[0],
                    arr[1],
                    arr[2],
                    arr[3],
                    arr[4]
                ];
            case 6:
                return [
                    arr[0],
                    arr[1],
                    arr[2],
                    arr[3],
                    arr[4],
                    arr[5]
                ];
        }
        return arr.slice();
    }
    function unwrapListeners(arr) {
        const ret = arrayClone(arr);
        for(let i = 0; i < ret.length; ++i){
            const orig = ret[i].listener;
            if (typeof orig === "function") {
                ret[i] = orig;
            }
        }
        return ret;
    }
    function getEventListeners(emitterOrTarget, type) {
        if (typeof emitterOrTarget.listeners === "function") {
            return emitterOrTarget.listeners(type);
        }
        if (emitterOrTarget instanceof EventTarget) {
            const root = emitterOrTarget[kEvents].get(type);
            const listeners = [];
            let handler = root?.next;
            while(handler?.listener !== undefined){
                const listener = handler.listener?.deref ? handler.listener.deref() : handler.listener;
                listeners.push(listener);
                handler = handler.next;
            }
            return listeners;
        }
        throw new ERR_INVALID_ARG_TYPE("emitter", [
            "EventEmitter",
            "EventTarget"
        ], emitterOrTarget);
    }
    async function once(emitter, name, options = {}) {
        const signal = options?.signal;
        validateAbortSignal(signal, "options.signal");
        if (signal?.aborted) {
            throw new AbortError();
        }
        return new Promise((resolve, reject)=>{
            const errorListener = (err)=>{
                emitter.removeListener(name, resolver);
                if (signal != null) {
                    eventTargetAgnosticRemoveListener(signal, "abort", abortListener);
                }
                reject(err);
            };
            const resolver = (...args)=>{
                if (typeof emitter.removeListener === "function") {
                    emitter.removeListener("error", errorListener);
                }
                if (signal != null) {
                    eventTargetAgnosticRemoveListener(signal, "abort", abortListener);
                }
                resolve(args);
            };
            eventTargetAgnosticAddListener(emitter, name, resolver, {
                once: true
            });
            if (name !== "error" && typeof emitter.once === "function") {
                emitter.once("error", errorListener);
            }
            function abortListener() {
                eventTargetAgnosticRemoveListener(emitter, name, resolver);
                eventTargetAgnosticRemoveListener(emitter, "error", errorListener);
                reject(new AbortError());
            }
            if (signal != null) {
                eventTargetAgnosticAddListener(signal, "abort", abortListener, {
                    once: true
                });
            }
        });
    }
    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function*() {}).prototype);
    function createIterResult(value, done) {
        return {
            value,
            done
        };
    }
    function eventTargetAgnosticRemoveListener(emitter, name, listener, flags) {
        if (typeof emitter.removeListener === "function") {
            emitter.removeListener(name, listener);
        } else if (typeof emitter.removeEventListener === "function") {
            emitter.removeEventListener(name, listener, flags);
        } else {
            throw new ERR_INVALID_ARG_TYPE("emitter", "EventEmitter", emitter);
        }
    }
    function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
        if (typeof emitter.on === "function") {
            if (flags?.once) {
                emitter.once(name, listener);
            } else {
                emitter.on(name, listener);
            }
        } else if (typeof emitter.addEventListener === "function") {
            emitter.addEventListener(name, (arg)=>{
                listener(arg);
            }, flags);
        } else {
            throw new ERR_INVALID_ARG_TYPE("emitter", "EventEmitter", emitter);
        }
    }
    function on(emitter, event, options) {
        const signal = options?.signal;
        validateAbortSignal(signal, "options.signal");
        if (signal?.aborted) {
            throw new AbortError();
        }
        const unconsumedEvents = [];
        const unconsumedPromises = [];
        let error = null;
        let finished = false;
        const iterator = Object.setPrototypeOf({
            next () {
                const value = unconsumedEvents.shift();
                if (value) {
                    return Promise.resolve(createIterResult(value, false));
                }
                if (error) {
                    const p = Promise.reject(error);
                    error = null;
                    return p;
                }
                if (finished) {
                    return Promise.resolve(createIterResult(undefined, true));
                }
                return new Promise(function(resolve, reject) {
                    unconsumedPromises.push({
                        resolve,
                        reject
                    });
                });
            },
            return () {
                eventTargetAgnosticRemoveListener(emitter, event, eventHandler);
                eventTargetAgnosticRemoveListener(emitter, "error", errorHandler);
                if (signal) {
                    eventTargetAgnosticRemoveListener(signal, "abort", abortListener, {
                        once: true
                    });
                }
                finished = true;
                for (const promise of unconsumedPromises){
                    promise.resolve(createIterResult(undefined, true));
                }
                return Promise.resolve(createIterResult(undefined, true));
            },
            throw (err) {
                if (!err || !(err instanceof Error)) {
                    throw new ERR_INVALID_ARG_TYPE("EventEmitter.AsyncIterator", "Error", err);
                }
                error = err;
                eventTargetAgnosticRemoveListener(emitter, event, eventHandler);
                eventTargetAgnosticRemoveListener(emitter, "error", errorHandler);
            },
            [Symbol.asyncIterator] () {
                return this;
            }
        }, AsyncIteratorPrototype);
        eventTargetAgnosticAddListener(emitter, event, eventHandler);
        if (event !== "error" && typeof emitter.on === "function") {
            emitter.on("error", errorHandler);
        }
        if (signal) {
            eventTargetAgnosticAddListener(signal, "abort", abortListener, {
                once: true
            });
        }
        return iterator;
        function abortListener() {
            errorHandler(new AbortError());
        }
        function eventHandler(...args) {
            const promise = unconsumedPromises.shift();
            if (promise) {
                promise.resolve(createIterResult(args, false));
            } else {
                unconsumedEvents.push(args);
            }
        }
        function errorHandler(err) {
            finished = true;
            const toError = unconsumedPromises.shift();
            if (toError) {
                toError.reject(err);
            } else {
                error = err;
            }
            iterator.return();
        }
    }
    const { hasOwn } = Object;
    function get(obj, key) {
        if (hasOwn(obj, key)) {
            return obj[key];
        }
    }
    function getForce(obj, key) {
        const v = get(obj, key);
        assert(v != null);
        return v;
    }
    function isNumber(x) {
        if (typeof x === "number") return true;
        if (/^0x[0-9a-f]+$/i.test(String(x))) return true;
        return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(String(x));
    }
    function hasKey(obj, keys) {
        let o = obj;
        keys.slice(0, -1).forEach((key)=>{
            o = get(o, key) ?? {};
        });
        const key = keys[keys.length - 1];
        return hasOwn(o, key);
    }
    function parse(args, { "--": doubleDash = false, alias = {}, boolean: __boolean = false, default: defaults = {}, stopEarly = false, string = [], collect = [], negatable = [], unknown = (i)=>i } = {}) {
        const aliases = {};
        const flags = {
            bools: {},
            strings: {},
            unknownFn: unknown,
            allBools: false,
            collect: {},
            negatable: {}
        };
        if (alias !== undefined) {
            for(const key in alias){
                const val = getForce(alias, key);
                if (typeof val === "string") {
                    aliases[key] = [
                        val
                    ];
                } else {
                    aliases[key] = val;
                }
                for (const alias of getForce(aliases, key)){
                    aliases[alias] = [
                        key
                    ].concat(aliases[key].filter((y)=>alias !== y));
                }
            }
        }
        if (__boolean !== undefined) {
            if (typeof __boolean === "boolean") {
                flags.allBools = !!__boolean;
            } else {
                const booleanArgs = typeof __boolean === "string" ? [
                    __boolean
                ] : __boolean;
                for (const key of booleanArgs.filter(Boolean)){
                    flags.bools[key] = true;
                    const alias = get(aliases, key);
                    if (alias) {
                        for (const al of alias){
                            flags.bools[al] = true;
                        }
                    }
                }
            }
        }
        if (string !== undefined) {
            const stringArgs = typeof string === "string" ? [
                string
            ] : string;
            for (const key of stringArgs.filter(Boolean)){
                flags.strings[key] = true;
                const alias = get(aliases, key);
                if (alias) {
                    for (const al of alias){
                        flags.strings[al] = true;
                    }
                }
            }
        }
        if (collect !== undefined) {
            const collectArgs = typeof collect === "string" ? [
                collect
            ] : collect;
            for (const key of collectArgs.filter(Boolean)){
                flags.collect[key] = true;
                const alias = get(aliases, key);
                if (alias) {
                    for (const al of alias){
                        flags.collect[al] = true;
                    }
                }
            }
        }
        if (negatable !== undefined) {
            const negatableArgs = typeof negatable === "string" ? [
                negatable
            ] : negatable;
            for (const key of negatableArgs.filter(Boolean)){
                flags.negatable[key] = true;
                const alias = get(aliases, key);
                if (alias) {
                    for (const al of alias){
                        flags.negatable[al] = true;
                    }
                }
            }
        }
        const argv = {
            _: []
        };
        function argDefined(key, arg) {
            return flags.allBools && /^--[^=]+$/.test(arg) || get(flags.bools, key) || !!get(flags.strings, key) || !!get(aliases, key);
        }
        function setKey(obj, name, value, collect = true) {
            let o = obj;
            const keys = name.split(".");
            keys.slice(0, -1).forEach(function(key) {
                if (get(o, key) === undefined) {
                    o[key] = {};
                }
                o = get(o, key);
            });
            const key = keys[keys.length - 1];
            const collectable = collect && !!get(flags.collect, name);
            if (!collectable) {
                o[key] = value;
            } else if (get(o, key) === undefined) {
                o[key] = [
                    value
                ];
            } else if (Array.isArray(get(o, key))) {
                o[key].push(value);
            } else {
                o[key] = [
                    get(o, key),
                    value
                ];
            }
        }
        function setArg(key, val, arg = undefined, collect) {
            if (arg && flags.unknownFn && !argDefined(key, arg)) {
                if (flags.unknownFn(arg, key, val) === false) return;
            }
            const value = !get(flags.strings, key) && isNumber(val) ? Number(val) : val;
            setKey(argv, key, value, collect);
            const alias = get(aliases, key);
            if (alias) {
                for (const x of alias){
                    setKey(argv, x, value, collect);
                }
            }
        }
        function aliasIsBoolean(key) {
            return getForce(aliases, key).some((x)=>typeof get(flags.bools, x) === "boolean");
        }
        let notFlags = [];
        if (args.includes("--")) {
            notFlags = args.slice(args.indexOf("--") + 1);
            args = args.slice(0, args.indexOf("--"));
        }
        for(let i = 0; i < args.length; i++){
            const arg = args[i];
            if (/^--.+=/.test(arg)) {
                const m = arg.match(/^--([^=]+)=(.*)$/s);
                assert(m != null);
                const [, key, value] = m;
                if (flags.bools[key]) {
                    const booleanValue = value !== "false";
                    setArg(key, booleanValue, arg);
                } else {
                    setArg(key, value, arg);
                }
            } else if (/^--no-.+/.test(arg) && get(flags.negatable, arg.replace(/^--no-/, ""))) {
                const m = arg.match(/^--no-(.+)/);
                assert(m != null);
                setArg(m[1], false, arg, false);
            } else if (/^--.+/.test(arg)) {
                const m = arg.match(/^--(.+)/);
                assert(m != null);
                const [, key] = m;
                const next = args[i + 1];
                if (next !== undefined && !/^-/.test(next) && !get(flags.bools, key) && !flags.allBools && (get(aliases, key) ? !aliasIsBoolean(key) : true)) {
                    setArg(key, next, arg);
                    i++;
                } else if (/^(true|false)$/.test(next)) {
                    setArg(key, next === "true", arg);
                    i++;
                } else {
                    setArg(key, get(flags.strings, key) ? "" : true, arg);
                }
            } else if (/^-[^-]+/.test(arg)) {
                const letters = arg.slice(1, -1).split("");
                let broken = false;
                for(let j = 0; j < letters.length; j++){
                    const next = arg.slice(j + 2);
                    if (next === "-") {
                        setArg(letters[j], next, arg);
                        continue;
                    }
                    if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {
                        setArg(letters[j], next.split(/=(.+)/)[1], arg);
                        broken = true;
                        break;
                    }
                    if (/[A-Za-z]/.test(letters[j]) && /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
                        setArg(letters[j], next, arg);
                        broken = true;
                        break;
                    }
                    if (letters[j + 1] && letters[j + 1].match(/\W/)) {
                        setArg(letters[j], arg.slice(j + 2), arg);
                        broken = true;
                        break;
                    } else {
                        setArg(letters[j], get(flags.strings, letters[j]) ? "" : true, arg);
                    }
                }
                const [key] = arg.slice(-1);
                if (!broken && key !== "-") {
                    if (args[i + 1] && !/^(-|--)[^-]/.test(args[i + 1]) && !get(flags.bools, key) && (get(aliases, key) ? !aliasIsBoolean(key) : true)) {
                        setArg(key, args[i + 1], arg);
                        i++;
                    } else if (args[i + 1] && /^(true|false)$/.test(args[i + 1])) {
                        setArg(key, args[i + 1] === "true", arg);
                        i++;
                    } else {
                        setArg(key, get(flags.strings, key) ? "" : true, arg);
                    }
                }
            } else {
                if (!flags.unknownFn || flags.unknownFn(arg) !== false) {
                    argv._.push(flags.strings["_"] ?? !isNumber(arg) ? arg : Number(arg));
                }
                if (stopEarly) {
                    argv._.push(...args.slice(i + 1));
                    break;
                }
            }
        }
        for (const [key, value] of Object.entries(defaults)){
            if (!hasKey(argv, key.split("."))) {
                setKey(argv, key, value);
                if (aliases[key]) {
                    for (const x of aliases[key]){
                        setKey(argv, x, value);
                    }
                }
            }
        }
        for (const key of Object.keys(flags.bools)){
            if (!hasKey(argv, key.split("."))) {
                const value = get(flags.collect, key) ? [] : false;
                setKey(argv, key, value, false);
            }
        }
        for (const key of Object.keys(flags.strings)){
            if (!hasKey(argv, key.split(".")) && get(flags.collect, key)) {
                setKey(argv, key, [], false);
            }
        }
        if (doubleDash) {
            argv["--"] = [];
            for (const key of notFlags){
                argv["--"].push(key);
            }
        } else {
            for (const key of notFlags){
                argv._.push(key);
            }
        }
        return argv;
    }
    function getOptions() {
        const { Deno: Deno1 } = globalThis;
        const args = parse(Deno1?.args ?? []);
        const options = new Map(Object.entries(args).map(([key, value])=>[
                key,
                {
                    value
                }
            ]));
        return {
            options
        };
    }
    let optionsMap;
    function getOptionsFromBinding() {
        if (!optionsMap) {
            ({ options: optionsMap } = getOptions());
        }
        return optionsMap;
    }
    function getOptionValue(optionName) {
        const options = getOptionsFromBinding();
        if (optionName.startsWith("--no-")) {
            const option = options.get("--" + optionName.slice(5));
            return option && !option.value;
        }
        return options.get(optionName)?.value;
    }
    const CHAR_FORWARD_SLASH = 47;
    function assertPath(path) {
        if (typeof path !== "string") {
            throw new TypeError(`Path must be a string. Received ${JSON.stringify(path)}`);
        }
    }
    function isPosixPathSeparator(code) {
        return code === 47;
    }
    function isPathSeparator(code) {
        return isPosixPathSeparator(code) || code === 92;
    }
    function isWindowsDeviceRoot(code) {
        return code >= 97 && code <= 122 || code >= 65 && code <= 90;
    }
    function normalizeString(path, allowAboveRoot, separator, isPathSeparator) {
        let res = "";
        let lastSegmentLength = 0;
        let lastSlash = -1;
        let dots = 0;
        let code;
        for(let i = 0, len = path.length; i <= len; ++i){
            if (i < len) code = path.charCodeAt(i);
            else if (isPathSeparator(code)) break;
            else code = CHAR_FORWARD_SLASH;
            if (isPathSeparator(code)) {
                if (lastSlash === i - 1 || dots === 1) {} else if (lastSlash !== i - 1 && dots === 2) {
                    if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {
                        if (res.length > 2) {
                            const lastSlashIndex = res.lastIndexOf(separator);
                            if (lastSlashIndex === -1) {
                                res = "";
                                lastSegmentLength = 0;
                            } else {
                                res = res.slice(0, lastSlashIndex);
                                lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);
                            }
                            lastSlash = i;
                            dots = 0;
                            continue;
                        } else if (res.length === 2 || res.length === 1) {
                            res = "";
                            lastSegmentLength = 0;
                            lastSlash = i;
                            dots = 0;
                            continue;
                        }
                    }
                    if (allowAboveRoot) {
                        if (res.length > 0) res += `${separator}..`;
                        else res = "..";
                        lastSegmentLength = 2;
                    }
                } else {
                    if (res.length > 0) res += separator + path.slice(lastSlash + 1, i);
                    else res = path.slice(lastSlash + 1, i);
                    lastSegmentLength = i - lastSlash - 1;
                }
                lastSlash = i;
                dots = 0;
            } else if (code === 46 && dots !== -1) {
                ++dots;
            } else {
                dots = -1;
            }
        }
        return res;
    }
    function _format(sep, pathObject) {
        const dir = pathObject.dir || pathObject.root;
        const base = pathObject.base || (pathObject.name || "") + (pathObject.ext || "");
        if (!dir) return base;
        if (base === sep) return dir;
        if (dir === pathObject.root) return dir + base;
        return dir + sep + base;
    }
    const WHITESPACE_ENCODINGS = {
        "\u0009": "%09",
        "\u000A": "%0A",
        "\u000B": "%0B",
        "\u000C": "%0C",
        "\u000D": "%0D",
        "\u0020": "%20"
    };
    function encodeWhitespace(string) {
        return string.replaceAll(/[\s]/g, (c)=>{
            return WHITESPACE_ENCODINGS[c] ?? c;
        });
    }
    function lastPathSegment(path, isSep, start = 0) {
        let matchedNonSeparator = false;
        let end = path.length;
        for(let i = path.length - 1; i >= start; --i){
            if (isSep(path.charCodeAt(i))) {
                if (matchedNonSeparator) {
                    start = i + 1;
                    break;
                }
            } else if (!matchedNonSeparator) {
                matchedNonSeparator = true;
                end = i + 1;
            }
        }
        return path.slice(start, end);
    }
    function stripTrailingSeparators(segment, isSep) {
        if (segment.length <= 1) {
            return segment;
        }
        let end = segment.length;
        for(let i = segment.length - 1; i > 0; i--){
            if (isSep(segment.charCodeAt(i))) {
                end = i;
            } else {
                break;
            }
        }
        return segment.slice(0, end);
    }
    function stripSuffix(name, suffix) {
        if (suffix.length >= name.length) {
            return name;
        }
        const lenDiff = name.length - suffix.length;
        for(let i = suffix.length - 1; i >= 0; --i){
            if (name.charCodeAt(lenDiff + i) !== suffix.charCodeAt(i)) {
                return name;
            }
        }
        return name.slice(0, -suffix.length);
    }
    const sep = "\\";
    const delimiter = ";";
    function resolve(...pathSegments) {
        let resolvedDevice = "";
        let resolvedTail = "";
        let resolvedAbsolute = false;
        for(let i = pathSegments.length - 1; i >= -1; i--){
            let path;
            const { Deno: Deno1 } = globalThis;
            if (i >= 0) {
                path = pathSegments[i];
            } else if (!resolvedDevice) {
                if (typeof Deno1?.cwd !== "function") {
                    throw new TypeError("Resolved a drive-letter-less path without a CWD.");
                }
                path = Deno1.cwd();
            } else {
                if (typeof Deno1?.env?.get !== "function" || typeof Deno1?.cwd !== "function") {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno1.cwd();
                if (path === undefined || path.slice(0, 3).toLowerCase() !== `${resolvedDevice.toLowerCase()}\\`) {
                    path = `${resolvedDevice}\\`;
                }
            }
            assertPath(path);
            const len = path.length;
            if (len === 0) continue;
            let rootEnd = 0;
            let device = "";
            let isAbsolute = false;
            const code = path.charCodeAt(0);
            if (len > 1) {
                if (isPathSeparator(code)) {
                    isAbsolute = true;
                    if (isPathSeparator(path.charCodeAt(1))) {
                        let j = 2;
                        let last = j;
                        for(; j < len; ++j){
                            if (isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            const firstPart = path.slice(last, j);
                            last = j;
                            for(; j < len; ++j){
                                if (!isPathSeparator(path.charCodeAt(j))) break;
                            }
                            if (j < len && j !== last) {
                                last = j;
                                for(; j < len; ++j){
                                    if (isPathSeparator(path.charCodeAt(j))) break;
                                }
                                if (j === len) {
                                    device = `\\\\${firstPart}\\${path.slice(last)}`;
                                    rootEnd = j;
                                } else if (j !== last) {
                                    device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                    rootEnd = j;
                                }
                            }
                        }
                    } else {
                        rootEnd = 1;
                    }
                } else if (isWindowsDeviceRoot(code)) {
                    if (path.charCodeAt(1) === 58) {
                        device = path.slice(0, 2);
                        rootEnd = 2;
                        if (len > 2) {
                            if (isPathSeparator(path.charCodeAt(2))) {
                                isAbsolute = true;
                                rootEnd = 3;
                            }
                        }
                    }
                }
            } else if (isPathSeparator(code)) {
                rootEnd = 1;
                isAbsolute = true;
            }
            if (device.length > 0 && resolvedDevice.length > 0 && device.toLowerCase() !== resolvedDevice.toLowerCase()) {
                continue;
            }
            if (resolvedDevice.length === 0 && device.length > 0) {
                resolvedDevice = device;
            }
            if (!resolvedAbsolute) {
                resolvedTail = `${path.slice(rootEnd)}\\${resolvedTail}`;
                resolvedAbsolute = isAbsolute;
            }
            if (resolvedAbsolute && resolvedDevice.length > 0) break;
        }
        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, "\\", isPathSeparator);
        return resolvedDevice + (resolvedAbsolute ? "\\" : "") + resolvedTail || ".";
    }
    function normalize(path) {
        assertPath(path);
        const len = path.length;
        if (len === 0) return ".";
        let rootEnd = 0;
        let device;
        let isAbsolute = false;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code)) {
                isAbsolute = true;
                if (isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for(; j < len; ++j){
                        if (isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        const firstPart = path.slice(last, j);
                        last = j;
                        for(; j < len; ++j){
                            if (!isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for(; j < len; ++j){
                                if (isPathSeparator(path.charCodeAt(j))) break;
                            }
                            if (j === len) {
                                return `\\\\${firstPart}\\${path.slice(last)}\\`;
                            } else if (j !== last) {
                                device = `\\\\${firstPart}\\${path.slice(last, j)}`;
                                rootEnd = j;
                            }
                        }
                    }
                } else {
                    rootEnd = 1;
                }
            } else if (isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === 58) {
                    device = path.slice(0, 2);
                    rootEnd = 2;
                    if (len > 2) {
                        if (isPathSeparator(path.charCodeAt(2))) {
                            isAbsolute = true;
                            rootEnd = 3;
                        }
                    }
                }
            }
        } else if (isPathSeparator(code)) {
            return "\\";
        }
        let tail;
        if (rootEnd < len) {
            tail = normalizeString(path.slice(rootEnd), !isAbsolute, "\\", isPathSeparator);
        } else {
            tail = "";
        }
        if (tail.length === 0 && !isAbsolute) tail = ".";
        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {
            tail += "\\";
        }
        if (device === undefined) {
            if (isAbsolute) {
                if (tail.length > 0) return `\\${tail}`;
                else return "\\";
            } else if (tail.length > 0) {
                return tail;
            } else {
                return "";
            }
        } else if (isAbsolute) {
            if (tail.length > 0) return `${device}\\${tail}`;
            else return `${device}\\`;
        } else if (tail.length > 0) {
            return device + tail;
        } else {
            return device;
        }
    }
    function isAbsolute(path) {
        assertPath(path);
        const len = path.length;
        if (len === 0) return false;
        const code = path.charCodeAt(0);
        if (isPathSeparator(code)) {
            return true;
        } else if (isWindowsDeviceRoot(code)) {
            if (len > 2 && path.charCodeAt(1) === 58) {
                if (isPathSeparator(path.charCodeAt(2))) return true;
            }
        }
        return false;
    }
    function join1(...paths) {
        const pathsCount = paths.length;
        if (pathsCount === 0) return ".";
        let joined;
        let firstPart = null;
        for(let i = 0; i < pathsCount; ++i){
            const path = paths[i];
            assertPath(path);
            if (path.length > 0) {
                if (joined === undefined) joined = firstPart = path;
                else joined += `\\${path}`;
            }
        }
        if (joined === undefined) return ".";
        let needsReplace = true;
        let slashCount = 0;
        assert(firstPart != null);
        if (isPathSeparator(firstPart.charCodeAt(0))) {
            ++slashCount;
            const firstLen = firstPart.length;
            if (firstLen > 1) {
                if (isPathSeparator(firstPart.charCodeAt(1))) {
                    ++slashCount;
                    if (firstLen > 2) {
                        if (isPathSeparator(firstPart.charCodeAt(2))) ++slashCount;
                        else {
                            needsReplace = false;
                        }
                    }
                }
            }
        }
        if (needsReplace) {
            for(; slashCount < joined.length; ++slashCount){
                if (!isPathSeparator(joined.charCodeAt(slashCount))) break;
            }
            if (slashCount >= 2) joined = `\\${joined.slice(slashCount)}`;
        }
        return normalize(joined);
    }
    function relative(from, to) {
        assertPath(from);
        assertPath(to);
        if (from === to) return "";
        const fromOrig = resolve(from);
        const toOrig = resolve(to);
        if (fromOrig === toOrig) return "";
        from = fromOrig.toLowerCase();
        to = toOrig.toLowerCase();
        if (from === to) return "";
        let fromStart = 0;
        let fromEnd = from.length;
        for(; fromStart < fromEnd; ++fromStart){
            if (from.charCodeAt(fromStart) !== 92) break;
        }
        for(; fromEnd - 1 > fromStart; --fromEnd){
            if (from.charCodeAt(fromEnd - 1) !== 92) break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 0;
        let toEnd = to.length;
        for(; toStart < toEnd; ++toStart){
            if (to.charCodeAt(toStart) !== 92) break;
        }
        for(; toEnd - 1 > toStart; --toEnd){
            if (to.charCodeAt(toEnd - 1) !== 92) break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for(; i <= length; ++i){
            if (i === length) {
                if (toLen > length) {
                    if (to.charCodeAt(toStart + i) === 92) {
                        return toOrig.slice(toStart + i + 1);
                    } else if (i === 2) {
                        return toOrig.slice(toStart + i);
                    }
                }
                if (fromLen > length) {
                    if (from.charCodeAt(fromStart + i) === 92) {
                        lastCommonSep = i;
                    } else if (i === 2) {
                        lastCommonSep = 3;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode) break;
            else if (fromCode === 92) lastCommonSep = i;
        }
        if (i !== length && lastCommonSep === -1) {
            return toOrig;
        }
        let out = "";
        if (lastCommonSep === -1) lastCommonSep = 0;
        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
            if (i === fromEnd || from.charCodeAt(i) === 92) {
                if (out.length === 0) out += "..";
                else out += "\\..";
            }
        }
        if (out.length > 0) {
            return out + toOrig.slice(toStart + lastCommonSep, toEnd);
        } else {
            toStart += lastCommonSep;
            if (toOrig.charCodeAt(toStart) === 92) ++toStart;
            return toOrig.slice(toStart, toEnd);
        }
    }
    function toNamespacedPath(path) {
        if (typeof path !== "string") return path;
        if (path.length === 0) return "";
        const resolvedPath = resolve(path);
        if (resolvedPath.length >= 3) {
            if (resolvedPath.charCodeAt(0) === 92) {
                if (resolvedPath.charCodeAt(1) === 92) {
                    const code = resolvedPath.charCodeAt(2);
                    if (code !== 63 && code !== 46) {
                        return `\\\\?\\UNC\\${resolvedPath.slice(2)}`;
                    }
                }
            } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {
                if (resolvedPath.charCodeAt(1) === 58 && resolvedPath.charCodeAt(2) === 92) {
                    return `\\\\?\\${resolvedPath}`;
                }
            }
        }
        return path;
    }
    function dirname(path) {
        assertPath(path);
        const len = path.length;
        if (len === 0) return ".";
        let rootEnd = -1;
        let end = -1;
        let matchedSlash = true;
        let offset = 0;
        const code = path.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code)) {
                rootEnd = offset = 1;
                if (isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for(; j < len; ++j){
                        if (isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (!isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for(; j < len; ++j){
                                if (isPathSeparator(path.charCodeAt(j))) break;
                            }
                            if (j === len) {
                                return path;
                            }
                            if (j !== last) {
                                rootEnd = offset = j + 1;
                            }
                        }
                    }
                }
            } else if (isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === 58) {
                    rootEnd = offset = 2;
                    if (len > 2) {
                        if (isPathSeparator(path.charCodeAt(2))) rootEnd = offset = 3;
                    }
                }
            }
        } else if (isPathSeparator(code)) {
            return path;
        }
        for(let i = len - 1; i >= offset; --i){
            if (isPathSeparator(path.charCodeAt(i))) {
                if (!matchedSlash) {
                    end = i;
                    break;
                }
            } else {
                matchedSlash = false;
            }
        }
        if (end === -1) {
            if (rootEnd === -1) return ".";
            else end = rootEnd;
        }
        return stripTrailingSeparators(path.slice(0, end), isPosixPathSeparator);
    }
    function basename(path, suffix = "") {
        assertPath(path);
        if (path.length === 0) return path;
        if (typeof suffix !== "string") {
            throw new TypeError(`Suffix must be a string. Received ${JSON.stringify(suffix)}`);
        }
        let start = 0;
        if (path.length >= 2) {
            const drive = path.charCodeAt(0);
            if (isWindowsDeviceRoot(drive)) {
                if (path.charCodeAt(1) === 58) start = 2;
            }
        }
        const lastSegment = lastPathSegment(path, isPathSeparator, start);
        const strippedSegment = stripTrailingSeparators(lastSegment, isPathSeparator);
        return suffix ? stripSuffix(strippedSegment, suffix) : strippedSegment;
    }
    function extname(path) {
        assertPath(path);
        let start = 0;
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        if (path.length >= 2 && path.charCodeAt(1) === 58 && isWindowsDeviceRoot(path.charCodeAt(0))) {
            start = startPart = 2;
        }
        for(let i = path.length - 1; i >= start; --i){
            const code = path.charCodeAt(i);
            if (isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46) {
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
            return "";
        }
        return path.slice(startDot, end);
    }
    function format(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _format("\\", pathObject);
    }
    function parse1(path) {
        assertPath(path);
        const ret = {
            root: "",
            dir: "",
            base: "",
            ext: "",
            name: ""
        };
        const len = path.length;
        if (len === 0) return ret;
        let rootEnd = 0;
        let code = path.charCodeAt(0);
        if (len > 1) {
            if (isPathSeparator(code)) {
                rootEnd = 1;
                if (isPathSeparator(path.charCodeAt(1))) {
                    let j = 2;
                    let last = j;
                    for(; j < len; ++j){
                        if (isPathSeparator(path.charCodeAt(j))) break;
                    }
                    if (j < len && j !== last) {
                        last = j;
                        for(; j < len; ++j){
                            if (!isPathSeparator(path.charCodeAt(j))) break;
                        }
                        if (j < len && j !== last) {
                            last = j;
                            for(; j < len; ++j){
                                if (isPathSeparator(path.charCodeAt(j))) break;
                            }
                            if (j === len) {
                                rootEnd = j;
                            } else if (j !== last) {
                                rootEnd = j + 1;
                            }
                        }
                    }
                }
            } else if (isWindowsDeviceRoot(code)) {
                if (path.charCodeAt(1) === 58) {
                    rootEnd = 2;
                    if (len > 2) {
                        if (isPathSeparator(path.charCodeAt(2))) {
                            if (len === 3) {
                                ret.root = ret.dir = path;
                                ret.base = "\\";
                                return ret;
                            }
                            rootEnd = 3;
                        }
                    } else {
                        ret.root = ret.dir = path;
                        return ret;
                    }
                }
            }
        } else if (isPathSeparator(code)) {
            ret.root = ret.dir = path;
            ret.base = "\\";
            return ret;
        }
        if (rootEnd > 0) ret.root = path.slice(0, rootEnd);
        let startDot = -1;
        let startPart = rootEnd;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for(; i >= rootEnd; --i){
            code = path.charCodeAt(i);
            if (isPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46) {
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
            if (end !== -1) {
                ret.base = ret.name = path.slice(startPart, end);
            }
        } else {
            ret.name = path.slice(startPart, startDot);
            ret.base = path.slice(startPart, end);
            ret.ext = path.slice(startDot, end);
        }
        ret.base = ret.base || "\\";
        if (startPart > 0 && startPart !== rootEnd) {
            ret.dir = path.slice(0, startPart - 1);
        } else ret.dir = ret.root;
        return ret;
    }
    function fromFileUrl(url) {
        url = url instanceof URL ? url : new URL(url);
        if (url.protocol != "file:") {
            throw new TypeError("Must be a file URL.");
        }
        let path = decodeURIComponent(url.pathname.replace(/\//g, "\\").replace(/%(?![0-9A-Fa-f]{2})/g, "%25")).replace(/^\\*([A-Za-z]:)(\\|$)/, "$1\\");
        if (url.hostname != "") {
            path = `\\\\${url.hostname}${path}`;
        }
        return path;
    }
    function toFileUrl(path) {
        if (!isAbsolute(path)) {
            throw new TypeError("Must be an absolute path.");
        }
        const [, hostname, pathname] = path.match(/^(?:[/\\]{2}([^/\\]+)(?=[/\\](?:[^/\\]|$)))?(.*)/);
        const url = new URL("file:///");
        url.pathname = encodeWhitespace(pathname.replace(/%/g, "%25"));
        if (hostname != null && hostname != "localhost") {
            url.hostname = hostname;
            if (!url.hostname) {
                throw new TypeError("Invalid hostname.");
            }
        }
        return url;
    }
    const mod4 = {
        sep: sep,
        delimiter: delimiter,
        resolve: resolve,
        normalize: normalize,
        isAbsolute: isAbsolute,
        join: join1,
        relative: relative,
        toNamespacedPath: toNamespacedPath,
        dirname: dirname,
        basename: basename,
        extname: extname,
        format: format,
        parse: parse1,
        fromFileUrl: fromFileUrl,
        toFileUrl: toFileUrl
    };
    const sep1 = "/";
    const delimiter1 = ":";
    function resolve1(...pathSegments) {
        let resolvedPath = "";
        let resolvedAbsolute = false;
        for(let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--){
            let path;
            if (i >= 0) path = pathSegments[i];
            else {
                const { Deno: Deno1 } = globalThis;
                if (typeof Deno1?.cwd !== "function") {
                    throw new TypeError("Resolved a relative path without a CWD.");
                }
                path = Deno1.cwd();
            }
            assertPath(path);
            if (path.length === 0) {
                continue;
            }
            resolvedPath = `${path}/${resolvedPath}`;
            resolvedAbsolute = isPosixPathSeparator(path.charCodeAt(0));
        }
        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, "/", isPosixPathSeparator);
        if (resolvedAbsolute) {
            if (resolvedPath.length > 0) return `/${resolvedPath}`;
            else return "/";
        } else if (resolvedPath.length > 0) return resolvedPath;
        else return ".";
    }
    function normalize1(path) {
        assertPath(path);
        if (path.length === 0) return ".";
        const isAbsolute = isPosixPathSeparator(path.charCodeAt(0));
        const trailingSeparator = isPosixPathSeparator(path.charCodeAt(path.length - 1));
        path = normalizeString(path, !isAbsolute, "/", isPosixPathSeparator);
        if (path.length === 0 && !isAbsolute) path = ".";
        if (path.length > 0 && trailingSeparator) path += "/";
        if (isAbsolute) return `/${path}`;
        return path;
    }
    function isAbsolute1(path) {
        assertPath(path);
        return path.length > 0 && isPosixPathSeparator(path.charCodeAt(0));
    }
    function join2(...paths) {
        if (paths.length === 0) return ".";
        let joined;
        for(let i = 0, len = paths.length; i < len; ++i){
            const path = paths[i];
            assertPath(path);
            if (path.length > 0) {
                if (!joined) joined = path;
                else joined += `/${path}`;
            }
        }
        if (!joined) return ".";
        return normalize1(joined);
    }
    function relative1(from, to) {
        assertPath(from);
        assertPath(to);
        if (from === to) return "";
        from = resolve1(from);
        to = resolve1(to);
        if (from === to) return "";
        let fromStart = 1;
        const fromEnd = from.length;
        for(; fromStart < fromEnd; ++fromStart){
            if (!isPosixPathSeparator(from.charCodeAt(fromStart))) break;
        }
        const fromLen = fromEnd - fromStart;
        let toStart = 1;
        const toEnd = to.length;
        for(; toStart < toEnd; ++toStart){
            if (!isPosixPathSeparator(to.charCodeAt(toStart))) break;
        }
        const toLen = toEnd - toStart;
        const length = fromLen < toLen ? fromLen : toLen;
        let lastCommonSep = -1;
        let i = 0;
        for(; i <= length; ++i){
            if (i === length) {
                if (toLen > length) {
                    if (isPosixPathSeparator(to.charCodeAt(toStart + i))) {
                        return to.slice(toStart + i + 1);
                    } else if (i === 0) {
                        return to.slice(toStart + i);
                    }
                } else if (fromLen > length) {
                    if (isPosixPathSeparator(from.charCodeAt(fromStart + i))) {
                        lastCommonSep = i;
                    } else if (i === 0) {
                        lastCommonSep = 0;
                    }
                }
                break;
            }
            const fromCode = from.charCodeAt(fromStart + i);
            const toCode = to.charCodeAt(toStart + i);
            if (fromCode !== toCode) break;
            else if (isPosixPathSeparator(fromCode)) lastCommonSep = i;
        }
        let out = "";
        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i){
            if (i === fromEnd || isPosixPathSeparator(from.charCodeAt(i))) {
                if (out.length === 0) out += "..";
                else out += "/..";
            }
        }
        if (out.length > 0) return out + to.slice(toStart + lastCommonSep);
        else {
            toStart += lastCommonSep;
            if (isPosixPathSeparator(to.charCodeAt(toStart))) ++toStart;
            return to.slice(toStart);
        }
    }
    function toNamespacedPath1(path) {
        return path;
    }
    function dirname1(path) {
        if (path.length === 0) return ".";
        let end = -1;
        let matchedNonSeparator = false;
        for(let i = path.length - 1; i >= 1; --i){
            if (isPosixPathSeparator(path.charCodeAt(i))) {
                if (matchedNonSeparator) {
                    end = i;
                    break;
                }
            } else {
                matchedNonSeparator = true;
            }
        }
        if (end === -1) {
            return isPosixPathSeparator(path.charCodeAt(0)) ? "/" : ".";
        }
        return stripTrailingSeparators(path.slice(0, end), isPosixPathSeparator);
    }
    function basename1(path, suffix = "") {
        assertPath(path);
        if (path.length === 0) return path;
        if (typeof suffix !== "string") {
            throw new TypeError(`Suffix must be a string. Received ${JSON.stringify(suffix)}`);
        }
        const lastSegment = lastPathSegment(path, isPosixPathSeparator);
        const strippedSegment = stripTrailingSeparators(lastSegment, isPosixPathSeparator);
        return suffix ? stripSuffix(strippedSegment, suffix) : strippedSegment;
    }
    function extname1(path) {
        assertPath(path);
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let preDotState = 0;
        for(let i = path.length - 1; i >= 0; --i){
            const code = path.charCodeAt(i);
            if (isPosixPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46) {
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
            return "";
        }
        return path.slice(startDot, end);
    }
    function format1(pathObject) {
        if (pathObject === null || typeof pathObject !== "object") {
            throw new TypeError(`The "pathObject" argument must be of type Object. Received type ${typeof pathObject}`);
        }
        return _format("/", pathObject);
    }
    function parse2(path) {
        assertPath(path);
        const ret = {
            root: "",
            dir: "",
            base: "",
            ext: "",
            name: ""
        };
        if (path.length === 0) return ret;
        const isAbsolute = isPosixPathSeparator(path.charCodeAt(0));
        let start;
        if (isAbsolute) {
            ret.root = "/";
            start = 1;
        } else {
            start = 0;
        }
        let startDot = -1;
        let startPart = 0;
        let end = -1;
        let matchedSlash = true;
        let i = path.length - 1;
        let preDotState = 0;
        for(; i >= start; --i){
            const code = path.charCodeAt(i);
            if (isPosixPathSeparator(code)) {
                if (!matchedSlash) {
                    startPart = i + 1;
                    break;
                }
                continue;
            }
            if (end === -1) {
                matchedSlash = false;
                end = i + 1;
            }
            if (code === 46) {
                if (startDot === -1) startDot = i;
                else if (preDotState !== 1) preDotState = 1;
            } else if (startDot !== -1) {
                preDotState = -1;
            }
        }
        if (startDot === -1 || end === -1 || preDotState === 0 || preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
            if (end !== -1) {
                if (startPart === 0 && isAbsolute) {
                    ret.base = ret.name = path.slice(1, end);
                } else {
                    ret.base = ret.name = path.slice(startPart, end);
                }
            }
            ret.base = ret.base || "/";
        } else {
            if (startPart === 0 && isAbsolute) {
                ret.name = path.slice(1, startDot);
                ret.base = path.slice(1, end);
            } else {
                ret.name = path.slice(startPart, startDot);
                ret.base = path.slice(startPart, end);
            }
            ret.ext = path.slice(startDot, end);
        }
        if (startPart > 0) {
            ret.dir = stripTrailingSeparators(path.slice(0, startPart - 1), isPosixPathSeparator);
        } else if (isAbsolute) ret.dir = "/";
        return ret;
    }
    function fromFileUrl1(url) {
        url = url instanceof URL ? url : new URL(url);
        if (url.protocol != "file:") {
            throw new TypeError("Must be a file URL.");
        }
        return decodeURIComponent(url.pathname.replace(/%(?![0-9A-Fa-f]{2})/g, "%25"));
    }
    function toFileUrl1(path) {
        if (!isAbsolute1(path)) {
            throw new TypeError("Must be an absolute path.");
        }
        const url = new URL("file:///");
        url.pathname = encodeWhitespace(path.replace(/%/g, "%25").replace(/\\/g, "%5C"));
        return url;
    }
    const mod5 = {
        sep: sep1,
        delimiter: delimiter1,
        resolve: resolve1,
        normalize: normalize1,
        isAbsolute: isAbsolute1,
        join: join2,
        relative: relative1,
        toNamespacedPath: toNamespacedPath1,
        dirname: dirname1,
        basename: basename1,
        extname: extname1,
        format: format1,
        parse: parse2,
        fromFileUrl: fromFileUrl1,
        toFileUrl: toFileUrl1
    };
    const path = isWindows ? mod4 : mod5;
    const { join: join3, normalize: normalize2 } = path;
    const path1 = isWindows ? mod4 : mod5;
    const { basename: basename2, delimiter: delimiter2, dirname: dirname2, extname: extname2, format: format2, fromFileUrl: fromFileUrl2, isAbsolute: isAbsolute2, join: join4, normalize: normalize3, parse: parse3, relative: relative2, resolve: resolve2, sep: sep2, toFileUrl: toFileUrl2, toNamespacedPath: toNamespacedPath2 } = path1;
    let _exiting = false;
    const kSize = 2048;
    const kMask = 2048 - 1;
    class FixedCircularBuffer {
        bottom;
        top;
        list;
        next;
        constructor(){
            this.bottom = 0;
            this.top = 0;
            this.list = new Array(kSize);
            this.next = null;
        }
        isEmpty() {
            return this.top === this.bottom;
        }
        isFull() {
            return (this.top + 1 & kMask) === this.bottom;
        }
        push(data) {
            this.list[this.top] = data;
            this.top = this.top + 1 & kMask;
        }
        shift() {
            const nextItem = this.list[this.bottom];
            if (nextItem === undefined) {
                return null;
            }
            this.list[this.bottom] = undefined;
            this.bottom = this.bottom + 1 & kMask;
            return nextItem;
        }
    }
    class FixedQueue {
        head;
        tail;
        constructor(){
            this.head = this.tail = new FixedCircularBuffer();
        }
        isEmpty() {
            return this.head.isEmpty();
        }
        push(data) {
            if (this.head.isFull()) {
                this.head = this.head.next = new FixedCircularBuffer();
            }
            this.head.push(data);
        }
        shift() {
            const tail = this.tail;
            const next = tail.shift();
            if (tail.isEmpty() && tail.next !== null) {
                this.tail = tail.next;
            }
            return next;
        }
    }
    const queue = new FixedQueue();
    let _nextTick;
    function processTicksAndRejections() {
        let tock;
        do {
            while(tock = queue.shift()){
                try {
                    const callback = tock.callback;
                    if (tock.args === undefined) {
                        callback();
                    } else {
                        const args = tock.args;
                        switch(args.length){
                            case 1:
                                callback(args[0]);
                                break;
                            case 2:
                                callback(args[0], args[1]);
                                break;
                            case 3:
                                callback(args[0], args[1], args[2]);
                                break;
                            case 4:
                                callback(args[0], args[1], args[2], args[3]);
                                break;
                            default:
                                callback(...args);
                        }
                    }
                } finally{}
            }
            core.runMicrotasks();
        }while (!queue.isEmpty())
        core.setHasTickScheduled(false);
    }
    if (typeof core.setNextTickCallback !== "undefined") {
        function runNextTicks() {
            if (!core.hasTickScheduled()) {
                core.runMicrotasks();
            }
            if (!core.hasTickScheduled()) {
                return true;
            }
            processTicksAndRejections();
            return true;
        }
        core.setNextTickCallback(processTicksAndRejections);
        core.setMacrotaskCallback(runNextTicks);
        function __nextTickNative(callback, ...args) {
            validateFunction(callback, "callback");
            if (_exiting) {
                return;
            }
            let args_;
            switch(args.length){
                case 0:
                    break;
                case 1:
                    args_ = [
                        args[0]
                    ];
                    break;
                case 2:
                    args_ = [
                        args[0],
                        args[1]
                    ];
                    break;
                case 3:
                    args_ = [
                        args[0],
                        args[1],
                        args[2]
                    ];
                    break;
                default:
                    args_ = new Array(args.length);
                    for(let i = 0; i < args.length; i++){
                        args_[i] = args[i];
                    }
            }
            if (queue.isEmpty()) {
                core.setHasTickScheduled(true);
            }
            const tickObject = {
                callback,
                args: args_
            };
            queue.push(tickObject);
        }
        _nextTick = __nextTickNative;
    } else {
        function __nextTickQueueMicrotask(callback, ...args) {
            if (args) {
                queueMicrotask(()=>callback.call(this, ...args));
            } else {
                queueMicrotask(callback);
            }
        }
        _nextTick = __nextTickQueueMicrotask;
    }
    function nextTick1(callback, ...args) {
        _nextTick(callback, ...args);
    }
    function _arch() {
        if (Deno.build.arch == "x86_64") {
            return "x64";
        } else if (Deno.build.arch == "aarch64") {
            return "arm64";
        } else {
            throw Error("unreachable");
        }
    }
    const arch = _arch();
    const chdir = Deno.chdir;
    const cwd = Deno.cwd;
    function denoEnvGet(name) {
        try {
            return Deno.env.get(name);
        } catch (e) {
            if (e instanceof TypeError) {
                return undefined;
            }
            throw e;
        }
    }
    const OBJECT_PROTO_PROP_NAMES = Object.getOwnPropertyNames(Object.prototype);
    const env = new Proxy(Object(), {
        get: (target, prop)=>{
            if (typeof prop === "symbol") {
                return target[prop];
            }
            const envValue = denoEnvGet(prop);
            if (envValue) {
                return envValue;
            }
            if (OBJECT_PROTO_PROP_NAMES.includes(prop)) {
                return target[prop];
            }
            return envValue;
        },
        ownKeys: ()=>Reflect.ownKeys(Deno.env.toObject()),
        getOwnPropertyDescriptor: (_target, name)=>{
            const value = denoEnvGet(String(name));
            if (value) {
                return {
                    enumerable: true,
                    configurable: true,
                    value
                };
            }
        },
        set (_target, prop, value) {
            Deno.env.set(String(prop), String(value));
            return true;
        },
        has: (_target, prop)=>typeof denoEnvGet(String(prop)) === "string"
    });
    const pid = Deno.pid;
    const platform = isWindows ? "win32" : Deno.build.os;
    const version = "v18.12.1";
    const versions = {
        node: "18.12.1",
        uv: "1.43.0",
        zlib: "1.2.11",
        brotli: "1.0.9",
        ares: "1.18.1",
        modules: "108",
        nghttp2: "1.47.0",
        napi: "8",
        llhttp: "6.0.10",
        openssl: "3.0.7+quic",
        cldr: "41.0",
        icu: "71.1",
        tz: "2022b",
        unicode: "14.0",
        ngtcp2: "0.8.1",
        nghttp3: "0.7.0",
        ...Deno.version
    };
    var Encodings;
    (function(Encodings) {
        Encodings[Encodings["ASCII"] = 0] = "ASCII";
        Encodings[Encodings["UTF8"] = 1] = "UTF8";
        Encodings[Encodings["BASE64"] = 2] = "BASE64";
        Encodings[Encodings["UCS2"] = 3] = "UCS2";
        Encodings[Encodings["BINARY"] = 4] = "BINARY";
        Encodings[Encodings["HEX"] = 5] = "HEX";
        Encodings[Encodings["BUFFER"] = 6] = "BUFFER";
        Encodings[Encodings["BASE64URL"] = 7] = "BASE64URL";
        Encodings[Encodings["LATIN1"] = 4] = "LATIN1";
    })(Encodings || (Encodings = {}));
    const encodings = [];
    encodings[Encodings.ASCII] = "ascii";
    encodings[Encodings.BASE64] = "base64";
    encodings[Encodings.BASE64URL] = "base64url";
    encodings[Encodings.BUFFER] = "buffer";
    encodings[Encodings.HEX] = "hex";
    encodings[Encodings.LATIN1] = "latin1";
    encodings[Encodings.UCS2] = "utf16le";
    encodings[Encodings.UTF8] = "utf8";
    const __default1 = {
        encodings
    };
    const mod6 = {
        encodings: encodings,
        default: __default1
    };
    function indexOfNeedle(source, needle, start = 0) {
        if (start >= source.length) {
            return -1;
        }
        if (start < 0) {
            start = Math.max(0, source.length + start);
        }
        const s = needle[0];
        for(let i = start; i < source.length; i++){
            if (source[i] !== s) continue;
            const pin = i;
            let matched = 1;
            let j = i;
            while(matched < needle.length){
                j++;
                if (source[j] !== needle[j - pin]) {
                    break;
                }
                matched++;
            }
            if (matched === needle.length) {
                return pin;
            }
        }
        return -1;
    }
    function numberToBytes(n) {
        if (n === 0) return new Uint8Array([
            0
        ]);
        const bytes = [];
        bytes.unshift(n & 255);
        while(n >= 256){
            n = n >>> 8;
            bytes.unshift(n & 255);
        }
        return new Uint8Array(bytes);
    }
    function findLastIndex(targetBuffer, buffer, offset) {
        offset = offset > targetBuffer.length ? targetBuffer.length : offset;
        const searchableBuffer = targetBuffer.slice(0, offset + buffer.length);
        const searchableBufferLastIndex = searchableBuffer.length - 1;
        const bufferLastIndex = buffer.length - 1;
        let lastMatchIndex = -1;
        let matches = 0;
        let index = -1;
        for(let x = 0; x <= searchableBufferLastIndex; x++){
            if (searchableBuffer[searchableBufferLastIndex - x] === buffer[bufferLastIndex - matches]) {
                if (lastMatchIndex === -1) {
                    lastMatchIndex = x;
                }
                matches++;
            } else {
                matches = 0;
                if (lastMatchIndex !== -1) {
                    x = lastMatchIndex + 1;
                    lastMatchIndex = -1;
                }
                continue;
            }
            if (matches === buffer.length) {
                index = x;
                break;
            }
        }
        if (index === -1) return index;
        return searchableBufferLastIndex - index;
    }
    function indexOfBuffer(targetBuffer, buffer, byteOffset, encoding, forwardDirection) {
        if (!Encodings[encoding] === undefined) {
            throw new Error(`Unknown encoding code ${encoding}`);
        }
        if (!forwardDirection) {
            if (byteOffset < 0) {
                byteOffset = targetBuffer.length + byteOffset;
            }
            if (buffer.length === 0) {
                return byteOffset <= targetBuffer.length ? byteOffset : targetBuffer.length;
            }
            return findLastIndex(targetBuffer, buffer, byteOffset);
        }
        if (buffer.length === 0) {
            return byteOffset <= targetBuffer.length ? byteOffset : targetBuffer.length;
        }
        return indexOfNeedle(targetBuffer, buffer, byteOffset);
    }
    function indexOfNumber(targetBuffer, number, byteOffset, forwardDirection) {
        const bytes = numberToBytes(number);
        if (bytes.length > 1) {
            throw new Error("Multi byte number search is not supported");
        }
        return indexOfBuffer(targetBuffer, numberToBytes(number), byteOffset, Encodings.UTF8, forwardDirection);
    }
    const __default2 = {
        indexOfBuffer,
        indexOfNumber
    };
    const mod7 = {
        indexOfBuffer: indexOfBuffer,
        indexOfNumber: indexOfNumber,
        numberToBytes: numberToBytes,
        default: __default2
    };
    const base64abc = [
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "u",
        "v",
        "w",
        "x",
        "y",
        "z",
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "+",
        "/"
    ];
    function encode(data) {
        const uint8 = typeof data === "string" ? new TextEncoder().encode(data) : data instanceof Uint8Array ? data : new Uint8Array(data);
        let result = "", i;
        const l = uint8.length;
        for(i = 2; i < l; i += 3){
            result += base64abc[uint8[i - 2] >> 2];
            result += base64abc[(uint8[i - 2] & 0x03) << 4 | uint8[i - 1] >> 4];
            result += base64abc[(uint8[i - 1] & 0x0f) << 2 | uint8[i] >> 6];
            result += base64abc[uint8[i] & 0x3f];
        }
        if (i === l + 1) {
            result += base64abc[uint8[i - 2] >> 2];
            result += base64abc[(uint8[i - 2] & 0x03) << 4];
            result += "==";
        }
        if (i === l) {
            result += base64abc[uint8[i - 2] >> 2];
            result += base64abc[(uint8[i - 2] & 0x03) << 4 | uint8[i - 1] >> 4];
            result += base64abc[(uint8[i - 1] & 0x0f) << 2];
            result += "=";
        }
        return result;
    }
    function decode(b64) {
        const binString = atob(b64);
        const size = binString.length;
        const bytes = new Uint8Array(size);
        for(let i = 0; i < size; i++){
            bytes[i] = binString.charCodeAt(i);
        }
        return bytes;
    }
    function addPaddingToBase64url(base64url) {
        if (base64url.length % 4 === 2) return base64url + "==";
        if (base64url.length % 4 === 3) return base64url + "=";
        if (base64url.length % 4 === 1) {
            throw new TypeError("Illegal base64url string!");
        }
        return base64url;
    }
    function convertBase64urlToBase64(b64url) {
        if (!/^[-_A-Z0-9]*?={0,2}$/i.test(b64url)) {
            throw new TypeError("Failed to decode base64url: invalid character");
        }
        return addPaddingToBase64url(b64url).replace(/\-/g, "+").replace(/_/g, "/");
    }
    function convertBase64ToBase64url(b64) {
        return b64.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    }
    function encode1(data) {
        return convertBase64ToBase64url(encode(data));
    }
    function decode1(b64url) {
        return decode(convertBase64urlToBase64(b64url));
    }
    function asciiToBytes(str) {
        const byteArray = [];
        for(let i = 0; i < str.length; ++i){
            byteArray.push(str.charCodeAt(i) & 255);
        }
        return new Uint8Array(byteArray);
    }
    function base64ToBytes(str) {
        str = base64clean(str);
        str = str.replaceAll("-", "+").replaceAll("_", "/");
        return decode(str);
    }
    const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str) {
        str = str.split("=")[0];
        str = str.trim().replace(INVALID_BASE64_RE, "");
        if (str.length < 2) return "";
        while(str.length % 4 !== 0){
            str = str + "=";
        }
        return str;
    }
    function base64UrlToBytes(str) {
        str = base64clean(str);
        str = str.replaceAll("+", "-").replaceAll("/", "_");
        return decode1(str);
    }
    function hexToBytes(str) {
        const byteArray = new Uint8Array(Math.floor((str || "").length / 2));
        let i;
        for(i = 0; i < byteArray.length; i++){
            const a = Number.parseInt(str[i * 2], 16);
            const b = Number.parseInt(str[i * 2 + 1], 16);
            if (Number.isNaN(a) && Number.isNaN(b)) {
                break;
            }
            byteArray[i] = a << 4 | b;
        }
        return new Uint8Array(i === byteArray.length ? byteArray : byteArray.slice(0, i));
    }
    function utf16leToBytes(str, units) {
        let c, hi, lo;
        const byteArray = [];
        for(let i = 0; i < str.length; ++i){
            if ((units -= 2) < 0) {
                break;
            }
            c = str.charCodeAt(i);
            hi = c >> 8;
            lo = c % 256;
            byteArray.push(lo);
            byteArray.push(hi);
        }
        return new Uint8Array(byteArray);
    }
    function bytesToAscii(bytes) {
        let ret = "";
        for(let i = 0; i < bytes.length; ++i){
            ret += String.fromCharCode(bytes[i] & 127);
        }
        return ret;
    }
    function bytesToUtf16le(bytes) {
        let res = "";
        for(let i = 0; i < bytes.length - 1; i += 2){
            res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
        }
        return res;
    }
    Array.isArray;
    Object.assign;
    Object.create;
    Object.hasOwn;
    RegExp.prototype.exec;
    String.fromCharCode;
    const { signals } = os;
    Symbol.for("nodejs.util.inspect.custom");
    const kEnumerableProperty = Object.create(null);
    kEnumerableProperty.enumerable = true;
    const kEmptyObject = Object.freeze(Object.create(null));
    function once1(callback) {
        let called = false;
        return function(...args) {
            if (called) return;
            called = true;
            Reflect.apply(callback, this, args);
        };
    }
    function createDeferredPromise() {
        let resolve;
        let reject;
        const promise = new Promise((res, rej)=>{
            resolve = res;
            reject = rej;
        });
        return {
            promise,
            resolve,
            reject
        };
    }
    const kCustomPromisifiedSymbol = Symbol.for("nodejs.util.promisify.custom");
    const kCustomPromisifyArgsSymbol = Symbol.for("nodejs.util.promisify.customArgs");
    function promisify(original) {
        validateFunction(original, "original");
        if (original[kCustomPromisifiedSymbol]) {
            const fn = original[kCustomPromisifiedSymbol];
            validateFunction(fn, "util.promisify.custom");
            return Object.defineProperty(fn, kCustomPromisifiedSymbol, {
                value: fn,
                enumerable: false,
                writable: false,
                configurable: true
            });
        }
        const argumentNames = original[kCustomPromisifyArgsSymbol];
        function fn(...args) {
            return new Promise((resolve, reject)=>{
                args.push((err, ...values)=>{
                    if (err) {
                        return reject(err);
                    }
                    if (argumentNames !== undefined && values.length > 1) {
                        const obj = {};
                        for(let i = 0; i < argumentNames.length; i++){
                            obj[argumentNames[i]] = values[i];
                        }
                        resolve(obj);
                    } else {
                        resolve(values[0]);
                    }
                });
                Reflect.apply(original, this, args);
            });
        }
        Object.setPrototypeOf(fn, Object.getPrototypeOf(original));
        Object.defineProperty(fn, kCustomPromisifiedSymbol, {
            value: fn,
            enumerable: false,
            writable: false,
            configurable: true
        });
        return Object.defineProperties(fn, Object.getOwnPropertyDescriptors(original));
    }
    promisify.custom = kCustomPromisifiedSymbol;
    const utf8Encoder = new TextEncoder();
    const float32Array = new Float32Array(1);
    const uInt8Float32Array = new Uint8Array(float32Array.buffer);
    const float64Array = new Float64Array(1);
    const uInt8Float64Array = new Uint8Array(float64Array.buffer);
    float32Array[0] = -1;
    const bigEndian = uInt8Float32Array[3] === 0;
    const kMaxLength = 2147483647;
    const MAX_UINT32 = 2 ** 32;
    const customInspectSymbol1 = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    const INSPECT_MAX_BYTES = 50;
    const constants = {
        MAX_LENGTH: 2147483647,
        MAX_STRING_LENGTH: 536870888
    };
    Object.defineProperty(Buffer.prototype, "parent", {
        enumerable: true,
        get: function() {
            if (!Buffer.isBuffer(this)) {
                return void 0;
            }
            return this.buffer;
        }
    });
    Object.defineProperty(Buffer.prototype, "offset", {
        enumerable: true,
        get: function() {
            if (!Buffer.isBuffer(this)) {
                return void 0;
            }
            return this.byteOffset;
        }
    });
    function createBuffer(length) {
        if (length > 2147483647) {
            throw new RangeError('The value "' + length + '" is invalid for option "size"');
        }
        const buf = new Uint8Array(length);
        Object.setPrototypeOf(buf, Buffer.prototype);
        return buf;
    }
    function Buffer(arg, encodingOrOffset, length) {
        if (typeof arg === "number") {
            if (typeof encodingOrOffset === "string") {
                throw new codes.ERR_INVALID_ARG_TYPE("string", "string", arg);
            }
            return _allocUnsafe(arg);
        }
        return _from(arg, encodingOrOffset, length);
    }
    Buffer.poolSize = 8192;
    function _from(value, encodingOrOffset, length) {
        if (typeof value === "string") {
            return fromString(value, encodingOrOffset);
        }
        if (typeof value === "object" && value !== null) {
            if (isAnyArrayBuffer1(value)) {
                return fromArrayBuffer(value, encodingOrOffset, length);
            }
            const valueOf = value.valueOf && value.valueOf();
            if (valueOf != null && valueOf !== value && (typeof valueOf === "string" || typeof valueOf === "object")) {
                return _from(valueOf, encodingOrOffset, length);
            }
            const b = fromObject(value);
            if (b) {
                return b;
            }
            if (typeof value[Symbol.toPrimitive] === "function") {
                const primitive = value[Symbol.toPrimitive]("string");
                if (typeof primitive === "string") {
                    return fromString(primitive, encodingOrOffset);
                }
            }
        }
        throw new codes.ERR_INVALID_ARG_TYPE("first argument", [
            "string",
            "Buffer",
            "ArrayBuffer",
            "Array",
            "Array-like Object"
        ], value);
    }
    Buffer.from = function from(value, encodingOrOffset, length) {
        return _from(value, encodingOrOffset, length);
    };
    Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer, Uint8Array);
    function assertSize(size) {
        validateNumber(size, "size");
        if (!(size >= 0 && size <= 2147483647)) {
            throw new codes.ERR_INVALID_ARG_VALUE.RangeError("size", size);
        }
    }
    function _alloc(size, fill, encoding) {
        assertSize(size);
        const buffer = createBuffer(size);
        if (fill !== undefined) {
            if (encoding !== undefined && typeof encoding !== "string") {
                throw new codes.ERR_INVALID_ARG_TYPE("encoding", "string", encoding);
            }
            return buffer.fill(fill, encoding);
        }
        return buffer;
    }
    Buffer.alloc = function alloc(size, fill, encoding) {
        return _alloc(size, fill, encoding);
    };
    function _allocUnsafe(size) {
        assertSize(size);
        return createBuffer(size < 0 ? 0 : checked(size) | 0);
    }
    Buffer.allocUnsafe = function allocUnsafe(size) {
        return _allocUnsafe(size);
    };
    Buffer.allocUnsafeSlow = function allocUnsafeSlow(size) {
        return _allocUnsafe(size);
    };
    function fromString(string, encoding) {
        if (typeof encoding !== "string" || encoding === "") {
            encoding = "utf8";
        }
        if (!Buffer.isEncoding(encoding)) {
            throw new codes.ERR_UNKNOWN_ENCODING(encoding);
        }
        const length = byteLength(string, encoding) | 0;
        let buf = createBuffer(length);
        const actual = buf.write(string, encoding);
        if (actual !== length) {
            buf = buf.slice(0, actual);
        }
        return buf;
    }
    function fromArrayLike(array) {
        const length = array.length < 0 ? 0 : checked(array.length) | 0;
        const buf = createBuffer(length);
        for(let i = 0; i < length; i += 1){
            buf[i] = array[i] & 255;
        }
        return buf;
    }
    function fromObject(obj) {
        if (obj.length !== undefined || isAnyArrayBuffer1(obj.buffer)) {
            if (typeof obj.length !== "number") {
                return createBuffer(0);
            }
            return fromArrayLike(obj);
        }
        if (obj.type === "Buffer" && Array.isArray(obj.data)) {
            return fromArrayLike(obj.data);
        }
    }
    function checked(length) {
        if (length >= 2147483647) {
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + 2147483647..toString(16) + " bytes");
        }
        return length | 0;
    }
    function SlowBuffer(length) {
        assertSize(length);
        return Buffer.alloc(+length);
    }
    Object.setPrototypeOf(SlowBuffer.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(SlowBuffer, Uint8Array);
    Buffer.isBuffer = function isBuffer(b) {
        return b != null && b._isBuffer === true && b !== Buffer.prototype;
    };
    Buffer.compare = function compare(a, b) {
        if (isInstance(a, Uint8Array)) {
            a = Buffer.from(a, a.offset, a.byteLength);
        }
        if (isInstance(b, Uint8Array)) {
            b = Buffer.from(b, b.offset, b.byteLength);
        }
        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        }
        if (a === b) {
            return 0;
        }
        let x = a.length;
        let y = b.length;
        for(let i = 0, len = Math.min(x, y); i < len; ++i){
            if (a[i] !== b[i]) {
                x = a[i];
                y = b[i];
                break;
            }
        }
        if (x < y) {
            return -1;
        }
        if (y < x) {
            return 1;
        }
        return 0;
    };
    Buffer.isEncoding = function isEncoding(encoding) {
        return typeof encoding === "string" && encoding.length !== 0 && normalizeEncoding1(encoding) !== undefined;
    };
    Buffer.concat = function concat(list, length) {
        if (!Array.isArray(list)) {
            throw new codes.ERR_INVALID_ARG_TYPE("list", "Array", list);
        }
        if (list.length === 0) {
            return Buffer.alloc(0);
        }
        if (length === undefined) {
            length = 0;
            for(let i = 0; i < list.length; i++){
                if (list[i].length) {
                    length += list[i].length;
                }
            }
        } else {
            validateOffset(length, "length");
        }
        const buffer = Buffer.allocUnsafe(length);
        let pos = 0;
        for(let i = 0; i < list.length; i++){
            const buf = list[i];
            if (!isUint8Array(buf)) {
                throw new codes.ERR_INVALID_ARG_TYPE(`list[${i}]`, [
                    "Buffer",
                    "Uint8Array"
                ], list[i]);
            }
            pos += _copyActual(buf, buffer, pos, 0, buf.length);
        }
        if (pos < length) {
            buffer.fill(0, pos, length);
        }
        return buffer;
    };
    function byteLength(string, encoding) {
        if (typeof string !== "string") {
            if (isArrayBufferView(string) || isAnyArrayBuffer1(string)) {
                return string.byteLength;
            }
            throw new codes.ERR_INVALID_ARG_TYPE("string", [
                "string",
                "Buffer",
                "ArrayBuffer"
            ], string);
        }
        const len = string.length;
        const mustMatch = arguments.length > 2 && arguments[2] === true;
        if (!mustMatch && len === 0) {
            return 0;
        }
        if (!encoding) {
            return mustMatch ? -1 : byteLengthUtf8(string);
        }
        const ops = getEncodingOps(encoding);
        if (ops === undefined) {
            return mustMatch ? -1 : byteLengthUtf8(string);
        }
        return ops.byteLength(string);
    }
    Buffer.byteLength = byteLength;
    Buffer.prototype._isBuffer = true;
    function swap(b, n, m) {
        const i = b[n];
        b[n] = b[m];
        b[m] = i;
    }
    Buffer.prototype.swap16 = function swap16() {
        const len = this.length;
        if (len % 2 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 16-bits");
        }
        for(let i = 0; i < len; i += 2){
            swap(this, i, i + 1);
        }
        return this;
    };
    Buffer.prototype.swap32 = function swap32() {
        const len = this.length;
        if (len % 4 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 32-bits");
        }
        for(let i = 0; i < len; i += 4){
            swap(this, i, i + 3);
            swap(this, i + 1, i + 2);
        }
        return this;
    };
    Buffer.prototype.swap64 = function swap64() {
        const len = this.length;
        if (len % 8 !== 0) {
            throw new RangeError("Buffer size must be a multiple of 64-bits");
        }
        for(let i = 0; i < len; i += 8){
            swap(this, i, i + 7);
            swap(this, i + 1, i + 6);
            swap(this, i + 2, i + 5);
            swap(this, i + 3, i + 4);
        }
        return this;
    };
    Buffer.prototype.toString = function toString(encoding, start, end) {
        if (arguments.length === 0) {
            return this.utf8Slice(0, this.length);
        }
        const len = this.length;
        if (start <= 0) {
            start = 0;
        } else if (start >= len) {
            return "";
        } else {
            start |= 0;
        }
        if (end === undefined || end > len) {
            end = len;
        } else {
            end |= 0;
        }
        if (end <= start) {
            return "";
        }
        if (encoding === undefined) {
            return this.utf8Slice(start, end);
        }
        const ops = getEncodingOps(encoding);
        if (ops === undefined) {
            throw new codes.ERR_UNKNOWN_ENCODING(encoding);
        }
        return ops.slice(this, start, end);
    };
    Buffer.prototype.toLocaleString = Buffer.prototype.toString;
    Buffer.prototype.equals = function equals(b) {
        if (!isUint8Array(b)) {
            throw new codes.ERR_INVALID_ARG_TYPE("otherBuffer", [
                "Buffer",
                "Uint8Array"
            ], b);
        }
        if (this === b) {
            return true;
        }
        return Buffer.compare(this, b) === 0;
    };
    Buffer.prototype.inspect = function inspect() {
        let str = "";
        const max = INSPECT_MAX_BYTES;
        str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > max) {
            str += " ... ";
        }
        return "<Buffer " + str + ">";
    };
    if (customInspectSymbol1) {
        Buffer.prototype[customInspectSymbol1] = Buffer.prototype.inspect;
    }
    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (isInstance(target, Uint8Array)) {
            target = Buffer.from(target, target.offset, target.byteLength);
        }
        if (!Buffer.isBuffer(target)) {
            throw new codes.ERR_INVALID_ARG_TYPE("target", [
                "Buffer",
                "Uint8Array"
            ], target);
        }
        if (start === undefined) {
            start = 0;
        } else {
            validateOffset(start, "targetStart", 0, kMaxLength);
        }
        if (end === undefined) {
            end = target.length;
        } else {
            validateOffset(end, "targetEnd", 0, target.length);
        }
        if (thisStart === undefined) {
            thisStart = 0;
        } else {
            validateOffset(start, "sourceStart", 0, kMaxLength);
        }
        if (thisEnd === undefined) {
            thisEnd = this.length;
        } else {
            validateOffset(end, "sourceEnd", 0, this.length);
        }
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
            throw new codes.ERR_OUT_OF_RANGE("out of range index", "range");
        }
        if (thisStart >= thisEnd && start >= end) {
            return 0;
        }
        if (thisStart >= thisEnd) {
            return -1;
        }
        if (start >= end) {
            return 1;
        }
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) {
            return 0;
        }
        let x = thisEnd - thisStart;
        let y = end - start;
        const len = Math.min(x, y);
        const thisCopy = this.slice(thisStart, thisEnd);
        const targetCopy = target.slice(start, end);
        for(let i = 0; i < len; ++i){
            if (thisCopy[i] !== targetCopy[i]) {
                x = thisCopy[i];
                y = targetCopy[i];
                break;
            }
        }
        if (x < y) {
            return -1;
        }
        if (y < x) {
            return 1;
        }
        return 0;
    };
    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        validateBuffer(buffer);
        if (typeof byteOffset === "string") {
            encoding = byteOffset;
            byteOffset = undefined;
        } else if (byteOffset > 0x7fffffff) {
            byteOffset = 0x7fffffff;
        } else if (byteOffset < -0x80000000) {
            byteOffset = -0x80000000;
        }
        byteOffset = +byteOffset;
        if (Number.isNaN(byteOffset)) {
            byteOffset = dir ? 0 : buffer.length || buffer.byteLength;
        }
        dir = !!dir;
        if (typeof val === "number") {
            return indexOfNumber(buffer, val >>> 0, byteOffset, dir);
        }
        let ops;
        if (encoding === undefined) {
            ops = encodingOps.utf8;
        } else {
            ops = getEncodingOps(encoding);
        }
        if (typeof val === "string") {
            if (ops === undefined) {
                throw new codes.ERR_UNKNOWN_ENCODING(encoding);
            }
            return ops.indexOf(buffer, val, byteOffset, dir);
        }
        if (isUint8Array(val)) {
            const encodingVal = ops === undefined ? encodingsMap.utf8 : ops.encodingVal;
            return indexOfBuffer(buffer, val, byteOffset, encodingVal, dir);
        }
        throw new codes.ERR_INVALID_ARG_TYPE("value", [
            "number",
            "string",
            "Buffer",
            "Uint8Array"
        ], val);
    }
    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
        return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    Buffer.prototype.asciiSlice = function asciiSlice(offset, length) {
        if (offset === 0 && length === this.length) {
            return bytesToAscii(this);
        } else {
            return bytesToAscii(this.slice(offset, length));
        }
    };
    Buffer.prototype.asciiWrite = function asciiWrite(string, offset, length) {
        return blitBuffer(asciiToBytes(string), this, offset, length);
    };
    Buffer.prototype.base64Slice = function base64Slice(offset, length) {
        if (offset === 0 && length === this.length) {
            return encode(this);
        } else {
            return encode(this.slice(offset, length));
        }
    };
    Buffer.prototype.base64Write = function base64Write(string, offset, length) {
        return blitBuffer(base64ToBytes(string), this, offset, length);
    };
    Buffer.prototype.base64urlSlice = function base64urlSlice(offset, length) {
        if (offset === 0 && length === this.length) {
            return encode1(this);
        } else {
            return encode1(this.slice(offset, length));
        }
    };
    Buffer.prototype.base64urlWrite = function base64urlWrite(string, offset, length) {
        return blitBuffer(base64UrlToBytes(string), this, offset, length);
    };
    Buffer.prototype.hexWrite = function hexWrite(string, offset, length) {
        return blitBuffer(hexToBytes(string, this.length - offset), this, offset, length);
    };
    Buffer.prototype.hexSlice = function hexSlice(string, offset, length) {
        return _hexSlice(this, string, offset, length);
    };
    Buffer.prototype.latin1Slice = function latin1Slice(string, offset, length) {
        return _latin1Slice(this, string, offset, length);
    };
    Buffer.prototype.latin1Write = function latin1Write(string, offset, length) {
        return blitBuffer(asciiToBytes(string), this, offset, length);
    };
    Buffer.prototype.ucs2Slice = function ucs2Slice(offset, length) {
        if (offset === 0 && length === this.length) {
            return bytesToUtf16le(this);
        } else {
            return bytesToUtf16le(this.slice(offset, length));
        }
    };
    Buffer.prototype.ucs2Write = function ucs2Write(string, offset, length) {
        return blitBuffer(utf16leToBytes(string, this.length - offset), this, offset, length);
    };
    Buffer.prototype.utf8Slice = function utf8Slice(string, offset, length) {
        return _utf8Slice(this, string, offset, length);
    };
    Buffer.prototype.utf8Write = function utf8Write(string, offset, length) {
        return blitBuffer(utf8ToBytes(string, this.length - offset), this, offset, length);
    };
    Buffer.prototype.write = function write(string, offset, length, encoding) {
        if (offset === undefined) {
            return this.utf8Write(string, 0, this.length);
        }
        if (length === undefined && typeof offset === "string") {
            encoding = offset;
            length = this.length;
            offset = 0;
        } else {
            validateOffset(offset, "offset", 0, this.length);
            const remaining = this.length - offset;
            if (length === undefined) {
                length = remaining;
            } else if (typeof length === "string") {
                encoding = length;
                length = remaining;
            } else {
                validateOffset(length, "length", 0, this.length);
                if (length > remaining) {
                    length = remaining;
                }
            }
        }
        if (!encoding) {
            return this.utf8Write(string, offset, length);
        }
        const ops = getEncodingOps(encoding);
        if (ops === undefined) {
            throw new codes.ERR_UNKNOWN_ENCODING(encoding);
        }
        return ops.write(this, string, offset, length);
    };
    Buffer.prototype.toJSON = function toJSON() {
        return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0)
        };
    };
    function fromArrayBuffer(obj, byteOffset, length) {
        if (byteOffset === undefined) {
            byteOffset = 0;
        } else {
            byteOffset = +byteOffset;
            if (Number.isNaN(byteOffset)) {
                byteOffset = 0;
            }
        }
        const maxLength = obj.byteLength - byteOffset;
        if (maxLength < 0) {
            throw new codes.ERR_BUFFER_OUT_OF_BOUNDS("offset");
        }
        if (length === undefined) {
            length = maxLength;
        } else {
            length = +length;
            if (length > 0) {
                if (length > maxLength) {
                    throw new codes.ERR_BUFFER_OUT_OF_BOUNDS("length");
                }
            } else {
                length = 0;
            }
        }
        const buffer = new Uint8Array(obj, byteOffset, length);
        Object.setPrototypeOf(buffer, Buffer.prototype);
        return buffer;
    }
    const decoder = new TextDecoder();
    function _utf8Slice(buf, start, end) {
        return decoder.decode(buf.slice(start, end));
    }
    function _latin1Slice(buf, start, end) {
        let ret = "";
        end = Math.min(buf.length, end);
        for(let i = start; i < end; ++i){
            ret += String.fromCharCode(buf[i]);
        }
        return ret;
    }
    function _hexSlice(buf, start, end) {
        const len = buf.length;
        if (!start || start < 0) {
            start = 0;
        }
        if (!end || end < 0 || end > len) {
            end = len;
        }
        let out = "";
        for(let i = start; i < end; ++i){
            out += hexSliceLookupTable[buf[i]];
        }
        return out;
    }
    Buffer.prototype.slice = function slice(start, end) {
        const len = this.length;
        start = ~~start;
        end = end === void 0 ? len : ~~end;
        if (start < 0) {
            start += len;
            if (start < 0) {
                start = 0;
            }
        } else if (start > len) {
            start = len;
        }
        if (end < 0) {
            end += len;
            if (end < 0) {
                end = 0;
            }
        } else if (end > len) {
            end = len;
        }
        if (end < start) {
            end = start;
        }
        const newBuf = this.subarray(start, end);
        Object.setPrototypeOf(newBuf, Buffer.prototype);
        return newBuf;
    };
    Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength) {
        if (offset === undefined) {
            throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
        }
        if (byteLength === 6) {
            return readUInt48LE(this, offset);
        }
        if (byteLength === 5) {
            return readUInt40LE(this, offset);
        }
        if (byteLength === 3) {
            return readUInt24LE(this, offset);
        }
        if (byteLength === 4) {
            return this.readUInt32LE(offset);
        }
        if (byteLength === 2) {
            return this.readUInt16LE(offset);
        }
        if (byteLength === 1) {
            return this.readUInt8(offset);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength) {
        if (offset === undefined) {
            throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
        }
        if (byteLength === 6) {
            return readUInt48BE(this, offset);
        }
        if (byteLength === 5) {
            return readUInt40BE(this, offset);
        }
        if (byteLength === 3) {
            return readUInt24BE(this, offset);
        }
        if (byteLength === 4) {
            return this.readUInt32BE(offset);
        }
        if (byteLength === 2) {
            return this.readUInt16BE(offset);
        }
        if (byteLength === 1) {
            return this.readUInt8(offset);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset = 0) {
        validateNumber(offset, "offset");
        const val = this[offset];
        if (val === undefined) {
            boundsError(offset, this.length - 1);
        }
        return val;
    };
    Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = readUInt16BE;
    Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 1];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 2);
        }
        return first + last * 2 ** 8;
    };
    Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 4);
        }
        return first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
    };
    Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = readUInt32BE;
    Buffer.prototype.readBigUint64LE = Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
            boundsError(offset, this.length - 8);
        }
        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
        return BigInt(lo) + (BigInt(hi) << BigInt(32));
    });
    Buffer.prototype.readBigUint64BE = Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
            boundsError(offset, this.length - 8);
        }
        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
        return (BigInt(hi) << BigInt(32)) + BigInt(lo);
    });
    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength) {
        if (offset === undefined) {
            throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
        }
        if (byteLength === 6) {
            return readInt48LE(this, offset);
        }
        if (byteLength === 5) {
            return readInt40LE(this, offset);
        }
        if (byteLength === 3) {
            return readInt24LE(this, offset);
        }
        if (byteLength === 4) {
            return this.readInt32LE(offset);
        }
        if (byteLength === 2) {
            return this.readInt16LE(offset);
        }
        if (byteLength === 1) {
            return this.readInt8(offset);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength) {
        if (offset === undefined) {
            throw new codes.ERR_INVALID_ARG_TYPE("offset", "number", offset);
        }
        if (byteLength === 6) {
            return readInt48BE(this, offset);
        }
        if (byteLength === 5) {
            return readInt40BE(this, offset);
        }
        if (byteLength === 3) {
            return readInt24BE(this, offset);
        }
        if (byteLength === 4) {
            return this.readInt32BE(offset);
        }
        if (byteLength === 2) {
            return this.readInt16BE(offset);
        }
        if (byteLength === 1) {
            return this.readInt8(offset);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.readInt8 = function readInt8(offset = 0) {
        validateNumber(offset, "offset");
        const val = this[offset];
        if (val === undefined) {
            boundsError(offset, this.length - 1);
        }
        return val | (val & 2 ** 7) * 0x1fffffe;
    };
    Buffer.prototype.readInt16LE = function readInt16LE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 1];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 2);
        }
        const val = first + last * 2 ** 8;
        return val | (val & 2 ** 15) * 0x1fffe;
    };
    Buffer.prototype.readInt16BE = function readInt16BE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 1];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 2);
        }
        const val = first * 2 ** 8 + last;
        return val | (val & 2 ** 15) * 0x1fffe;
    };
    Buffer.prototype.readInt32LE = function readInt32LE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 4);
        }
        return first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + (last << 24);
    };
    Buffer.prototype.readInt32BE = function readInt32BE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 4);
        }
        return (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
    };
    Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
            boundsError(offset, this.length - 8);
        }
        const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
        return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
    });
    Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
        offset = offset >>> 0;
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 7];
        if (first === void 0 || last === void 0) {
            boundsError(offset, this.length - 8);
        }
        const val = (first << 24) + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
        return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
    });
    Buffer.prototype.readFloatLE = function readFloatLE(offset) {
        return bigEndian ? readFloatBackwards(this, offset) : readFloatForwards(this, offset);
    };
    Buffer.prototype.readFloatBE = function readFloatBE(offset) {
        return bigEndian ? readFloatForwards(this, offset) : readFloatBackwards(this, offset);
    };
    Buffer.prototype.readDoubleLE = function readDoubleLE(offset) {
        return bigEndian ? readDoubleBackwards(this, offset) : readDoubleForwards(this, offset);
    };
    Buffer.prototype.readDoubleBE = function readDoubleBE(offset) {
        return bigEndian ? readDoubleForwards(this, offset) : readDoubleBackwards(this, offset);
    };
    Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength) {
        if (byteLength === 6) {
            return writeU_Int48LE(this, value, offset, 0, 0xffffffffffff);
        }
        if (byteLength === 5) {
            return writeU_Int40LE(this, value, offset, 0, 0xffffffffff);
        }
        if (byteLength === 3) {
            return writeU_Int24LE(this, value, offset, 0, 0xffffff);
        }
        if (byteLength === 4) {
            return writeU_Int32LE(this, value, offset, 0, 0xffffffff);
        }
        if (byteLength === 2) {
            return writeU_Int16LE(this, value, offset, 0, 0xffff);
        }
        if (byteLength === 1) {
            return writeU_Int8(this, value, offset, 0, 0xff);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength) {
        if (byteLength === 6) {
            return writeU_Int48BE(this, value, offset, 0, 0xffffffffffff);
        }
        if (byteLength === 5) {
            return writeU_Int40BE(this, value, offset, 0, 0xffffffffff);
        }
        if (byteLength === 3) {
            return writeU_Int24BE(this, value, offset, 0, 0xffffff);
        }
        if (byteLength === 4) {
            return writeU_Int32BE(this, value, offset, 0, 0xffffffff);
        }
        if (byteLength === 2) {
            return writeU_Int16BE(this, value, offset, 0, 0xffff);
        }
        if (byteLength === 1) {
            return writeU_Int8(this, value, offset, 0, 0xff);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset = 0) {
        return writeU_Int8(this, value, offset, 0, 0xff);
    };
    Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset = 0) {
        return writeU_Int16LE(this, value, offset, 0, 0xffff);
    };
    Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset = 0) {
        return writeU_Int16BE(this, value, offset, 0, 0xffff);
    };
    Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset = 0) {
        return _writeUInt32LE(this, value, offset, 0, 0xffffffff);
    };
    Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset = 0) {
        return _writeUInt32BE(this, value, offset, 0, 0xffffffff);
    };
    function wrtBigUInt64LE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        lo = lo >> 8;
        buf[offset++] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        hi = hi >> 8;
        buf[offset++] = hi;
        return offset;
    }
    function wrtBigUInt64BE(buf, value, offset, min, max) {
        checkIntBI(value, min, max, buf, offset, 7);
        let lo = Number(value & BigInt(4294967295));
        buf[offset + 7] = lo;
        lo = lo >> 8;
        buf[offset + 6] = lo;
        lo = lo >> 8;
        buf[offset + 5] = lo;
        lo = lo >> 8;
        buf[offset + 4] = lo;
        let hi = Number(value >> BigInt(32) & BigInt(4294967295));
        buf[offset + 3] = hi;
        hi = hi >> 8;
        buf[offset + 2] = hi;
        hi = hi >> 8;
        buf[offset + 1] = hi;
        hi = hi >> 8;
        buf[offset] = hi;
        return offset + 8;
    }
    Buffer.prototype.writeBigUint64LE = Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer.prototype.writeBigUint64BE = Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength) {
        if (byteLength === 6) {
            return writeU_Int48LE(this, value, offset, -0x800000000000, 0x7fffffffffff);
        }
        if (byteLength === 5) {
            return writeU_Int40LE(this, value, offset, -0x8000000000, 0x7fffffffff);
        }
        if (byteLength === 3) {
            return writeU_Int24LE(this, value, offset, -0x800000, 0x7fffff);
        }
        if (byteLength === 4) {
            return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
        }
        if (byteLength === 2) {
            return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
        }
        if (byteLength === 1) {
            return writeU_Int8(this, value, offset, -0x80, 0x7f);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength) {
        if (byteLength === 6) {
            return writeU_Int48BE(this, value, offset, -0x800000000000, 0x7fffffffffff);
        }
        if (byteLength === 5) {
            return writeU_Int40BE(this, value, offset, -0x8000000000, 0x7fffffffff);
        }
        if (byteLength === 3) {
            return writeU_Int24BE(this, value, offset, -0x800000, 0x7fffff);
        }
        if (byteLength === 4) {
            return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
        }
        if (byteLength === 2) {
            return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
        }
        if (byteLength === 1) {
            return writeU_Int8(this, value, offset, -0x80, 0x7f);
        }
        boundsError(byteLength, 6, "byteLength");
    };
    Buffer.prototype.writeInt8 = function writeInt8(value, offset = 0) {
        return writeU_Int8(this, value, offset, -0x80, 0x7f);
    };
    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset = 0) {
        return writeU_Int16LE(this, value, offset, -0x8000, 0x7fff);
    };
    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset = 0) {
        return writeU_Int16BE(this, value, offset, -0x8000, 0x7fff);
    };
    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset = 0) {
        return writeU_Int32LE(this, value, offset, -0x80000000, 0x7fffffff);
    };
    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset = 0) {
        return writeU_Int32BE(this, value, offset, -0x80000000, 0x7fffffff);
    };
    Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
        return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
        return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset) {
        return bigEndian ? writeFloatBackwards(this, value, offset) : writeFloatForwards(this, value, offset);
    };
    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset) {
        return bigEndian ? writeFloatForwards(this, value, offset) : writeFloatBackwards(this, value, offset);
    };
    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset) {
        return bigEndian ? writeDoubleBackwards(this, value, offset) : writeDoubleForwards(this, value, offset);
    };
    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset) {
        return bigEndian ? writeDoubleForwards(this, value, offset) : writeDoubleBackwards(this, value, offset);
    };
    Buffer.prototype.copy = function copy(target, targetStart, sourceStart, sourceEnd) {
        if (!isUint8Array(this)) {
            throw new codes.ERR_INVALID_ARG_TYPE("source", [
                "Buffer",
                "Uint8Array"
            ], this);
        }
        if (!isUint8Array(target)) {
            throw new codes.ERR_INVALID_ARG_TYPE("target", [
                "Buffer",
                "Uint8Array"
            ], target);
        }
        if (targetStart === undefined) {
            targetStart = 0;
        } else {
            targetStart = toInteger(targetStart, 0);
            if (targetStart < 0) {
                throw new codes.ERR_OUT_OF_RANGE("targetStart", ">= 0", targetStart);
            }
        }
        if (sourceStart === undefined) {
            sourceStart = 0;
        } else {
            sourceStart = toInteger(sourceStart, 0);
            if (sourceStart < 0) {
                throw new codes.ERR_OUT_OF_RANGE("sourceStart", ">= 0", sourceStart);
            }
            if (sourceStart >= MAX_UINT32) {
                throw new codes.ERR_OUT_OF_RANGE("sourceStart", `< ${MAX_UINT32}`, sourceStart);
            }
        }
        if (sourceEnd === undefined) {
            sourceEnd = this.length;
        } else {
            sourceEnd = toInteger(sourceEnd, 0);
            if (sourceEnd < 0) {
                throw new codes.ERR_OUT_OF_RANGE("sourceEnd", ">= 0", sourceEnd);
            }
            if (sourceEnd >= MAX_UINT32) {
                throw new codes.ERR_OUT_OF_RANGE("sourceEnd", `< ${MAX_UINT32}`, sourceEnd);
            }
        }
        if (targetStart >= target.length) {
            return 0;
        }
        if (sourceEnd > 0 && sourceEnd < sourceStart) {
            sourceEnd = sourceStart;
        }
        if (sourceEnd === sourceStart) {
            return 0;
        }
        if (target.length === 0 || this.length === 0) {
            return 0;
        }
        if (sourceEnd > this.length) {
            sourceEnd = this.length;
        }
        if (target.length - targetStart < sourceEnd - sourceStart) {
            sourceEnd = target.length - targetStart + sourceStart;
        }
        const len = sourceEnd - sourceStart;
        if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
            this.copyWithin(targetStart, sourceStart, sourceEnd);
        } else {
            Uint8Array.prototype.set.call(target, this.subarray(sourceStart, sourceEnd), targetStart);
        }
        return len;
    };
    Buffer.prototype.fill = function fill(val, start, end, encoding) {
        if (typeof val === "string") {
            if (typeof start === "string") {
                encoding = start;
                start = 0;
                end = this.length;
            } else if (typeof end === "string") {
                encoding = end;
                end = this.length;
            }
            if (encoding !== void 0 && typeof encoding !== "string") {
                throw new TypeError("encoding must be a string");
            }
            if (typeof encoding === "string" && !Buffer.isEncoding(encoding)) {
                throw new TypeError("Unknown encoding: " + encoding);
            }
            if (val.length === 1) {
                const code = val.charCodeAt(0);
                if (encoding === "utf8" && code < 128 || encoding === "latin1") {
                    val = code;
                }
            }
        } else if (typeof val === "number") {
            val = val & 255;
        } else if (typeof val === "boolean") {
            val = Number(val);
        }
        if (start < 0 || this.length < start || this.length < end) {
            throw new RangeError("Out of range index");
        }
        if (end <= start) {
            return this;
        }
        start = start >>> 0;
        end = end === void 0 ? this.length : end >>> 0;
        if (!val) {
            val = 0;
        }
        let i;
        if (typeof val === "number") {
            for(i = start; i < end; ++i){
                this[i] = val;
            }
        } else {
            const bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
            const len = bytes.length;
            if (len === 0) {
                throw new codes.ERR_INVALID_ARG_VALUE("value", val);
            }
            for(i = 0; i < end - start; ++i){
                this[i + start] = bytes[i % len];
            }
        }
        return this;
    };
    function checkBounds(buf, offset, byteLength2) {
        validateNumber(offset, "offset");
        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
            boundsError(offset, buf.length - (byteLength2 + 1));
        }
    }
    function checkIntBI(value, min, max, buf, offset, byteLength2) {
        if (value > max || value < min) {
            const n = typeof min === "bigint" ? "n" : "";
            let range;
            if (byteLength2 > 3) {
                if (min === 0 || min === BigInt(0)) {
                    range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;
                } else {
                    range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;
                }
            } else {
                range = `>= ${min}${n} and <= ${max}${n}`;
            }
            throw new codes.ERR_OUT_OF_RANGE("value", range, value);
        }
        checkBounds(buf, offset, byteLength2);
    }
    function utf8ToBytes(string, units) {
        units = units || Infinity;
        let codePoint;
        const length = string.length;
        let leadSurrogate = null;
        const bytes = [];
        for(let i = 0; i < length; ++i){
            codePoint = string.charCodeAt(i);
            if (codePoint > 55295 && codePoint < 57344) {
                if (!leadSurrogate) {
                    if (codePoint > 56319) {
                        if ((units -= 3) > -1) {
                            bytes.push(239, 191, 189);
                        }
                        continue;
                    } else if (i + 1 === length) {
                        if ((units -= 3) > -1) {
                            bytes.push(239, 191, 189);
                        }
                        continue;
                    }
                    leadSurrogate = codePoint;
                    continue;
                }
                if (codePoint < 56320) {
                    if ((units -= 3) > -1) {
                        bytes.push(239, 191, 189);
                    }
                    leadSurrogate = codePoint;
                    continue;
                }
                codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
            } else if (leadSurrogate) {
                if ((units -= 3) > -1) {
                    bytes.push(239, 191, 189);
                }
            }
            leadSurrogate = null;
            if (codePoint < 128) {
                if ((units -= 1) < 0) {
                    break;
                }
                bytes.push(codePoint);
            } else if (codePoint < 2048) {
                if ((units -= 2) < 0) {
                    break;
                }
                bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
            } else if (codePoint < 65536) {
                if ((units -= 3) < 0) {
                    break;
                }
                bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
            } else if (codePoint < 1114112) {
                if ((units -= 4) < 0) {
                    break;
                }
                bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
            } else {
                throw new Error("Invalid code point");
            }
        }
        return bytes;
    }
    function blitBuffer(src, dst, offset, byteLength) {
        let i;
        const length = byteLength === undefined ? src.length : byteLength;
        for(i = 0; i < length; ++i){
            if (i + offset >= dst.length || i >= src.length) {
                break;
            }
            dst[i + offset] = src[i];
        }
        return i;
    }
    function isInstance(obj, type) {
        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }
    const hexSliceLookupTable = function() {
        const alphabet = "0123456789abcdef";
        const table = new Array(256);
        for(let i = 0; i < 16; ++i){
            const i16 = i * 16;
            for(let j = 0; j < 16; ++j){
                table[i16 + j] = alphabet[i] + alphabet[j];
            }
        }
        return table;
    }();
    function defineBigIntMethod(fn) {
        return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
    }
    function BufferBigIntNotDefined() {
        throw new Error("BigInt not supported");
    }
    const atob1 = globalThis.atob;
    const Blob1 = globalThis.Blob;
    const btoa = globalThis.btoa;
    function readUInt48LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 5];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 6);
        }
        return first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24 + (buf[++offset] + last * 2 ** 8) * 2 ** 32;
    }
    function readUInt40LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 4];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 5);
        }
        return first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24 + last * 2 ** 32;
    }
    function readUInt24LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 2];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 3);
        }
        return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
    }
    function readUInt48BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 5];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 6);
        }
        return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    }
    function readUInt40BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 4];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 5);
        }
        return first * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    }
    function readUInt24BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 2];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 3);
        }
        return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    }
    function readUInt16BE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 1];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 2);
        }
        return first * 2 ** 8 + last;
    }
    function readUInt32BE(offset = 0) {
        validateNumber(offset, "offset");
        const first = this[offset];
        const last = this[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, this.length - 4);
        }
        return first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
    }
    function readDoubleBackwards(buffer, offset = 0) {
        validateNumber(offset, "offset");
        const first = buffer[offset];
        const last = buffer[offset + 7];
        if (first === undefined || last === undefined) {
            boundsError(offset, buffer.length - 8);
        }
        uInt8Float64Array[7] = first;
        uInt8Float64Array[6] = buffer[++offset];
        uInt8Float64Array[5] = buffer[++offset];
        uInt8Float64Array[4] = buffer[++offset];
        uInt8Float64Array[3] = buffer[++offset];
        uInt8Float64Array[2] = buffer[++offset];
        uInt8Float64Array[1] = buffer[++offset];
        uInt8Float64Array[0] = last;
        return float64Array[0];
    }
    function readDoubleForwards(buffer, offset = 0) {
        validateNumber(offset, "offset");
        const first = buffer[offset];
        const last = buffer[offset + 7];
        if (first === undefined || last === undefined) {
            boundsError(offset, buffer.length - 8);
        }
        uInt8Float64Array[0] = first;
        uInt8Float64Array[1] = buffer[++offset];
        uInt8Float64Array[2] = buffer[++offset];
        uInt8Float64Array[3] = buffer[++offset];
        uInt8Float64Array[4] = buffer[++offset];
        uInt8Float64Array[5] = buffer[++offset];
        uInt8Float64Array[6] = buffer[++offset];
        uInt8Float64Array[7] = last;
        return float64Array[0];
    }
    function writeDoubleForwards(buffer, val, offset = 0) {
        val = +val;
        checkBounds(buffer, offset, 7);
        float64Array[0] = val;
        buffer[offset++] = uInt8Float64Array[0];
        buffer[offset++] = uInt8Float64Array[1];
        buffer[offset++] = uInt8Float64Array[2];
        buffer[offset++] = uInt8Float64Array[3];
        buffer[offset++] = uInt8Float64Array[4];
        buffer[offset++] = uInt8Float64Array[5];
        buffer[offset++] = uInt8Float64Array[6];
        buffer[offset++] = uInt8Float64Array[7];
        return offset;
    }
    function writeDoubleBackwards(buffer, val, offset = 0) {
        val = +val;
        checkBounds(buffer, offset, 7);
        float64Array[0] = val;
        buffer[offset++] = uInt8Float64Array[7];
        buffer[offset++] = uInt8Float64Array[6];
        buffer[offset++] = uInt8Float64Array[5];
        buffer[offset++] = uInt8Float64Array[4];
        buffer[offset++] = uInt8Float64Array[3];
        buffer[offset++] = uInt8Float64Array[2];
        buffer[offset++] = uInt8Float64Array[1];
        buffer[offset++] = uInt8Float64Array[0];
        return offset;
    }
    function readFloatBackwards(buffer, offset = 0) {
        validateNumber(offset, "offset");
        const first = buffer[offset];
        const last = buffer[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, buffer.length - 4);
        }
        uInt8Float32Array[3] = first;
        uInt8Float32Array[2] = buffer[++offset];
        uInt8Float32Array[1] = buffer[++offset];
        uInt8Float32Array[0] = last;
        return float32Array[0];
    }
    function readFloatForwards(buffer, offset = 0) {
        validateNumber(offset, "offset");
        const first = buffer[offset];
        const last = buffer[offset + 3];
        if (first === undefined || last === undefined) {
            boundsError(offset, buffer.length - 4);
        }
        uInt8Float32Array[0] = first;
        uInt8Float32Array[1] = buffer[++offset];
        uInt8Float32Array[2] = buffer[++offset];
        uInt8Float32Array[3] = last;
        return float32Array[0];
    }
    function writeFloatForwards(buffer, val, offset = 0) {
        val = +val;
        checkBounds(buffer, offset, 3);
        float32Array[0] = val;
        buffer[offset++] = uInt8Float32Array[0];
        buffer[offset++] = uInt8Float32Array[1];
        buffer[offset++] = uInt8Float32Array[2];
        buffer[offset++] = uInt8Float32Array[3];
        return offset;
    }
    function writeFloatBackwards(buffer, val, offset = 0) {
        val = +val;
        checkBounds(buffer, offset, 3);
        float32Array[0] = val;
        buffer[offset++] = uInt8Float32Array[3];
        buffer[offset++] = uInt8Float32Array[2];
        buffer[offset++] = uInt8Float32Array[1];
        buffer[offset++] = uInt8Float32Array[0];
        return offset;
    }
    function readInt24LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 2];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 3);
        }
        const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;
        return val | (val & 2 ** 23) * 0x1fe;
    }
    function readInt40LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 4];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 5);
        }
        return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 + first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24;
    }
    function readInt48LE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 5];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 6);
        }
        const val = buf[offset + 4] + last * 2 ** 8;
        return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 + first + buf[++offset] * 2 ** 8 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 24;
    }
    function readInt24BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 2];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 3);
        }
        const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
        return val | (val & 2 ** 23) * 0x1fe;
    }
    function readInt48BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 5];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 6);
        }
        const val = buf[++offset] + first * 2 ** 8;
        return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    }
    function readInt40BE(buf, offset = 0) {
        validateNumber(offset, "offset");
        const first = buf[offset];
        const last = buf[offset + 4];
        if (first === undefined || last === undefined) {
            boundsError(offset, buf.length - 5);
        }
        return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 + buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last;
    }
    function byteLengthUtf8(str) {
        return utf8Encoder.encode(str).length;
    }
    function base64ByteLength(str, bytes) {
        if (str.charCodeAt(bytes - 1) === 0x3D) {
            bytes--;
        }
        if (bytes > 1 && str.charCodeAt(bytes - 1) === 0x3D) {
            bytes--;
        }
        return bytes * 3 >>> 2;
    }
    const encodingsMap = Object.create(null);
    for(let i = 0; i < encodings.length; ++i){
        encodingsMap[encodings[i]] = i;
    }
    const encodingOps = {
        ascii: {
            byteLength: (string)=>string.length,
            encoding: "ascii",
            encodingVal: encodingsMap.ascii,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, asciiToBytes(val), byteOffset, encodingsMap.ascii, dir),
            slice: (buf, start, end)=>buf.asciiSlice(start, end),
            write: (buf, string, offset, len)=>buf.asciiWrite(string, offset, len)
        },
        base64: {
            byteLength: (string)=>base64ByteLength(string, string.length),
            encoding: "base64",
            encodingVal: encodingsMap.base64,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, base64ToBytes(val), byteOffset, encodingsMap.base64, dir),
            slice: (buf, start, end)=>buf.base64Slice(start, end),
            write: (buf, string, offset, len)=>buf.base64Write(string, offset, len)
        },
        base64url: {
            byteLength: (string)=>base64ByteLength(string, string.length),
            encoding: "base64url",
            encodingVal: encodingsMap.base64url,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, base64UrlToBytes(val), byteOffset, encodingsMap.base64url, dir),
            slice: (buf, start, end)=>buf.base64urlSlice(start, end),
            write: (buf, string, offset, len)=>buf.base64urlWrite(string, offset, len)
        },
        hex: {
            byteLength: (string)=>string.length >>> 1,
            encoding: "hex",
            encodingVal: encodingsMap.hex,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, hexToBytes(val), byteOffset, encodingsMap.hex, dir),
            slice: (buf, start, end)=>buf.hexSlice(start, end),
            write: (buf, string, offset, len)=>buf.hexWrite(string, offset, len)
        },
        latin1: {
            byteLength: (string)=>string.length,
            encoding: "latin1",
            encodingVal: encodingsMap.latin1,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, asciiToBytes(val), byteOffset, encodingsMap.latin1, dir),
            slice: (buf, start, end)=>buf.latin1Slice(start, end),
            write: (buf, string, offset, len)=>buf.latin1Write(string, offset, len)
        },
        ucs2: {
            byteLength: (string)=>string.length * 2,
            encoding: "ucs2",
            encodingVal: encodingsMap.utf16le,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf16leToBytes(val), byteOffset, encodingsMap.utf16le, dir),
            slice: (buf, start, end)=>buf.ucs2Slice(start, end),
            write: (buf, string, offset, len)=>buf.ucs2Write(string, offset, len)
        },
        utf8: {
            byteLength: byteLengthUtf8,
            encoding: "utf8",
            encodingVal: encodingsMap.utf8,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf8Encoder.encode(val), byteOffset, encodingsMap.utf8, dir),
            slice: (buf, start, end)=>buf.utf8Slice(start, end),
            write: (buf, string, offset, len)=>buf.utf8Write(string, offset, len)
        },
        utf16le: {
            byteLength: (string)=>string.length * 2,
            encoding: "utf16le",
            encodingVal: encodingsMap.utf16le,
            indexOf: (buf, val, byteOffset, dir)=>indexOfBuffer(buf, utf16leToBytes(val), byteOffset, encodingsMap.utf16le, dir),
            slice: (buf, start, end)=>buf.ucs2Slice(start, end),
            write: (buf, string, offset, len)=>buf.ucs2Write(string, offset, len)
        }
    };
    function getEncodingOps(encoding) {
        encoding = String(encoding).toLowerCase();
        switch(encoding.length){
            case 4:
                if (encoding === "utf8") return encodingOps.utf8;
                if (encoding === "ucs2") return encodingOps.ucs2;
                break;
            case 5:
                if (encoding === "utf-8") return encodingOps.utf8;
                if (encoding === "ascii") return encodingOps.ascii;
                if (encoding === "ucs-2") return encodingOps.ucs2;
                break;
            case 7:
                if (encoding === "utf16le") {
                    return encodingOps.utf16le;
                }
                break;
            case 8:
                if (encoding === "utf-16le") {
                    return encodingOps.utf16le;
                }
                break;
            case 6:
                if (encoding === "latin1" || encoding === "binary") {
                    return encodingOps.latin1;
                }
                if (encoding === "base64") return encodingOps.base64;
            case 3:
                if (encoding === "hex") {
                    return encodingOps.hex;
                }
                break;
            case 9:
                if (encoding === "base64url") {
                    return encodingOps.base64url;
                }
                break;
        }
    }
    function _copyActual(source, target, targetStart, sourceStart, sourceEnd) {
        if (sourceEnd - sourceStart > target.length - targetStart) {
            sourceEnd = sourceStart + target.length - targetStart;
        }
        let nb = sourceEnd - sourceStart;
        const sourceLen = source.length - sourceStart;
        if (nb > sourceLen) {
            nb = sourceLen;
        }
        if (sourceStart !== 0 || sourceEnd < source.length) {
            source = new Uint8Array(source.buffer, source.byteOffset + sourceStart, nb);
        }
        target.set(source, targetStart);
        return nb;
    }
    function boundsError(value, length, type) {
        if (Math.floor(value) !== value) {
            validateNumber(value, type);
            throw new codes.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
        }
        if (length < 0) {
            throw new codes.ERR_BUFFER_OUT_OF_BOUNDS();
        }
        throw new codes.ERR_OUT_OF_RANGE(type || "offset", `>= ${type ? 1 : 0} and <= ${length}`, value);
    }
    function validateNumber(value, name) {
        if (typeof value !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
    }
    function checkInt(value, min, max, buf, offset, byteLength) {
        if (value > max || value < min) {
            const n = typeof min === "bigint" ? "n" : "";
            let range;
            if (byteLength > 3) {
                if (min === 0 || min === 0n) {
                    range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;
                } else {
                    range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` + `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;
                }
            } else {
                range = `>= ${min}${n} and <= ${max}${n}`;
            }
            throw new codes.ERR_OUT_OF_RANGE("value", range, value);
        }
        checkBounds(buf, offset, byteLength);
    }
    function toInteger(n, defaultVal) {
        n = +n;
        if (!Number.isNaN(n) && n >= Number.MIN_SAFE_INTEGER && n <= Number.MAX_SAFE_INTEGER) {
            return n % 1 === 0 ? n : Math.floor(n);
        }
        return defaultVal;
    }
    function writeU_Int8(buf, value, offset, min, max) {
        value = +value;
        validateNumber(offset, "offset");
        if (value > max || value < min) {
            throw new codes.ERR_OUT_OF_RANGE("value", `>= ${min} and <= ${max}`, value);
        }
        if (buf[offset] === undefined) {
            boundsError(offset, buf.length - 1);
        }
        buf[offset] = value;
        return offset + 1;
    }
    function writeU_Int16BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 1);
        buf[offset++] = value >>> 8;
        buf[offset++] = value;
        return offset;
    }
    function _writeUInt32LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 3);
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        return offset;
    }
    function writeU_Int16LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 1);
        buf[offset++] = value;
        buf[offset++] = value >>> 8;
        return offset;
    }
    function _writeUInt32BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 3);
        buf[offset + 3] = value;
        value = value >>> 8;
        buf[offset + 2] = value;
        value = value >>> 8;
        buf[offset + 1] = value;
        value = value >>> 8;
        buf[offset] = value;
        return offset + 4;
    }
    function writeU_Int48BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 5);
        const newVal = Math.floor(value * 2 ** -32);
        buf[offset++] = newVal >>> 8;
        buf[offset++] = newVal;
        buf[offset + 3] = value;
        value = value >>> 8;
        buf[offset + 2] = value;
        value = value >>> 8;
        buf[offset + 1] = value;
        value = value >>> 8;
        buf[offset] = value;
        return offset + 4;
    }
    function writeU_Int40BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 4);
        buf[offset++] = Math.floor(value * 2 ** -32);
        buf[offset + 3] = value;
        value = value >>> 8;
        buf[offset + 2] = value;
        value = value >>> 8;
        buf[offset + 1] = value;
        value = value >>> 8;
        buf[offset] = value;
        return offset + 4;
    }
    function writeU_Int32BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 3);
        buf[offset + 3] = value;
        value = value >>> 8;
        buf[offset + 2] = value;
        value = value >>> 8;
        buf[offset + 1] = value;
        value = value >>> 8;
        buf[offset] = value;
        return offset + 4;
    }
    function writeU_Int24BE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 2);
        buf[offset + 2] = value;
        value = value >>> 8;
        buf[offset + 1] = value;
        value = value >>> 8;
        buf[offset] = value;
        return offset + 3;
    }
    function validateOffset(value, name, min = 0, max = Number.MAX_SAFE_INTEGER) {
        if (typeof value !== "number") {
            throw new codes.ERR_INVALID_ARG_TYPE(name, "number", value);
        }
        if (!Number.isInteger(value)) {
            throw new codes.ERR_OUT_OF_RANGE(name, "an integer", value);
        }
        if (value < min || value > max) {
            throw new codes.ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value);
        }
    }
    function writeU_Int48LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 5);
        const newVal = Math.floor(value * 2 ** -32);
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        buf[offset++] = newVal;
        buf[offset++] = newVal >>> 8;
        return offset;
    }
    function writeU_Int40LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 4);
        const newVal = value;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        buf[offset++] = Math.floor(newVal * 2 ** -32);
        return offset;
    }
    function writeU_Int32LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 3);
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        return offset;
    }
    function writeU_Int24LE(buf, value, offset, min, max) {
        value = +value;
        checkInt(value, min, max, buf, offset, 2);
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        value = value >>> 8;
        buf[offset++] = value;
        return offset;
    }
    const __default3 = {
        atob: atob1,
        btoa,
        Blob: Blob1,
        Buffer,
        constants,
        kMaxLength: 2147483647,
        kStringMaxLength: 536870888,
        SlowBuffer
    };
    const mod8 = function() {
        return {
            atob: atob1,
            Blob: Blob1,
            btoa: btoa,
            Buffer: Buffer,
            constants: constants,
            default: __default3,
            kMaxLength: 2147483647,
            kStringMaxLength: 536870888,
            SlowBuffer: SlowBuffer
        };
    }();
    "use strict";
    const kEscape = "\x1b";
    Symbol("kSubstringSearch");
    function CSI(strings, ...args) {
        let ret = `${kEscape}[`;
        for(let n = 0; n < strings.length; n++){
            ret += strings[n];
            if (n < args.length) {
                ret += args[n];
            }
        }
        return ret;
    }
    CSI.kEscape = kEscape;
    CSI.kClearToLineBeginning = CSI`1K`;
    CSI.kClearToLineEnd = CSI`0K`;
    CSI.kClearLine = CSI`2K`;
    CSI.kClearScreenDown = CSI`0J`;
    "use strict";
    const { kClearLine, kClearScreenDown, kClearToLineBeginning, kClearToLineEnd } = CSI;
    function cursorTo(stream, x, y, callback) {
        if (callback !== undefined) {
            validateFunction(callback, "callback");
        }
        if (typeof y === "function") {
            callback = y;
            y = undefined;
        }
        if (Number.isNaN(x)) throw new ERR_INVALID_ARG_VALUE("x", x);
        if (Number.isNaN(y)) throw new ERR_INVALID_ARG_VALUE("y", y);
        if (stream == null || typeof x !== "number" && typeof y !== "number") {
            if (typeof callback === "function") process.nextTick(callback, null);
            return true;
        }
        if (typeof x !== "number") throw new ERR_INVALID_CURSOR_POS();
        const data = typeof y !== "number" ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;
        return stream.write(data, callback);
    }
    function moveCursor(stream, dx, dy, callback) {
        if (callback !== undefined) {
            validateFunction(callback, "callback");
        }
        if (stream == null || !(dx || dy)) {
            if (typeof callback === "function") process.nextTick(callback, null);
            return true;
        }
        let data = "";
        if (dx < 0) {
            data += CSI`${-dx}D`;
        } else if (dx > 0) {
            data += CSI`${dx}C`;
        }
        if (dy < 0) {
            data += CSI`${-dy}A`;
        } else if (dy > 0) {
            data += CSI`${dy}B`;
        }
        return stream.write(data, callback);
    }
    function clearLine(stream, dir, callback) {
        if (callback !== undefined) {
            validateFunction(callback, "callback");
        }
        if (stream === null || stream === undefined) {
            if (typeof callback === "function") process.nextTick(callback, null);
            return true;
        }
        const type = dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;
        return stream.write(type, callback);
    }
    function clearScreenDown(stream, callback) {
        if (callback !== undefined) {
            validateFunction(callback, "callback");
        }
        if (stream === null || stream === undefined) {
            if (typeof callback === "function") process.nextTick(callback, null);
            return true;
        }
        return stream.write(kClearScreenDown, callback);
    }
    const stdio = {};
    var NotImplemented;
    (function(NotImplemented) {
        NotImplemented[NotImplemented["ascii"] = 0] = "ascii";
        NotImplemented[NotImplemented["latin1"] = 1] = "latin1";
        NotImplemented[NotImplemented["utf16le"] = 2] = "utf16le";
    })(NotImplemented || (NotImplemented = {}));
    function normalizeEncoding2(enc) {
        const encoding = normalizeEncoding(enc ?? null);
        if (encoding && encoding in NotImplemented) notImplemented(encoding);
        if (!encoding && typeof enc === "string" && enc.toLowerCase() !== "raw") {
            throw new Error(`Unknown encoding: ${enc}`);
        }
        return String(encoding);
    }
    function isBufferType(buf) {
        return buf instanceof ArrayBuffer && buf.BYTES_PER_ELEMENT;
    }
    function utf8CheckByte(__byte) {
        if (__byte <= 0x7f) return 0;
        else if (__byte >> 5 === 0x06) return 2;
        else if (__byte >> 4 === 0x0e) return 3;
        else if (__byte >> 3 === 0x1e) return 4;
        return __byte >> 6 === 0x02 ? -1 : -2;
    }
    function utf8CheckIncomplete(self1, buf, i) {
        let j = buf.length - 1;
        if (j < i) return 0;
        let nb = utf8CheckByte(buf[j]);
        if (nb >= 0) {
            if (nb > 0) self1.lastNeed = nb - 1;
            return nb;
        }
        if (--j < i || nb === -2) return 0;
        nb = utf8CheckByte(buf[j]);
        if (nb >= 0) {
            if (nb > 0) self1.lastNeed = nb - 2;
            return nb;
        }
        if (--j < i || nb === -2) return 0;
        nb = utf8CheckByte(buf[j]);
        if (nb >= 0) {
            if (nb > 0) {
                if (nb === 2) nb = 0;
                else self1.lastNeed = nb - 3;
            }
            return nb;
        }
        return 0;
    }
    function utf8CheckExtraBytes(self1, buf) {
        if ((buf[0] & 0xc0) !== 0x80) {
            self1.lastNeed = 0;
            return "\ufffd";
        }
        if (self1.lastNeed > 1 && buf.length > 1) {
            if ((buf[1] & 0xc0) !== 0x80) {
                self1.lastNeed = 1;
                return "\ufffd";
            }
            if (self1.lastNeed > 2 && buf.length > 2) {
                if ((buf[2] & 0xc0) !== 0x80) {
                    self1.lastNeed = 2;
                    return "\ufffd";
                }
            }
        }
    }
    function utf8FillLastComplete(buf) {
        const p = this.lastTotal - this.lastNeed;
        const r = utf8CheckExtraBytes(this, buf);
        if (r !== undefined) return r;
        if (this.lastNeed <= buf.length) {
            buf.copy(this.lastChar, p, 0, this.lastNeed);
            return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, p, 0, buf.length);
        this.lastNeed -= buf.length;
    }
    function utf8FillLastIncomplete(buf) {
        if (this.lastNeed <= buf.length) {
            buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
            return this.lastChar.toString(this.encoding, 0, this.lastTotal);
        }
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
        this.lastNeed -= buf.length;
    }
    function utf8Text(buf, i) {
        const total = utf8CheckIncomplete(this, buf, i);
        if (!this.lastNeed) return buf.toString("utf8", i);
        this.lastTotal = total;
        const end = buf.length - (total - this.lastNeed);
        buf.copy(this.lastChar, 0, end);
        return buf.toString("utf8", i, end);
    }
    function utf8End(buf) {
        const r = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) return r + "\ufffd";
        return r;
    }
    function utf8Write(buf) {
        if (typeof buf === "string") {
            return buf;
        }
        if (buf.length === 0) return "";
        let r;
        let i;
        const normalizedBuffer = isBufferType(buf) ? buf : Buffer.from(buf);
        if (this.lastNeed) {
            r = this.fillLast(normalizedBuffer);
            if (r === undefined) return "";
            i = this.lastNeed;
            this.lastNeed = 0;
        } else {
            i = 0;
        }
        if (i < buf.length) {
            return r ? r + this.text(normalizedBuffer, i) : this.text(normalizedBuffer, i);
        }
        return r || "";
    }
    function base64Text(buf, i) {
        const n = (buf.length - i) % 3;
        if (n === 0) return buf.toString("base64", i);
        this.lastNeed = 3 - n;
        this.lastTotal = 3;
        if (n === 1) {
            this.lastChar[0] = buf[buf.length - 1];
        } else {
            this.lastChar[0] = buf[buf.length - 2];
            this.lastChar[1] = buf[buf.length - 1];
        }
        return buf.toString("base64", i, buf.length - n);
    }
    function base64End(buf) {
        const r = buf && buf.length ? this.write(buf) : "";
        if (this.lastNeed) {
            return r + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
        }
        return r;
    }
    function simpleWrite(buf) {
        if (typeof buf === "string") {
            return buf;
        }
        return buf.toString(this.encoding);
    }
    function simpleEnd(buf) {
        return buf && buf.length ? this.write(buf) : "";
    }
    class StringDecoderBase {
        encoding;
        lastChar;
        lastNeed;
        lastTotal;
        constructor(encoding, nb){
            this.encoding = encoding;
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer.allocUnsafe(nb);
        }
    }
    class Base64Decoder extends StringDecoderBase {
        end = base64End;
        fillLast = utf8FillLastIncomplete;
        text = base64Text;
        write = utf8Write;
        constructor(encoding){
            super(normalizeEncoding2(encoding), 3);
        }
    }
    class GenericDecoder extends StringDecoderBase {
        end = simpleEnd;
        fillLast = undefined;
        text = utf8Text;
        write = simpleWrite;
        constructor(encoding){
            super(normalizeEncoding2(encoding), 4);
        }
    }
    class Utf8Decoder extends StringDecoderBase {
        end = utf8End;
        fillLast = utf8FillLastComplete;
        text = utf8Text;
        write = utf8Write;
        constructor(encoding){
            super(normalizeEncoding2(encoding), 4);
        }
    }
    class StringDecoder {
        encoding;
        end;
        fillLast;
        lastChar;
        lastNeed;
        lastTotal;
        text;
        write;
        constructor(encoding){
            const normalizedEncoding = normalizeEncoding2(encoding);
            let decoder;
            switch(normalizedEncoding){
                case "utf8":
                    decoder = new Utf8Decoder(encoding);
                    break;
                case "base64":
                    decoder = new Base64Decoder(encoding);
                    break;
                default:
                    decoder = new GenericDecoder(encoding);
            }
            this.encoding = decoder.encoding;
            this.end = decoder.end;
            this.fillLast = decoder.fillLast;
            this.lastChar = decoder.lastChar;
            this.lastNeed = decoder.lastNeed;
            this.lastTotal = decoder.lastTotal;
            this.text = decoder.text;
            this.write = decoder.write;
        }
    }
    const PStringDecoder = new Proxy(StringDecoder, {
        apply (_target, thisArg, args) {
            return Object.assign(thisArg, new StringDecoder(...args));
        }
    });
    const __default4 = {
        StringDecoder: PStringDecoder
    };
    const kDestroy = Symbol("kDestroy");
    Symbol("kConstruct");
    function checkError(err, w, r) {
        if (err) {
            err.stack;
            if (w && !w.errored) {
                w.errored = err;
            }
            if (r && !r.errored) {
                r.errored = err;
            }
        }
    }
    function destroy(err, cb) {
        const r = this._readableState;
        const w = this._writableState;
        const s = w || r;
        if (w && w.destroyed || r && r.destroyed) {
            if (typeof cb === "function") {
                cb();
            }
            return this;
        }
        checkError(err, w, r);
        if (w) {
            w.destroyed = true;
        }
        if (r) {
            r.destroyed = true;
        }
        if (!s.constructed) {
            this.once(kDestroy, function(er) {
                _destroy(this, aggregateTwoErrors(er, err), cb);
            });
        } else {
            _destroy(this, err, cb);
        }
        return this;
    }
    function _destroy(self1, err, cb) {
        let called = false;
        function onDestroy(err) {
            if (called) {
                return;
            }
            called = true;
            const r = self1._readableState;
            const w = self1._writableState;
            checkError(err, w, r);
            if (w) {
                w.closed = true;
            }
            if (r) {
                r.closed = true;
            }
            if (typeof cb === "function") {
                cb(err);
            }
            if (err) {
                nextTick1(emitErrorCloseNT, self1, err);
            } else {
                nextTick1(emitCloseNT, self1);
            }
        }
        try {
            const result = self1._destroy(err || null, onDestroy);
            if (result != null) {
                const then = result.then;
                if (typeof then === "function") {
                    then.call(result, function() {
                        nextTick1(onDestroy, null);
                    }, function(err) {
                        nextTick1(onDestroy, err);
                    });
                }
            }
        } catch (err) {
            onDestroy(err);
        }
    }
    function emitErrorCloseNT(self1, err) {
        emitErrorNT(self1, err);
        emitCloseNT(self1);
    }
    function emitCloseNT(self1) {
        const r = self1._readableState;
        const w = self1._writableState;
        if (w) {
            w.closeEmitted = true;
        }
        if (r) {
            r.closeEmitted = true;
        }
        if (w && w.emitClose || r && r.emitClose) {
            self1.emit("close");
        }
    }
    function emitErrorNT(self1, err) {
        const r = self1._readableState;
        const w = self1._writableState;
        if (w && w.errorEmitted || r && r.errorEmitted) {
            return;
        }
        if (w) {
            w.errorEmitted = true;
        }
        if (r) {
            r.errorEmitted = true;
        }
        self1.emit("error", err);
    }
    function isRequest(stream) {
        return stream.setHeader && typeof stream.abort === "function";
    }
    function isServerResponse(stream) {
        return typeof stream._sent100 === "boolean" && typeof stream._removedConnection === "boolean" && typeof stream._removedContLen === "boolean" && typeof stream._removedTE === "boolean" && typeof stream._closed === "boolean";
    }
    function isReadable(stream) {
        return typeof stream.readable === "boolean" || typeof stream.readableEnded === "boolean" || !!stream._readableState;
    }
    function isWritable(stream) {
        return typeof stream.writable === "boolean" || typeof stream.writableEnded === "boolean" || !!stream._writableState;
    }
    function isWritableFinished(stream) {
        if (stream.writableFinished) return true;
        const wState = stream._writableState;
        if (!wState || wState.errored) return false;
        return wState.finished || wState.ended && wState.length === 0;
    }
    const nop = ()=>{};
    function isReadableEnded(stream) {
        if (stream.readableEnded) return true;
        const rState = stream._readableState;
        if (!rState || rState.errored) return false;
        return rState.endEmitted || rState.ended && rState.length === 0;
    }
    function eos(stream, options, callback) {
        if (arguments.length === 2) {
            callback = options;
            options = {};
        } else if (options == null) {
            options = {};
        } else {
            validateObject(options, "options");
        }
        validateFunction(callback, "callback");
        validateAbortSignal(options.signal, "options.signal");
        callback = once1(callback);
        const readable = options.readable || options.readable !== false && isReadable(stream);
        const writable = options.writable || options.writable !== false && isWritable(stream);
        const wState = stream._writableState;
        const rState = stream._readableState;
        const state = wState || rState;
        const onlegacyfinish = ()=>{
            if (!stream.writable) onfinish();
        };
        let willEmitClose = isServerResponse(stream) || state && state.autoDestroy && state.emitClose && state.closed === false && isReadable(stream) === readable && isWritable(stream) === writable;
        let writableFinished = stream.writableFinished || wState && wState.finished;
        const onfinish = ()=>{
            writableFinished = true;
            if (stream.destroyed) willEmitClose = false;
            if (willEmitClose && (!stream.readable || readable)) return;
            if (!readable || readableEnded) callback.call(stream);
        };
        let readableEnded = stream.readableEnded || rState && rState.endEmitted;
        const onend = ()=>{
            readableEnded = true;
            if (stream.destroyed) willEmitClose = false;
            if (willEmitClose && (!stream.writable || writable)) return;
            if (!writable || writableFinished) callback.call(stream);
        };
        const onerror = (err)=>{
            callback.call(stream, err);
        };
        const onclose = ()=>{
            if (readable && !readableEnded) {
                if (!isReadableEnded(stream)) {
                    return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
                }
            }
            if (writable && !writableFinished) {
                if (!isWritableFinished(stream)) {
                    return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE());
                }
            }
            callback.call(stream);
        };
        const onrequest = ()=>{
            stream.req.on("finish", onfinish);
        };
        if (isRequest(stream)) {
            stream.on("complete", onfinish);
            if (!willEmitClose) {
                stream.on("abort", onclose);
            }
            if (stream.req) onrequest();
            else stream.on("request", onrequest);
        } else if (writable && !wState) {
            stream.on("end", onlegacyfinish);
            stream.on("close", onlegacyfinish);
        }
        if (!willEmitClose && typeof stream.aborted === "boolean") {
            stream.on("aborted", onclose);
        }
        stream.on("end", onend);
        stream.on("finish", onfinish);
        if (options.error !== false) stream.on("error", onerror);
        stream.on("close", onclose);
        const closed = !wState && !rState && stream._closed === true || wState && wState.closed || rState && rState.closed || wState && wState.errorEmitted || rState && rState.errorEmitted || rState && stream.req && stream.aborted || (!wState || !willEmitClose || typeof wState.closed !== "boolean") && (!rState || !willEmitClose || typeof rState.closed !== "boolean") && (!writable || wState && wState.finished) && (!readable || rState && rState.endEmitted);
        if (closed) {
            nextTick1(()=>{
                callback();
            });
        }
        const cleanup = ()=>{
            callback = nop;
            stream.removeListener("aborted", onclose);
            stream.removeListener("complete", onfinish);
            stream.removeListener("abort", onclose);
            stream.removeListener("request", onrequest);
            if (stream.req) stream.req.removeListener("finish", onfinish);
            stream.removeListener("end", onlegacyfinish);
            stream.removeListener("close", onlegacyfinish);
            stream.removeListener("finish", onfinish);
            stream.removeListener("end", onend);
            stream.removeListener("error", onerror);
            stream.removeListener("close", onclose);
        };
        if (options.signal && !closed) {
            const abort = ()=>{
                const endCallback = callback;
                cleanup();
                endCallback.call(stream, new AbortError());
            };
            if (options.signal.aborted) {
                nextTick1(abort);
            } else {
                const originalCallback = callback;
                callback = once1((...args)=>{
                    options.signal.removeEventListener("abort", abort);
                    originalCallback.apply(stream, args);
                });
                options.signal.addEventListener("abort", abort);
            }
        }
        return cleanup;
    }
    Symbol("kIsDisturbed");
    function isReadableNodeStream(obj) {
        return !!(obj && typeof obj.pipe === "function" && typeof obj.on === "function" && (!obj._writableState || obj._readableState?.readable !== false) && (!obj._writableState || obj._readableState));
    }
    function isWritableNodeStream(obj) {
        return !!(obj && typeof obj.write === "function" && typeof obj.on === "function" && (!obj._readableState || obj._writableState?.writable !== false));
    }
    function isNodeStream(obj) {
        return obj && (obj._readableState || obj._writableState || typeof obj.write === "function" && typeof obj.on === "function" || typeof obj.pipe === "function" && typeof obj.on === "function");
    }
    function isDestroyed(stream) {
        if (!isNodeStream(stream)) return null;
        const wState = stream._writableState;
        const rState = stream._readableState;
        const state = wState || rState;
        return !!(stream.destroyed || state?.destroyed);
    }
    function isWritableEnded(stream) {
        if (!isWritableNodeStream(stream)) return null;
        if (stream.writableEnded === true) return true;
        const wState = stream._writableState;
        if (wState?.errored) return false;
        if (typeof wState?.ended !== "boolean") return null;
        return wState.ended;
    }
    function isReadableEnded1(stream) {
        if (!isReadableNodeStream(stream)) return null;
        if (stream.readableEnded === true) return true;
        const rState = stream._readableState;
        if (!rState || rState.errored) return false;
        if (typeof rState?.ended !== "boolean") return null;
        return rState.ended;
    }
    function isReadableFinished(stream, strict) {
        if (!isReadableNodeStream(stream)) return null;
        const rState = stream._readableState;
        if (rState?.errored) return false;
        if (typeof rState?.endEmitted !== "boolean") return null;
        return !!(rState.endEmitted || strict === false && rState.ended === true && rState.length === 0);
    }
    function isReadable1(stream) {
        const r = isReadableNodeStream(stream);
        if (r === null || typeof stream?.readable !== "boolean") return null;
        if (isDestroyed(stream)) return false;
        return r && stream.readable && !isReadableFinished(stream);
    }
    function isWritable1(stream) {
        const r = isWritableNodeStream(stream);
        if (r === null || typeof stream?.writable !== "boolean") return null;
        if (isDestroyed(stream)) return false;
        return r && stream.writable && !isWritableEnded(stream);
    }
    const __process$ = {
        nextTick: nextTick1,
        stdio
    };
    var pi = Object.create;
    var Bt = Object.defineProperty;
    var wi = Object.getOwnPropertyDescriptor;
    var yi = Object.getOwnPropertyNames;
    var gi = Object.getPrototypeOf, Si = Object.prototype.hasOwnProperty;
    ((e)=>typeof require < "u" ? require : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, n)=>(typeof require < "u" ? require : t)[n]
        }) : e)(function(e) {
        if (typeof require < "u") return require.apply(this, arguments);
        throw new Error('Dynamic require of "' + e + '" is not supported');
    });
    var g = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports);
    var Ei = (e, t, n, r)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let i of yi(t))!Si.call(e, i) && i !== n && Bt(e, i, {
            get: ()=>t[i],
            enumerable: !(r = wi(t, i)) || r.enumerable
        });
        return e;
    };
    var Ri = (e, t, n)=>(n = e != null ? pi(gi(e)) : {}, Ei(t || !e || !e.__esModule ? Bt(n, "default", {
            value: e,
            enumerable: !0
        }) : n, e));
    var m = g((Yf, Gt)=>{
        "use strict";
        Gt.exports = {
            ArrayIsArray (e) {
                return Array.isArray(e);
            },
            ArrayPrototypeIncludes (e, t) {
                return e.includes(t);
            },
            ArrayPrototypeIndexOf (e, t) {
                return e.indexOf(t);
            },
            ArrayPrototypeJoin (e, t) {
                return e.join(t);
            },
            ArrayPrototypeMap (e, t) {
                return e.map(t);
            },
            ArrayPrototypePop (e, t) {
                return e.pop(t);
            },
            ArrayPrototypePush (e, t) {
                return e.push(t);
            },
            ArrayPrototypeSlice (e, t, n) {
                return e.slice(t, n);
            },
            Error,
            FunctionPrototypeCall (e, t, ...n) {
                return e.call(t, ...n);
            },
            FunctionPrototypeSymbolHasInstance (e, t) {
                return Function.prototype[Symbol.hasInstance].call(e, t);
            },
            MathFloor: Math.floor,
            Number,
            NumberIsInteger: Number.isInteger,
            NumberIsNaN: Number.isNaN,
            NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,
            NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,
            NumberParseInt: Number.parseInt,
            ObjectDefineProperties (e, t) {
                return Object.defineProperties(e, t);
            },
            ObjectDefineProperty (e, t, n) {
                return Object.defineProperty(e, t, n);
            },
            ObjectGetOwnPropertyDescriptor (e, t) {
                return Object.getOwnPropertyDescriptor(e, t);
            },
            ObjectKeys (e) {
                return Object.keys(e);
            },
            ObjectSetPrototypeOf (e, t) {
                return Object.setPrototypeOf(e, t);
            },
            Promise,
            PromisePrototypeCatch (e, t) {
                return e.catch(t);
            },
            PromisePrototypeThen (e, t, n) {
                return e.then(t, n);
            },
            PromiseReject (e) {
                return Promise.reject(e);
            },
            ReflectApply: Reflect.apply,
            RegExpPrototypeTest (e, t) {
                return e.test(t);
            },
            SafeSet: Set,
            String,
            StringPrototypeSlice (e, t, n) {
                return e.slice(t, n);
            },
            StringPrototypeToLowerCase (e) {
                return e.toLowerCase();
            },
            StringPrototypeToUpperCase (e) {
                return e.toUpperCase();
            },
            StringPrototypeTrim (e) {
                return e.trim();
            },
            Symbol,
            SymbolAsyncIterator: Symbol.asyncIterator,
            SymbolHasInstance: Symbol.hasInstance,
            SymbolIterator: Symbol.iterator,
            TypedArrayPrototypeSet (e, t, n) {
                return e.set(t, n);
            },
            Uint8Array
        };
    });
    var j = g((Kf, Je)=>{
        "use strict";
        var Ai = __default3, mi = Object.getPrototypeOf(async function() {}).constructor, Ht = globalThis.Blob || Ai.Blob, Ti = typeof Ht < "u" ? function(t) {
            return t instanceof Ht;
        } : function(t) {
            return !1;
        }, Xe = class extends Error {
            constructor(t){
                if (!Array.isArray(t)) throw new TypeError(`Expected input to be an Array, got ${typeof t}`);
                let n = "";
                for(let r = 0; r < t.length; r++)n += `    ${t[r].stack}
`;
                super(n), this.name = "AggregateError", this.errors = t;
            }
        };
        Je.exports = {
            AggregateError: Xe,
            kEmptyObject: Object.freeze({}),
            once (e) {
                let t = !1;
                return function(...n) {
                    t || (t = !0, e.apply(this, n));
                };
            },
            createDeferredPromise: function() {
                let e, t;
                return {
                    promise: new Promise((r, i)=>{
                        e = r, t = i;
                    }),
                    resolve: e,
                    reject: t
                };
            },
            promisify (e) {
                return new Promise((t, n)=>{
                    e((r, ...i)=>r ? n(r) : t(...i));
                });
            },
            debuglog () {
                return function() {};
            },
            format (e, ...t) {
                return e.replace(/%([sdifj])/g, function(...[n, r]) {
                    let i = t.shift();
                    return r === "f" ? i.toFixed(6) : r === "j" ? JSON.stringify(i) : r === "s" && typeof i == "object" ? `${i.constructor !== Object ? i.constructor.name : ""} {}`.trim() : i.toString();
                });
            },
            inspect (e) {
                switch(typeof e){
                    case "string":
                        if (e.includes("'")) if (e.includes('"')) {
                            if (!e.includes("`") && !e.includes("${")) return `\`${e}\``;
                        } else return `"${e}"`;
                        return `'${e}'`;
                    case "number":
                        return isNaN(e) ? "NaN" : Object.is(e, -0) ? String(e) : e;
                    case "bigint":
                        return `${String(e)}n`;
                    case "boolean":
                    case "undefined":
                        return String(e);
                    case "object":
                        return "{}";
                }
            },
            types: {
                isAsyncFunction (e) {
                    return e instanceof mi;
                },
                isArrayBufferView (e) {
                    return ArrayBuffer.isView(e);
                }
            },
            isBlob: Ti
        };
        Je.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
    });
    var O = g((zf, Kt)=>{
        "use strict";
        var { format: Ii, inspect: Re, AggregateError: Mi } = j(), Ni = globalThis.AggregateError || Mi, Di = Symbol("kIsNodeError"), Oi = [
            "string",
            "function",
            "number",
            "object",
            "Function",
            "Object",
            "boolean",
            "bigint",
            "symbol"
        ], qi = /^([A-Z][a-z0-9]*)+$/, xi = "__node_internal_", Ae = {};
        function X(e, t) {
            if (!e) throw new Ae.ERR_INTERNAL_ASSERTION(t);
        }
        function Vt(e) {
            let t = "", n = e.length, r = e[0] === "-" ? 1 : 0;
            for(; n >= r + 4; n -= 3)t = `_${e.slice(n - 3, n)}${t}`;
            return `${e.slice(0, n)}${t}`;
        }
        function Li(e, t, n) {
            if (typeof t == "function") return X(t.length <= n.length, `Code: ${e}; The provided arguments length (${n.length}) does not match the required ones (${t.length}).`), t(...n);
            let r = (t.match(/%[dfijoOs]/g) || []).length;
            return X(r === n.length, `Code: ${e}; The provided arguments length (${n.length}) does not match the required ones (${r}).`), n.length === 0 ? t : Ii(t, ...n);
        }
        function N(e, t, n) {
            n || (n = Error);
            class r extends n {
                constructor(...o){
                    super(Li(e, t, o));
                }
                toString() {
                    return `${this.name} [${e}]: ${this.message}`;
                }
            }
            Object.defineProperties(r.prototype, {
                name: {
                    value: n.name,
                    writable: !0,
                    enumerable: !1,
                    configurable: !0
                },
                toString: {
                    value () {
                        return `${this.name} [${e}]: ${this.message}`;
                    },
                    writable: !0,
                    enumerable: !1,
                    configurable: !0
                }
            }), r.prototype.code = e, r.prototype[Di] = !0, Ae[e] = r;
        }
        function Yt(e) {
            let t = xi + e.name;
            return Object.defineProperty(e, "name", {
                value: t
            }), e;
        }
        function Pi(e, t) {
            if (e && t && e !== t) {
                if (Array.isArray(t.errors)) return t.errors.push(e), t;
                let n = new Ni([
                    t,
                    e
                ], t.message);
                return n.code = t.code, n;
            }
            return e || t;
        }
        var Qe = class extends Error {
            constructor(t = "The operation was aborted", n = void 0){
                if (n !== void 0 && typeof n != "object") throw new Ae.ERR_INVALID_ARG_TYPE("options", "Object", n);
                super(t, n), this.code = "ABORT_ERR", this.name = "AbortError";
            }
        };
        N("ERR_ASSERTION", "%s", Error);
        N("ERR_INVALID_ARG_TYPE", (e, t, n)=>{
            X(typeof e == "string", "'name' must be a string"), Array.isArray(t) || (t = [
                t
            ]);
            let r = "The ";
            e.endsWith(" argument") ? r += `${e} ` : r += `"${e}" ${e.includes(".") ? "property" : "argument"} `, r += "must be ";
            let i = [], o = [], l = [];
            for (let f of t)X(typeof f == "string", "All expected entries have to be of type string"), Oi.includes(f) ? i.push(f.toLowerCase()) : qi.test(f) ? o.push(f) : (X(f !== "object", 'The value "object" should be written as "Object"'), l.push(f));
            if (o.length > 0) {
                let f = i.indexOf("object");
                f !== -1 && (i.splice(i, f, 1), o.push("Object"));
            }
            if (i.length > 0) {
                switch(i.length){
                    case 1:
                        r += `of type ${i[0]}`;
                        break;
                    case 2:
                        r += `one of type ${i[0]} or ${i[1]}`;
                        break;
                    default:
                        {
                            let f = i.pop();
                            r += `one of type ${i.join(", ")}, or ${f}`;
                        }
                }
                (o.length > 0 || l.length > 0) && (r += " or ");
            }
            if (o.length > 0) {
                switch(o.length){
                    case 1:
                        r += `an instance of ${o[0]}`;
                        break;
                    case 2:
                        r += `an instance of ${o[0]} or ${o[1]}`;
                        break;
                    default:
                        {
                            let f = o.pop();
                            r += `an instance of ${o.join(", ")}, or ${f}`;
                        }
                }
                l.length > 0 && (r += " or ");
            }
            switch(l.length){
                case 0:
                    break;
                case 1:
                    l[0].toLowerCase() !== l[0] && (r += "an "), r += `${l[0]}`;
                    break;
                case 2:
                    r += `one of ${l[0]} or ${l[1]}`;
                    break;
                default:
                    {
                        let f = l.pop();
                        r += `one of ${l.join(", ")}, or ${f}`;
                    }
            }
            if (n == null) r += `. Received ${n}`;
            else if (typeof n == "function" && n.name) r += `. Received function ${n.name}`;
            else if (typeof n == "object") {
                var u;
                (u = n.constructor) !== null && u !== void 0 && u.name ? r += `. Received an instance of ${n.constructor.name}` : r += `. Received ${Re(n, {
                    depth: -1
                })}`;
            } else {
                let f = Re(n, {
                    colors: !1
                });
                f.length > 25 && (f = `${f.slice(0, 25)}...`), r += `. Received type ${typeof n} (${f})`;
            }
            return r;
        }, TypeError);
        N("ERR_INVALID_ARG_VALUE", (e, t, n = "is invalid")=>{
            let r = Re(t);
            return r.length > 128 && (r = r.slice(0, 128) + "..."), `The ${e.includes(".") ? "property" : "argument"} '${e}' ${n}. Received ${r}`;
        }, TypeError);
        N("ERR_INVALID_RETURN_VALUE", (e, t, n)=>{
            var r;
            let i = n != null && (r = n.constructor) !== null && r !== void 0 && r.name ? `instance of ${n.constructor.name}` : `type ${typeof n}`;
            return `Expected ${e} to be returned from the "${t}" function but got ${i}.`;
        }, TypeError);
        N("ERR_MISSING_ARGS", (...e)=>{
            X(e.length > 0, "At least one arg needs to be specified");
            let t, n = e.length;
            switch(e = (Array.isArray(e) ? e : [
                e
            ]).map((r)=>`"${r}"`).join(" or "), n){
                case 1:
                    t += `The ${e[0]} argument`;
                    break;
                case 2:
                    t += `The ${e[0]} and ${e[1]} arguments`;
                    break;
                default:
                    {
                        let r = e.pop();
                        t += `The ${e.join(", ")}, and ${r} arguments`;
                    }
                    break;
            }
            return `${t} must be specified`;
        }, TypeError);
        N("ERR_OUT_OF_RANGE", (e, t, n)=>{
            X(t, 'Missing "range" argument');
            let r;
            return Number.isInteger(n) && Math.abs(n) > 2 ** 32 ? r = Vt(String(n)) : typeof n == "bigint" ? (r = String(n), (n > 2n ** 32n || n < -(2n ** 32n)) && (r = Vt(r)), r += "n") : r = Re(n), `The value of "${e}" is out of range. It must be ${t}. Received ${r}`;
        }, RangeError);
        N("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
        N("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
        N("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
        N("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
        N("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
        N("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
        N("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
        N("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
        N("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
        N("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
        N("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
        Kt.exports = {
            AbortError: Qe,
            aggregateTwoErrors: Yt(Pi),
            hideStackFrames: Yt,
            codes: Ae
        };
    });
    var _e = g((Xf, nn)=>{
        "use strict";
        var { ArrayIsArray: Jt, ArrayPrototypeIncludes: Qt, ArrayPrototypeJoin: Zt, ArrayPrototypeMap: ki, NumberIsInteger: et, NumberIsNaN: Wi, NumberMAX_SAFE_INTEGER: Ci, NumberMIN_SAFE_INTEGER: ji, NumberParseInt: $i, ObjectPrototypeHasOwnProperty: vi, RegExpPrototypeExec: Fi, String: Ui, StringPrototypeToUpperCase: Bi, StringPrototypeTrim: Gi } = m(), { hideStackFrames: k, codes: { ERR_SOCKET_BAD_PORT: Hi, ERR_INVALID_ARG_TYPE: q, ERR_INVALID_ARG_VALUE: me, ERR_OUT_OF_RANGE: J, ERR_UNKNOWN_SIGNAL: zt } } = O(), { normalizeEncoding: Vi } = j(), { isAsyncFunction: Yi, isArrayBufferView: Ki } = j().types, Xt = {};
        function zi(e) {
            return e === (e | 0);
        }
        function Xi(e) {
            return e === e >>> 0;
        }
        var Ji = /^[0-7]+$/, Qi = "must be a 32-bit unsigned integer or an octal string";
        function Zi(e, t, n) {
            if (typeof e > "u" && (e = n), typeof e == "string") {
                if (Fi(Ji, e) === null) throw new me(t, e, Qi);
                e = $i(e, 8);
            }
            return en(e, t), e;
        }
        var eo = k((e, t, n = ji, r = Ci)=>{
            if (typeof e != "number") throw new q(t, "number", e);
            if (!et(e)) throw new J(t, "an integer", e);
            if (e < n || e > r) throw new J(t, `>= ${n} && <= ${r}`, e);
        }), to = k((e, t, n = -2147483648, r = 2147483647)=>{
            if (typeof e != "number") throw new q(t, "number", e);
            if (!et(e)) throw new J(t, "an integer", e);
            if (e < n || e > r) throw new J(t, `>= ${n} && <= ${r}`, e);
        }), en = k((e, t, n = !1)=>{
            if (typeof e != "number") throw new q(t, "number", e);
            if (!et(e)) throw new J(t, "an integer", e);
            let r = n ? 1 : 0, i = 4294967295;
            if (e < r || e > i) throw new J(t, `>= ${r} && <= ${i}`, e);
        });
        function tn(e, t) {
            if (typeof e != "string") throw new q(t, "string", e);
        }
        function no(e, t, n = void 0, r) {
            if (typeof e != "number") throw new q(t, "number", e);
            if (n != null && e < n || r != null && e > r || (n != null || r != null) && Wi(e)) throw new J(t, `${n != null ? `>= ${n}` : ""}${n != null && r != null ? " && " : ""}${r != null ? `<= ${r}` : ""}`, e);
        }
        var ro = k((e, t, n)=>{
            if (!Qt(n, e)) {
                let r = Zt(ki(n, (o)=>typeof o == "string" ? `'${o}'` : Ui(o)), ", "), i = "must be one of: " + r;
                throw new me(t, e, i);
            }
        });
        function io(e, t) {
            if (typeof e != "boolean") throw new q(t, "boolean", e);
        }
        function Ze(e, t, n) {
            return e == null || !vi(e, t) ? n : e[t];
        }
        var oo = k((e, t, n = null)=>{
            let r = Ze(n, "allowArray", !1), i = Ze(n, "allowFunction", !1);
            if (!Ze(n, "nullable", !1) && e === null || !r && Jt(e) || typeof e != "object" && (!i || typeof e != "function")) throw new q(t, "Object", e);
        }), lo = k((e, t, n = 0)=>{
            if (!Jt(e)) throw new q(t, "Array", e);
            if (e.length < n) {
                let r = `must be longer than ${n}`;
                throw new me(t, e, r);
            }
        });
        function ao(e, t = "signal") {
            if (tn(e, t), Xt[e] === void 0) throw Xt[Bi(e)] !== void 0 ? new zt(e + " (signals must use all capital letters)") : new zt(e);
        }
        var fo = k((e, t = "buffer")=>{
            if (!Ki(e)) throw new q(t, [
                "Buffer",
                "TypedArray",
                "DataView"
            ], e);
        });
        function uo(e, t) {
            let n = Vi(t), r = e.length;
            if (n === "hex" && r % 2 !== 0) throw new me("encoding", t, `is invalid for data of length ${r}`);
        }
        function so(e, t = "Port", n = !0) {
            if (typeof e != "number" && typeof e != "string" || typeof e == "string" && Gi(e).length === 0 || +e !== +e >>> 0 || e > 65535 || e === 0 && !n) throw new Hi(t, e, n);
            return e | 0;
        }
        var co = k((e, t)=>{
            if (e !== void 0 && (e === null || typeof e != "object" || !("aborted" in e))) throw new q(t, "AbortSignal", e);
        }), ho = k((e, t)=>{
            if (typeof e != "function") throw new q(t, "Function", e);
        }), bo = k((e, t)=>{
            if (typeof e != "function" || Yi(e)) throw new q(t, "Function", e);
        }), _o = k((e, t)=>{
            if (e !== void 0) throw new q(t, "undefined", e);
        });
        function po(e, t, n) {
            if (!Qt(n, e)) throw new q(t, `('${Zt(n, "|")}')`, e);
        }
        nn.exports = {
            isInt32: zi,
            isUint32: Xi,
            parseFileMode: Zi,
            validateArray: lo,
            validateBoolean: io,
            validateBuffer: fo,
            validateEncoding: uo,
            validateFunction: ho,
            validateInt32: to,
            validateInteger: eo,
            validateNumber: no,
            validateObject: oo,
            validateOneOf: ro,
            validatePlainFunction: bo,
            validatePort: so,
            validateSignalName: ao,
            validateString: tn,
            validateUint32: en,
            validateUndefined: _o,
            validateUnion: po,
            validateAbortSignal: co
        };
    });
    var V = g((Jf, _n)=>{
        "use strict";
        var { Symbol: Te, SymbolAsyncIterator: rn, SymbolIterator: on } = m(), ln = Te("kDestroyed"), an = Te("kIsErrored"), tt = Te("kIsReadable"), fn = Te("kIsDisturbed");
        function Ie(e, t = !1) {
            var n;
            return !!(e && typeof e.pipe == "function" && typeof e.on == "function" && (!t || typeof e.pause == "function" && typeof e.resume == "function") && (!e._writableState || ((n = e._readableState) === null || n === void 0 ? void 0 : n.readable) !== !1) && (!e._writableState || e._readableState));
        }
        function Me(e) {
            var t;
            return !!(e && typeof e.write == "function" && typeof e.on == "function" && (!e._readableState || ((t = e._writableState) === null || t === void 0 ? void 0 : t.writable) !== !1));
        }
        function wo(e) {
            return !!(e && typeof e.pipe == "function" && e._readableState && typeof e.on == "function" && typeof e.write == "function");
        }
        function Q(e) {
            return e && (e._readableState || e._writableState || typeof e.write == "function" && typeof e.on == "function" || typeof e.pipe == "function" && typeof e.on == "function");
        }
        function yo(e, t) {
            return e == null ? !1 : t === !0 ? typeof e[rn] == "function" : t === !1 ? typeof e[on] == "function" : typeof e[rn] == "function" || typeof e[on] == "function";
        }
        function Ne(e) {
            if (!Q(e)) return null;
            let t = e._writableState, n = e._readableState, r = t || n;
            return !!(e.destroyed || e[ln] || r != null && r.destroyed);
        }
        function un(e) {
            if (!Me(e)) return null;
            if (e.writableEnded === !0) return !0;
            let t = e._writableState;
            return t != null && t.errored ? !1 : typeof t?.ended != "boolean" ? null : t.ended;
        }
        function go(e, t) {
            if (!Me(e)) return null;
            if (e.writableFinished === !0) return !0;
            let n = e._writableState;
            return n != null && n.errored ? !1 : typeof n?.finished != "boolean" ? null : !!(n.finished || t === !1 && n.ended === !0 && n.length === 0);
        }
        function So(e) {
            if (!Ie(e)) return null;
            if (e.readableEnded === !0) return !0;
            let t = e._readableState;
            return !t || t.errored ? !1 : typeof t?.ended != "boolean" ? null : t.ended;
        }
        function sn(e, t) {
            if (!Ie(e)) return null;
            let n = e._readableState;
            return n != null && n.errored ? !1 : typeof n?.endEmitted != "boolean" ? null : !!(n.endEmitted || t === !1 && n.ended === !0 && n.length === 0);
        }
        function dn(e) {
            return e && e[tt] != null ? e[tt] : typeof e?.readable != "boolean" ? null : Ne(e) ? !1 : Ie(e) && e.readable && !sn(e);
        }
        function cn(e) {
            return typeof e?.writable != "boolean" ? null : Ne(e) ? !1 : Me(e) && e.writable && !un(e);
        }
        function Eo(e, t) {
            return Q(e) ? Ne(e) ? !0 : !(t?.readable !== !1 && dn(e) || t?.writable !== !1 && cn(e)) : null;
        }
        function Ro(e) {
            var t, n;
            return Q(e) ? e.writableErrored ? e.writableErrored : (t = (n = e._writableState) === null || n === void 0 ? void 0 : n.errored) !== null && t !== void 0 ? t : null : null;
        }
        function Ao(e) {
            var t, n;
            return Q(e) ? e.readableErrored ? e.readableErrored : (t = (n = e._readableState) === null || n === void 0 ? void 0 : n.errored) !== null && t !== void 0 ? t : null : null;
        }
        function mo(e) {
            if (!Q(e)) return null;
            if (typeof e.closed == "boolean") return e.closed;
            let t = e._writableState, n = e._readableState;
            return typeof t?.closed == "boolean" || typeof n?.closed == "boolean" ? t?.closed || n?.closed : typeof e._closed == "boolean" && hn(e) ? e._closed : null;
        }
        function hn(e) {
            return typeof e._closed == "boolean" && typeof e._defaultKeepAlive == "boolean" && typeof e._removedConnection == "boolean" && typeof e._removedContLen == "boolean";
        }
        function bn(e) {
            return typeof e._sent100 == "boolean" && hn(e);
        }
        function To(e) {
            var t;
            return typeof e._consuming == "boolean" && typeof e._dumped == "boolean" && ((t = e.req) === null || t === void 0 ? void 0 : t.upgradeOrConnect) === void 0;
        }
        function Io(e) {
            if (!Q(e)) return null;
            let t = e._writableState, n = e._readableState, r = t || n;
            return !r && bn(e) || !!(r && r.autoDestroy && r.emitClose && r.closed === !1);
        }
        function Mo(e) {
            var t;
            return !!(e && ((t = e[fn]) !== null && t !== void 0 ? t : e.readableDidRead || e.readableAborted));
        }
        function No(e) {
            var t, n, r, i, o, l, u, f, a, c;
            return !!(e && ((t = (n = (r = (i = (o = (l = e[an]) !== null && l !== void 0 ? l : e.readableErrored) !== null && o !== void 0 ? o : e.writableErrored) !== null && i !== void 0 ? i : (u = e._readableState) === null || u === void 0 ? void 0 : u.errorEmitted) !== null && r !== void 0 ? r : (f = e._writableState) === null || f === void 0 ? void 0 : f.errorEmitted) !== null && n !== void 0 ? n : (a = e._readableState) === null || a === void 0 ? void 0 : a.errored) !== null && t !== void 0 ? t : (c = e._writableState) === null || c === void 0 ? void 0 : c.errored));
        }
        _n.exports = {
            kDestroyed: ln,
            isDisturbed: Mo,
            kIsDisturbed: fn,
            isErrored: No,
            kIsErrored: an,
            isReadable: dn,
            kIsReadable: tt,
            isClosed: mo,
            isDestroyed: Ne,
            isDuplexNodeStream: wo,
            isFinished: Eo,
            isIterable: yo,
            isReadableNodeStream: Ie,
            isReadableEnded: So,
            isReadableFinished: sn,
            isReadableErrored: Ao,
            isNodeStream: Q,
            isWritable: cn,
            isWritableNodeStream: Me,
            isWritableEnded: un,
            isWritableFinished: go,
            isWritableErrored: Ro,
            isServerRequest: To,
            isServerResponse: bn,
            willEmitClose: Io
        };
    });
    var Y = g((Qf, rt)=>{
        var oe = __process$, { AbortError: Do, codes: Oo } = O(), { ERR_INVALID_ARG_TYPE: qo, ERR_STREAM_PREMATURE_CLOSE: pn } = Oo, { kEmptyObject: wn, once: yn } = j(), { validateAbortSignal: xo, validateFunction: Lo, validateObject: Po } = _e(), { Promise: ko } = m(), { isClosed: Wo, isReadable: gn, isReadableNodeStream: nt, isReadableFinished: Sn, isReadableErrored: Co, isWritable: En, isWritableNodeStream: Rn, isWritableFinished: An, isWritableErrored: jo, isNodeStream: $o, willEmitClose: vo } = V();
        function Fo(e) {
            return e.setHeader && typeof e.abort == "function";
        }
        var Uo = ()=>{};
        function mn(e, t, n) {
            var r, i;
            arguments.length === 2 ? (n = t, t = wn) : t == null ? t = wn : Po(t, "options"), Lo(n, "callback"), xo(t.signal, "options.signal"), n = yn(n);
            let o = (r = t.readable) !== null && r !== void 0 ? r : nt(e), l = (i = t.writable) !== null && i !== void 0 ? i : Rn(e);
            if (!$o(e)) throw new qo("stream", "Stream", e);
            let u = e._writableState, f = e._readableState, a = ()=>{
                e.writable || b();
            }, c = vo(e) && nt(e) === o && Rn(e) === l, s = An(e, !1), b = ()=>{
                s = !0, e.destroyed && (c = !1), !(c && (!e.readable || o)) && (!o || d) && n.call(e);
            }, d = Sn(e, !1), h = ()=>{
                d = !0, e.destroyed && (c = !1), !(c && (!e.writable || l)) && (!l || s) && n.call(e);
            }, D = (M)=>{
                n.call(e, M);
            }, L = Wo(e), _ = ()=>{
                L = !0;
                let M = jo(e) || Co(e);
                if (M && typeof M != "boolean") return n.call(e, M);
                if (o && !d && nt(e, !0) && !Sn(e, !1)) return n.call(e, new pn);
                if (l && !s && !An(e, !1)) return n.call(e, new pn);
                n.call(e);
            }, p = ()=>{
                e.req.on("finish", b);
            };
            Fo(e) ? (e.on("complete", b), c || e.on("abort", _), e.req ? p() : e.on("request", p)) : l && !u && (e.on("end", a), e.on("close", a)), !c && typeof e.aborted == "boolean" && e.on("aborted", _), e.on("end", h), e.on("finish", b), t.error !== !1 && e.on("error", D), e.on("close", _), L ? oe.nextTick(_) : u != null && u.errorEmitted || f != null && f.errorEmitted ? c || oe.nextTick(_) : (!o && (!c || gn(e)) && (s || En(e) === !1) || !l && (!c || En(e)) && (d || gn(e) === !1) || f && e.req && e.aborted) && oe.nextTick(_);
            let I = ()=>{
                n = Uo, e.removeListener("aborted", _), e.removeListener("complete", b), e.removeListener("abort", _), e.removeListener("request", p), e.req && e.req.removeListener("finish", b), e.removeListener("end", a), e.removeListener("close", a), e.removeListener("finish", b), e.removeListener("end", h), e.removeListener("error", D), e.removeListener("close", _);
            };
            if (t.signal && !L) {
                let M = ()=>{
                    let F = n;
                    I(), F.call(e, new Do(void 0, {
                        cause: t.signal.reason
                    }));
                };
                if (t.signal.aborted) oe.nextTick(M);
                else {
                    let F = n;
                    n = yn((...re)=>{
                        t.signal.removeEventListener("abort", M), F.apply(e, re);
                    }), t.signal.addEventListener("abort", M);
                }
            }
            return I;
        }
        function Bo(e, t) {
            return new ko((n, r)=>{
                mn(e, t, (i)=>{
                    i ? r(i) : n();
                });
            });
        }
        rt.exports = mn;
        rt.exports.finished = Bo;
    });
    var xn = g((Zf, lt)=>{
        "use strict";
        var Nn = globalThis.AbortController, { codes: { ERR_INVALID_ARG_TYPE: pe, ERR_MISSING_ARGS: Go, ERR_OUT_OF_RANGE: Ho }, AbortError: $ } = O(), { validateAbortSignal: le, validateInteger: Vo, validateObject: ae } = _e(), Yo = m().Symbol("kWeak"), { finished: Ko } = Y(), { ArrayPrototypePush: zo, MathFloor: Xo, Number: Jo, NumberIsNaN: Qo, Promise: Tn, PromiseReject: In, PromisePrototypeThen: Zo, Symbol: Dn } = m(), De = Dn("kEmpty"), Mn = Dn("kEof");
        function Oe(e, t) {
            if (typeof e != "function") throw new pe("fn", [
                "Function",
                "AsyncFunction"
            ], e);
            t != null && ae(t, "options"), t?.signal != null && le(t.signal, "options.signal");
            let n = 1;
            return t?.concurrency != null && (n = Xo(t.concurrency)), Vo(n, "concurrency", 1), (async function*() {
                var i, o;
                let l = new Nn, u = this, f = [], a = l.signal, c = {
                    signal: a
                }, s = ()=>l.abort();
                t != null && (i = t.signal) !== null && i !== void 0 && i.aborted && s(), t == null || (o = t.signal) === null || o === void 0 || o.addEventListener("abort", s);
                let b, d, h = !1;
                function D() {
                    h = !0;
                }
                async function L() {
                    try {
                        for await (let I of u){
                            var _;
                            if (h) return;
                            if (a.aborted) throw new $;
                            try {
                                I = e(I, c);
                            } catch (M) {
                                I = In(M);
                            }
                            I !== De && (typeof ((_ = I) === null || _ === void 0 ? void 0 : _.catch) == "function" && I.catch(D), f.push(I), b && (b(), b = null), !h && f.length && f.length >= n && await new Tn((M)=>{
                                d = M;
                            }));
                        }
                        f.push(Mn);
                    } catch (I) {
                        let M = In(I);
                        Zo(M, void 0, D), f.push(M);
                    } finally{
                        var p;
                        h = !0, b && (b(), b = null), t == null || (p = t.signal) === null || p === void 0 || p.removeEventListener("abort", s);
                    }
                }
                L();
                try {
                    for(;;){
                        for(; f.length > 0;){
                            let _ = await f[0];
                            if (_ === Mn) return;
                            if (a.aborted) throw new $;
                            _ !== De && (yield _), f.shift(), d && (d(), d = null);
                        }
                        await new Tn((_)=>{
                            b = _;
                        });
                    }
                } finally{
                    l.abort(), h = !0, d && (d(), d = null);
                }
            }).call(this);
        }
        function el(e = void 0) {
            return e != null && ae(e, "options"), e?.signal != null && le(e.signal, "options.signal"), (async function*() {
                let n = 0;
                for await (let i of this){
                    var r;
                    if (e != null && (r = e.signal) !== null && r !== void 0 && r.aborted) throw new $({
                        cause: e.signal.reason
                    });
                    yield [
                        n++,
                        i
                    ];
                }
            }).call(this);
        }
        async function On(e, t = void 0) {
            for await (let n of ot.call(this, e, t))return !0;
            return !1;
        }
        async function tl(e, t = void 0) {
            if (typeof e != "function") throw new pe("fn", [
                "Function",
                "AsyncFunction"
            ], e);
            return !await On.call(this, async (...n)=>!await e(...n), t);
        }
        async function nl(e, t) {
            for await (let n of ot.call(this, e, t))return n;
        }
        async function rl(e, t) {
            if (typeof e != "function") throw new pe("fn", [
                "Function",
                "AsyncFunction"
            ], e);
            async function n(r, i) {
                return await e(r, i), De;
            }
            for await (let r of Oe.call(this, n, t));
        }
        function ot(e, t) {
            if (typeof e != "function") throw new pe("fn", [
                "Function",
                "AsyncFunction"
            ], e);
            async function n(r, i) {
                return await e(r, i) ? r : De;
            }
            return Oe.call(this, n, t);
        }
        var it = class extends Go {
            constructor(){
                super("reduce"), this.message = "Reduce of an empty stream requires an initial value";
            }
        };
        async function il(e, t, n) {
            var r;
            if (typeof e != "function") throw new pe("reducer", [
                "Function",
                "AsyncFunction"
            ], e);
            n != null && ae(n, "options"), n?.signal != null && le(n.signal, "options.signal");
            let i = arguments.length > 1;
            if (n != null && (r = n.signal) !== null && r !== void 0 && r.aborted) {
                let a = new $(void 0, {
                    cause: n.signal.reason
                });
                throw this.once("error", ()=>{}), await Ko(this.destroy(a)), a;
            }
            let o = new Nn, l = o.signal;
            if (n != null && n.signal) {
                let a = {
                    once: !0,
                    [Yo]: this
                };
                n.signal.addEventListener("abort", ()=>o.abort(), a);
            }
            let u = !1;
            try {
                for await (let a of this){
                    var f;
                    if (u = !0, n != null && (f = n.signal) !== null && f !== void 0 && f.aborted) throw new $;
                    i ? t = await e(t, a, {
                        signal: l
                    }) : (t = a, i = !0);
                }
                if (!u && !i) throw new it;
            } finally{
                o.abort();
            }
            return t;
        }
        async function ol(e) {
            e != null && ae(e, "options"), e?.signal != null && le(e.signal, "options.signal");
            let t = [];
            for await (let r of this){
                var n;
                if (e != null && (n = e.signal) !== null && n !== void 0 && n.aborted) throw new $(void 0, {
                    cause: e.signal.reason
                });
                zo(t, r);
            }
            return t;
        }
        function ll(e, t) {
            let n = Oe.call(this, e, t);
            return (async function*() {
                for await (let i of n)yield* i;
            }).call(this);
        }
        function qn(e) {
            if (e = Jo(e), Qo(e)) return 0;
            if (e < 0) throw new Ho("number", ">= 0", e);
            return e;
        }
        function al(e, t = void 0) {
            return t != null && ae(t, "options"), t?.signal != null && le(t.signal, "options.signal"), e = qn(e), (async function*() {
                var r;
                if (t != null && (r = t.signal) !== null && r !== void 0 && r.aborted) throw new $;
                for await (let o of this){
                    var i;
                    if (t != null && (i = t.signal) !== null && i !== void 0 && i.aborted) throw new $;
                    e-- <= 0 && (yield o);
                }
            }).call(this);
        }
        function fl(e, t = void 0) {
            return t != null && ae(t, "options"), t?.signal != null && le(t.signal, "options.signal"), e = qn(e), (async function*() {
                var r;
                if (t != null && (r = t.signal) !== null && r !== void 0 && r.aborted) throw new $;
                for await (let o of this){
                    var i;
                    if (t != null && (i = t.signal) !== null && i !== void 0 && i.aborted) throw new $;
                    if (e-- > 0) yield o;
                    else return;
                }
            }).call(this);
        }
        lt.exports.streamReturningOperators = {
            asIndexedPairs: el,
            drop: al,
            filter: ot,
            flatMap: ll,
            map: Oe,
            take: fl
        };
        lt.exports.promiseReturningOperators = {
            every: tl,
            forEach: rl,
            reduce: il,
            toArray: ol,
            some: On,
            find: nl
        };
    });
    var Z = g((eu, vn)=>{
        "use strict";
        var K = __process$, { aggregateTwoErrors: ul, codes: { ERR_MULTIPLE_CALLBACK: sl }, AbortError: dl } = O(), { Symbol: kn } = m(), { kDestroyed: cl, isDestroyed: hl, isFinished: bl, isServerRequest: _l } = V(), Wn = kn("kDestroy"), at = kn("kConstruct");
        function Cn(e, t, n) {
            e && (e.stack, t && !t.errored && (t.errored = e), n && !n.errored && (n.errored = e));
        }
        function pl(e, t) {
            let n = this._readableState, r = this._writableState, i = r || n;
            return r && r.destroyed || n && n.destroyed ? (typeof t == "function" && t(), this) : (Cn(e, r, n), r && (r.destroyed = !0), n && (n.destroyed = !0), i.constructed ? Ln(this, e, t) : this.once(Wn, function(o) {
                Ln(this, ul(o, e), t);
            }), this);
        }
        function Ln(e, t, n) {
            let r = !1;
            function i(o) {
                if (r) return;
                r = !0;
                let l = e._readableState, u = e._writableState;
                Cn(o, u, l), u && (u.closed = !0), l && (l.closed = !0), typeof n == "function" && n(o), o ? K.nextTick(wl, e, o) : K.nextTick(jn, e);
            }
            try {
                e._destroy(t || null, i);
            } catch (o) {
                i(o);
            }
        }
        function wl(e, t) {
            ft(e, t), jn(e);
        }
        function jn(e) {
            let t = e._readableState, n = e._writableState;
            n && (n.closeEmitted = !0), t && (t.closeEmitted = !0), (n && n.emitClose || t && t.emitClose) && e.emit("close");
        }
        function ft(e, t) {
            let n = e._readableState, r = e._writableState;
            r && r.errorEmitted || n && n.errorEmitted || (r && (r.errorEmitted = !0), n && (n.errorEmitted = !0), e.emit("error", t));
        }
        function yl() {
            let e = this._readableState, t = this._writableState;
            e && (e.constructed = !0, e.closed = !1, e.closeEmitted = !1, e.destroyed = !1, e.errored = null, e.errorEmitted = !1, e.reading = !1, e.ended = e.readable === !1, e.endEmitted = e.readable === !1), t && (t.constructed = !0, t.destroyed = !1, t.closed = !1, t.closeEmitted = !1, t.errored = null, t.errorEmitted = !1, t.finalCalled = !1, t.prefinished = !1, t.ended = t.writable === !1, t.ending = t.writable === !1, t.finished = t.writable === !1);
        }
        function ut(e, t, n) {
            let r = e._readableState, i = e._writableState;
            if (i && i.destroyed || r && r.destroyed) return this;
            r && r.autoDestroy || i && i.autoDestroy ? e.destroy(t) : t && (t.stack, i && !i.errored && (i.errored = t), r && !r.errored && (r.errored = t), n ? K.nextTick(ft, e, t) : ft(e, t));
        }
        function gl(e, t) {
            if (typeof e._construct != "function") return;
            let n = e._readableState, r = e._writableState;
            n && (n.constructed = !1), r && (r.constructed = !1), e.once(at, t), !(e.listenerCount(at) > 1) && K.nextTick(Sl, e);
        }
        function Sl(e) {
            let t = !1;
            function n(r) {
                if (t) {
                    ut(e, r ?? new sl);
                    return;
                }
                t = !0;
                let i = e._readableState, o = e._writableState, l = o || i;
                i && (i.constructed = !0), o && (o.constructed = !0), l.destroyed ? e.emit(Wn, r) : r ? ut(e, r, !0) : K.nextTick(El, e);
            }
            try {
                e._construct(n);
            } catch (r) {
                n(r);
            }
        }
        function El(e) {
            e.emit(at);
        }
        function Pn(e) {
            return e && e.setHeader && typeof e.abort == "function";
        }
        function $n(e) {
            e.emit("close");
        }
        function Rl(e, t) {
            e.emit("error", t), K.nextTick($n, e);
        }
        function Al(e, t) {
            !e || hl(e) || (!t && !bl(e) && (t = new dl), _l(e) ? (e.socket = null, e.destroy(t)) : Pn(e) ? e.abort() : Pn(e.req) ? e.req.abort() : typeof e.destroy == "function" ? e.destroy(t) : typeof e.close == "function" ? e.close() : t ? K.nextTick(Rl, e, t) : K.nextTick($n, e), e.destroyed || (e[cl] = !0));
        }
        vn.exports = {
            construct: gl,
            destroyer: Al,
            destroy: pl,
            undestroy: yl,
            errorOrDestroy: ut
        };
    });
    var Le = g((tu, Un)=>{
        "use strict";
        var { ArrayIsArray: ml, ObjectSetPrototypeOf: Fn } = m(), { EventEmitter: qe } = EventEmitter;
        function xe(e) {
            qe.call(this, e);
        }
        Fn(xe.prototype, qe.prototype);
        Fn(xe, qe);
        xe.prototype.pipe = function(e, t) {
            let n = this;
            function r(c) {
                e.writable && e.write(c) === !1 && n.pause && n.pause();
            }
            n.on("data", r);
            function i() {
                n.readable && n.resume && n.resume();
            }
            e.on("drain", i), !e._isStdio && (!t || t.end !== !1) && (n.on("end", l), n.on("close", u));
            let o = !1;
            function l() {
                o || (o = !0, e.end());
            }
            function u() {
                o || (o = !0, typeof e.destroy == "function" && e.destroy());
            }
            function f(c) {
                a(), qe.listenerCount(this, "error") === 0 && this.emit("error", c);
            }
            st(n, "error", f), st(e, "error", f);
            function a() {
                n.removeListener("data", r), e.removeListener("drain", i), n.removeListener("end", l), n.removeListener("close", u), n.removeListener("error", f), e.removeListener("error", f), n.removeListener("end", a), n.removeListener("close", a), e.removeListener("close", a);
            }
            return n.on("end", a), n.on("close", a), e.on("close", a), e.emit("pipe", n), e;
        };
        function st(e, t, n) {
            if (typeof e.prependListener == "function") return e.prependListener(t, n);
            !e._events || !e._events[t] ? e.on(t, n) : ml(e._events[t]) ? e._events[t].unshift(n) : e._events[t] = [
                n,
                e._events[t]
            ];
        }
        Un.exports = {
            Stream: xe,
            prependListener: st
        };
    });
    var ke = g((nu, Pe)=>{
        "use strict";
        var { AbortError: Tl, codes: Il } = O(), Ml = Y(), { ERR_INVALID_ARG_TYPE: Bn } = Il, Nl = (e, t)=>{
            if (typeof e != "object" || !("aborted" in e)) throw new Bn(t, "AbortSignal", e);
        };
        function Dl(e) {
            return !!(e && typeof e.pipe == "function");
        }
        Pe.exports.addAbortSignal = function(t, n) {
            if (Nl(t, "signal"), !Dl(n)) throw new Bn("stream", "stream.Stream", n);
            return Pe.exports.addAbortSignalNoValidate(t, n);
        };
        Pe.exports.addAbortSignalNoValidate = function(e, t) {
            if (typeof e != "object" || !("aborted" in e)) return t;
            let n = ()=>{
                t.destroy(new Tl(void 0, {
                    cause: e.reason
                }));
            };
            return e.aborted ? n() : (e.addEventListener("abort", n), Ml(t, ()=>e.removeEventListener("abort", n))), t;
        };
    });
    var Vn = g((iu, Hn)=>{
        "use strict";
        var { StringPrototypeSlice: Gn, SymbolIterator: Ol, TypedArrayPrototypeSet: We, Uint8Array: ql } = m(), { Buffer: dt } = __default3, { inspect: xl } = j();
        Hn.exports = class {
            constructor(){
                this.head = null, this.tail = null, this.length = 0;
            }
            push(t) {
                let n = {
                    data: t,
                    next: null
                };
                this.length > 0 ? this.tail.next = n : this.head = n, this.tail = n, ++this.length;
            }
            unshift(t) {
                let n = {
                    data: t,
                    next: this.head
                };
                this.length === 0 && (this.tail = n), this.head = n, ++this.length;
            }
            shift() {
                if (this.length === 0) return;
                let t = this.head.data;
                return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;
            }
            clear() {
                this.head = this.tail = null, this.length = 0;
            }
            join(t) {
                if (this.length === 0) return "";
                let n = this.head, r = "" + n.data;
                for(; (n = n.next) !== null;)r += t + n.data;
                return r;
            }
            concat(t) {
                if (this.length === 0) return dt.alloc(0);
                let n = dt.allocUnsafe(t >>> 0), r = this.head, i = 0;
                for(; r;)We(n, r.data, i), i += r.data.length, r = r.next;
                return n;
            }
            consume(t, n) {
                let r = this.head.data;
                if (t < r.length) {
                    let i = r.slice(0, t);
                    return this.head.data = r.slice(t), i;
                }
                return t === r.length ? this.shift() : n ? this._getString(t) : this._getBuffer(t);
            }
            first() {
                return this.head.data;
            }
            *[Ol]() {
                for(let t = this.head; t; t = t.next)yield t.data;
            }
            _getString(t) {
                let n = "", r = this.head, i = 0;
                do {
                    let o = r.data;
                    if (t > o.length) n += o, t -= o.length;
                    else {
                        t === o.length ? (n += o, ++i, r.next ? this.head = r.next : this.head = this.tail = null) : (n += Gn(o, 0, t), this.head = r, r.data = Gn(o, t));
                        break;
                    }
                    ++i;
                }while ((r = r.next) !== null)
                return this.length -= i, n;
            }
            _getBuffer(t) {
                let n = dt.allocUnsafe(t), r = t, i = this.head, o = 0;
                do {
                    let l = i.data;
                    if (t > l.length) We(n, l, r - t), t -= l.length;
                    else {
                        t === l.length ? (We(n, l, r - t), ++o, i.next ? this.head = i.next : this.head = this.tail = null) : (We(n, new ql(l.buffer, l.byteOffset, t), r - t), this.head = i, i.data = l.slice(t));
                        break;
                    }
                    ++o;
                }while ((i = i.next) !== null)
                return this.length -= o, n;
            }
            [Symbol.for("nodejs.util.inspect.custom")](t, n) {
                return xl(this, {
                    ...n,
                    depth: 0,
                    customInspect: !1
                });
            }
        };
    });
    var Ce = g((ou, Kn)=>{
        "use strict";
        var { MathFloor: Ll, NumberIsInteger: Pl } = m(), { ERR_INVALID_ARG_VALUE: kl } = O().codes;
        function Wl(e, t, n) {
            return e.highWaterMark != null ? e.highWaterMark : t ? e[n] : null;
        }
        function Yn(e) {
            return e ? 16 : 16 * 1024;
        }
        function Cl(e, t, n, r) {
            let i = Wl(t, r, n);
            if (i != null) {
                if (!Pl(i) || i < 0) {
                    let o = r ? `options.${n}` : "options.highWaterMark";
                    throw new kl(o, i);
                }
                return Ll(i);
            }
            return Yn(e.objectMode);
        }
        Kn.exports = {
            getHighWaterMark: Cl,
            getDefaultHighWaterMark: Yn
        };
    });
    var ct = g((lu, Qn)=>{
        "use strict";
        var zn = __process$, { PromisePrototypeThen: jl, SymbolAsyncIterator: Xn, SymbolIterator: Jn } = m(), { Buffer: $l } = __default3, { ERR_INVALID_ARG_TYPE: vl, ERR_STREAM_NULL_VALUES: Fl } = O().codes;
        function Ul(e, t, n) {
            let r;
            if (typeof t == "string" || t instanceof $l) return new e({
                objectMode: !0,
                ...n,
                read () {
                    this.push(t), this.push(null);
                }
            });
            let i;
            if (t && t[Xn]) i = !0, r = t[Xn]();
            else if (t && t[Jn]) i = !1, r = t[Jn]();
            else throw new vl("iterable", [
                "Iterable"
            ], t);
            let o = new e({
                objectMode: !0,
                highWaterMark: 1,
                ...n
            }), l = !1;
            o._read = function() {
                l || (l = !0, f());
            }, o._destroy = function(a, c) {
                jl(u(a), ()=>zn.nextTick(c, a), (s)=>zn.nextTick(c, s || a));
            };
            async function u(a) {
                let c = a != null, s = typeof r.throw == "function";
                if (c && s) {
                    let { value: b, done: d } = await r.throw(a);
                    if (await b, d) return;
                }
                if (typeof r.return == "function") {
                    let { value: b } = await r.return();
                    await b;
                }
            }
            async function f() {
                for(;;){
                    try {
                        let { value: a, done: c } = i ? await r.next() : r.next();
                        if (c) o.push(null);
                        else {
                            let s = a && typeof a.then == "function" ? await a : a;
                            if (s === null) throw l = !1, new Fl;
                            if (o.push(s)) continue;
                            l = !1;
                        }
                    } catch (a) {
                        o.destroy(a);
                    }
                    break;
                }
            }
            return o;
        }
        Qn.exports = Ul;
    });
    var we = g((au, dr)=>{
        var W = __process$, { ArrayPrototypeIndexOf: Bl, NumberIsInteger: Gl, NumberIsNaN: Hl, NumberParseInt: Vl, ObjectDefineProperties: tr, ObjectKeys: Yl, ObjectSetPrototypeOf: nr, Promise: Kl, SafeSet: zl, SymbolAsyncIterator: Xl, Symbol: Jl } = m();
        dr.exports = w;
        w.ReadableState = yt;
        var { EventEmitter: Ql } = EventEmitter, { Stream: z, prependListener: Zl } = Le(), { Buffer: ht } = __default3, { addAbortSignal: ea } = ke(), ta = Y(), y = j().debuglog("stream", (e)=>{
            y = e;
        }), na = Vn(), ue = Z(), { getHighWaterMark: ra, getDefaultHighWaterMark: ia } = Ce(), { aggregateTwoErrors: Zn, codes: { ERR_INVALID_ARG_TYPE: oa, ERR_METHOD_NOT_IMPLEMENTED: la, ERR_OUT_OF_RANGE: aa, ERR_STREAM_PUSH_AFTER_EOF: fa, ERR_STREAM_UNSHIFT_AFTER_END_EVENT: ua } } = O(), { validateObject: sa } = _e(), ee = Jl("kPaused"), { StringDecoder: rr } = __default4, da = ct();
        nr(w.prototype, z.prototype);
        nr(w, z);
        var bt = ()=>{}, { errorOrDestroy: fe } = ue;
        function yt(e, t, n) {
            typeof n != "boolean" && (n = t instanceof v()), this.objectMode = !!(e && e.objectMode), n && (this.objectMode = this.objectMode || !!(e && e.readableObjectMode)), this.highWaterMark = e ? ra(this, e, "readableHighWaterMark", n) : ia(!1), this.buffer = new na, this.length = 0, this.pipes = [], this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.constructed = !0, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this[ee] = null, this.errorEmitted = !1, this.emitClose = !e || e.emitClose !== !1, this.autoDestroy = !e || e.autoDestroy !== !1, this.destroyed = !1, this.errored = null, this.closed = !1, this.closeEmitted = !1, this.defaultEncoding = e && e.defaultEncoding || "utf8", this.awaitDrainWriters = null, this.multiAwaitDrain = !1, this.readingMore = !1, this.dataEmitted = !1, this.decoder = null, this.encoding = null, e && e.encoding && (this.decoder = new rr(e.encoding), this.encoding = e.encoding);
        }
        function w(e) {
            if (!(this instanceof w)) return new w(e);
            let t = this instanceof v();
            this._readableState = new yt(e, this, t), e && (typeof e.read == "function" && (this._read = e.read), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.construct == "function" && (this._construct = e.construct), e.signal && !t && ea(e.signal, this)), z.call(this, e), ue.construct(this, ()=>{
                this._readableState.needReadable && je(this, this._readableState);
            });
        }
        w.prototype.destroy = ue.destroy;
        w.prototype._undestroy = ue.undestroy;
        w.prototype._destroy = function(e, t) {
            t(e);
        };
        w.prototype[Ql.captureRejectionSymbol] = function(e) {
            this.destroy(e);
        };
        w.prototype.push = function(e, t) {
            return ir(this, e, t, !1);
        };
        w.prototype.unshift = function(e, t) {
            return ir(this, e, t, !0);
        };
        function ir(e, t, n, r) {
            y("readableAddChunk", t);
            let i = e._readableState, o;
            if (i.objectMode || (typeof t == "string" ? (n = n || i.defaultEncoding, i.encoding !== n && (r && i.encoding ? t = ht.from(t, n).toString(i.encoding) : (t = ht.from(t, n), n = ""))) : t instanceof ht ? n = "" : z._isUint8Array(t) ? (t = z._uint8ArrayToBuffer(t), n = "") : t != null && (o = new oa("chunk", [
                "string",
                "Buffer",
                "Uint8Array"
            ], t))), o) fe(e, o);
            else if (t === null) i.reading = !1, ba(e, i);
            else if (i.objectMode || t && t.length > 0) if (r) if (i.endEmitted) fe(e, new ua);
            else {
                if (i.destroyed || i.errored) return !1;
                _t(e, i, t, !0);
            }
            else if (i.ended) fe(e, new fa);
            else {
                if (i.destroyed || i.errored) return !1;
                i.reading = !1, i.decoder && !n ? (t = i.decoder.write(t), i.objectMode || t.length !== 0 ? _t(e, i, t, !1) : je(e, i)) : _t(e, i, t, !1);
            }
            else r || (i.reading = !1, je(e, i));
            return !i.ended && (i.length < i.highWaterMark || i.length === 0);
        }
        function _t(e, t, n, r) {
            t.flowing && t.length === 0 && !t.sync && e.listenerCount("data") > 0 ? (t.multiAwaitDrain ? t.awaitDrainWriters.clear() : t.awaitDrainWriters = null, t.dataEmitted = !0, e.emit("data", n)) : (t.length += t.objectMode ? 1 : n.length, r ? t.buffer.unshift(n) : t.buffer.push(n), t.needReadable && $e(e)), je(e, t);
        }
        w.prototype.isPaused = function() {
            let e = this._readableState;
            return e[ee] === !0 || e.flowing === !1;
        };
        w.prototype.setEncoding = function(e) {
            let t = new rr(e);
            this._readableState.decoder = t, this._readableState.encoding = this._readableState.decoder.encoding;
            let n = this._readableState.buffer, r = "";
            for (let i of n)r += t.write(i);
            return n.clear(), r !== "" && n.push(r), this._readableState.length = r.length, this;
        };
        var ca = 1073741824;
        function ha(e) {
            if (e > ca) throw new aa("size", "<= 1GiB", e);
            return e--, e |= e >>> 1, e |= e >>> 2, e |= e >>> 4, e |= e >>> 8, e |= e >>> 16, e++, e;
        }
        function er(e, t) {
            return e <= 0 || t.length === 0 && t.ended ? 0 : t.objectMode ? 1 : Hl(e) ? t.flowing && t.length ? t.buffer.first().length : t.length : e <= t.length ? e : t.ended ? t.length : 0;
        }
        w.prototype.read = function(e) {
            y("read", e), e === void 0 ? e = NaN : Gl(e) || (e = Vl(e, 10));
            let t = this._readableState, n = e;
            if (e > t.highWaterMark && (t.highWaterMark = ha(e)), e !== 0 && (t.emittedReadable = !1), e === 0 && t.needReadable && ((t.highWaterMark !== 0 ? t.length >= t.highWaterMark : t.length > 0) || t.ended)) return y("read: emitReadable", t.length, t.ended), t.length === 0 && t.ended ? pt(this) : $e(this), null;
            if (e = er(e, t), e === 0 && t.ended) return t.length === 0 && pt(this), null;
            let r = t.needReadable;
            if (y("need readable", r), (t.length === 0 || t.length - e < t.highWaterMark) && (r = !0, y("length less than watermark", r)), t.ended || t.reading || t.destroyed || t.errored || !t.constructed) r = !1, y("reading, ended or constructing", r);
            else if (r) {
                y("do read"), t.reading = !0, t.sync = !0, t.length === 0 && (t.needReadable = !0);
                try {
                    this._read(t.highWaterMark);
                } catch (o) {
                    fe(this, o);
                }
                t.sync = !1, t.reading || (e = er(n, t));
            }
            let i;
            return e > 0 ? i = ur(e, t) : i = null, i === null ? (t.needReadable = t.length <= t.highWaterMark, e = 0) : (t.length -= e, t.multiAwaitDrain ? t.awaitDrainWriters.clear() : t.awaitDrainWriters = null), t.length === 0 && (t.ended || (t.needReadable = !0), n !== e && t.ended && pt(this)), i !== null && !t.errorEmitted && !t.closeEmitted && (t.dataEmitted = !0, this.emit("data", i)), i;
        };
        function ba(e, t) {
            if (y("onEofChunk"), !t.ended) {
                if (t.decoder) {
                    let n = t.decoder.end();
                    n && n.length && (t.buffer.push(n), t.length += t.objectMode ? 1 : n.length);
                }
                t.ended = !0, t.sync ? $e(e) : (t.needReadable = !1, t.emittedReadable = !0, or(e));
            }
        }
        function $e(e) {
            let t = e._readableState;
            y("emitReadable", t.needReadable, t.emittedReadable), t.needReadable = !1, t.emittedReadable || (y("emitReadable", t.flowing), t.emittedReadable = !0, W.nextTick(or, e));
        }
        function or(e) {
            let t = e._readableState;
            y("emitReadable_", t.destroyed, t.length, t.ended), !t.destroyed && !t.errored && (t.length || t.ended) && (e.emit("readable"), t.emittedReadable = !1), t.needReadable = !t.flowing && !t.ended && t.length <= t.highWaterMark, ar(e);
        }
        function je(e, t) {
            !t.readingMore && t.constructed && (t.readingMore = !0, W.nextTick(_a, e, t));
        }
        function _a(e, t) {
            for(; !t.reading && !t.ended && (t.length < t.highWaterMark || t.flowing && t.length === 0);){
                let n = t.length;
                if (y("maybeReadMore read 0"), e.read(0), n === t.length) break;
            }
            t.readingMore = !1;
        }
        w.prototype._read = function(e) {
            throw new la("_read()");
        };
        w.prototype.pipe = function(e, t) {
            let n = this, r = this._readableState;
            r.pipes.length === 1 && (r.multiAwaitDrain || (r.multiAwaitDrain = !0, r.awaitDrainWriters = new zl(r.awaitDrainWriters ? [
                r.awaitDrainWriters
            ] : []))), r.pipes.push(e), y("pipe count=%d opts=%j", r.pipes.length, t);
            let o = (!t || t.end !== !1) && e !== W.stdout && e !== W.stderr ? u : L;
            r.endEmitted ? W.nextTick(o) : n.once("end", o), e.on("unpipe", l);
            function l(_, p) {
                y("onunpipe"), _ === n && p && p.hasUnpiped === !1 && (p.hasUnpiped = !0, c());
            }
            function u() {
                y("onend"), e.end();
            }
            let f, a = !1;
            function c() {
                y("cleanup"), e.removeListener("close", h), e.removeListener("finish", D), f && e.removeListener("drain", f), e.removeListener("error", d), e.removeListener("unpipe", l), n.removeListener("end", u), n.removeListener("end", L), n.removeListener("data", b), a = !0, f && r.awaitDrainWriters && (!e._writableState || e._writableState.needDrain) && f();
            }
            function s() {
                a || (r.pipes.length === 1 && r.pipes[0] === e ? (y("false write response, pause", 0), r.awaitDrainWriters = e, r.multiAwaitDrain = !1) : r.pipes.length > 1 && r.pipes.includes(e) && (y("false write response, pause", r.awaitDrainWriters.size), r.awaitDrainWriters.add(e)), n.pause()), f || (f = pa(n, e), e.on("drain", f));
            }
            n.on("data", b);
            function b(_) {
                y("ondata");
                let p = e.write(_);
                y("dest.write", p), p === !1 && s();
            }
            function d(_) {
                if (y("onerror", _), L(), e.removeListener("error", d), e.listenerCount("error") === 0) {
                    let p = e._writableState || e._readableState;
                    p && !p.errorEmitted ? fe(e, _) : e.emit("error", _);
                }
            }
            Zl(e, "error", d);
            function h() {
                e.removeListener("finish", D), L();
            }
            e.once("close", h);
            function D() {
                y("onfinish"), e.removeListener("close", h), L();
            }
            e.once("finish", D);
            function L() {
                y("unpipe"), n.unpipe(e);
            }
            return e.emit("pipe", n), e.writableNeedDrain === !0 ? r.flowing && s() : r.flowing || (y("pipe resume"), n.resume()), e;
        };
        function pa(e, t) {
            return function() {
                let r = e._readableState;
                r.awaitDrainWriters === t ? (y("pipeOnDrain", 1), r.awaitDrainWriters = null) : r.multiAwaitDrain && (y("pipeOnDrain", r.awaitDrainWriters.size), r.awaitDrainWriters.delete(t)), (!r.awaitDrainWriters || r.awaitDrainWriters.size === 0) && e.listenerCount("data") && e.resume();
            };
        }
        w.prototype.unpipe = function(e) {
            let t = this._readableState, n = {
                hasUnpiped: !1
            };
            if (t.pipes.length === 0) return this;
            if (!e) {
                let i = t.pipes;
                t.pipes = [], this.pause();
                for(let o = 0; o < i.length; o++)i[o].emit("unpipe", this, {
                    hasUnpiped: !1
                });
                return this;
            }
            let r = Bl(t.pipes, e);
            return r === -1 ? this : (t.pipes.splice(r, 1), t.pipes.length === 0 && this.pause(), e.emit("unpipe", this, n), this);
        };
        w.prototype.on = function(e, t) {
            let n = z.prototype.on.call(this, e, t), r = this._readableState;
            return e === "data" ? (r.readableListening = this.listenerCount("readable") > 0, r.flowing !== !1 && this.resume()) : e === "readable" && !r.endEmitted && !r.readableListening && (r.readableListening = r.needReadable = !0, r.flowing = !1, r.emittedReadable = !1, y("on readable", r.length, r.reading), r.length ? $e(this) : r.reading || W.nextTick(wa, this)), n;
        };
        w.prototype.addListener = w.prototype.on;
        w.prototype.removeListener = function(e, t) {
            let n = z.prototype.removeListener.call(this, e, t);
            return e === "readable" && W.nextTick(lr, this), n;
        };
        w.prototype.off = w.prototype.removeListener;
        w.prototype.removeAllListeners = function(e) {
            let t = z.prototype.removeAllListeners.apply(this, arguments);
            return (e === "readable" || e === void 0) && W.nextTick(lr, this), t;
        };
        function lr(e) {
            let t = e._readableState;
            t.readableListening = e.listenerCount("readable") > 0, t.resumeScheduled && t[ee] === !1 ? t.flowing = !0 : e.listenerCount("data") > 0 ? e.resume() : t.readableListening || (t.flowing = null);
        }
        function wa(e) {
            y("readable nexttick read 0"), e.read(0);
        }
        w.prototype.resume = function() {
            let e = this._readableState;
            return e.flowing || (y("resume"), e.flowing = !e.readableListening, ya(this, e)), e[ee] = !1, this;
        };
        function ya(e, t) {
            t.resumeScheduled || (t.resumeScheduled = !0, W.nextTick(ga, e, t));
        }
        function ga(e, t) {
            y("resume", t.reading), t.reading || e.read(0), t.resumeScheduled = !1, e.emit("resume"), ar(e), t.flowing && !t.reading && e.read(0);
        }
        w.prototype.pause = function() {
            return y("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (y("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState[ee] = !0, this;
        };
        function ar(e) {
            let t = e._readableState;
            for(y("flow", t.flowing); t.flowing && e.read() !== null;);
        }
        w.prototype.wrap = function(e) {
            let t = !1;
            e.on("data", (r)=>{
                !this.push(r) && e.pause && (t = !0, e.pause());
            }), e.on("end", ()=>{
                this.push(null);
            }), e.on("error", (r)=>{
                fe(this, r);
            }), e.on("close", ()=>{
                this.destroy();
            }), e.on("destroy", ()=>{
                this.destroy();
            }), this._read = ()=>{
                t && e.resume && (t = !1, e.resume());
            };
            let n = Yl(e);
            for(let r = 1; r < n.length; r++){
                let i = n[r];
                this[i] === void 0 && typeof e[i] == "function" && (this[i] = e[i].bind(e));
            }
            return this;
        };
        w.prototype[Xl] = function() {
            return fr(this);
        };
        w.prototype.iterator = function(e) {
            return e !== void 0 && sa(e, "options"), fr(this, e);
        };
        function fr(e, t) {
            typeof e.read != "function" && (e = w.wrap(e, {
                objectMode: !0
            }));
            let n = Sa(e, t);
            return n.stream = e, n;
        }
        async function* Sa(e, t) {
            let n = bt;
            function r(l) {
                this === e ? (n(), n = bt) : n = l;
            }
            e.on("readable", r);
            let i, o = ta(e, {
                writable: !1
            }, (l)=>{
                i = l ? Zn(i, l) : null, n(), n = bt;
            });
            try {
                for(;;){
                    let l = e.destroyed ? null : e.read();
                    if (l !== null) yield l;
                    else {
                        if (i) throw i;
                        if (i === null) return;
                        await new Kl(r);
                    }
                }
            } catch (l) {
                throw i = Zn(i, l), i;
            } finally{
                (i || t?.destroyOnReturn !== !1) && (i === void 0 || e._readableState.autoDestroy) ? ue.destroyer(e, null) : (e.off("readable", r), o());
            }
        }
        tr(w.prototype, {
            readable: {
                __proto__: null,
                get () {
                    let e = this._readableState;
                    return !!e && e.readable !== !1 && !e.destroyed && !e.errorEmitted && !e.endEmitted;
                },
                set (e) {
                    this._readableState && (this._readableState.readable = !!e);
                }
            },
            readableDidRead: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return this._readableState.dataEmitted;
                }
            },
            readableAborted: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return !!(this._readableState.readable !== !1 && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
                }
            },
            readableHighWaterMark: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return this._readableState.highWaterMark;
                }
            },
            readableBuffer: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return this._readableState && this._readableState.buffer;
                }
            },
            readableFlowing: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return this._readableState.flowing;
                },
                set: function(e) {
                    this._readableState && (this._readableState.flowing = e);
                }
            },
            readableLength: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState.length;
                }
            },
            readableObjectMode: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState ? this._readableState.objectMode : !1;
                }
            },
            readableEncoding: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState ? this._readableState.encoding : null;
                }
            },
            errored: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState ? this._readableState.errored : null;
                }
            },
            closed: {
                __proto__: null,
                get () {
                    return this._readableState ? this._readableState.closed : !1;
                }
            },
            destroyed: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState ? this._readableState.destroyed : !1;
                },
                set (e) {
                    !this._readableState || (this._readableState.destroyed = e);
                }
            },
            readableEnded: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._readableState ? this._readableState.endEmitted : !1;
                }
            }
        });
        tr(yt.prototype, {
            pipesCount: {
                __proto__: null,
                get () {
                    return this.pipes.length;
                }
            },
            paused: {
                __proto__: null,
                get () {
                    return this[ee] !== !1;
                },
                set (e) {
                    this[ee] = !!e;
                }
            }
        });
        w._fromList = ur;
        function ur(e, t) {
            if (t.length === 0) return null;
            let n;
            return t.objectMode ? n = t.buffer.shift() : !e || e >= t.length ? (t.decoder ? n = t.buffer.join("") : t.buffer.length === 1 ? n = t.buffer.first() : n = t.buffer.concat(t.length), t.buffer.clear()) : n = t.buffer.consume(e, t.decoder), n;
        }
        function pt(e) {
            let t = e._readableState;
            y("endReadable", t.endEmitted), t.endEmitted || (t.ended = !0, W.nextTick(Ea, t, e));
        }
        function Ea(e, t) {
            if (y("endReadableNT", e.endEmitted, e.length), !e.errored && !e.closeEmitted && !e.endEmitted && e.length === 0) {
                if (e.endEmitted = !0, t.emit("end"), t.writable && t.allowHalfOpen === !1) W.nextTick(Ra, t);
                else if (e.autoDestroy) {
                    let n = t._writableState;
                    (!n || n.autoDestroy && (n.finished || n.writable === !1)) && t.destroy();
                }
            }
        }
        function Ra(e) {
            e.writable && !e.writableEnded && !e.destroyed && e.end();
        }
        w.from = function(e, t) {
            return da(w, e, t);
        };
        var wt;
        function sr() {
            return wt === void 0 && (wt = {}), wt;
        }
        w.fromWeb = function(e, t) {
            return sr().newStreamReadableFromReadableStream(e, t);
        };
        w.toWeb = function(e, t) {
            return sr().newReadableStreamFromStreamReadable(e, t);
        };
        w.wrap = function(e, t) {
            var n, r;
            return new w({
                objectMode: (n = (r = e.readableObjectMode) !== null && r !== void 0 ? r : e.objectMode) !== null && n !== void 0 ? n : !0,
                ...t,
                destroy (i, o) {
                    ue.destroyer(e, i), o(i);
                }
            }).wrap(e);
        };
    });
    var Tt = g((fu, Ar)=>{
        var te = __process$, { ArrayPrototypeSlice: br, Error: Aa, FunctionPrototypeSymbolHasInstance: _r, ObjectDefineProperty: pr, ObjectDefineProperties: ma, ObjectSetPrototypeOf: wr, StringPrototypeToLowerCase: Ta, Symbol: Ia, SymbolHasInstance: Ma } = m();
        Ar.exports = S;
        S.WritableState = Se;
        var { EventEmitter: Na } = EventEmitter, ye = Le().Stream, { Buffer: ve } = __default3, Be = Z(), { addAbortSignal: Da } = ke(), { getHighWaterMark: Oa, getDefaultHighWaterMark: qa } = Ce(), { ERR_INVALID_ARG_TYPE: xa, ERR_METHOD_NOT_IMPLEMENTED: La, ERR_MULTIPLE_CALLBACK: yr, ERR_STREAM_CANNOT_PIPE: Pa, ERR_STREAM_DESTROYED: ge, ERR_STREAM_ALREADY_FINISHED: ka, ERR_STREAM_NULL_VALUES: Wa, ERR_STREAM_WRITE_AFTER_END: Ca, ERR_UNKNOWN_ENCODING: gr } = O().codes, { errorOrDestroy: se } = Be;
        wr(S.prototype, ye.prototype);
        wr(S, ye);
        function Et() {}
        var de = Ia("kOnFinished");
        function Se(e, t, n) {
            typeof n != "boolean" && (n = t instanceof v()), this.objectMode = !!(e && e.objectMode), n && (this.objectMode = this.objectMode || !!(e && e.writableObjectMode)), this.highWaterMark = e ? Oa(this, e, "writableHighWaterMark", n) : qa(!1), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
            let r = !!(e && e.decodeStrings === !1);
            this.decodeStrings = !r, this.defaultEncoding = e && e.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = $a.bind(void 0, t), this.writecb = null, this.writelen = 0, this.afterWriteTickInfo = null, Ue(this), this.pendingcb = 0, this.constructed = !0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = !e || e.emitClose !== !1, this.autoDestroy = !e || e.autoDestroy !== !1, this.errored = null, this.closed = !1, this.closeEmitted = !1, this[de] = [];
        }
        function Ue(e) {
            e.buffered = [], e.bufferedIndex = 0, e.allBuffers = !0, e.allNoop = !0;
        }
        Se.prototype.getBuffer = function() {
            return br(this.buffered, this.bufferedIndex);
        };
        pr(Se.prototype, "bufferedRequestCount", {
            __proto__: null,
            get () {
                return this.buffered.length - this.bufferedIndex;
            }
        });
        function S(e) {
            let t = this instanceof v();
            if (!t && !_r(S, this)) return new S(e);
            this._writableState = new Se(e, this, t), e && (typeof e.write == "function" && (this._write = e.write), typeof e.writev == "function" && (this._writev = e.writev), typeof e.destroy == "function" && (this._destroy = e.destroy), typeof e.final == "function" && (this._final = e.final), typeof e.construct == "function" && (this._construct = e.construct), e.signal && Da(e.signal, this)), ye.call(this, e), Be.construct(this, ()=>{
                let n = this._writableState;
                n.writing || At(this, n), mt(this, n);
            });
        }
        pr(S, Ma, {
            __proto__: null,
            value: function(e) {
                return _r(this, e) ? !0 : this !== S ? !1 : e && e._writableState instanceof Se;
            }
        });
        S.prototype.pipe = function() {
            se(this, new Pa);
        };
        function Sr(e, t, n, r) {
            let i = e._writableState;
            if (typeof n == "function") r = n, n = i.defaultEncoding;
            else {
                if (!n) n = i.defaultEncoding;
                else if (n !== "buffer" && !ve.isEncoding(n)) throw new gr(n);
                typeof r != "function" && (r = Et);
            }
            if (t === null) throw new Wa;
            if (!i.objectMode) if (typeof t == "string") i.decodeStrings !== !1 && (t = ve.from(t, n), n = "buffer");
            else if (t instanceof ve) n = "buffer";
            else if (ye._isUint8Array(t)) t = ye._uint8ArrayToBuffer(t), n = "buffer";
            else throw new xa("chunk", [
                "string",
                "Buffer",
                "Uint8Array"
            ], t);
            let o;
            return i.ending ? o = new Ca : i.destroyed && (o = new ge("write")), o ? (te.nextTick(r, o), se(e, o, !0), o) : (i.pendingcb++, ja(e, i, t, n, r));
        }
        S.prototype.write = function(e, t, n) {
            return Sr(this, e, t, n) === !0;
        };
        S.prototype.cork = function() {
            this._writableState.corked++;
        };
        S.prototype.uncork = function() {
            let e = this._writableState;
            e.corked && (e.corked--, e.writing || At(this, e));
        };
        S.prototype.setDefaultEncoding = function(t) {
            if (typeof t == "string" && (t = Ta(t)), !ve.isEncoding(t)) throw new gr(t);
            return this._writableState.defaultEncoding = t, this;
        };
        function ja(e, t, n, r, i) {
            let o = t.objectMode ? 1 : n.length;
            t.length += o;
            let l = t.length < t.highWaterMark;
            return l || (t.needDrain = !0), t.writing || t.corked || t.errored || !t.constructed ? (t.buffered.push({
                chunk: n,
                encoding: r,
                callback: i
            }), t.allBuffers && r !== "buffer" && (t.allBuffers = !1), t.allNoop && i !== Et && (t.allNoop = !1)) : (t.writelen = o, t.writecb = i, t.writing = !0, t.sync = !0, e._write(n, r, t.onwrite), t.sync = !1), l && !t.errored && !t.destroyed;
        }
        function cr(e, t, n, r, i, o, l) {
            t.writelen = r, t.writecb = l, t.writing = !0, t.sync = !0, t.destroyed ? t.onwrite(new ge("write")) : n ? e._writev(i, t.onwrite) : e._write(i, o, t.onwrite), t.sync = !1;
        }
        function hr(e, t, n, r) {
            --t.pendingcb, r(n), Rt(t), se(e, n);
        }
        function $a(e, t) {
            let n = e._writableState, r = n.sync, i = n.writecb;
            if (typeof i != "function") {
                se(e, new yr);
                return;
            }
            n.writing = !1, n.writecb = null, n.length -= n.writelen, n.writelen = 0, t ? (t.stack, n.errored || (n.errored = t), e._readableState && !e._readableState.errored && (e._readableState.errored = t), r ? te.nextTick(hr, e, n, t, i) : hr(e, n, t, i)) : (n.buffered.length > n.bufferedIndex && At(e, n), r ? n.afterWriteTickInfo !== null && n.afterWriteTickInfo.cb === i ? n.afterWriteTickInfo.count++ : (n.afterWriteTickInfo = {
                count: 1,
                cb: i,
                stream: e,
                state: n
            }, te.nextTick(va, n.afterWriteTickInfo)) : Er(e, n, 1, i));
        }
        function va({ stream: e, state: t, count: n, cb: r }) {
            return t.afterWriteTickInfo = null, Er(e, t, n, r);
        }
        function Er(e, t, n, r) {
            for(!t.ending && !e.destroyed && t.length === 0 && t.needDrain && (t.needDrain = !1, e.emit("drain")); n-- > 0;)t.pendingcb--, r();
            t.destroyed && Rt(t), mt(e, t);
        }
        function Rt(e) {
            if (e.writing) return;
            for(let i = e.bufferedIndex; i < e.buffered.length; ++i){
                var t;
                let { chunk: o, callback: l } = e.buffered[i], u = e.objectMode ? 1 : o.length;
                e.length -= u, l((t = e.errored) !== null && t !== void 0 ? t : new ge("write"));
            }
            let n = e[de].splice(0);
            for(let i = 0; i < n.length; i++){
                var r;
                n[i]((r = e.errored) !== null && r !== void 0 ? r : new ge("end"));
            }
            Ue(e);
        }
        function At(e, t) {
            if (t.corked || t.bufferProcessing || t.destroyed || !t.constructed) return;
            let { buffered: n, bufferedIndex: r, objectMode: i } = t, o = n.length - r;
            if (!o) return;
            let l = r;
            if (t.bufferProcessing = !0, o > 1 && e._writev) {
                t.pendingcb -= o - 1;
                let u = t.allNoop ? Et : (a)=>{
                    for(let c = l; c < n.length; ++c)n[c].callback(a);
                }, f = t.allNoop && l === 0 ? n : br(n, l);
                f.allBuffers = t.allBuffers, cr(e, t, !0, t.length, f, "", u), Ue(t);
            } else {
                do {
                    let { chunk: u, encoding: f, callback: a } = n[l];
                    n[l++] = null;
                    let c = i ? 1 : u.length;
                    cr(e, t, !1, c, u, f, a);
                }while (l < n.length && !t.writing)
                l === n.length ? Ue(t) : l > 256 ? (n.splice(0, l), t.bufferedIndex = 0) : t.bufferedIndex = l;
            }
            t.bufferProcessing = !1;
        }
        S.prototype._write = function(e, t, n) {
            if (this._writev) this._writev([
                {
                    chunk: e,
                    encoding: t
                }
            ], n);
            else throw new La("_write()");
        };
        S.prototype._writev = null;
        S.prototype.end = function(e, t, n) {
            let r = this._writableState;
            typeof e == "function" ? (n = e, e = null, t = null) : typeof t == "function" && (n = t, t = null);
            let i;
            if (e != null) {
                let o = Sr(this, e, t);
                o instanceof Aa && (i = o);
            }
            return r.corked && (r.corked = 1, this.uncork()), i || (!r.errored && !r.ending ? (r.ending = !0, mt(this, r, !0), r.ended = !0) : r.finished ? i = new ka("end") : r.destroyed && (i = new ge("end"))), typeof n == "function" && (i || r.finished ? te.nextTick(n, i) : r[de].push(n)), this;
        };
        function Fe(e) {
            return e.ending && !e.destroyed && e.constructed && e.length === 0 && !e.errored && e.buffered.length === 0 && !e.finished && !e.writing && !e.errorEmitted && !e.closeEmitted;
        }
        function Fa(e, t) {
            let n = !1;
            function r(i) {
                if (n) {
                    se(e, i ?? yr());
                    return;
                }
                if (n = !0, t.pendingcb--, i) {
                    let o = t[de].splice(0);
                    for(let l = 0; l < o.length; l++)o[l](i);
                    se(e, i, t.sync);
                } else Fe(t) && (t.prefinished = !0, e.emit("prefinish"), t.pendingcb++, te.nextTick(St, e, t));
            }
            t.sync = !0, t.pendingcb++;
            try {
                e._final(r);
            } catch (i) {
                r(i);
            }
            t.sync = !1;
        }
        function Ua(e, t) {
            !t.prefinished && !t.finalCalled && (typeof e._final == "function" && !t.destroyed ? (t.finalCalled = !0, Fa(e, t)) : (t.prefinished = !0, e.emit("prefinish")));
        }
        function mt(e, t, n) {
            Fe(t) && (Ua(e, t), t.pendingcb === 0 && (n ? (t.pendingcb++, te.nextTick((r, i)=>{
                Fe(i) ? St(r, i) : i.pendingcb--;
            }, e, t)) : Fe(t) && (t.pendingcb++, St(e, t))));
        }
        function St(e, t) {
            t.pendingcb--, t.finished = !0;
            let n = t[de].splice(0);
            for(let r = 0; r < n.length; r++)n[r]();
            if (e.emit("finish"), t.autoDestroy) {
                let r = e._readableState;
                (!r || r.autoDestroy && (r.endEmitted || r.readable === !1)) && e.destroy();
            }
        }
        ma(S.prototype, {
            closed: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.closed : !1;
                }
            },
            destroyed: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.destroyed : !1;
                },
                set (e) {
                    this._writableState && (this._writableState.destroyed = e);
                }
            },
            writable: {
                __proto__: null,
                get () {
                    let e = this._writableState;
                    return !!e && e.writable !== !1 && !e.destroyed && !e.errored && !e.ending && !e.ended;
                },
                set (e) {
                    this._writableState && (this._writableState.writable = !!e);
                }
            },
            writableFinished: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.finished : !1;
                }
            },
            writableObjectMode: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.objectMode : !1;
                }
            },
            writableBuffer: {
                __proto__: null,
                get () {
                    return this._writableState && this._writableState.getBuffer();
                }
            },
            writableEnded: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.ending : !1;
                }
            },
            writableNeedDrain: {
                __proto__: null,
                get () {
                    let e = this._writableState;
                    return e ? !e.destroyed && !e.ending && e.needDrain : !1;
                }
            },
            writableHighWaterMark: {
                __proto__: null,
                get () {
                    return this._writableState && this._writableState.highWaterMark;
                }
            },
            writableCorked: {
                __proto__: null,
                get () {
                    return this._writableState ? this._writableState.corked : 0;
                }
            },
            writableLength: {
                __proto__: null,
                get () {
                    return this._writableState && this._writableState.length;
                }
            },
            errored: {
                __proto__: null,
                enumerable: !1,
                get () {
                    return this._writableState ? this._writableState.errored : null;
                }
            },
            writableAborted: {
                __proto__: null,
                enumerable: !1,
                get: function() {
                    return !!(this._writableState.writable !== !1 && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
                }
            }
        });
        var Ba = Be.destroy;
        S.prototype.destroy = function(e, t) {
            let n = this._writableState;
            return !n.destroyed && (n.bufferedIndex < n.buffered.length || n[de].length) && te.nextTick(Rt, n), Ba.call(this, e, t), this;
        };
        S.prototype._undestroy = Be.undestroy;
        S.prototype._destroy = function(e, t) {
            t(e);
        };
        S.prototype[Na.captureRejectionSymbol] = function(e) {
            this.destroy(e);
        };
        var gt;
        function Rr() {
            return gt === void 0 && (gt = {}), gt;
        }
        S.fromWeb = function(e, t) {
            return Rr().newStreamWritableFromWritableStream(e, t);
        };
        S.toWeb = function(e) {
            return Rr().newWritableStreamFromStreamWritable(e);
        };
    });
    var kr = g((uu, Pr)=>{
        var It = __process$, Ga = __default3, { isReadable: Ha, isWritable: Va, isIterable: mr, isNodeStream: Ya, isReadableNodeStream: Tr, isWritableNodeStream: Ir, isDuplexNodeStream: Ka } = V(), Mr = Y(), { AbortError: Lr, codes: { ERR_INVALID_ARG_TYPE: za, ERR_INVALID_RETURN_VALUE: Nr } } = O(), { destroyer: ce } = Z(), Xa = v(), Ja = we(), { createDeferredPromise: Dr } = j(), Or = ct(), qr = globalThis.Blob || Ga.Blob, Qa = typeof qr < "u" ? function(t) {
            return t instanceof qr;
        } : function(t) {
            return !1;
        }, Za = globalThis.AbortController, { FunctionPrototypeCall: xr } = m(), ne = class extends Xa {
            constructor(t){
                super(t), t?.readable === !1 && (this._readableState.readable = !1, this._readableState.ended = !0, this._readableState.endEmitted = !0), t?.writable === !1 && (this._writableState.writable = !1, this._writableState.ending = !0, this._writableState.ended = !0, this._writableState.finished = !0);
            }
        };
        Pr.exports = function e(t, n) {
            if (Ka(t)) return t;
            if (Tr(t)) return Ge({
                readable: t
            });
            if (Ir(t)) return Ge({
                writable: t
            });
            if (Ya(t)) return Ge({
                writable: !1,
                readable: !1
            });
            if (typeof t == "function") {
                let { value: i, write: o, final: l, destroy: u } = ef(t);
                if (mr(i)) return Or(ne, i, {
                    objectMode: !0,
                    write: o,
                    final: l,
                    destroy: u
                });
                let f = i?.then;
                if (typeof f == "function") {
                    let a, c = xr(f, i, (s)=>{
                        if (s != null) throw new Nr("nully", "body", s);
                    }, (s)=>{
                        ce(a, s);
                    });
                    return a = new ne({
                        objectMode: !0,
                        readable: !1,
                        write: o,
                        final (s) {
                            l(async ()=>{
                                try {
                                    await c, It.nextTick(s, null);
                                } catch (b) {
                                    It.nextTick(s, b);
                                }
                            });
                        },
                        destroy: u
                    });
                }
                throw new Nr("Iterable, AsyncIterable or AsyncFunction", n, i);
            }
            if (Qa(t)) return e(t.arrayBuffer());
            if (mr(t)) return Or(ne, t, {
                objectMode: !0,
                writable: !1
            });
            if (typeof t?.writable == "object" || typeof t?.readable == "object") {
                let i = t != null && t.readable ? Tr(t?.readable) ? t?.readable : e(t.readable) : void 0, o = t != null && t.writable ? Ir(t?.writable) ? t?.writable : e(t.writable) : void 0;
                return Ge({
                    readable: i,
                    writable: o
                });
            }
            let r = t?.then;
            if (typeof r == "function") {
                let i;
                return xr(r, t, (o)=>{
                    o != null && i.push(o), i.push(null);
                }, (o)=>{
                    ce(i, o);
                }), i = new ne({
                    objectMode: !0,
                    writable: !1,
                    read () {}
                });
            }
            throw new za(n, [
                "Blob",
                "ReadableStream",
                "WritableStream",
                "Stream",
                "Iterable",
                "AsyncIterable",
                "Function",
                "{ readable, writable } pair",
                "Promise"
            ], t);
        };
        function ef(e) {
            let { promise: t, resolve: n } = Dr(), r = new Za, i = r.signal;
            return {
                value: e(async function*() {
                    for(;;){
                        let l = t;
                        t = null;
                        let { chunk: u, done: f, cb: a } = await l;
                        if (It.nextTick(a), f) return;
                        if (i.aborted) throw new Lr(void 0, {
                            cause: i.reason
                        });
                        ({ promise: t, resolve: n } = Dr()), yield u;
                    }
                }(), {
                    signal: i
                }),
                write (l, u, f) {
                    let a = n;
                    n = null, a({
                        chunk: l,
                        done: !1,
                        cb: f
                    });
                },
                final (l) {
                    let u = n;
                    n = null, u({
                        done: !0,
                        cb: l
                    });
                },
                destroy (l, u) {
                    r.abort(), u(l);
                }
            };
        }
        function Ge(e) {
            let t = e.readable && typeof e.readable.read != "function" ? Ja.wrap(e.readable) : e.readable, n = e.writable, r = !!Ha(t), i = !!Va(n), o, l, u, f, a;
            function c(s) {
                let b = f;
                f = null, b ? b(s) : s ? a.destroy(s) : !r && !i && a.destroy();
            }
            return a = new ne({
                readableObjectMode: !!(t != null && t.readableObjectMode),
                writableObjectMode: !!(n != null && n.writableObjectMode),
                readable: r,
                writable: i
            }), i && (Mr(n, (s)=>{
                i = !1, s && ce(t, s), c(s);
            }), a._write = function(s, b, d) {
                n.write(s, b) ? d() : o = d;
            }, a._final = function(s) {
                n.end(), l = s;
            }, n.on("drain", function() {
                if (o) {
                    let s = o;
                    o = null, s();
                }
            }), n.on("finish", function() {
                if (l) {
                    let s = l;
                    l = null, s();
                }
            })), r && (Mr(t, (s)=>{
                r = !1, s && ce(t, s), c(s);
            }), t.on("readable", function() {
                if (u) {
                    let s = u;
                    u = null, s();
                }
            }), t.on("end", function() {
                a.push(null);
            }), a._read = function() {
                for(;;){
                    let s = t.read();
                    if (s === null) {
                        u = a._read;
                        return;
                    }
                    if (!a.push(s)) return;
                }
            }), a._destroy = function(s, b) {
                !s && f !== null && (s = new Lr), u = null, o = null, l = null, f === null ? b(s) : (f = b, ce(n, s), ce(t, s));
            }, a;
        }
    });
    var v = g((su, jr)=>{
        "use strict";
        var { ObjectDefineProperties: tf, ObjectGetOwnPropertyDescriptor: B, ObjectKeys: nf, ObjectSetPrototypeOf: Wr } = m();
        jr.exports = C;
        var Dt = we(), x = Tt();
        Wr(C.prototype, Dt.prototype);
        Wr(C, Dt);
        {
            let e = nf(x.prototype);
            for(let t = 0; t < e.length; t++){
                let n = e[t];
                C.prototype[n] || (C.prototype[n] = x.prototype[n]);
            }
        }
        function C(e) {
            if (!(this instanceof C)) return new C(e);
            Dt.call(this, e), x.call(this, e), e ? (this.allowHalfOpen = e.allowHalfOpen !== !1, e.readable === !1 && (this._readableState.readable = !1, this._readableState.ended = !0, this._readableState.endEmitted = !0), e.writable === !1 && (this._writableState.writable = !1, this._writableState.ending = !0, this._writableState.ended = !0, this._writableState.finished = !0)) : this.allowHalfOpen = !0;
        }
        tf(C.prototype, {
            writable: {
                __proto__: null,
                ...B(x.prototype, "writable")
            },
            writableHighWaterMark: {
                __proto__: null,
                ...B(x.prototype, "writableHighWaterMark")
            },
            writableObjectMode: {
                __proto__: null,
                ...B(x.prototype, "writableObjectMode")
            },
            writableBuffer: {
                __proto__: null,
                ...B(x.prototype, "writableBuffer")
            },
            writableLength: {
                __proto__: null,
                ...B(x.prototype, "writableLength")
            },
            writableFinished: {
                __proto__: null,
                ...B(x.prototype, "writableFinished")
            },
            writableCorked: {
                __proto__: null,
                ...B(x.prototype, "writableCorked")
            },
            writableEnded: {
                __proto__: null,
                ...B(x.prototype, "writableEnded")
            },
            writableNeedDrain: {
                __proto__: null,
                ...B(x.prototype, "writableNeedDrain")
            },
            destroyed: {
                __proto__: null,
                get () {
                    return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
                },
                set (e) {
                    this._readableState && this._writableState && (this._readableState.destroyed = e, this._writableState.destroyed = e);
                }
            }
        });
        var Mt;
        function Cr() {
            return Mt === void 0 && (Mt = {}), Mt;
        }
        C.fromWeb = function(e, t) {
            return Cr().newStreamDuplexFromReadableWritablePair(e, t);
        };
        C.toWeb = function(e) {
            return Cr().newReadableWritablePairFromDuplex(e);
        };
        var Nt;
        C.from = function(e) {
            return Nt || (Nt = kr()), Nt(e, "body");
        };
    });
    var xt = g((du, vr)=>{
        "use strict";
        var { ObjectSetPrototypeOf: $r, Symbol: rf } = m();
        vr.exports = G;
        var { ERR_METHOD_NOT_IMPLEMENTED: of } = O().codes, qt = v(), { getHighWaterMark: lf } = Ce();
        $r(G.prototype, qt.prototype);
        $r(G, qt);
        var Ee = rf("kCallback");
        function G(e) {
            if (!(this instanceof G)) return new G(e);
            let t = e ? lf(this, e, "readableHighWaterMark", !0) : null;
            t === 0 && (e = {
                ...e,
                highWaterMark: null,
                readableHighWaterMark: t,
                writableHighWaterMark: e.writableHighWaterMark || 0
            }), qt.call(this, e), this._readableState.sync = !1, this[Ee] = null, e && (typeof e.transform == "function" && (this._transform = e.transform), typeof e.flush == "function" && (this._flush = e.flush)), this.on("prefinish", af);
        }
        function Ot(e) {
            typeof this._flush == "function" && !this.destroyed ? this._flush((t, n)=>{
                if (t) {
                    e ? e(t) : this.destroy(t);
                    return;
                }
                n != null && this.push(n), this.push(null), e && e();
            }) : (this.push(null), e && e());
        }
        function af() {
            this._final !== Ot && Ot.call(this);
        }
        G.prototype._final = Ot;
        G.prototype._transform = function(e, t, n) {
            throw new of("_transform()");
        };
        G.prototype._write = function(e, t, n) {
            let r = this._readableState, i = this._writableState, o = r.length;
            this._transform(e, t, (l, u)=>{
                if (l) {
                    n(l);
                    return;
                }
                u != null && this.push(u), i.ended || o === r.length || r.length < r.highWaterMark ? n() : this[Ee] = n;
            });
        };
        G.prototype._read = function() {
            if (this[Ee]) {
                let e = this[Ee];
                this[Ee] = null, e();
            }
        };
    });
    var Pt = g((cu, Ur)=>{
        "use strict";
        var { ObjectSetPrototypeOf: Fr } = m();
        Ur.exports = he;
        var Lt = xt();
        Fr(he.prototype, Lt.prototype);
        Fr(he, Lt);
        function he(e) {
            if (!(this instanceof he)) return new he(e);
            Lt.call(this, e);
        }
        he.prototype._transform = function(e, t, n) {
            n(null, e);
        };
    });
    var Ye = g((hu, zr)=>{
        var He = __process$, { ArrayIsArray: ff, Promise: uf, SymbolAsyncIterator: sf } = m(), Ve = Y(), { once: df } = j(), cf = Z(), Br = v(), { aggregateTwoErrors: hf, codes: { ERR_INVALID_ARG_TYPE: Yr, ERR_INVALID_RETURN_VALUE: kt, ERR_MISSING_ARGS: bf, ERR_STREAM_DESTROYED: _f, ERR_STREAM_PREMATURE_CLOSE: pf }, AbortError: wf } = O(), { validateFunction: yf, validateAbortSignal: gf } = _e(), { isIterable: be, isReadable: Wt, isReadableNodeStream: $t, isNodeStream: Gr } = V(), Sf = globalThis.AbortController, Ct, jt;
        function Hr(e, t, n) {
            let r = !1;
            e.on("close", ()=>{
                r = !0;
            });
            let i = Ve(e, {
                readable: t,
                writable: n
            }, (o)=>{
                r = !o;
            });
            return {
                destroy: (o)=>{
                    r || (r = !0, cf.destroyer(e, o || new _f("pipe")));
                },
                cleanup: i
            };
        }
        function Ef(e) {
            return yf(e[e.length - 1], "streams[stream.length - 1]"), e.pop();
        }
        function Rf(e) {
            if (be(e)) return e;
            if ($t(e)) return Af(e);
            throw new Yr("val", [
                "Readable",
                "Iterable",
                "AsyncIterable"
            ], e);
        }
        async function* Af(e) {
            jt || (jt = we()), yield* jt.prototype[sf].call(e);
        }
        async function Vr(e, t, n, { end: r }) {
            let i, o = null, l = (a)=>{
                if (a && (i = a), o) {
                    let c = o;
                    o = null, c();
                }
            }, u = ()=>new uf((a, c)=>{
                    i ? c(i) : o = ()=>{
                        i ? c(i) : a();
                    };
                });
            t.on("drain", l);
            let f = Ve(t, {
                readable: !1
            }, l);
            try {
                t.writableNeedDrain && await u();
                for await (let a of e)t.write(a) || await u();
                r && t.end(), await u(), n();
            } catch (a) {
                n(i !== a ? hf(i, a) : a);
            } finally{
                f(), t.off("drain", l);
            }
        }
        function mf(...e) {
            return Kr(e, df(Ef(e)));
        }
        function Kr(e, t, n) {
            if (e.length === 1 && ff(e[0]) && (e = e[0]), e.length < 2) throw new bf("streams");
            let r = new Sf, i = r.signal, o = n?.signal, l = [];
            gf(o, "options.signal");
            function u() {
                d(new wf);
            }
            o?.addEventListener("abort", u);
            let f, a, c = [], s = 0;
            function b(_) {
                d(_, --s === 0);
            }
            function d(_, p) {
                if (_ && (!f || f.code === "ERR_STREAM_PREMATURE_CLOSE") && (f = _), !(!f && !p)) {
                    for(; c.length;)c.shift()(f);
                    o?.removeEventListener("abort", u), r.abort(), p && (f || l.forEach((I)=>I()), He.nextTick(t, f, a));
                }
            }
            let h;
            for(let _ = 0; _ < e.length; _++){
                let p = e[_], I = _ < e.length - 1, M = _ > 0, F = I || n?.end !== !1, re = _ === e.length - 1;
                if (Gr(p)) {
                    let P = function(U) {
                        U && U.name !== "AbortError" && U.code !== "ERR_STREAM_PREMATURE_CLOSE" && b(U);
                    };
                    if (F) {
                        let { destroy: U, cleanup: ze } = Hr(p, I, M);
                        c.push(U), Wt(p) && re && l.push(ze);
                    }
                    p.on("error", P), Wt(p) && re && l.push(()=>{
                        p.removeListener("error", P);
                    });
                }
                if (_ === 0) if (typeof p == "function") {
                    if (h = p({
                        signal: i
                    }), !be(h)) throw new kt("Iterable, AsyncIterable or Stream", "source", h);
                } else be(p) || $t(p) ? h = p : h = Br.from(p);
                else if (typeof p == "function") if (h = Rf(h), h = p(h, {
                    signal: i
                }), I) {
                    if (!be(h, !0)) throw new kt("AsyncIterable", `transform[${_ - 1}]`, h);
                } else {
                    var D;
                    Ct || (Ct = Pt());
                    let P = new Ct({
                        objectMode: !0
                    }), U = (D = h) === null || D === void 0 ? void 0 : D.then;
                    if (typeof U == "function") s++, U.call(h, (ie)=>{
                        a = ie, ie != null && P.write(ie), F && P.end(), He.nextTick(b);
                    }, (ie)=>{
                        P.destroy(ie), He.nextTick(b, ie);
                    });
                    else if (be(h, !0)) s++, Vr(h, P, b, {
                        end: F
                    });
                    else throw new kt("AsyncIterable or Promise", "destination", h);
                    h = P;
                    let { destroy: ze, cleanup: _i } = Hr(h, !1, !0);
                    c.push(ze), re && l.push(_i);
                }
                else if (Gr(p)) {
                    if ($t(h)) {
                        s += 2;
                        let P = Tf(h, p, b, {
                            end: F
                        });
                        Wt(p) && re && l.push(P);
                    } else if (be(h)) s++, Vr(h, p, b, {
                        end: F
                    });
                    else throw new Yr("val", [
                        "Readable",
                        "Iterable",
                        "AsyncIterable"
                    ], h);
                    h = p;
                } else h = Br.from(p);
            }
            return (i != null && i.aborted || o != null && o.aborted) && He.nextTick(u), h;
        }
        function Tf(e, t, n, { end: r }) {
            let i = !1;
            return t.on("close", ()=>{
                i || n(new pf);
            }), e.pipe(t, {
                end: r
            }), r ? e.once("end", ()=>{
                i = !0, t.end();
            }) : n(), Ve(e, {
                readable: !0,
                writable: !1
            }, (o)=>{
                let l = e._readableState;
                o && o.code === "ERR_STREAM_PREMATURE_CLOSE" && l && l.ended && !l.errored && !l.errorEmitted ? e.once("end", n).once("error", n) : n(o);
            }), Ve(t, {
                readable: !1,
                writable: !0
            }, n);
        }
        zr.exports = {
            pipelineImpl: Kr,
            pipeline: mf
        };
    });
    var ei = g((bu, Zr)=>{
        "use strict";
        var { pipeline: If } = Ye(), Ke = v(), { destroyer: Mf } = Z(), { isNodeStream: Nf, isReadable: Xr, isWritable: Jr } = V(), { AbortError: Df, codes: { ERR_INVALID_ARG_VALUE: Qr, ERR_MISSING_ARGS: Of } } = O();
        Zr.exports = function(...t) {
            if (t.length === 0) throw new Of("streams");
            if (t.length === 1) return Ke.from(t[0]);
            let n = [
                ...t
            ];
            if (typeof t[0] == "function" && (t[0] = Ke.from(t[0])), typeof t[t.length - 1] == "function") {
                let d = t.length - 1;
                t[d] = Ke.from(t[d]);
            }
            for(let d = 0; d < t.length; ++d)if (!!Nf(t[d])) {
                if (d < t.length - 1 && !Xr(t[d])) throw new Qr(`streams[${d}]`, n[d], "must be readable");
                if (d > 0 && !Jr(t[d])) throw new Qr(`streams[${d}]`, n[d], "must be writable");
            }
            let r, i, o, l, u;
            function f(d) {
                let h = l;
                l = null, h ? h(d) : d ? u.destroy(d) : !b && !s && u.destroy();
            }
            let a = t[0], c = If(t, f), s = !!Jr(a), b = !!Xr(c);
            return u = new Ke({
                writableObjectMode: !!(a != null && a.writableObjectMode),
                readableObjectMode: !!(c != null && c.writableObjectMode),
                writable: s,
                readable: b
            }), s && (u._write = function(d, h, D) {
                a.write(d, h) ? D() : r = D;
            }, u._final = function(d) {
                a.end(), i = d;
            }, a.on("drain", function() {
                if (r) {
                    let d = r;
                    r = null, d();
                }
            }), c.on("finish", function() {
                if (i) {
                    let d = i;
                    i = null, d();
                }
            })), b && (c.on("readable", function() {
                if (o) {
                    let d = o;
                    o = null, d();
                }
            }), c.on("end", function() {
                u.push(null);
            }), u._read = function() {
                for(;;){
                    let d = c.read();
                    if (d === null) {
                        o = u._read;
                        return;
                    }
                    if (!u.push(d)) return;
                }
            }), u._destroy = function(d, h) {
                !d && l !== null && (d = new Df), o = null, r = null, i = null, l === null ? h(d) : (l = h, Mf(c, d));
            }, u;
        };
    });
    var vt = g((_u, ti)=>{
        "use strict";
        var { ArrayPrototypePop: qf, Promise: xf } = m(), { isIterable: Lf, isNodeStream: Pf } = V(), { pipelineImpl: kf } = Ye(), { finished: Wf } = Y();
        function Cf(...e) {
            return new xf((t, n)=>{
                let r, i, o = e[e.length - 1];
                if (o && typeof o == "object" && !Pf(o) && !Lf(o)) {
                    let l = qf(e);
                    r = l.signal, i = l.end;
                }
                kf(e, (l, u)=>{
                    l ? n(l) : t(u);
                }, {
                    signal: r,
                    end: i
                });
            });
        }
        ti.exports = {
            finished: Wf,
            pipeline: Cf
        };
    });
    var di = g((pu, si)=>{
        var { Buffer: jf } = __default3, { ObjectDefineProperty: H, ObjectKeys: ii, ReflectApply: oi } = m(), { promisify: { custom: li } } = j(), { streamReturningOperators: ni, promiseReturningOperators: ri } = xn(), { codes: { ERR_ILLEGAL_CONSTRUCTOR: ai } } = O(), $f = ei(), { pipeline: fi } = Ye(), { destroyer: vf } = Z(), ui = Y(), Ft = vt(), Ut = V(), R = si.exports = Le().Stream;
        R.isDisturbed = Ut.isDisturbed;
        R.isErrored = Ut.isErrored;
        R.isReadable = Ut.isReadable;
        R.Readable = we();
        for (let e of ii(ni)){
            let n = function(...r) {
                if (new.target) throw ai();
                return R.Readable.from(oi(t, this, r));
            };
            n;
            let t = ni[e];
            H(n, "name", {
                __proto__: null,
                value: t.name
            }), H(n, "length", {
                __proto__: null,
                value: t.length
            }), H(R.Readable.prototype, e, {
                __proto__: null,
                value: n,
                enumerable: !1,
                configurable: !0,
                writable: !0
            });
        }
        for (let e of ii(ri)){
            let n = function(...i) {
                if (new.target) throw ai();
                return oi(t, this, i);
            };
            n;
            let t = ri[e];
            H(n, "name", {
                __proto__: null,
                value: t.name
            }), H(n, "length", {
                __proto__: null,
                value: t.length
            }), H(R.Readable.prototype, e, {
                __proto__: null,
                value: n,
                enumerable: !1,
                configurable: !0,
                writable: !0
            });
        }
        R.Writable = Tt();
        R.Duplex = v();
        R.Transform = xt();
        R.PassThrough = Pt();
        R.pipeline = fi;
        var { addAbortSignal: Ff } = ke();
        R.addAbortSignal = Ff;
        R.finished = ui;
        R.destroy = vf;
        R.compose = $f;
        H(R, "promises", {
            __proto__: null,
            configurable: !0,
            enumerable: !0,
            get () {
                return Ft;
            }
        });
        H(fi, li, {
            __proto__: null,
            enumerable: !0,
            get () {
                return Ft.pipeline;
            }
        });
        H(ui, li, {
            __proto__: null,
            enumerable: !0,
            get () {
                return Ft.finished;
            }
        });
        R.Stream = R;
        R._isUint8Array = function(t) {
            return t instanceof Uint8Array;
        };
        R._uint8ArrayToBuffer = function(t) {
            return jf.from(t.buffer, t.byteOffset, t.byteLength);
        };
    });
    var ci = g((wu, A)=>{
        "use strict";
        var T = di(), Bf = vt(), Gf = T.Readable.destroy;
        A.exports = T.Readable;
        A.exports._uint8ArrayToBuffer = T._uint8ArrayToBuffer;
        A.exports._isUint8Array = T._isUint8Array;
        A.exports.isDisturbed = T.isDisturbed;
        A.exports.isErrored = T.isErrored;
        A.exports.isReadable = T.isReadable;
        A.exports.Readable = T.Readable;
        A.exports.Writable = T.Writable;
        A.exports.Duplex = T.Duplex;
        A.exports.Transform = T.Transform;
        A.exports.PassThrough = T.PassThrough;
        A.exports.addAbortSignal = T.addAbortSignal;
        A.exports.finished = T.finished;
        A.exports.destroy = T.destroy;
        A.exports.destroy = Gf;
        A.exports.pipeline = T.pipeline;
        A.exports.compose = T.compose;
        Object.defineProperty(T, "promises", {
            configurable: !0,
            enumerable: !0,
            get () {
                return Bf;
            }
        });
        A.exports.Stream = T.Stream;
        A.exports.default = A.exports;
    });
    var bi = Ri(ci()), { _uint8ArrayToBuffer: yu, _isUint8Array: gu, isDisturbed: Su, isErrored: Eu, isReadable: Ru, Readable: Au, Writable: mu, Duplex: Tu, Transform: Iu, PassThrough: Mu, addAbortSignal: Nu, finished: Du, destroy: Ou, pipeline: qu, compose: xu, Stream: Lu } = bi, { default: hi, ...Hf } = bi;
    const process1 = __process$;
    const { Buffer: Buffer1 } = __default3;
    const Readable = Au;
    const Writable = mu;
    const Duplex = Tu;
    function isReadableStream(object) {
        return object instanceof ReadableStream;
    }
    function isWritableStream(object) {
        return object instanceof WritableStream;
    }
    Readable.fromWeb = function(readableStream, options = kEmptyObject) {
        if (!isReadableStream(readableStream)) {
            throw new ERR_INVALID_ARG_TYPE("readableStream", "ReadableStream", readableStream);
        }
        validateObject(options, "options");
        const { highWaterMark, encoding, objectMode = false, signal } = options;
        if (encoding !== undefined && !Buffer1.isEncoding(encoding)) {
            throw new ERR_INVALID_ARG_VALUE(encoding, "options.encoding");
        }
        validateBoolean(objectMode, "options.objectMode");
        const reader = readableStream.getReader();
        let closed = false;
        const readable = new Readable({
            objectMode,
            highWaterMark,
            encoding,
            signal,
            read () {
                reader.read().then((chunk)=>{
                    if (chunk.done) {
                        readable.push(null);
                    } else {
                        readable.push(chunk.value);
                    }
                }, (error)=>destroy.call(readable, error));
            },
            destroy (error, callback) {
                function done() {
                    try {
                        callback(error);
                    } catch (error) {
                        process1.nextTick(()=>{
                            throw error;
                        });
                    }
                }
                if (!closed) {
                    reader.cancel(error).then(done, done);
                    return;
                }
                done();
            }
        });
        reader.closed.then(()=>{
            closed = true;
            if (!isReadableEnded1(readable)) {
                readable.push(null);
            }
        }, (error)=>{
            closed = true;
            destroy.call(readable, error);
        });
        return readable;
    };
    Writable.fromWeb = function(writableStream, options = kEmptyObject) {
        if (!isWritableStream(writableStream)) {
            throw new ERR_INVALID_ARG_TYPE("writableStream", "WritableStream", writableStream);
        }
        validateObject(options, "options");
        const { highWaterMark, decodeStrings = true, objectMode = false, signal } = options;
        validateBoolean(objectMode, "options.objectMode");
        validateBoolean(decodeStrings, "options.decodeStrings");
        const writer = writableStream.getWriter();
        let closed = false;
        const writable = new Writable({
            highWaterMark,
            objectMode,
            decodeStrings,
            signal,
            writev (chunks, callback) {
                function done(error) {
                    error = error.filter((e)=>e);
                    try {
                        callback(error.length === 0 ? undefined : error);
                    } catch (error) {
                        process1.nextTick(()=>destroy.call(writable, error));
                    }
                }
                writer.ready.then(()=>Promise.all(chunks.map((data)=>writer.write(data.chunk))).then(done, done), done);
            },
            write (chunk, encoding, callback) {
                if (typeof chunk === "string" && decodeStrings && !objectMode) {
                    chunk = Buffer1.from(chunk, encoding);
                    chunk = new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);
                }
                function done(error) {
                    try {
                        callback(error);
                    } catch (error) {
                        destroy(this, duplex, error);
                    }
                }
                writer.ready.then(()=>writer.write(chunk).then(done, done), done);
            },
            destroy (error, callback) {
                function done() {
                    try {
                        callback(error);
                    } catch (error) {
                        process1.nextTick(()=>{
                            throw error;
                        });
                    }
                }
                if (!closed) {
                    if (error != null) {
                        writer.abort(error).then(done, done);
                    } else {
                        writer.close().then(done, done);
                    }
                    return;
                }
                done();
            },
            final (callback) {
                function done(error) {
                    try {
                        callback(error);
                    } catch (error) {
                        process1.nextTick(()=>destroy.call(writable, error));
                    }
                }
                if (!closed) {
                    writer.close().then(done, done);
                }
            }
        });
        writer.closed.then(()=>{
            closed = true;
            if (!isWritableEnded(writable)) {
                destroy.call(writable, new ERR_STREAM_PREMATURE_CLOSE());
            }
        }, (error)=>{
            closed = true;
            destroy.call(writable, error);
        });
        return writable;
    };
    Duplex.fromWeb = function(pair, options = kEmptyObject) {
        validateObject(pair, "pair");
        const { readable: readableStream, writable: writableStream } = pair;
        if (!isReadableStream(readableStream)) {
            throw new ERR_INVALID_ARG_TYPE("pair.readable", "ReadableStream", readableStream);
        }
        if (!isWritableStream(writableStream)) {
            throw new ERR_INVALID_ARG_TYPE("pair.writable", "WritableStream", writableStream);
        }
        validateObject(options, "options");
        const { allowHalfOpen = false, objectMode = false, encoding, decodeStrings = true, highWaterMark, signal } = options;
        validateBoolean(objectMode, "options.objectMode");
        if (encoding !== undefined && !Buffer1.isEncoding(encoding)) {
            throw new ERR_INVALID_ARG_VALUE(encoding, "options.encoding");
        }
        const writer = writableStream.getWriter();
        const reader = readableStream.getReader();
        let writableClosed = false;
        let readableClosed = false;
        const duplex1 = new Duplex({
            allowHalfOpen,
            highWaterMark,
            objectMode,
            encoding,
            decodeStrings,
            signal,
            writev (chunks, callback) {
                function done(error) {
                    error = error.filter((e)=>e);
                    try {
                        callback(error.length === 0 ? undefined : error);
                    } catch (error) {
                        process1.nextTick(()=>destroy(duplex1, error));
                    }
                }
                writer.ready.then(()=>Promise.all(chunks.map((data)=>writer.write(data.chunk))).then(done, done), done);
            },
            write (chunk, encoding, callback) {
                if (typeof chunk === "string" && decodeStrings && !objectMode) {
                    chunk = Buffer1.from(chunk, encoding);
                    chunk = new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);
                }
                function done(error) {
                    try {
                        callback(error);
                    } catch (error) {
                        destroy(duplex1, error);
                    }
                }
                writer.ready.then(()=>writer.write(chunk).then(done, done), done);
            },
            final (callback) {
                function done(error) {
                    try {
                        callback(error);
                    } catch (error) {
                        process1.nextTick(()=>destroy(duplex1, error));
                    }
                }
                if (!writableClosed) {
                    writer.close().then(done, done);
                }
            },
            read () {
                reader.read().then((chunk)=>{
                    if (chunk.done) {
                        duplex1.push(null);
                    } else {
                        duplex1.push(chunk.value);
                    }
                }, (error)=>destroy(duplex1, error));
            },
            destroy (error, callback) {
                function done() {
                    try {
                        callback(error);
                    } catch (error) {
                        process1.nextTick(()=>{
                            throw error;
                        });
                    }
                }
                async function closeWriter() {
                    if (!writableClosed) {
                        await writer.abort(error);
                    }
                }
                async function closeReader() {
                    if (!readableClosed) {
                        await reader.cancel(error);
                    }
                }
                if (!writableClosed || !readableClosed) {
                    Promise.all([
                        closeWriter(),
                        closeReader()
                    ]).then(done, done);
                    return;
                }
                done();
            }
        });
        writer.closed.then(()=>{
            writableClosed = true;
            if (!isWritableEnded(duplex1)) {
                destroy(duplex1, new ERR_STREAM_PREMATURE_CLOSE());
            }
        }, (error)=>{
            writableClosed = true;
            readableClosed = true;
            destroy(duplex1, error);
        });
        reader.closed.then(()=>{
            readableClosed = true;
            if (!isReadableEnded1(duplex1)) {
                duplex1.push(null);
            }
        }, (error)=>{
            writableClosed = true;
            readableClosed = true;
            destroy(duplex1, error);
        });
        return duplex1;
    };
    delete Readable.Duplex;
    delete Readable.PassThrough;
    delete Readable.Readable;
    delete Readable.Stream;
    delete Readable.Transform;
    delete Readable.Writable;
    delete Readable._isUint8Array;
    delete Readable._uint8ArrayToBuffer;
    delete Readable.addAbortSignal;
    delete Readable.compose;
    delete Readable.destroy;
    delete Readable.finished;
    delete Readable.isDisturbed;
    delete Readable.isErrored;
    delete Readable.isReadable;
    delete Readable.pipeline;
    function newReadableStreamFromStreamReadable(streamReadable, options = kEmptyObject) {
        if (typeof streamReadable?._readableState !== "object") {
            throw new ERR_INVALID_ARG_TYPE("streamReadable", "stream.Readable", streamReadable);
        }
        if (isDestroyed(streamReadable) || !isReadable1(streamReadable)) {
            const readable = new ReadableStream();
            readable.cancel();
            return readable;
        }
        const objectMode = streamReadable.readableObjectMode;
        const highWaterMark = streamReadable.readableHighWaterMark;
        const evaluateStrategyOrFallback = (strategy)=>{
            if (strategy) {
                return strategy;
            }
            if (objectMode) {
                return new CountQueuingStrategy({
                    highWaterMark
                });
            }
            return {
                highWaterMark
            };
        };
        const strategy = evaluateStrategyOrFallback(options?.strategy);
        let controller;
        function onData(chunk) {
            if (Buffer1.isBuffer(chunk) && !objectMode) {
                chunk = new Uint8Array(chunk);
            }
            controller.enqueue(chunk);
            if (controller.desiredSize <= 0) {
                streamReadable.pause();
            }
        }
        streamReadable.pause();
        const cleanup = eos(streamReadable, (error)=>{
            if (error?.code === "ERR_STREAM_PREMATURE_CLOSE") {
                const err = new AbortError(undefined, {
                    cause: error
                });
                error = err;
            }
            cleanup();
            streamReadable.on("error", ()=>{});
            if (error) {
                return controller.error(error);
            }
            controller.close();
        });
        streamReadable.on("data", onData);
        return new ReadableStream({
            start (c) {
                controller = c;
            },
            pull () {
                streamReadable.resume();
            },
            cancel (reason) {
                destroy(streamReadable, reason);
            }
        }, strategy);
    }
    function newWritableStreamFromStreamWritable(streamWritable) {
        if (typeof streamWritable?._writableState !== "object") {
            throw new ERR_INVALID_ARG_TYPE("streamWritable", "stream.Writable", streamWritable);
        }
        if (isDestroyed(streamWritable) || !isWritable1(streamWritable)) {
            const writable = new WritableStream();
            writable.close();
            return writable;
        }
        const highWaterMark = streamWritable.writableHighWaterMark;
        const strategy = streamWritable.writableObjectMode ? new CountQueuingStrategy({
            highWaterMark
        }) : {
            highWaterMark
        };
        let controller;
        let backpressurePromise;
        let closed;
        function onDrain() {
            if (backpressurePromise !== undefined) {
                backpressurePromise.resolve();
            }
        }
        const cleanup = eos(streamWritable, (error)=>{
            if (error?.code === "ERR_STREAM_PREMATURE_CLOSE") {
                const err = new AbortError(undefined, {
                    cause: error
                });
                error = err;
            }
            cleanup();
            streamWritable.on("error", ()=>{});
            if (error != null) {
                if (backpressurePromise !== undefined) {
                    backpressurePromise.reject(error);
                }
                if (closed !== undefined) {
                    closed.reject(error);
                    closed = undefined;
                }
                controller.error(error);
                controller = undefined;
                return;
            }
            if (closed !== undefined) {
                closed.resolve();
                closed = undefined;
                return;
            }
            controller.error(new AbortError());
            controller = undefined;
        });
        streamWritable.on("drain", onDrain);
        return new WritableStream({
            start (c) {
                controller = c;
            },
            async write (chunk) {
                if (streamWritable.writableNeedDrain || !streamWritable.write(chunk)) {
                    backpressurePromise = createDeferredPromise();
                    return backpressurePromise.promise.finally(()=>{
                        backpressurePromise = undefined;
                    });
                }
            },
            abort (reason) {
                destroy(streamWritable, reason);
            },
            close () {
                if (closed === undefined && !isWritableEnded(streamWritable)) {
                    closed = createDeferredPromise();
                    streamWritable.end();
                    return closed.promise;
                }
                controller = undefined;
                return Promise.resolve();
            }
        }, strategy);
    }
    function newReadableWritablePairFromDuplex(duplex1) {
        if (typeof duplex1?._writableState !== "object" || typeof duplex1?._readableState !== "object") {
            throw new ERR_INVALID_ARG_TYPE("duplex", "stream.Duplex", duplex1);
        }
        if (isDestroyed(duplex1)) {
            const writable = new WritableStream();
            const readable = new ReadableStream();
            writable.close();
            readable.cancel();
            return {
                readable,
                writable
            };
        }
        const writable = isWritable1(duplex1) ? newWritableStreamFromStreamWritable(duplex1) : new WritableStream();
        if (!isWritable1(duplex1)) {
            writable.close();
        }
        const readable = isReadable1(duplex1) ? newReadableStreamFromStreamReadable(duplex1) : new ReadableStream();
        if (!isReadable1(duplex1)) {
            readable.cancel();
        }
        return {
            writable,
            readable
        };
    }
    Readable.toWeb = newReadableStreamFromStreamReadable;
    Writable.toWeb = newWritableStreamFromStreamWritable;
    Duplex.toWeb = newReadableWritablePairFromDuplex;
    function createWritableStdioStream(writer, name) {
        const stream = new mu({
            write (buf, enc, cb) {
                if (!writer) {
                    this.destroy(new Error(`Deno.${name} is not available in this environment`));
                    return;
                }
                writer.writeSync(buf instanceof Uint8Array ? buf : Buffer.from(buf, enc));
                cb();
            },
            destroy (err, cb) {
                cb(err);
                this._undestroy();
                if (!this._writableState.emitClose) {
                    nextTick(()=>this.emit("close"));
                }
            }
        });
        stream.fd = writer?.rid ?? -1;
        stream.destroySoon = stream.destroy;
        stream._isStdio = true;
        stream.once("close", ()=>writer?.close());
        Object.defineProperties(stream, {
            columns: {
                enumerable: true,
                configurable: true,
                get: ()=>Deno.isatty?.(writer?.rid) ? Deno.consoleSize?.().columns : undefined
            },
            rows: {
                enumerable: true,
                configurable: true,
                get: ()=>Deno.isatty?.(writer?.rid) ? Deno.consoleSize?.().rows : undefined
            },
            isTTY: {
                enumerable: true,
                configurable: true,
                get: ()=>Deno.isatty?.(writer?.rid)
            },
            getWindowSize: {
                enumerable: true,
                configurable: true,
                value: ()=>Deno.isatty?.(writer?.rid) ? Object.values(Deno.consoleSize?.()) : undefined
            }
        });
        if (Deno.isatty?.(writer?.rid)) {
            stream.cursorTo = function(x, y, callback) {
                return cursorTo(this, x, y, callback);
            };
            stream.moveCursor = function(dx, dy, callback) {
                return moveCursor(this, dx, dy, callback);
            };
            stream.clearLine = function(dir, callback) {
                return clearLine(this, dir, callback);
            };
            stream.clearScreenDown = function(callback) {
                return clearScreenDown(this, callback);
            };
        }
        return stream;
    }
    const stderr = stdio.stderr = createWritableStdioStream(Deno.stderr, "stderr");
    const stdout = stdio.stdout = createWritableStdioStream(Deno.stdout, "stdout");
    function _guessStdinType(fd) {
        if (typeof fd !== "number" || fd < 0) return "UNKNOWN";
        if (Deno.isatty?.(fd)) return "TTY";
        try {
            const fileInfo = Deno.fstatSync?.(fd);
            if (Deno.build.os !== "windows") {
                switch(fileInfo.mode & fs.S_IFMT){
                    case fs.S_IFREG:
                    case fs.S_IFCHR:
                        return "FILE";
                    case fs.S_IFIFO:
                        return "PIPE";
                    case fs.S_IFSOCK:
                        return "TCP";
                    default:
                        return "UNKNOWN";
                }
            }
            if (fileInfo.isFile) {
                if (fileInfo.birthtime.valueOf() === 11644473600000) return "PIPE";
                return "FILE";
            }
        } catch (e) {
            if (Deno.build.os === "windows" && e.code === "EISDIR") return "FILE";
        }
        return "UNKNOWN";
    }
    const _read = function(size) {
        const p = Buffer.alloc(size || 16 * 1024);
        Deno.stdin?.read(p).then((length)=>{
            this.push(length === null ? null : p.slice(0, length));
        }, (error)=>{
            this.destroy(error);
        });
    };
    const stdin = stdio.stdin = (()=>{
        const fd = Deno.stdin?.rid;
        let _stdin;
        const stdinType = _guessStdinType(fd);
        switch(stdinType){
            case "FILE":
                {
                    _stdin = new Au({
                        highWaterMark: 64 * 1024,
                        autoDestroy: false,
                        read: _read
                    });
                    break;
                }
            case "TTY":
            case "PIPE":
            case "TCP":
                {
                    _stdin = new Tu({
                        readable: stdinType === "TTY" ? undefined : true,
                        writable: stdinType === "TTY" ? undefined : false,
                        readableHighWaterMark: stdinType === "TTY" ? 0 : undefined,
                        allowHalfOpen: false,
                        emitClose: false,
                        autoDestroy: true,
                        decodeStrings: false,
                        read: _read
                    });
                    if (stdinType !== "TTY") {
                        _stdin._writableState.ended = true;
                    }
                    break;
                }
            default:
                {
                    _stdin = new Au({
                        read () {}
                    });
                    _stdin.push(null);
                }
        }
        return _stdin;
    })();
    stdin.on("close", ()=>Deno.stdin?.close());
    stdin.fd = Deno.stdin?.rid ?? -1;
    Object.defineProperty(stdin, "isTTY", {
        enumerable: true,
        configurable: true,
        get () {
            return Deno.isatty?.(Deno.stdin.rid);
        }
    });
    stdin._isRawMode = false;
    stdin.setRawMode = (enable)=>{
        Deno.stdin?.setRaw?.(enable);
        stdin._isRawMode = enable;
        return stdin;
    };
    Object.defineProperty(stdin, "isRaw", {
        enumerable: true,
        configurable: true,
        get () {
            return stdin._isRawMode;
        }
    });
    function registerDestroyHook(_target, _asyncId, _prop) {}
    var constants1;
    (function(constants) {
        constants[constants["kInit"] = 0] = "kInit";
        constants[constants["kBefore"] = 1] = "kBefore";
        constants[constants["kAfter"] = 2] = "kAfter";
        constants[constants["kDestroy"] = 3] = "kDestroy";
        constants[constants["kPromiseResolve"] = 4] = "kPromiseResolve";
        constants[constants["kTotals"] = 5] = "kTotals";
        constants[constants["kCheck"] = 6] = "kCheck";
        constants[constants["kExecutionAsyncId"] = 7] = "kExecutionAsyncId";
        constants[constants["kTriggerAsyncId"] = 8] = "kTriggerAsyncId";
        constants[constants["kAsyncIdCounter"] = 9] = "kAsyncIdCounter";
        constants[constants["kDefaultTriggerAsyncId"] = 10] = "kDefaultTriggerAsyncId";
        constants[constants["kUsesExecutionAsyncResource"] = 11] = "kUsesExecutionAsyncResource";
        constants[constants["kStackLength"] = 12] = "kStackLength";
    })(constants1 || (constants1 = {}));
    const asyncHookFields = new Uint32Array(Object.keys(constants1).length);
    function newAsyncId() {
        return ++asyncIdFields[constants1.kAsyncIdCounter];
    }
    var UidFields;
    (function(UidFields) {
        UidFields[UidFields["kExecutionAsyncId"] = 0] = "kExecutionAsyncId";
        UidFields[UidFields["kTriggerAsyncId"] = 1] = "kTriggerAsyncId";
        UidFields[UidFields["kAsyncIdCounter"] = 2] = "kAsyncIdCounter";
        UidFields[UidFields["kDefaultTriggerAsyncId"] = 3] = "kDefaultTriggerAsyncId";
        UidFields[UidFields["kUidFieldsCount"] = 4] = "kUidFieldsCount";
    })(UidFields || (UidFields = {}));
    const asyncIdFields = new Float64Array(Object.keys(UidFields).length);
    asyncIdFields[UidFields.kAsyncIdCounter] = 1;
    asyncIdFields[UidFields.kDefaultTriggerAsyncId] = -1;
    var providerType;
    (function(providerType) {
        providerType[providerType["NONE"] = 0] = "NONE";
        providerType[providerType["DIRHANDLE"] = 1] = "DIRHANDLE";
        providerType[providerType["DNSCHANNEL"] = 2] = "DNSCHANNEL";
        providerType[providerType["ELDHISTOGRAM"] = 3] = "ELDHISTOGRAM";
        providerType[providerType["FILEHANDLE"] = 4] = "FILEHANDLE";
        providerType[providerType["FILEHANDLECLOSEREQ"] = 5] = "FILEHANDLECLOSEREQ";
        providerType[providerType["FIXEDSIZEBLOBCOPY"] = 6] = "FIXEDSIZEBLOBCOPY";
        providerType[providerType["FSEVENTWRAP"] = 7] = "FSEVENTWRAP";
        providerType[providerType["FSREQCALLBACK"] = 8] = "FSREQCALLBACK";
        providerType[providerType["FSREQPROMISE"] = 9] = "FSREQPROMISE";
        providerType[providerType["GETADDRINFOREQWRAP"] = 10] = "GETADDRINFOREQWRAP";
        providerType[providerType["GETNAMEINFOREQWRAP"] = 11] = "GETNAMEINFOREQWRAP";
        providerType[providerType["HEAPSNAPSHOT"] = 12] = "HEAPSNAPSHOT";
        providerType[providerType["HTTP2SESSION"] = 13] = "HTTP2SESSION";
        providerType[providerType["HTTP2STREAM"] = 14] = "HTTP2STREAM";
        providerType[providerType["HTTP2PING"] = 15] = "HTTP2PING";
        providerType[providerType["HTTP2SETTINGS"] = 16] = "HTTP2SETTINGS";
        providerType[providerType["HTTPINCOMINGMESSAGE"] = 17] = "HTTPINCOMINGMESSAGE";
        providerType[providerType["HTTPCLIENTREQUEST"] = 18] = "HTTPCLIENTREQUEST";
        providerType[providerType["JSSTREAM"] = 19] = "JSSTREAM";
        providerType[providerType["JSUDPWRAP"] = 20] = "JSUDPWRAP";
        providerType[providerType["MESSAGEPORT"] = 21] = "MESSAGEPORT";
        providerType[providerType["PIPECONNECTWRAP"] = 22] = "PIPECONNECTWRAP";
        providerType[providerType["PIPESERVERWRAP"] = 23] = "PIPESERVERWRAP";
        providerType[providerType["PIPEWRAP"] = 24] = "PIPEWRAP";
        providerType[providerType["PROCESSWRAP"] = 25] = "PROCESSWRAP";
        providerType[providerType["PROMISE"] = 26] = "PROMISE";
        providerType[providerType["QUERYWRAP"] = 27] = "QUERYWRAP";
        providerType[providerType["SHUTDOWNWRAP"] = 28] = "SHUTDOWNWRAP";
        providerType[providerType["SIGNALWRAP"] = 29] = "SIGNALWRAP";
        providerType[providerType["STATWATCHER"] = 30] = "STATWATCHER";
        providerType[providerType["STREAMPIPE"] = 31] = "STREAMPIPE";
        providerType[providerType["TCPCONNECTWRAP"] = 32] = "TCPCONNECTWRAP";
        providerType[providerType["TCPSERVERWRAP"] = 33] = "TCPSERVERWRAP";
        providerType[providerType["TCPWRAP"] = 34] = "TCPWRAP";
        providerType[providerType["TTYWRAP"] = 35] = "TTYWRAP";
        providerType[providerType["UDPSENDWRAP"] = 36] = "UDPSENDWRAP";
        providerType[providerType["UDPWRAP"] = 37] = "UDPWRAP";
        providerType[providerType["SIGINTWATCHDOG"] = 38] = "SIGINTWATCHDOG";
        providerType[providerType["WORKER"] = 39] = "WORKER";
        providerType[providerType["WORKERHEAPSNAPSHOT"] = 40] = "WORKERHEAPSNAPSHOT";
        providerType[providerType["WRITEWRAP"] = 41] = "WRITEWRAP";
        providerType[providerType["ZLIB"] = 42] = "ZLIB";
    })(providerType || (providerType = {}));
    const kInvalidAsyncId = -1;
    class AsyncWrap {
        provider = providerType.NONE;
        asyncId = kInvalidAsyncId;
        constructor(provider){
            this.provider = provider;
            this.getAsyncId();
        }
        getAsyncId() {
            this.asyncId = this.asyncId === kInvalidAsyncId ? newAsyncId() : this.asyncId;
            return this.asyncId;
        }
        getProviderType() {
            return this.provider;
        }
    }
    const mod9 = {
        async_hook_fields: asyncHookFields,
        asyncIdFields: asyncIdFields,
        registerDestroyHook: registerDestroyHook,
        constants: constants1,
        newAsyncId: newAsyncId,
        UidFields: UidFields,
        providerType: providerType,
        AsyncWrap: AsyncWrap
    };
    const mod10 = {};
    const v4Seg = "(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])";
    const v4Str = `(${v4Seg}[.]){3}${v4Seg}`;
    const IPv4Reg = new RegExp(`^${v4Str}$`);
    const v6Seg = "(?:[0-9a-fA-F]{1,4})";
    const IPv6Reg = new RegExp("^(" + `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` + `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` + `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` + `(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` + `(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` + `(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` + `(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` + `(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` + ")(%[0-9a-zA-Z-.:]{1,})?$");
    function isIPv4(ip) {
        return RegExp.prototype.test.call(IPv4Reg, ip);
    }
    function isIPv6(ip) {
        return RegExp.prototype.test.call(IPv6Reg, ip);
    }
    function isIP(ip) {
        if (isIPv4(ip)) {
            return 4;
        }
        if (isIPv6(ip)) {
            return 6;
        }
        return 0;
    }
    Symbol("normalizedArgs");
    function ares_strerror(code) {
        const errorText = [
            "Successful completion",
            "DNS server returned answer with no data",
            "DNS server claims query was misformatted",
            "DNS server returned general failure",
            "Domain name not found",
            "DNS server does not implement requested operation",
            "DNS server refused query",
            "Misformatted DNS query",
            "Misformatted domain name",
            "Unsupported address family",
            "Misformatted DNS reply",
            "Could not contact DNS servers",
            "Timeout while contacting DNS servers",
            "End of file",
            "Error reading file",
            "Out of memory",
            "Channel is being destroyed",
            "Misformatted string",
            "Illegal flags specified",
            "Given hostname is not numeric",
            "Illegal hints flags specified",
            "c-ares library initialization not yet performed",
            "Error loading iphlpapi.dll",
            "Could not find GetNetworkParams function",
            "DNS query cancelled"
        ];
        if (code >= 0 && code < errorText.length) {
            return errorText[code];
        } else {
            return "unknown";
        }
    }
    class GetAddrInfoReqWrap extends AsyncWrap {
        family;
        hostname;
        callback;
        resolve;
        reject;
        oncomplete;
        constructor(){
            super(providerType.GETADDRINFOREQWRAP);
        }
    }
    function getaddrinfo(req, hostname, family, _hints, verbatim) {
        let addresses = [];
        const recordTypes = [];
        if (family === 0 || family === 4) {
            recordTypes.push("A");
        }
        if (family === 0 || family === 6) {
            recordTypes.push("AAAA");
        }
        (async ()=>{
            await Promise.allSettled(recordTypes.map((recordType)=>Deno.resolveDns(hostname, recordType).then((records)=>{
                    records.forEach((record)=>addresses.push(record));
                })));
            const error = addresses.length ? 0 : codeMap.get("EAI_NODATA");
            if (!verbatim) {
                addresses.sort((a, b)=>{
                    if (isIPv4(a)) {
                        return -1;
                    } else if (isIPv4(b)) {
                        return 1;
                    }
                    return 0;
                });
            }
            if (isWindows && hostname === "localhost") {
                addresses = addresses.filter((address)=>isIPv4(address));
            }
            req.oncomplete(error, addresses);
        })();
        return 0;
    }
    class QueryReqWrap extends AsyncWrap {
        bindingName;
        hostname;
        ttl;
        callback;
        resolve;
        reject;
        oncomplete;
        constructor(){
            super(providerType.QUERYWRAP);
        }
    }
    function fqdnToHostname(fqdn) {
        return fqdn.replace(/\.$/, "");
    }
    function compressIPv6(address) {
        const formatted = address.replace(/\b(?:0+:){2,}/, ":");
        const finalAddress = formatted.split(":").map((octet)=>{
            if (octet.match(/^\d+\.\d+\.\d+\.\d+$/)) {
                return Number(octet.replaceAll(".", "")).toString(16);
            }
            return octet.replace(/\b0+/g, "");
        }).join(":");
        return finalAddress;
    }
    class ChannelWrap extends AsyncWrap {
        #servers = [];
        #timeout;
        #tries;
        constructor(timeout, tries){
            super(providerType.DNSCHANNEL);
            this.#timeout = timeout;
            this.#tries = tries;
        }
        async #query(query, recordType) {
            let code;
            let ret;
            if (this.#servers.length) {
                for (const [ipAddr, port] of this.#servers){
                    const resolveOptions = {
                        nameServer: {
                            ipAddr,
                            port
                        }
                    };
                    ({ code, ret } = await this.#resolve(query, recordType, resolveOptions));
                    if (code === 0 || code === codeMap.get("EAI_NODATA")) {
                        break;
                    }
                }
            } else {
                ({ code, ret } = await this.#resolve(query, recordType));
            }
            return {
                code: code,
                ret: ret
            };
        }
        async #resolve(query, recordType, resolveOptions) {
            let ret = [];
            let code = 0;
            try {
                ret = await Deno.resolveDns(query, recordType, resolveOptions);
            } catch (e) {
                if (e instanceof Deno.errors.NotFound) {
                    code = codeMap.get("EAI_NODATA");
                } else {
                    code = codeMap.get("UNKNOWN");
                }
            }
            return {
                code,
                ret
            };
        }
        queryAny(req, name) {
            (async ()=>{
                const records = [];
                await Promise.allSettled([
                    this.#query(name, "A").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "A",
                                address: record
                            }));
                    }),
                    this.#query(name, "AAAA").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "AAAA",
                                address: compressIPv6(record)
                            }));
                    }),
                    this.#query(name, "CAA").then(({ ret })=>{
                        ret.forEach(({ critical, tag, value })=>records.push({
                                type: "CAA",
                                [tag]: value,
                                critical: +critical && 128
                            }));
                    }),
                    this.#query(name, "CNAME").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "CNAME",
                                value: record
                            }));
                    }),
                    this.#query(name, "MX").then(({ ret })=>{
                        ret.forEach(({ preference, exchange })=>records.push({
                                type: "MX",
                                priority: preference,
                                exchange: fqdnToHostname(exchange)
                            }));
                    }),
                    this.#query(name, "NAPTR").then(({ ret })=>{
                        ret.forEach(({ order, preference, flags, services, regexp, replacement })=>records.push({
                                type: "NAPTR",
                                order,
                                preference,
                                flags,
                                service: services,
                                regexp,
                                replacement
                            }));
                    }),
                    this.#query(name, "NS").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "NS",
                                value: fqdnToHostname(record)
                            }));
                    }),
                    this.#query(name, "PTR").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "PTR",
                                value: fqdnToHostname(record)
                            }));
                    }),
                    this.#query(name, "SOA").then(({ ret })=>{
                        ret.forEach(({ mname, rname, serial, refresh, retry, expire, minimum })=>records.push({
                                type: "SOA",
                                nsname: fqdnToHostname(mname),
                                hostmaster: fqdnToHostname(rname),
                                serial,
                                refresh,
                                retry,
                                expire,
                                minttl: minimum
                            }));
                    }),
                    this.#query(name, "SRV").then(({ ret })=>{
                        ret.forEach(({ priority, weight, port, target })=>records.push({
                                type: "SRV",
                                priority,
                                weight,
                                port,
                                name: target
                            }));
                    }),
                    this.#query(name, "TXT").then(({ ret })=>{
                        ret.forEach((record)=>records.push({
                                type: "TXT",
                                entries: record
                            }));
                    })
                ]);
                const err = records.length ? 0 : codeMap.get("EAI_NODATA");
                req.oncomplete(err, records);
            })();
            return 0;
        }
        queryA(req, name) {
            this.#query(name, "A").then(({ code, ret })=>{
                req.oncomplete(code, ret);
            });
            return 0;
        }
        queryAaaa(req, name) {
            this.#query(name, "AAAA").then(({ code, ret })=>{
                const records = ret.map((record)=>compressIPv6(record));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryCaa(req, name) {
            this.#query(name, "CAA").then(({ code, ret })=>{
                const records = ret.map(({ critical, tag, value })=>({
                        [tag]: value,
                        critical: +critical && 128
                    }));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryCname(req, name) {
            this.#query(name, "CNAME").then(({ code, ret })=>{
                req.oncomplete(code, ret);
            });
            return 0;
        }
        queryMx(req, name) {
            this.#query(name, "MX").then(({ code, ret })=>{
                const records = ret.map(({ preference, exchange })=>({
                        priority: preference,
                        exchange: fqdnToHostname(exchange)
                    }));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryNaptr(req, name) {
            this.#query(name, "NAPTR").then(({ code, ret })=>{
                const records = ret.map(({ order, preference, flags, services, regexp, replacement })=>({
                        flags,
                        service: services,
                        regexp,
                        replacement,
                        order,
                        preference
                    }));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryNs(req, name) {
            this.#query(name, "NS").then(({ code, ret })=>{
                const records = ret.map((record)=>fqdnToHostname(record));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryPtr(req, name) {
            this.#query(name, "PTR").then(({ code, ret })=>{
                const records = ret.map((record)=>fqdnToHostname(record));
                req.oncomplete(code, records);
            });
            return 0;
        }
        querySoa(req, name) {
            this.#query(name, "SOA").then(({ code, ret })=>{
                let record = {};
                if (ret.length) {
                    const { mname, rname, serial, refresh, retry, expire, minimum } = ret[0];
                    record = {
                        nsname: fqdnToHostname(mname),
                        hostmaster: fqdnToHostname(rname),
                        serial,
                        refresh,
                        retry,
                        expire,
                        minttl: minimum
                    };
                }
                req.oncomplete(code, record);
            });
            return 0;
        }
        querySrv(req, name) {
            this.#query(name, "SRV").then(({ code, ret })=>{
                const records = ret.map(({ priority, weight, port, target })=>({
                        priority,
                        weight,
                        port,
                        name: target
                    }));
                req.oncomplete(code, records);
            });
            return 0;
        }
        queryTxt(req, name) {
            this.#query(name, "TXT").then(({ code, ret })=>{
                req.oncomplete(code, ret);
            });
            return 0;
        }
        getHostByAddr(_req, _name) {
            notImplemented("cares.ChannelWrap.prototype.getHostByAddr");
        }
        getServers() {
            return this.#servers;
        }
        setServers(servers) {
            if (typeof servers === "string") {
                const tuples = [];
                for(let i = 0; i < servers.length; i += 2){
                    tuples.push([
                        servers[i],
                        parseInt(servers[i + 1])
                    ]);
                }
                this.#servers = tuples;
            } else {
                this.#servers = servers.map(([_ipVersion, ip, port])=>[
                        ip,
                        port
                    ]);
            }
            return 0;
        }
        setLocalAddress(_addr0, _addr1) {
            notImplemented("cares.ChannelWrap.prototype.setLocalAddress");
        }
        cancel() {
            notImplemented("cares.ChannelWrap.prototype.cancel");
        }
    }
    const DNS_ESETSRVPENDING = -1000;
    const EMSG_ESETSRVPENDING = "There are pending queries.";
    function strerror(code) {
        return code === DNS_ESETSRVPENDING ? EMSG_ESETSRVPENDING : ares_strerror(code);
    }
    const mod11 = {
        GetAddrInfoReqWrap: GetAddrInfoReqWrap,
        getaddrinfo: getaddrinfo,
        QueryReqWrap: QueryReqWrap,
        ChannelWrap: ChannelWrap,
        strerror: strerror
    };
    const mod12 = {};
    function timingSafeEqual(a, b) {
        if (a.byteLength !== b.byteLength) {
            return false;
        }
        if (!(a instanceof DataView)) {
            a = new DataView(ArrayBuffer.isView(a) ? a.buffer : a);
        }
        if (!(b instanceof DataView)) {
            b = new DataView(ArrayBuffer.isView(b) ? b.buffer : b);
        }
        assert(a instanceof DataView);
        assert(b instanceof DataView);
        const length = a.byteLength;
        let out = 0;
        let i = -1;
        while(++i < length){
            out |= a.getUint8(i) ^ b.getUint8(i);
        }
        return out === 0;
    }
    const timingSafeEqual1 = (a, b)=>{
        if (a instanceof Buffer) a = new DataView(a.buffer);
        if (a instanceof Buffer) b = new DataView(a.buffer);
        return timingSafeEqual(a, b);
    };
    function getFipsCrypto() {
        notImplemented("crypto.getFipsCrypto");
    }
    function setFipsCrypto(_fips) {
        notImplemented("crypto.setFipsCrypto");
    }
    const mod13 = {
        timingSafeEqual: timingSafeEqual1,
        getFipsCrypto: getFipsCrypto,
        setFipsCrypto: setFipsCrypto
    };
    const mod14 = {};
    const mod15 = {};
    const mod16 = {};
    const mod17 = {};
    const mod18 = {};
    const mod19 = {};
    const mod20 = {};
    const mod21 = {};
    const mod22 = {};
    const mod23 = {};
    const mod24 = {};
    const mod25 = {};
    const mod26 = {};
    const mod27 = {};
    const mod28 = {};
    const mod29 = {};
    class HandleWrap extends AsyncWrap {
        constructor(provider){
            super(provider);
        }
        close(cb = ()=>{}) {
            this._onClose();
            queueMicrotask(cb);
        }
        ref() {
            unreachable();
        }
        unref() {
            unreachable();
        }
        _onClose() {}
    }
    async function writeAll(w, arr) {
        let nwritten = 0;
        while(nwritten < arr.length){
            nwritten += await w.write(arr.subarray(nwritten));
        }
    }
    var StreamBaseStateFields;
    (function(StreamBaseStateFields) {
        StreamBaseStateFields[StreamBaseStateFields["kReadBytesOrError"] = 0] = "kReadBytesOrError";
        StreamBaseStateFields[StreamBaseStateFields["kArrayBufferOffset"] = 1] = "kArrayBufferOffset";
        StreamBaseStateFields[StreamBaseStateFields["kBytesWritten"] = 2] = "kBytesWritten";
        StreamBaseStateFields[StreamBaseStateFields["kLastWriteWasAsync"] = 3] = "kLastWriteWasAsync";
        StreamBaseStateFields[StreamBaseStateFields["kNumStreamBaseStateFields"] = 4] = "kNumStreamBaseStateFields";
    })(StreamBaseStateFields || (StreamBaseStateFields = {}));
    const kReadBytesOrError = StreamBaseStateFields.kReadBytesOrError;
    const kArrayBufferOffset = StreamBaseStateFields.kArrayBufferOffset;
    const kBytesWritten = StreamBaseStateFields.kBytesWritten;
    const kLastWriteWasAsync = StreamBaseStateFields.kLastWriteWasAsync;
    const kNumStreamBaseStateFields = StreamBaseStateFields.kNumStreamBaseStateFields;
    const streamBaseState = new Uint8Array(5);
    streamBaseState[kLastWriteWasAsync] = 1;
    class WriteWrap extends AsyncWrap {
        handle;
        oncomplete;
        async;
        bytes;
        buffer;
        callback;
        _chunks;
        constructor(){
            super(providerType.WRITEWRAP);
        }
    }
    class ShutdownWrap extends AsyncWrap {
        handle;
        oncomplete;
        callback;
        constructor(){
            super(providerType.SHUTDOWNWRAP);
        }
    }
    const kStreamBaseField = Symbol("kStreamBaseField");
    const SUGGESTED_SIZE = 64 * 1024;
    class LibuvStreamWrap extends HandleWrap {
        [kStreamBaseField];
        reading;
        #reading = false;
        destroyed = false;
        writeQueueSize = 0;
        bytesRead = 0;
        bytesWritten = 0;
        onread;
        constructor(provider, stream){
            super(provider);
            this.#attachToObject(stream);
        }
        readStart() {
            if (!this.#reading) {
                this.#reading = true;
                this.#read();
            }
            return 0;
        }
        readStop() {
            this.#reading = false;
            return 0;
        }
        shutdown(req) {
            const status = this._onClose();
            try {
                req.oncomplete(status);
            } catch  {}
            return 0;
        }
        useUserBuffer(_userBuf) {
            notImplemented("LibuvStreamWrap.prototype.useUserBuffer");
        }
        writeBuffer(req, data) {
            this.#write(req, data);
            return 0;
        }
        writev(req, chunks, allBuffers) {
            const count = allBuffers ? chunks.length : chunks.length >> 1;
            const buffers = new Array(count);
            if (!allBuffers) {
                for(let i = 0; i < count; i++){
                    const chunk = chunks[i * 2];
                    if (Buffer.isBuffer(chunk)) {
                        buffers[i] = chunk;
                    }
                    const encoding = chunks[i * 2 + 1];
                    buffers[i] = Buffer.from(chunk, encoding);
                }
            } else {
                for(let i = 0; i < count; i++){
                    buffers[i] = chunks[i];
                }
            }
            return this.writeBuffer(req, Buffer.concat(buffers));
        }
        writeAsciiString(req, data) {
            const buffer = new TextEncoder().encode(data);
            return this.writeBuffer(req, buffer);
        }
        writeUtf8String(req, data) {
            const buffer = new TextEncoder().encode(data);
            return this.writeBuffer(req, buffer);
        }
        writeUcs2String(_req, _data) {
            notImplemented("LibuvStreamWrap.prototype.writeUcs2String");
        }
        writeLatin1String(req, data) {
            const buffer = Buffer.from(data, "latin1");
            return this.writeBuffer(req, buffer);
        }
        _onClose() {
            let status = 0;
            this.#reading = false;
            try {
                this[kStreamBaseField]?.close();
            } catch  {
                status = codeMap.get("ENOTCONN");
            }
            return status;
        }
        #attachToObject(stream) {
            this[kStreamBaseField] = stream;
        }
        async #read() {
            let buf = new Uint8Array(SUGGESTED_SIZE);
            let nread;
            try {
                nread = await this[kStreamBaseField].read(buf);
            } catch (e) {
                if (e instanceof Deno.errors.Interrupted || e instanceof Deno.errors.BadResource) {
                    nread = codeMap.get("EOF");
                } else if (e instanceof Deno.errors.ConnectionReset || e instanceof Deno.errors.ConnectionAborted) {
                    nread = codeMap.get("ECONNRESET");
                } else {
                    nread = codeMap.get("UNKNOWN");
                }
                buf = new Uint8Array(0);
            }
            nread ??= codeMap.get("EOF");
            streamBaseState[kReadBytesOrError] = nread;
            if (nread > 0) {
                this.bytesRead += nread;
            }
            buf = buf.slice(0, nread);
            streamBaseState[kArrayBufferOffset] = 0;
            try {
                this.onread(buf, nread);
            } catch  {}
            if (nread >= 0 && this.#reading) {
                this.#read();
            }
        }
        async #write(req, data) {
            const { byteLength } = data;
            try {
                await writeAll(this[kStreamBaseField], data);
            } catch (e) {
                let status;
                if (e instanceof Deno.errors.BadResource || e instanceof Deno.errors.BrokenPipe) {
                    status = codeMap.get("EBADF");
                } else {
                    status = codeMap.get("UNKNOWN");
                }
                try {
                    req.oncomplete(status);
                } catch  {}
                return;
            }
            streamBaseState[kBytesWritten] = byteLength;
            this.bytesWritten += byteLength;
            try {
                req.oncomplete(0);
            } catch  {}
            return;
        }
    }
    const mod30 = {
        kReadBytesOrError: kReadBytesOrError,
        kArrayBufferOffset: kArrayBufferOffset,
        kBytesWritten: kBytesWritten,
        kLastWriteWasAsync: kLastWriteWasAsync,
        kNumStreamBaseStateFields: kNumStreamBaseStateFields,
        streamBaseState: streamBaseState,
        WriteWrap: WriteWrap,
        ShutdownWrap: ShutdownWrap,
        kStreamBaseField: kStreamBaseField,
        LibuvStreamWrap: LibuvStreamWrap
    };
    class ConnectionWrap extends LibuvStreamWrap {
        onconnection = null;
        constructor(provider, object){
            super(provider, object);
        }
        afterConnect(req, status) {
            const isSuccessStatus = !status;
            const readable = isSuccessStatus;
            const writable = isSuccessStatus;
            try {
                req.oncomplete(status, this, req, readable, writable);
            } catch  {}
            return;
        }
    }
    function deferred() {
        let methods;
        let state = "pending";
        const promise = new Promise((resolve, reject)=>{
            methods = {
                async resolve (value) {
                    await value;
                    state = "fulfilled";
                    resolve(value);
                },
                reject (reason) {
                    state = "rejected";
                    reject(reason);
                }
            };
        });
        Object.defineProperty(promise, "state", {
            get: ()=>state
        });
        return Object.assign(promise, methods);
    }
    function delay(ms, options = {}) {
        const { signal, persistent } = options;
        if (signal?.aborted) {
            return Promise.reject(new DOMException("Delay was aborted.", "AbortError"));
        }
        return new Promise((resolve, reject)=>{
            const abort = ()=>{
                clearTimeout(i);
                reject(new DOMException("Delay was aborted.", "AbortError"));
            };
            const done = ()=>{
                signal?.removeEventListener("abort", abort);
                resolve();
            };
            const i = setTimeout(done, ms);
            signal?.addEventListener("abort", abort, {
                once: true
            });
            if (persistent === false) {
                try {
                    Deno.unrefTimer(i);
                } catch (error) {
                    if (!(error instanceof ReferenceError)) {
                        throw error;
                    }
                    console.error("`persistent` option is only available in Deno");
                }
            }
        });
    }
    class MuxAsyncIterator {
        #iteratorCount = 0;
        #yields = [];
        #throws = [];
        #signal = deferred();
        add(iterable) {
            ++this.#iteratorCount;
            this.#callIteratorNext(iterable[Symbol.asyncIterator]());
        }
        async #callIteratorNext(iterator) {
            try {
                const { value, done } = await iterator.next();
                if (done) {
                    --this.#iteratorCount;
                } else {
                    this.#yields.push({
                        iterator,
                        value
                    });
                }
            } catch (e) {
                this.#throws.push(e);
            }
            this.#signal.resolve();
        }
        async *iterate() {
            while(this.#iteratorCount > 0){
                await this.#signal;
                for(let i = 0; i < this.#yields.length; i++){
                    const { iterator, value } = this.#yields[i];
                    yield value;
                    this.#callIteratorNext(iterator);
                }
                if (this.#throws.length) {
                    for (const e of this.#throws){
                        throw e;
                    }
                    this.#throws.length = 0;
                }
                this.#yields.length = 0;
                this.#signal = deferred();
            }
        }
        [Symbol.asyncIterator]() {
            return this.iterate();
        }
    }
    function ceilPowOf2(n) {
        const roundPowOf2 = 1 << 31 - Math.clz32(n);
        return roundPowOf2 < n ? roundPowOf2 * 2 : roundPowOf2;
    }
    const INITIAL_ACCEPT_BACKOFF_DELAY = 5;
    const MAX_ACCEPT_BACKOFF_DELAY = 1000;
    var socketType;
    (function(socketType) {
        socketType[socketType["SOCKET"] = 0] = "SOCKET";
        socketType[socketType["SERVER"] = 1] = "SERVER";
        socketType[socketType["IPC"] = 2] = "IPC";
    })(socketType || (socketType = {}));
    class Pipe extends ConnectionWrap {
        reading = false;
        ipc;
        #pendingInstances = 4;
        #address;
        #backlog;
        #listener;
        #connections = 0;
        #closed = false;
        #acceptBackoffDelay;
        constructor(type, conn){
            let provider;
            let ipc;
            switch(type){
                case socketType.SOCKET:
                    {
                        provider = providerType.PIPEWRAP;
                        ipc = false;
                        break;
                    }
                case socketType.SERVER:
                    {
                        provider = providerType.PIPESERVERWRAP;
                        ipc = false;
                        break;
                    }
                case socketType.IPC:
                    {
                        provider = providerType.PIPEWRAP;
                        ipc = true;
                        break;
                    }
                default:
                    {
                        unreachable();
                    }
            }
            super(provider, conn);
            this.ipc = ipc;
            if (conn && provider === providerType.PIPEWRAP) {
                const localAddr = conn.localAddr;
                this.#address = localAddr.path;
            }
        }
        open(_fd) {
            notImplemented("Pipe.prototype.open");
        }
        bind(name) {
            this.#address = name;
            return 0;
        }
        connect(req, address) {
            if (isWindows) {
                notImplemented("Pipe.prototype.connect - Windows");
            }
            const connectOptions = {
                path: address,
                transport: "unix"
            };
            Deno.connect(connectOptions).then((conn)=>{
                const localAddr = conn.localAddr;
                this.#address = req.address = localAddr.path;
                this[kStreamBaseField] = conn;
                try {
                    this.afterConnect(req, 0);
                } catch  {}
            }, (e)=>{
                let code;
                if (e instanceof Deno.errors.NotFound) {
                    code = codeMap.get("ENOENT");
                } else if (e instanceof Deno.errors.PermissionDenied) {
                    code = codeMap.get("EACCES");
                } else {
                    code = codeMap.get("ECONNREFUSED");
                }
                try {
                    this.afterConnect(req, code);
                } catch  {}
            });
            return 0;
        }
        listen(backlog) {
            if (isWindows) {
                notImplemented("Pipe.prototype.listen - Windows");
            }
            this.#backlog = isWindows ? this.#pendingInstances : ceilPowOf2(backlog + 1);
            const listenOptions = {
                path: this.#address,
                transport: "unix"
            };
            let listener;
            try {
                listener = Deno.listen(listenOptions);
            } catch (e) {
                if (e instanceof Deno.errors.AddrInUse) {
                    return codeMap.get("EADDRINUSE");
                } else if (e instanceof Deno.errors.AddrNotAvailable) {
                    return codeMap.get("EADDRNOTAVAIL");
                } else if (e instanceof Deno.errors.PermissionDenied) {
                    throw e;
                }
                return codeMap.get("UNKNOWN");
            }
            const address = listener.addr;
            this.#address = address.path;
            this.#listener = listener;
            this.#accept();
            return 0;
        }
        ref() {
            if (this.#listener) {
                this.#listener.ref();
            }
        }
        unref() {
            if (this.#listener) {
                this.#listener.unref();
            }
        }
        setPendingInstances(instances) {
            this.#pendingInstances = instances;
        }
        fchmod(mode) {
            if (mode != constants2.UV_READABLE && mode != constants2.UV_WRITABLE && mode != (constants2.UV_WRITABLE | constants2.UV_READABLE)) {
                return codeMap.get("EINVAL");
            }
            let desired_mode = 0;
            if (mode & constants2.UV_READABLE) {
                desired_mode |= fs.S_IRUSR | fs.S_IRGRP | fs.S_IROTH;
            }
            if (mode & constants2.UV_WRITABLE) {
                desired_mode |= fs.S_IWUSR | fs.S_IWGRP | fs.S_IWOTH;
            }
            try {
                Deno.chmodSync(this.#address, desired_mode);
            } catch  {
                return codeMap.get("UNKNOWN");
            }
            return 0;
        }
        async #acceptBackoff() {
            if (!this.#acceptBackoffDelay) {
                this.#acceptBackoffDelay = INITIAL_ACCEPT_BACKOFF_DELAY;
            } else {
                this.#acceptBackoffDelay *= 2;
            }
            if (this.#acceptBackoffDelay >= 1000) {
                this.#acceptBackoffDelay = MAX_ACCEPT_BACKOFF_DELAY;
            }
            await delay(this.#acceptBackoffDelay);
            this.#accept();
        }
        async #accept() {
            if (this.#closed) {
                return;
            }
            if (this.#connections > this.#backlog) {
                this.#acceptBackoff();
                return;
            }
            let connection;
            try {
                connection = await this.#listener.accept();
            } catch (e) {
                if (e instanceof Deno.errors.BadResource && this.#closed) {
                    return;
                }
                try {
                    this.onconnection(codeMap.get("UNKNOWN"), undefined);
                } catch  {}
                this.#acceptBackoff();
                return;
            }
            this.#acceptBackoffDelay = undefined;
            const connectionHandle = new Pipe(socketType.SOCKET, connection);
            this.#connections++;
            try {
                this.onconnection(0, connectionHandle);
            } catch  {}
            return this.#accept();
        }
        _onClose() {
            this.#closed = true;
            this.reading = false;
            this.#address = undefined;
            this.#backlog = undefined;
            this.#connections = 0;
            this.#acceptBackoffDelay = undefined;
            if (this.provider === providerType.PIPESERVERWRAP) {
                try {
                    this.#listener.close();
                } catch  {}
            }
            return LibuvStreamWrap.prototype._onClose.call(this);
        }
    }
    class PipeConnectWrap extends AsyncWrap {
        oncomplete;
        address;
        constructor(){
            super(providerType.PIPECONNECTWRAP);
        }
    }
    var constants2;
    (function(constants) {
        constants[constants["SOCKET"] = socketType.SOCKET] = "SOCKET";
        constants[constants["SERVER"] = socketType.SERVER] = "SERVER";
        constants[constants["IPC"] = socketType.IPC] = "IPC";
        constants[constants["UV_READABLE"] = 1] = "UV_READABLE";
        constants[constants["UV_WRITABLE"] = 2] = "UV_WRITABLE";
    })(constants2 || (constants2 = {}));
    const mod31 = {
        socketType: socketType,
        Pipe: Pipe,
        PipeConnectWrap: PipeConnectWrap,
        constants: constants2
    };
    const mod32 = {};
    const mod33 = {};
    const mod34 = {};
    const mod35 = {};
    const mod36 = {};
    const mod37 = {};
    const asyncIdSymbol = Symbol("asyncIdSymbol");
    const ownerSymbol = Symbol("ownerSymbol");
    const mod38 = {
        asyncIdSymbol: asyncIdSymbol,
        ownerSymbol: ownerSymbol
    };
    const mod39 = {};
    var socketType1;
    (function(socketType) {
        socketType[socketType["SOCKET"] = 0] = "SOCKET";
        socketType[socketType["SERVER"] = 1] = "SERVER";
    })(socketType1 || (socketType1 = {}));
    class TCPConnectWrap extends AsyncWrap {
        oncomplete;
        address;
        port;
        localAddress;
        localPort;
        constructor(){
            super(providerType.TCPCONNECTWRAP);
        }
    }
    var constants3;
    (function(constants) {
        constants[constants["SOCKET"] = socketType1.SOCKET] = "SOCKET";
        constants[constants["SERVER"] = socketType1.SERVER] = "SERVER";
        constants[constants["UV_TCP_IPV6ONLY"] = 0] = "UV_TCP_IPV6ONLY";
    })(constants3 || (constants3 = {}));
    class TCP extends ConnectionWrap {
        [ownerSymbol] = null;
        reading = false;
        #address;
        #port;
        #remoteAddress;
        #remoteFamily;
        #remotePort;
        #backlog;
        #listener;
        #connections = 0;
        #closed = false;
        #acceptBackoffDelay;
        constructor(type, conn){
            let provider;
            switch(type){
                case socketType1.SOCKET:
                    {
                        provider = providerType.TCPWRAP;
                        break;
                    }
                case socketType1.SERVER:
                    {
                        provider = providerType.TCPSERVERWRAP;
                        break;
                    }
                default:
                    {
                        unreachable();
                    }
            }
            super(provider, conn);
            if (conn && provider === providerType.TCPWRAP) {
                const localAddr = conn.localAddr;
                this.#address = localAddr.hostname;
                this.#port = localAddr.port;
                const remoteAddr = conn.remoteAddr;
                this.#remoteAddress = remoteAddr.hostname;
                this.#remotePort = remoteAddr.port;
                this.#remoteFamily = isIP(remoteAddr.hostname);
            }
        }
        open(_fd) {
            notImplemented("TCP.prototype.open");
        }
        bind(address, port) {
            return this.#bind(address, port, 0);
        }
        bind6(address, port, flags) {
            return this.#bind(address, port, flags);
        }
        connect(req, address, port) {
            return this.#connect(req, address, port);
        }
        connect6(req, address, port) {
            return this.#connect(req, address, port);
        }
        listen(backlog) {
            this.#backlog = ceilPowOf2(backlog + 1);
            const listenOptions = {
                hostname: this.#address,
                port: this.#port,
                transport: "tcp"
            };
            let listener;
            try {
                listener = Deno.listen(listenOptions);
            } catch (e) {
                if (e instanceof Deno.errors.AddrInUse) {
                    return codeMap.get("EADDRINUSE");
                } else if (e instanceof Deno.errors.AddrNotAvailable) {
                    return codeMap.get("EADDRNOTAVAIL");
                } else if (e instanceof Deno.errors.PermissionDenied) {
                    throw e;
                }
                return codeMap.get("UNKNOWN");
            }
            const address = listener.addr;
            this.#address = address.hostname;
            this.#port = address.port;
            this.#listener = listener;
            this.#accept();
            return 0;
        }
        ref() {
            if (this.#listener) {
                this.#listener.ref();
            }
            if (this[kStreamBaseField]) {
                this[kStreamBaseField].ref();
            }
        }
        unref() {
            if (this.#listener) {
                this.#listener.unref();
            }
            if (this[kStreamBaseField]) {
                this[kStreamBaseField].unref();
            }
        }
        getsockname(sockname) {
            if (typeof this.#address === "undefined" || typeof this.#port === "undefined") {
                return codeMap.get("EADDRNOTAVAIL");
            }
            sockname.address = this.#address;
            sockname.port = this.#port;
            sockname.family = isIP(this.#address);
            return 0;
        }
        getpeername(peername) {
            if (typeof this.#remoteAddress === "undefined" || typeof this.#remotePort === "undefined") {
                return codeMap.get("EADDRNOTAVAIL");
            }
            peername.address = this.#remoteAddress;
            peername.port = this.#remotePort;
            peername.family = this.#remoteFamily;
            return 0;
        }
        setNoDelay(_noDelay) {
            return 0;
        }
        setKeepAlive(_enable, _initialDelay) {
            return 0;
        }
        setSimultaneousAccepts(_enable) {
            notImplemented("TCP.prototype.setSimultaneousAccepts");
        }
        #bind(address, port, _flags) {
            this.#address = address;
            this.#port = port;
            return 0;
        }
        #connect(req, address, port) {
            this.#remoteAddress = address;
            this.#remotePort = port;
            this.#remoteFamily = isIP(address);
            const connectOptions = {
                hostname: address,
                port,
                transport: "tcp"
            };
            Deno.connect(connectOptions).then((conn)=>{
                const localAddr = conn.localAddr;
                this.#address = req.localAddress = localAddr.hostname;
                this.#port = req.localPort = localAddr.port;
                this[kStreamBaseField] = conn;
                try {
                    this.afterConnect(req, 0);
                } catch  {}
            }, ()=>{
                try {
                    this.afterConnect(req, codeMap.get("ECONNREFUSED"));
                } catch  {}
            });
            return 0;
        }
        async #acceptBackoff() {
            if (!this.#acceptBackoffDelay) {
                this.#acceptBackoffDelay = INITIAL_ACCEPT_BACKOFF_DELAY;
            } else {
                this.#acceptBackoffDelay *= 2;
            }
            if (this.#acceptBackoffDelay >= 1000) {
                this.#acceptBackoffDelay = MAX_ACCEPT_BACKOFF_DELAY;
            }
            await delay(this.#acceptBackoffDelay);
            this.#accept();
        }
        async #accept() {
            if (this.#closed) {
                return;
            }
            if (this.#connections > this.#backlog) {
                this.#acceptBackoff();
                return;
            }
            let connection;
            try {
                connection = await this.#listener.accept();
            } catch (e) {
                if (e instanceof Deno.errors.BadResource && this.#closed) {
                    return;
                }
                try {
                    this.onconnection(codeMap.get("UNKNOWN"), undefined);
                } catch  {}
                this.#acceptBackoff();
                return;
            }
            this.#acceptBackoffDelay = undefined;
            const connectionHandle = new TCP(socketType1.SOCKET, connection);
            this.#connections++;
            try {
                this.onconnection(0, connectionHandle);
            } catch  {}
            return this.#accept();
        }
        _onClose() {
            this.#closed = true;
            this.reading = false;
            this.#address = undefined;
            this.#port = undefined;
            this.#remoteAddress = undefined;
            this.#remoteFamily = undefined;
            this.#remotePort = undefined;
            this.#backlog = undefined;
            this.#connections = 0;
            this.#acceptBackoffDelay = undefined;
            if (this.provider === providerType.TCPSERVERWRAP) {
                try {
                    this.#listener.close();
                } catch  {}
            }
            return LibuvStreamWrap.prototype._onClose.call(this);
        }
    }
    const mod40 = {
        TCPConnectWrap: TCPConnectWrap,
        constants: constants3,
        TCP: TCP
    };
    const mod41 = {};
    const mod42 = {};
    const mod43 = {};
    const mod44 = {};
    const DenoListenDatagram = Deno[Deno.internal]?.nodeUnstable?.listenDatagram || Deno.listenDatagram;
    const AF_INET6 = 10;
    const UDP_DGRAM_MAXSIZE = 64 * 1024;
    class SendWrap extends AsyncWrap {
        list;
        address;
        port;
        callback;
        oncomplete;
        constructor(){
            super(providerType.UDPSENDWRAP);
        }
    }
    class UDP extends HandleWrap {
        [ownerSymbol] = null;
        #address;
        #family;
        #port;
        #remoteAddress;
        #remoteFamily;
        #remotePort;
        #listener;
        #receiving = false;
        #recvBufferSize = UDP_DGRAM_MAXSIZE;
        #sendBufferSize = UDP_DGRAM_MAXSIZE;
        onmessage;
        lookup;
        constructor(){
            super(providerType.UDPWRAP);
        }
        addMembership(_multicastAddress, _interfaceAddress) {
            notImplemented("udp.UDP.prototype.addMembership");
        }
        addSourceSpecificMembership(_sourceAddress, _groupAddress, _interfaceAddress) {
            notImplemented("udp.UDP.prototype.addSourceSpecificMembership");
        }
        bind(ip, port, flags) {
            return this.#doBind(ip, port, flags, 2);
        }
        bind6(ip, port, flags) {
            return this.#doBind(ip, port, flags, 10);
        }
        bufferSize(size, buffer, ctx) {
            let err;
            if (size > UDP_DGRAM_MAXSIZE) {
                err = "EINVAL";
            } else if (!this.#address) {
                err = isWindows ? "ENOTSOCK" : "EBADF";
            }
            if (err) {
                ctx.errno = codeMap.get(err);
                ctx.code = err;
                ctx.message = errorMap.get(ctx.errno)[1];
                ctx.syscall = buffer ? "uv_recv_buffer_size" : "uv_send_buffer_size";
                return;
            }
            if (size !== 0) {
                size = isLinux ? size * 2 : size;
                if (buffer) {
                    return this.#recvBufferSize = size;
                }
                return this.#sendBufferSize = size;
            }
            return buffer ? this.#recvBufferSize : this.#sendBufferSize;
        }
        connect(ip, port) {
            return this.#doConnect(ip, port, 2);
        }
        connect6(ip, port) {
            return this.#doConnect(ip, port, 10);
        }
        disconnect() {
            this.#remoteAddress = undefined;
            this.#remotePort = undefined;
            this.#remoteFamily = undefined;
            return 0;
        }
        dropMembership(_multicastAddress, _interfaceAddress) {
            notImplemented("udp.UDP.prototype.dropMembership");
        }
        dropSourceSpecificMembership(_sourceAddress, _groupAddress, _interfaceAddress) {
            notImplemented("udp.UDP.prototype.dropSourceSpecificMembership");
        }
        getpeername(peername) {
            if (this.#remoteAddress === undefined) {
                return codeMap.get("EBADF");
            }
            peername.address = this.#remoteAddress;
            peername.port = this.#remotePort;
            peername.family = this.#remoteFamily;
            return 0;
        }
        getsockname(sockname) {
            if (this.#address === undefined) {
                return codeMap.get("EBADF");
            }
            sockname.address = this.#address;
            sockname.port = this.#port;
            sockname.family = this.#family;
            return 0;
        }
        open(_fd) {
            notImplemented("udp.UDP.prototype.open");
        }
        recvStart() {
            if (!this.#receiving) {
                this.#receiving = true;
                this.#receive();
            }
            return 0;
        }
        recvStop() {
            this.#receiving = false;
            return 0;
        }
        ref() {
            notImplemented("udp.UDP.prototype.ref");
        }
        send(req, bufs, count, ...args) {
            return this.#doSend(req, bufs, count, args, 2);
        }
        send6(req, bufs, count, ...args) {
            return this.#doSend(req, bufs, count, args, 10);
        }
        setBroadcast(_bool) {
            notImplemented("udp.UDP.prototype.setBroadcast");
        }
        setMulticastInterface(_interfaceAddress) {
            notImplemented("udp.UDP.prototype.setMulticastInterface");
        }
        setMulticastLoopback(_bool) {
            notImplemented("udp.UDP.prototype.setMulticastLoopback");
        }
        setMulticastTTL(_ttl) {
            notImplemented("udp.UDP.prototype.setMulticastTTL");
        }
        setTTL(_ttl) {
            notImplemented("udp.UDP.prototype.setTTL");
        }
        unref() {
            notImplemented("udp.UDP.prototype.unref");
        }
        #doBind(ip, port, _flags, family) {
            const listenOptions = {
                port,
                hostname: ip,
                transport: "udp"
            };
            let listener;
            try {
                listener = DenoListenDatagram(listenOptions);
            } catch (e) {
                if (e instanceof Deno.errors.AddrInUse) {
                    return codeMap.get("EADDRINUSE");
                } else if (e instanceof Deno.errors.AddrNotAvailable) {
                    return codeMap.get("EADDRNOTAVAIL");
                } else if (e instanceof Deno.errors.PermissionDenied) {
                    throw e;
                }
                return codeMap.get("UNKNOWN");
            }
            const address = listener.addr;
            this.#address = address.hostname;
            this.#port = address.port;
            this.#family = family === AF_INET6 ? "IPv6" : "IPv4";
            this.#listener = listener;
            return 0;
        }
        #doConnect(ip, port, family) {
            this.#remoteAddress = ip;
            this.#remotePort = port;
            this.#remoteFamily = family === AF_INET6 ? "IPv6" : "IPv4";
            return 0;
        }
        #doSend(req, bufs, _count, args, _family) {
            let hasCallback;
            if (args.length === 3) {
                this.#remotePort = args[0];
                this.#remoteAddress = args[1];
                hasCallback = args[2];
            } else {
                hasCallback = args[0];
            }
            const addr = {
                hostname: this.#remoteAddress,
                port: this.#remotePort,
                transport: "udp"
            };
            const payload = new Uint8Array(Buffer.concat(bufs.map((buf)=>{
                if (typeof buf === "string") {
                    return Buffer.from(buf);
                }
                return Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);
            })));
            (async ()=>{
                let sent;
                let err = null;
                try {
                    sent = await this.#listener.send(payload, addr);
                } catch (e) {
                    if (e instanceof Deno.errors.BadResource) {
                        err = codeMap.get("EBADF");
                    } else if (e instanceof Error && e.message.match(/os error (40|90|10040)/)) {
                        err = codeMap.get("EMSGSIZE");
                    } else {
                        err = codeMap.get("UNKNOWN");
                    }
                    sent = 0;
                }
                if (hasCallback) {
                    try {
                        req.oncomplete(err, sent);
                    } catch  {}
                }
            })();
            return 0;
        }
        async #receive() {
            if (!this.#receiving) {
                return;
            }
            const p = new Uint8Array(this.#recvBufferSize);
            let buf;
            let remoteAddr;
            let nread;
            try {
                [buf, remoteAddr] = await this.#listener.receive(p);
                nread = buf.length;
            } catch (e) {
                if (e instanceof Deno.errors.Interrupted || e instanceof Deno.errors.BadResource) {
                    nread = 0;
                } else {
                    nread = codeMap.get("UNKNOWN");
                }
                buf = new Uint8Array(0);
                remoteAddr = null;
            }
            nread ??= 0;
            const rinfo = remoteAddr ? {
                address: remoteAddr.hostname,
                port: remoteAddr.port,
                family: isIP(remoteAddr.hostname) === 6 ? "IPv6" : "IPv4"
            } : undefined;
            try {
                this.onmessage(nread, this, Buffer.from(buf), rinfo);
            } catch  {}
            this.#receive();
        }
        _onClose() {
            this.#receiving = false;
            this.#address = undefined;
            this.#port = undefined;
            this.#family = undefined;
            try {
                this.#listener.close();
            } catch  {}
            this.#listener = undefined;
            return 0;
        }
    }
    const mod45 = {
        SendWrap: SendWrap,
        UDP: UDP
    };
    const mod46 = {};
    const mod47 = {};
    const mod48 = {};
    const mod49 = {};
    const modules = {
        "async_wrap": mod9,
        buffer: mod7,
        "cares_wrap": mod11,
        config: mod10,
        constants: mod3,
        contextify: mod12,
        credentials: mod14,
        crypto: mod13,
        errors: mod15,
        fs: mod16,
        "fs_dir": mod17,
        "fs_event_wrap": mod18,
        "heap_utils": mod19,
        "http_parser": mod20,
        icu: mod21,
        inspector: mod22,
        "js_stream": mod23,
        messaging: mod24,
        "module_wrap": mod25,
        "native_module": mod26,
        natives: mod27,
        options: mod28,
        os: mod29,
        performance: mod32,
        "pipe_wrap": mod31,
        "process_methods": mod33,
        report: mod34,
        serdes: mod35,
        "signal_wrap": mod36,
        "spawn_sync": mod37,
        "stream_wrap": mod30,
        "string_decoder": mod6,
        symbols: mod38,
        "task_queue": mod39,
        "tcp_wrap": mod40,
        timers: mod41,
        "tls_wrap": mod42,
        "trace_events": mod43,
        "tty_wrap": mod44,
        types: mod1,
        "udp_wrap": mod45,
        url: mod46,
        util: mod2,
        uv: mod,
        v8: mod47,
        worker: mod48,
        zlib: mod49
    };
    function getBinding(name) {
        const mod = modules[name];
        if (!mod) {
            throw new Error(`No such module: ${name}`);
        }
        return mod;
    }
    const kInternal = Symbol("internal properties");
    const replaceUnderscoresRegex = /_/g;
    const leadingDashesRegex = /^--?/;
    const trailingValuesRegex = /=.*$/;
    function buildAllowedFlags() {
        const allowedNodeEnvironmentFlags = [
            "--track-heap-objects",
            "--no-track-heap-objects",
            "--node-snapshot",
            "--no-node-snapshot",
            "--require",
            "--max-old-space-size",
            "--trace-exit",
            "--no-trace-exit",
            "--disallow-code-generation-from-strings",
            "--experimental-json-modules",
            "--no-experimental-json-modules",
            "--interpreted-frames-native-stack",
            "--inspect-brk",
            "--no-inspect-brk",
            "--trace-tls",
            "--no-trace-tls",
            "--stack-trace-limit",
            "--experimental-repl-await",
            "--no-experimental-repl-await",
            "--preserve-symlinks",
            "--no-preserve-symlinks",
            "--report-uncaught-exception",
            "--no-report-uncaught-exception",
            "--experimental-modules",
            "--no-experimental-modules",
            "--report-signal",
            "--jitless",
            "--inspect-port",
            "--heapsnapshot-near-heap-limit",
            "--tls-keylog",
            "--force-context-aware",
            "--no-force-context-aware",
            "--napi-modules",
            "--abort-on-uncaught-exception",
            "--diagnostic-dir",
            "--verify-base-objects",
            "--no-verify-base-objects",
            "--unhandled-rejections",
            "--perf-basic-prof",
            "--trace-atomics-wait",
            "--no-trace-atomics-wait",
            "--deprecation",
            "--no-deprecation",
            "--perf-basic-prof-only-functions",
            "--perf-prof",
            "--max-http-header-size",
            "--report-on-signal",
            "--no-report-on-signal",
            "--throw-deprecation",
            "--no-throw-deprecation",
            "--warnings",
            "--no-warnings",
            "--force-fips",
            "--no-force-fips",
            "--pending-deprecation",
            "--no-pending-deprecation",
            "--input-type",
            "--tls-max-v1.3",
            "--no-tls-max-v1.3",
            "--tls-min-v1.2",
            "--no-tls-min-v1.2",
            "--inspect",
            "--no-inspect",
            "--heapsnapshot-signal",
            "--trace-warnings",
            "--no-trace-warnings",
            "--trace-event-categories",
            "--experimental-worker",
            "--tls-max-v1.2",
            "--no-tls-max-v1.2",
            "--perf-prof-unwinding-info",
            "--preserve-symlinks-main",
            "--no-preserve-symlinks-main",
            "--policy-integrity",
            "--experimental-wasm-modules",
            "--no-experimental-wasm-modules",
            "--node-memory-debug",
            "--inspect-publish-uid",
            "--tls-min-v1.3",
            "--no-tls-min-v1.3",
            "--experimental-specifier-resolution",
            "--secure-heap",
            "--tls-min-v1.0",
            "--no-tls-min-v1.0",
            "--redirect-warnings",
            "--experimental-report",
            "--trace-event-file-pattern",
            "--trace-uncaught",
            "--no-trace-uncaught",
            "--experimental-loader",
            "--http-parser",
            "--dns-result-order",
            "--trace-sigint",
            "--no-trace-sigint",
            "--secure-heap-min",
            "--enable-fips",
            "--no-enable-fips",
            "--enable-source-maps",
            "--no-enable-source-maps",
            "--insecure-http-parser",
            "--no-insecure-http-parser",
            "--use-openssl-ca",
            "--no-use-openssl-ca",
            "--tls-cipher-list",
            "--experimental-top-level-await",
            "--no-experimental-top-level-await",
            "--openssl-config",
            "--icu-data-dir",
            "--v8-pool-size",
            "--report-on-fatalerror",
            "--no-report-on-fatalerror",
            "--title",
            "--tls-min-v1.1",
            "--no-tls-min-v1.1",
            "--report-filename",
            "--trace-deprecation",
            "--no-trace-deprecation",
            "--report-compact",
            "--no-report-compact",
            "--experimental-policy",
            "--experimental-import-meta-resolve",
            "--no-experimental-import-meta-resolve",
            "--zero-fill-buffers",
            "--no-zero-fill-buffers",
            "--report-dir",
            "--use-bundled-ca",
            "--no-use-bundled-ca",
            "--experimental-vm-modules",
            "--no-experimental-vm-modules",
            "--force-async-hooks-checks",
            "--no-force-async-hooks-checks",
            "--frozen-intrinsics",
            "--no-frozen-intrinsics",
            "--huge-max-old-generation-size",
            "--disable-proto",
            "--debug-arraybuffer-allocations",
            "--no-debug-arraybuffer-allocations",
            "--conditions",
            "--experimental-wasi-unstable-preview1",
            "--no-experimental-wasi-unstable-preview1",
            "--trace-sync-io",
            "--no-trace-sync-io",
            "--use-largepages",
            "--experimental-abortcontroller",
            "--debug-port",
            "--es-module-specifier-resolution",
            "--prof-process",
            "-C",
            "--loader",
            "--report-directory",
            "-r",
            "--trace-events-enabled"
        ];
        const trimLeadingDashes = (flag)=>flag.replace(leadingDashesRegex, "");
        const nodeFlags = allowedNodeEnvironmentFlags.map(trimLeadingDashes);
        class NodeEnvironmentFlagsSet extends Set {
            constructor(array){
                super();
                this[kInternal] = {
                    array
                };
            }
            add() {
                return this;
            }
            delete() {
                return false;
            }
            clear() {}
            has(key) {
                if (typeof key === "string") {
                    key = key.replace(replaceUnderscoresRegex, "-");
                    if (leadingDashesRegex.test(key)) {
                        key = key.replace(trailingValuesRegex, "");
                        return this[kInternal].array.includes(key);
                    }
                    return nodeFlags.includes(key);
                }
                return false;
            }
            entries() {
                this[kInternal].set ??= new Set(this[kInternal].array);
                return this[kInternal].set.entries();
            }
            forEach(callback, thisArg = undefined) {
                this[kInternal].array.forEach((v)=>Reflect.apply(callback, thisArg, [
                        v,
                        v,
                        this
                    ]));
            }
            get size() {
                return this[kInternal].array.length;
            }
            values() {
                this[kInternal].set ??= new Set(this[kInternal].array);
                return this[kInternal].set.values();
            }
        }
        NodeEnvironmentFlagsSet.prototype.keys = NodeEnvironmentFlagsSet.prototype[Symbol.iterator] = NodeEnvironmentFlagsSet.prototype.values;
        Object.freeze(NodeEnvironmentFlagsSet.prototype.constructor);
        Object.freeze(NodeEnvironmentFlagsSet.prototype);
        return Object.freeze(new NodeEnvironmentFlagsSet(allowedNodeEnvironmentFlags));
    }
    const DenoCommand = Deno[Deno.internal]?.nodeUnstable?.Command || Deno.Command;
    const notImplementedEvents = [
        "disconnect",
        "message",
        "multipleResolves",
        "rejectionHandled",
        "worker"
    ];
    const argv = [
        "",
        "",
        ...Deno.args
    ];
    Object.defineProperty(argv, "0", {
        get: Deno.execPath
    });
    Object.defineProperty(argv, "1", {
        get: ()=>{
            if (Deno.mainModule.startsWith("file:")) {
                return fromFileUrl2(Deno.mainModule);
            } else {
                return join4(Deno.cwd(), "$deno$node.js");
            }
        }
    });
    const exit = (code)=>{
        if (code || code === 0) {
            if (typeof code === "string") {
                const parsedCode = parseInt(code);
                process2.exitCode = isNaN(parsedCode) ? undefined : parsedCode;
            } else {
                process2.exitCode = code;
            }
        }
        if (!process2._exiting) {
            process2._exiting = true;
            process2.emit("exit", process2.exitCode || 0);
        }
        Deno.exit(process2.exitCode || 0);
    };
    function addReadOnlyProcessAlias(name, option, enumerable = true) {
        const value = getOptionValue(option);
        if (value) {
            Object.defineProperty(process2, name, {
                writable: false,
                configurable: true,
                enumerable,
                value
            });
        }
    }
    function createWarningObject(warning, type, code, ctor, detail) {
        assert(typeof warning === "string");
        const warningErr = new Error(warning);
        warningErr.name = String(type || "Warning");
        if (code !== undefined) {
            warningErr.code = code;
        }
        if (detail !== undefined) {
            warningErr.detail = detail;
        }
        Error.captureStackTrace(warningErr, ctor || process2.emitWarning);
        return warningErr;
    }
    function doEmitWarning(warning) {
        process2.emit("warning", warning);
    }
    function emitWarning(warning, type, code, ctor) {
        let detail;
        if (type !== null && typeof type === "object" && !Array.isArray(type)) {
            ctor = type.ctor;
            code = type.code;
            if (typeof type.detail === "string") {
                detail = type.detail;
            }
            type = type.type || "Warning";
        } else if (typeof type === "function") {
            ctor = type;
            code = undefined;
            type = "Warning";
        }
        if (type !== undefined) {
            validateString(type, "type");
        }
        if (typeof code === "function") {
            ctor = code;
            code = undefined;
        } else if (code !== undefined) {
            validateString(code, "code");
        }
        if (typeof warning === "string") {
            warning = createWarningObject(warning, type, code, ctor, detail);
        } else if (!(warning instanceof Error)) {
            throw new ERR_INVALID_ARG_TYPE("warning", [
                "Error",
                "string"
            ], warning);
        }
        if (warning.name === "DeprecationWarning") {
            if (process2.noDeprecation) {
                return;
            }
            if (process2.throwDeprecation) {
                return process2.nextTick(()=>{
                    throw warning;
                });
            }
        }
        process2.nextTick(doEmitWarning, warning);
    }
    function hrtime(time) {
        const milli = performance.now();
        const sec = Math.floor(milli / 1000);
        const nano = Math.floor(milli * 1_000_000 - sec * 1_000_000_000);
        if (!time) {
            return [
                sec,
                nano
            ];
        }
        const [prevSec, prevNano] = time;
        return [
            sec - prevSec,
            nano - prevNano
        ];
    }
    hrtime.bigint = function() {
        const [sec, nano] = hrtime();
        return BigInt(sec) * 1_000_000_000n + BigInt(nano);
    };
    function memoryUsage() {
        return {
            ...Deno.memoryUsage(),
            arrayBuffers: 0
        };
    }
    memoryUsage.rss = function() {
        return memoryUsage().rss;
    };
    function _kill(pid, sig) {
        let errCode;
        if (sig === 0) {
            let status;
            if (Deno.build.os === "windows") {
                status = new DenoCommand("powershell.exe", {
                    args: [
                        "Get-Process",
                        "-pid",
                        pid
                    ]
                }).outputSync();
            } else {
                status = new DenoCommand("kill", {
                    args: [
                        "-0",
                        pid
                    ]
                }).outputSync();
            }
            if (!status.success) {
                errCode = codeMap.get("ESRCH");
            }
        } else {
            const maybeSignal = Object.entries(os.signals).find(([_, numericCode])=>numericCode === sig);
            if (!maybeSignal) {
                errCode = codeMap.get("EINVAL");
            } else {
                try {
                    Deno.kill(pid, maybeSignal[0]);
                } catch (e) {
                    if (e instanceof TypeError) {
                        throw notImplemented(maybeSignal[0]);
                    }
                    throw e;
                }
            }
        }
        if (!errCode) {
            return 0;
        } else {
            return errCode;
        }
    }
    function kill(pid, sig = "SIGTERM") {
        if (pid != (pid | 0)) {
            throw new ERR_INVALID_ARG_TYPE("pid", "number", pid);
        }
        let err;
        if (typeof sig === "number") {
            err = process2._kill(pid, sig);
        } else {
            if (sig in os.signals) {
                err = process2._kill(pid, os.signals[sig]);
            } else {
                throw new ERR_UNKNOWN_SIGNAL(sig);
            }
        }
        if (err) {
            throw errnoException(err, "kill");
        }
        return true;
    }
    function uncaughtExceptionHandler(err, origin) {
        process2.emit("uncaughtExceptionMonitor", err, origin);
        process2.emit("uncaughtException", err, origin);
    }
    let execPath = null;
    class Process extends EventEmitter {
        constructor(){
            super();
            globalThis.addEventListener("unhandledrejection", (event)=>{
                if (process2.listenerCount("unhandledRejection") === 0) {
                    if (process2.listenerCount("uncaughtException") === 0) {
                        throw event.reason;
                    }
                    event.preventDefault();
                    uncaughtExceptionHandler(event.reason, "unhandledRejection");
                    return;
                }
                event.preventDefault();
                process2.emit("unhandledRejection", event.reason, event.promise);
            });
            globalThis.addEventListener("error", (event)=>{
                if (process2.listenerCount("uncaughtException") > 0) {
                    event.preventDefault();
                }
                uncaughtExceptionHandler(event.error, "uncaughtException");
            });
            globalThis.addEventListener("beforeunload", (e)=>{
                super.emit("beforeExit", process2.exitCode || 0);
                processTicksAndRejections();
                if (core.eventLoopHasMoreWork()) {
                    e.preventDefault();
                }
            });
            globalThis.addEventListener("unload", ()=>{
                if (!process2._exiting) {
                    process2._exiting = true;
                    super.emit("exit", process2.exitCode || 0);
                }
            });
        }
        arch = arch;
        argv = argv;
        chdir = chdir;
        config = {
            target_defaults: {},
            variables: {}
        };
        cwd = cwd;
        env = env;
        execArgv = [];
        exit = exit;
        _exiting = _exiting;
        exitCode = undefined;
        mainModule = undefined;
        nextTick = nextTick1;
        on(event, listener) {
            if (notImplementedEvents.includes(event)) {
                warnNotImplemented(`process.on("${event}")`);
                super.on(event, listener);
            } else if (event.startsWith("SIG")) {
                if (event === "SIGBREAK" && Deno.build.os !== "windows") {} else if (event === "SIGTERM" && Deno.build.os === "windows") {} else {
                    Deno.addSignalListener(event, listener);
                }
            } else {
                super.on(event, listener);
            }
            return this;
        }
        off(event, listener) {
            if (notImplementedEvents.includes(event)) {
                warnNotImplemented(`process.off("${event}")`);
                super.off(event, listener);
            } else if (event.startsWith("SIG")) {
                if (event === "SIGBREAK" && Deno.build.os !== "windows") {} else if (event === "SIGTERM" && Deno.build.os === "windows") {} else {
                    Deno.removeSignalListener(event, listener);
                }
            } else {
                super.off(event, listener);
            }
            return this;
        }
        emit(event, ...args) {
            if (event.startsWith("SIG")) {
                if (event === "SIGBREAK" && Deno.build.os !== "windows") {} else {
                    Deno.kill(Deno.pid, event);
                }
            } else {
                return super.emit(event, ...args);
            }
            return true;
        }
        prependListener(event, listener) {
            if (notImplementedEvents.includes(event)) {
                warnNotImplemented(`process.prependListener("${event}")`);
                super.prependListener(event, listener);
            } else if (event.startsWith("SIG")) {
                if (event === "SIGBREAK" && Deno.build.os !== "windows") {} else {
                    Deno.addSignalListener(event, listener);
                }
            } else {
                super.prependListener(event, listener);
            }
            return this;
        }
        pid = pid;
        platform = platform;
        addListener(event, listener) {
            if (notImplementedEvents.includes(event)) {
                warnNotImplemented(`process.addListener("${event}")`);
            }
            return this.on(event, listener);
        }
        removeListener(event, listener) {
            if (notImplementedEvents.includes(event)) {
                warnNotImplemented(`process.removeListener("${event}")`);
            }
            return this.off(event, listener);
        }
        hrtime = hrtime;
        _kill = _kill;
        kill = kill;
        memoryUsage = memoryUsage;
        stderr = stderr;
        stdin = stdin;
        stdout = stdout;
        version = version;
        versions = versions;
        emitWarning = emitWarning;
        binding(name) {
            return getBinding(name);
        }
        umask() {
            return 0o22;
        }
        getgid() {
            return Deno.gid();
        }
        getuid() {
            return Deno.uid();
        }
        _eval = undefined;
        get execPath() {
            if (execPath) {
                return execPath;
            }
            execPath = Deno.execPath();
            return execPath;
        }
        set execPath(path) {
            execPath = path;
        }
        #startTime = Date.now();
        uptime() {
            return (Date.now() - this.#startTime) / 1000;
        }
        #allowedFlags = buildAllowedFlags();
        get allowedNodeEnvironmentFlags() {
            return this.#allowedFlags;
        }
        features = {
            inspector: false
        };
        noDeprecation = false;
    }
    if (Deno.build.os === "windows") {
        delete Process.prototype.getgid;
        delete Process.prototype.getuid;
    }
    const process2 = new Process();
    Object.defineProperty(process2, Symbol.toStringTag, {
        enumerable: false,
        writable: true,
        configurable: false,
        value: "process"
    });
    addReadOnlyProcessAlias("noDeprecation", "--no-deprecation");
    addReadOnlyProcessAlias("throwDeprecation", "--throw-deprecation");
    process2.removeListener;
    process2.removeAllListeners;
    var N = Object.create;
    var p = Object.defineProperty;
    var V1 = Object.getOwnPropertyDescriptor;
    var J = Object.getOwnPropertyNames;
    var L = Object.getPrototypeOf, q = Object.prototype.hasOwnProperty;
    var f = (u, E)=>()=>(E || u((E = {
                exports: {}
            }).exports, E), E.exports), T = (u, E)=>{
        for(var A in E)p(u, A, {
            get: E[A],
            enumerable: !0
        });
    }, d = (u, E, A, D)=>{
        if (E && typeof E == "object" || typeof E == "function") for (let C of J(E))!q.call(u, C) && C !== A && p(u, C, {
            get: ()=>E[C],
            enumerable: !(D = V1(E, C)) || D.enumerable
        });
        return u;
    }, a = (u, E, A)=>(d(u, E, "default"), A && d(A, E, "default")), _ = (u, E, A)=>(A = u != null ? N(L(u)) : {}, d(E || !u || !u.__esModule ? p(A, "default", {
            value: u,
            enumerable: !0
        }) : A, u));
    var M = f((r)=>{
        "use strict";
        Object.defineProperty(r, "__esModule", {
            value: !0
        });
        r.default = r.parse = r.types = r.scope = void 0;
        function b(u, E) {
            return H(u) || G(u, E) || z();
        }
        function z() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
        function G(u, E) {
            var A = [], D = !0, C = !1, t = void 0;
            try {
                for(var i = u[Symbol.iterator](), B; !(D = (B = i.next()).done) && (A.push(B.value), !(E && A.length === E)); D = !0);
            } catch (o) {
                C = !0, t = o;
            } finally{
                try {
                    !D && i.return != null && i.return();
                } finally{
                    if (C) throw t;
                }
            }
            return A;
        }
        function H(u) {
            if (Array.isArray(u)) return u;
        }
        var j = (u)=>u.replace(/$|( )|(?!^)(?=[A-Z])/g, "\\.?$1"), h = (u)=>`(?:${u.join("|")})\\b`, g = (u, E)=>new RegExp(`(?:^| )(${u}$)`, E), Z = [
            "mr",
            "mrs",
            "ms",
            "miss",
            "dr",
            "herr",
            "monsieur",
            "hr",
            "frau",
            "a v m",
            "admiraal",
            "admiral",
            "air cdre",
            "air commodore",
            "air marshal",
            "air vice marshal",
            "alderman",
            "alhaji",
            "ambassador",
            "baron",
            "barones",
            "brig",
            "brig gen",
            "brig general",
            "brigadier",
            "brigadier general",
            "brother",
            "canon",
            "capt",
            "captain",
            "cardinal",
            "cdr",
            "chief",
            "cik",
            "cmdr",
            "coach",
            "col",
            "col dr",
            "colonel",
            "commandant",
            "commander",
            "commissioner",
            "commodore",
            "comte",
            "comtessa",
            "congressman",
            "conseiller",
            "consul",
            "conte",
            "contessa",
            "corporal",
            "councillor",
            "count",
            "countess",
            "crown prince",
            "crown princess",
            "dame",
            "datin",
            "dato",
            "datuk",
            "datuk seri",
            "deacon",
            "deaconess",
            "dean",
            "dhr",
            "dipl ing",
            "doctor",
            "dott",
            "dott sa",
            "dr",
            "dr ing",
            "dra",
            "drs",
            "embajador",
            "embajadora",
            "en",
            "encik",
            "eng",
            "eur ing",
            "exma sra",
            "exmo sr",
            "f o",
            "father",
            "first lieutient",
            "first officer",
            "flt lieut",
            "flying officer",
            "fr",
            "frau",
            "fraulein",
            "fru",
            "gen",
            "generaal",
            "general",
            "governor",
            "graaf",
            "gravin",
            "group captain",
            "grp capt",
            "h e dr",
            "h h",
            "h m",
            "h r h",
            "hajah",
            "haji",
            "hajim",
            "her highness",
            "her majesty",
            "herr",
            "high chief",
            "his highness",
            "his holiness",
            "his majesty",
            "hon",
            "hr",
            "hra",
            "ing",
            "ir",
            "jonkheer",
            "judge",
            "justice",
            "khun ying",
            "kolonel",
            "lady",
            "lcda",
            "lic",
            "lieut",
            "lieut cdr",
            "lieut col",
            "lieut gen",
            "lord",
            "m",
            "m l",
            "m r",
            "madame",
            "mademoiselle",
            "maj gen",
            "major",
            "master",
            "mevrouw",
            "miss",
            "mlle",
            "mme",
            "monsieur",
            "monsignor",
            "mr",
            "mrs",
            "ms",
            "mstr",
            "nti",
            "pastor",
            "president",
            "prince",
            "princess",
            "princesse",
            "prinses",
            "prof",
            "prof dr",
            "prof sir",
            "professor",
            "puan",
            "puan sri",
            "rabbi",
            "rear admiral",
            "rev",
            "rev canon",
            "rev dr",
            "rev mother",
            "reverend",
            "rva",
            "senator",
            "sergeant",
            "sheikh",
            "sheikha",
            "sig",
            "sig na",
            "sig ra",
            "sir",
            "sister",
            "sqn ldr",
            "sr",
            "sr d",
            "sra",
            "srta",
            "sultan",
            "tan sri",
            "tan sri dato",
            "tengku",
            "teuku",
            "than puying",
            "the hon dr",
            "the hon justice",
            "the hon miss",
            "the hon mr",
            "the hon mrs",
            "the hon ms",
            "the hon sir",
            "the very rev",
            "toh puan",
            "tun",
            "vice admiral",
            "viscount",
            "viscountess",
            "wg cdr"
        ], W = [
            "I",
            "II",
            "III",
            "IV",
            "V",
            "Senior",
            "Junior",
            "Jr",
            "Sr",
            "PhD",
            "Ph\\.D",
            "APR",
            "RPh",
            "PE",
            "MD",
            "MA",
            "DMD",
            "CME",
            "BVM",
            "CFRE",
            "CLU",
            "CPA",
            "CSC",
            "CSJ",
            "DC",
            "DD",
            "DDS",
            "DO",
            "DVM",
            "EdD",
            "Esq",
            "JD",
            "LLD",
            "OD",
            "OSB",
            "PC",
            "Ret",
            "RGS",
            "RN",
            "RNC",
            "SHCJ",
            "SJ",
            "SNJM",
            "SSMO",
            "USA",
            "USAF",
            "USAFR",
            "USAR",
            "USCG",
            "USMC",
            "USMCR",
            "USN",
            "USNR"
        ], K = [
            "Vere",
            "Von",
            "Van",
            "De",
            "Del",
            "Della",
            "Di",
            "Da",
            "Pietro",
            "Vanden",
            "Du",
            "St.",
            "St",
            "La",
            "Lo",
            "Ter",
            "O",
            "O'",
            "Mac",
            "Fitz"
        ], Q = h(Z.map(j)), m = h(W.map(j)), X = h(K), Y = new RegExp(`^((?:${Q} )*)(.*)$`, "i"), uu = g(`(?:${m}, )*(?:${m})`, "i"), Eu = g(`${/(?:[A-Z\xC0-\xD6\xD8-\xDE\u0100\u0102\u0104\u0106\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136\u0139\u013B\u013D\u013F\u0141\u0143\u0145\u0147\u014A\u014C\u014E\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u0179\u017B\u017D\u0181\u0182\u0184\u0186\u0187\u0189-\u018B\u018E-\u0191\u0193\u0194\u0196-\u0198\u019C\u019D\u019F\u01A0\u01A2\u01A4\u01A6\u01A7\u01A9\u01AC\u01AE\u01AF\u01B1-\u01B3\u01B5\u01B7\u01B8\u01BC\u01C4\u01C7\u01CA\u01CD\u01CF\u01D1\u01D3\u01D5\u01D7\u01D9\u01DB\u01DE\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F1\u01F4\u01F6-\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226\u0228\u022A\u022C\u022E\u0230\u0232\u023A\u023B\u023D\u023E\u0241\u0243-\u0246\u0248\u024A\u024C\u024E\u0370\u0372\u0376\u037F\u0386\u0388-\u038A\u038C\u038E\u038F\u0391-\u03A1\u03A3-\u03AB\u03CF\u03D2-\u03D4\u03D8\u03DA\u03DC\u03DE\u03E0\u03E2\u03E4\u03E6\u03E8\u03EA\u03EC\u03EE\u03F4\u03F7\u03F9\u03FA\u03FD-\u042F\u0460\u0462\u0464\u0466\u0468\u046A\u046C\u046E\u0470\u0472\u0474\u0476\u0478\u047A\u047C\u047E\u0480\u048A\u048C\u048E\u0490\u0492\u0494\u0496\u0498\u049A\u049C\u049E\u04A0\u04A2\u04A4\u04A6\u04A8\u04AA\u04AC\u04AE\u04B0\u04B2\u04B4\u04B6\u04B8\u04BA\u04BC\u04BE\u04C0\u04C1\u04C3\u04C5\u04C7\u04C9\u04CB\u04CD\u04D0\u04D2\u04D4\u04D6\u04D8\u04DA\u04DC\u04DE\u04E0\u04E2\u04E4\u04E6\u04E8\u04EA\u04EC\u04EE\u04F0\u04F2\u04F4\u04F6\u04F8\u04FA\u04FC\u04FE\u0500\u0502\u0504\u0506\u0508\u050A\u050C\u050E\u0510\u0512\u0514\u0516\u0518\u051A\u051C\u051E\u0520\u0522\u0524\u0526\u0528\u052A\u052C\u052E\u0531-\u0556\u10A0-\u10C5\u10C7\u10CD\u13A0-\u13F5\u1C90-\u1CBA\u1CBD-\u1CBF\u1E00\u1E02\u1E04\u1E06\u1E08\u1E0A\u1E0C\u1E0E\u1E10\u1E12\u1E14\u1E16\u1E18\u1E1A\u1E1C\u1E1E\u1E20\u1E22\u1E24\u1E26\u1E28\u1E2A\u1E2C\u1E2E\u1E30\u1E32\u1E34\u1E36\u1E38\u1E3A\u1E3C\u1E3E\u1E40\u1E42\u1E44\u1E46\u1E48\u1E4A\u1E4C\u1E4E\u1E50\u1E52\u1E54\u1E56\u1E58\u1E5A\u1E5C\u1E5E\u1E60\u1E62\u1E64\u1E66\u1E68\u1E6A\u1E6C\u1E6E\u1E70\u1E72\u1E74\u1E76\u1E78\u1E7A\u1E7C\u1E7E\u1E80\u1E82\u1E84\u1E86\u1E88\u1E8A\u1E8C\u1E8E\u1E90\u1E92\u1E94\u1E9E\u1EA0\u1EA2\u1EA4\u1EA6\u1EA8\u1EAA\u1EAC\u1EAE\u1EB0\u1EB2\u1EB4\u1EB6\u1EB8\u1EBA\u1EBC\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1EC8\u1ECA\u1ECC\u1ECE\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EDA\u1EDC\u1EDE\u1EE0\u1EE2\u1EE4\u1EE6\u1EE8\u1EEA\u1EEC\u1EEE\u1EF0\u1EF2\u1EF4\u1EF6\u1EF8\u1EFA\u1EFC\u1EFE\u1F08-\u1F0F\u1F18-\u1F1D\u1F28-\u1F2F\u1F38-\u1F3F\u1F48-\u1F4D\u1F59\u1F5B\u1F5D\u1F5F\u1F68-\u1F6F\u1FB8-\u1FBB\u1FC8-\u1FCB\u1FD8-\u1FDB\u1FE8-\u1FEC\u1FF8-\u1FFB\u2102\u2107\u210B-\u210D\u2110-\u2112\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u2130-\u2133\u213E\u213F\u2145\u2160-\u216F\u2183\u24B6-\u24CF\u2C00-\u2C2E\u2C60\u2C62-\u2C64\u2C67\u2C69\u2C6B\u2C6D-\u2C70\u2C72\u2C75\u2C7E-\u2C80\u2C82\u2C84\u2C86\u2C88\u2C8A\u2C8C\u2C8E\u2C90\u2C92\u2C94\u2C96\u2C98\u2C9A\u2C9C\u2C9E\u2CA0\u2CA2\u2CA4\u2CA6\u2CA8\u2CAA\u2CAC\u2CAE\u2CB0\u2CB2\u2CB4\u2CB6\u2CB8\u2CBA\u2CBC\u2CBE\u2CC0\u2CC2\u2CC4\u2CC6\u2CC8\u2CCA\u2CCC\u2CCE\u2CD0\u2CD2\u2CD4\u2CD6\u2CD8\u2CDA\u2CDC\u2CDE\u2CE0\u2CE2\u2CEB\u2CED\u2CF2\uA640\uA642\uA644\uA646\uA648\uA64A\uA64C\uA64E\uA650\uA652\uA654\uA656\uA658\uA65A\uA65C\uA65E\uA660\uA662\uA664\uA666\uA668\uA66A\uA66C\uA680\uA682\uA684\uA686\uA688\uA68A\uA68C\uA68E\uA690\uA692\uA694\uA696\uA698\uA69A\uA722\uA724\uA726\uA728\uA72A\uA72C\uA72E\uA732\uA734\uA736\uA738\uA73A\uA73C\uA73E\uA740\uA742\uA744\uA746\uA748\uA74A\uA74C\uA74E\uA750\uA752\uA754\uA756\uA758\uA75A\uA75C\uA75E\uA760\uA762\uA764\uA766\uA768\uA76A\uA76C\uA76E\uA779\uA77B\uA77D\uA77E\uA780\uA782\uA784\uA786\uA78B\uA78D\uA790\uA792\uA796\uA798\uA79A\uA79C\uA79E\uA7A0\uA7A2\uA7A4\uA7A6\uA7A8\uA7AA-\uA7AE\uA7B0-\uA7B4\uA7B6\uA7B8\uFF21-\uFF3A]|\uD801[\uDC00-\uDC27\uDCB0-\uDCD3]|\uD803[\uDC80-\uDCB2]|\uD806[\uDCA0-\uDCBF]|\uD81B[\uDE40-\uDE5F]|\uD835[\uDC00-\uDC19\uDC34-\uDC4D\uDC68-\uDC81\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB5\uDCD0-\uDCE9\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD38\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD6C-\uDD85\uDDA0-\uDDB9\uDDD4-\uDDED\uDE08-\uDE21\uDE3C-\uDE55\uDE70-\uDE89\uDEA8-\uDEC0\uDEE2-\uDEFA\uDF1C-\uDF34\uDF56-\uDF6E\uDF90-\uDFA8\uDFCA]|\uD83A[\uDD00-\uDD21]|\uD83C[\uDD30-\uDD49\uDD50-\uDD69\uDD70-\uDD89])/.source}.*`), Au = g(`(?:${/(?:[a-z\xAA\xB5\xBA\xDF-\xF6\xF8-\xFF\u0101\u0103\u0105\u0107\u0109\u010B\u010D\u010F\u0111\u0113\u0115\u0117\u0119\u011B\u011D\u011F\u0121\u0123\u0125\u0127\u0129\u012B\u012D\u012F\u0131\u0133\u0135\u0137\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u0149\u014B\u014D\u014F\u0151\u0153\u0155\u0157\u0159\u015B\u015D\u015F\u0161\u0163\u0165\u0167\u0169\u016B\u016D\u016F\u0171\u0173\u0175\u0177\u017A\u017C\u017E-\u0180\u0183\u0185\u0188\u018C\u018D\u0192\u0195\u0199-\u019B\u019E\u01A1\u01A3\u01A5\u01A8\u01AA\u01AB\u01AD\u01B0\u01B4\u01B6\u01B9\u01BA\u01BD-\u01BF\u01C6\u01C9\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DD\u01DF\u01E1\u01E3\u01E5\u01E7\u01E9\u01EB\u01ED\u01EF\u01F0\u01F3\u01F5\u01F9\u01FB\u01FD\u01FF\u0201\u0203\u0205\u0207\u0209\u020B\u020D\u020F\u0211\u0213\u0215\u0217\u0219\u021B\u021D\u021F\u0221\u0223\u0225\u0227\u0229\u022B\u022D\u022F\u0231\u0233-\u0239\u023C\u023F\u0240\u0242\u0247\u0249\u024B\u024D\u024F-\u0293\u0295-\u02B8\u02C0\u02C1\u02E0-\u02E4\u0345\u0371\u0373\u0377\u037A-\u037D\u0390\u03AC-\u03CE\u03D0\u03D1\u03D5-\u03D7\u03D9\u03DB\u03DD\u03DF\u03E1\u03E3\u03E5\u03E7\u03E9\u03EB\u03ED\u03EF-\u03F3\u03F5\u03F8\u03FB\u03FC\u0430-\u045F\u0461\u0463\u0465\u0467\u0469\u046B\u046D\u046F\u0471\u0473\u0475\u0477\u0479\u047B\u047D\u047F\u0481\u048B\u048D\u048F\u0491\u0493\u0495\u0497\u0499\u049B\u049D\u049F\u04A1\u04A3\u04A5\u04A7\u04A9\u04AB\u04AD\u04AF\u04B1\u04B3\u04B5\u04B7\u04B9\u04BB\u04BD\u04BF\u04C2\u04C4\u04C6\u04C8\u04CA\u04CC\u04CE\u04CF\u04D1\u04D3\u04D5\u04D7\u04D9\u04DB\u04DD\u04DF\u04E1\u04E3\u04E5\u04E7\u04E9\u04EB\u04ED\u04EF\u04F1\u04F3\u04F5\u04F7\u04F9\u04FB\u04FD\u04FF\u0501\u0503\u0505\u0507\u0509\u050B\u050D\u050F\u0511\u0513\u0515\u0517\u0519\u051B\u051D\u051F\u0521\u0523\u0525\u0527\u0529\u052B\u052D\u052F\u0560-\u0588\u10D0-\u10FA\u10FD-\u10FF\u13F8-\u13FD\u1C80-\u1C88\u1D00-\u1DBF\u1E01\u1E03\u1E05\u1E07\u1E09\u1E0B\u1E0D\u1E0F\u1E11\u1E13\u1E15\u1E17\u1E19\u1E1B\u1E1D\u1E1F\u1E21\u1E23\u1E25\u1E27\u1E29\u1E2B\u1E2D\u1E2F\u1E31\u1E33\u1E35\u1E37\u1E39\u1E3B\u1E3D\u1E3F\u1E41\u1E43\u1E45\u1E47\u1E49\u1E4B\u1E4D\u1E4F\u1E51\u1E53\u1E55\u1E57\u1E59\u1E5B\u1E5D\u1E5F\u1E61\u1E63\u1E65\u1E67\u1E69\u1E6B\u1E6D\u1E6F\u1E71\u1E73\u1E75\u1E77\u1E79\u1E7B\u1E7D\u1E7F\u1E81\u1E83\u1E85\u1E87\u1E89\u1E8B\u1E8D\u1E8F\u1E91\u1E93\u1E95-\u1E9D\u1E9F\u1EA1\u1EA3\u1EA5\u1EA7\u1EA9\u1EAB\u1EAD\u1EAF\u1EB1\u1EB3\u1EB5\u1EB7\u1EB9\u1EBB\u1EBD\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1EC9\u1ECB\u1ECD\u1ECF\u1ED1\u1ED3\u1ED5\u1ED7\u1ED9\u1EDB\u1EDD\u1EDF\u1EE1\u1EE3\u1EE5\u1EE7\u1EE9\u1EEB\u1EED\u1EEF\u1EF1\u1EF3\u1EF5\u1EF7\u1EF9\u1EFB\u1EFD\u1EFF-\u1F07\u1F10-\u1F15\u1F20-\u1F27\u1F30-\u1F37\u1F40-\u1F45\u1F50-\u1F57\u1F60-\u1F67\u1F70-\u1F7D\u1F80-\u1F87\u1F90-\u1F97\u1FA0-\u1FA7\u1FB0-\u1FB4\u1FB6\u1FB7\u1FBE\u1FC2-\u1FC4\u1FC6\u1FC7\u1FD0-\u1FD3\u1FD6\u1FD7\u1FE0-\u1FE7\u1FF2-\u1FF4\u1FF6\u1FF7\u2071\u207F\u2090-\u209C\u210A\u210E\u210F\u2113\u212F\u2134\u2139\u213C\u213D\u2146-\u2149\u214E\u2170-\u217F\u2184\u24D0-\u24E9\u2C30-\u2C5E\u2C61\u2C65\u2C66\u2C68\u2C6A\u2C6C\u2C71\u2C73\u2C74\u2C76-\u2C7D\u2C81\u2C83\u2C85\u2C87\u2C89\u2C8B\u2C8D\u2C8F\u2C91\u2C93\u2C95\u2C97\u2C99\u2C9B\u2C9D\u2C9F\u2CA1\u2CA3\u2CA5\u2CA7\u2CA9\u2CAB\u2CAD\u2CAF\u2CB1\u2CB3\u2CB5\u2CB7\u2CB9\u2CBB\u2CBD\u2CBF\u2CC1\u2CC3\u2CC5\u2CC7\u2CC9\u2CCB\u2CCD\u2CCF\u2CD1\u2CD3\u2CD5\u2CD7\u2CD9\u2CDB\u2CDD\u2CDF\u2CE1\u2CE3\u2CE4\u2CEC\u2CEE\u2CF3\u2D00-\u2D25\u2D27\u2D2D\uA641\uA643\uA645\uA647\uA649\uA64B\uA64D\uA64F\uA651\uA653\uA655\uA657\uA659\uA65B\uA65D\uA65F\uA661\uA663\uA665\uA667\uA669\uA66B\uA66D\uA681\uA683\uA685\uA687\uA689\uA68B\uA68D\uA68F\uA691\uA693\uA695\uA697\uA699\uA69B-\uA69D\uA723\uA725\uA727\uA729\uA72B\uA72D\uA72F-\uA731\uA733\uA735\uA737\uA739\uA73B\uA73D\uA73F\uA741\uA743\uA745\uA747\uA749\uA74B\uA74D\uA74F\uA751\uA753\uA755\uA757\uA759\uA75B\uA75D\uA75F\uA761\uA763\uA765\uA767\uA769\uA76B\uA76D\uA76F-\uA778\uA77A\uA77C\uA77F\uA781\uA783\uA785\uA787\uA78C\uA78E\uA791\uA793-\uA795\uA797\uA799\uA79B\uA79D\uA79F\uA7A1\uA7A3\uA7A5\uA7A7\uA7A9\uA7AF\uA7B5\uA7B7\uA7B9\uA7F8-\uA7FA\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABBF\uFB00-\uFB06\uFB13-\uFB17\uFF41-\uFF5A]|\uD801[\uDC28-\uDC4F\uDCD8-\uDCFB]|\uD803[\uDCC0-\uDCF2]|\uD806[\uDCC0-\uDCDF]|\uD81B[\uDE60-\uDE7F]|\uD835[\uDC1A-\uDC33\uDC4E-\uDC54\uDC56-\uDC67\uDC82-\uDC9B\uDCB6-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDCEA-\uDD03\uDD1E-\uDD37\uDD52-\uDD6B\uDD86-\uDD9F\uDDBA-\uDDD3\uDDEE-\uDE07\uDE22-\uDE3B\uDE56-\uDE6F\uDE8A-\uDEA5\uDEC2-\uDEDA\uDEDC-\uDEE1\uDEFC-\uDF14\uDF16-\uDF1B\uDF36-\uDF4E\uDF50-\uDF55\uDF70-\uDF88\uDF8A-\uDF8F\uDFAA-\uDFC2\uDFC4-\uDFC9\uDFCB]|\uD83A[\uDD22-\uDD43])/.source}.*|${X}.*|\\S*)`), Du = function(E = "") {
            typeof E != "string" && (E = E + "");
            let A = "", D = "", C = "";
            if (/[^.], /.test(E)) {
                let e = E.split(", ");
                C = e.shift();
                let F = RegExp(m).exec(e.join(", "));
                A = e.splice(F && F.index !== 0 ? 0 : -1, 1)[0], D = e.join(", ");
            } else {
                let e = E.split(uu, 2), F = e.shift().split(Au, 2);
                A = F[0], C = F[1], D = e.pop();
            }
            let t = A.match(Y), i = b(t, 3), B = i[1], o = i[2], U = D, w = C.split(Eu, 2).reverse(), y = b(w, 2), s = y[0], I = y[1];
            if (!o && s) return s.includes(" ") ? {
                literal: s
            } : {
                family: s
            };
            if (s) {
                let e = {
                    "dropping-particle": B,
                    given: o,
                    suffix: U,
                    "non-dropping-particle": I,
                    family: s
                };
                return Object.keys(e).forEach((F)=>{
                    e[F] || delete e[F];
                }), e;
            } else return {
                literal: E
            };
        };
        r.default = r.parse = Du;
        var Cu = "@name";
        r.scope = Cu;
        var eu = "@name";
        r.types = eu;
    });
    var P = f((c)=>{
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.default = void 0;
        var v = [
            "dropping-particle",
            "given"
        ], x = [
            "suffix"
        ], $ = [
            "non-dropping-particle",
            "family"
        ], ru = function(E, A = !1) {
            let D = (C)=>C.map((t)=>E[t] || "").filter(Boolean).join(" ");
            if (E.literal) return E.literal;
            if (A) {
                let C = D(x) ? `, ${D(x)}` : "", t = D(v) ? `, ${D(v)}` : "";
                return D($) + C + t;
            } else return `${D([
                ...v,
                ...x,
                ...$
            ])}`;
        }, tu = ru;
        c.default = tu;
    });
    var S = f((l)=>{
        "use strict";
        Object.defineProperty(l, "__esModule", {
            value: !0
        });
        Object.defineProperty(l, "parse", {
            enumerable: !0,
            get: function() {
                return Fu.default;
            }
        });
        Object.defineProperty(l, "format", {
            enumerable: !0,
            get: function() {
                return nu.default;
            }
        });
        var Fu = R(M()), nu = R(P());
        function R(u) {
            return u && u.__esModule ? u : {
                default: u
            };
        }
    });
    var n = {};
    T(n, {
        __esModule: ()=>au,
        default: ()=>ou,
        format: ()=>su,
        parse: ()=>iu
    });
    var k = _(S());
    a(n, _(S()));
    var { __esModule: au, parse: iu, format: su } = k, { default: O1, ...Bu } = k, ou = O1 !== void 0 ? O1 : Bu;
    const mod50 = {
        __esModule: au,
        default: ou,
        format: su,
        parse: iu
    };
    var require1 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m;
        switch(n){
            case "buffer":
                return e(mod8);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var P1 = Object.create;
    var m1 = Object.defineProperty;
    var q1 = Object.getOwnPropertyDescriptor;
    var v1 = Object.getOwnPropertyNames;
    var L1 = Object.getPrototypeOf, N1 = Object.prototype.hasOwnProperty;
    var S1 = ((s)=>typeof require1 < "u" ? require1 : typeof Proxy < "u" ? new Proxy(s, {
            get: (e, t)=>(typeof require1 < "u" ? require1 : e)[t]
        }) : s)(function(s) {
        if (typeof require1 < "u") return require1.apply(this, arguments);
        throw Error('Dynamic require of "' + s + '" is not supported');
    });
    var C = (s, e)=>()=>(e || s((e = {
                exports: {}
            }).exports, e), e.exports), E = (s, e)=>{
        for(var t in e)m1(s, t, {
            get: e[t],
            enumerable: !0
        });
    }, y = (s, e, t, o)=>{
        if (e && typeof e == "object" || typeof e == "function") for (let n of v1(e))!N1.call(s, n) && n !== t && m1(s, n, {
            get: ()=>e[n],
            enumerable: !(o = q1(e, n)) || o.enumerable
        });
        return s;
    }, u = (s, e, t)=>(y(s, e, "default"), t && y(t, e, "default")), T1 = (s, e, t)=>(t = s != null ? P1(L1(s)) : {}, y(e || !s || !s.__esModule ? m1(t, "default", {
            value: s,
            enumerable: !0
        }) : t, s));
    var w = C((G, R)=>{
        var { Buffer: p } = S1("buffer");
        function i(...s) {
            let e = new i.Request(...s), t = new XMLHttpRequest;
            t.withCredentials = e.credentials === "include", t.timeout = e[r].timeout, t.open(e.method, e.url, !1);
            try {
                t.responseType = "arraybuffer";
            } catch  {}
            for (let h of e.headers)t.setRequestHeader(...h);
            t.send(e.body || null);
            let o = t.getAllResponseHeaders();
            o = o && o.split(`\r
`).filter(Boolean).map((h)=>h.split(": ", 2));
            let n = new i.Response(t.response, {
                headers: o,
                status: t.status,
                statusText: t.statusText
            });
            return n[r].url = t.responseURL, n[r].redirected = t.responseURL !== e.url, n;
        }
        var r = Symbol("SyncFetch Internals"), O = [
            "mode",
            "cache",
            "redirect",
            "referrer",
            "integrity"
        ], j = {
            100: "Continue",
            101: "Switching Protocols",
            200: "OK",
            201: "Created",
            202: "Accepted",
            203: "Non-Authoritative Information",
            204: "No Content",
            205: "Reset Content",
            206: "Partial Content",
            300: "Multiple Choices",
            301: "Moved Permanently",
            302: "Found",
            303: "See Other",
            304: "Not Modified",
            305: "Use Proxy",
            307: "Temporary Redirect",
            400: "Bad Request",
            401: "Unauthorized",
            402: "Payment Required",
            403: "Forbidden",
            404: "Not Found",
            405: "Method Not Allowed",
            406: "Not Acceptable",
            407: "Proxy Authentication Required",
            408: "Request Timeout",
            409: "Conflict",
            410: "Gone",
            411: "Length Required",
            412: "Precondition Failed",
            413: "Payload Too Large",
            414: "URI Too Long",
            415: "Unsupported Media Type",
            416: "Range Not Satisfiable",
            417: "Expectation Failed",
            426: "Upgrade Required",
            500: "Internal Server Error",
            501: "Not Implemented",
            502: "Bad Gateway",
            503: "Service Unavailable",
            504: "Gateway Timeout",
            505: "HTTP Version Not Supported"
        }, l = class s {
            constructor(e, t = {}){
                for (let o of O)if (o in t) throw new TypeError(`option ${o} not supported`);
                if (t.credentials === "same-origin") throw new TypeError("option credentials with value 'same-origin' not supported");
                if (this[r] = {
                    method: t.method || "GET",
                    headers: new i.Headers(t.headers),
                    body: t.body ? p.from(t.body) : null,
                    credentials: t.credentials || "omit",
                    timeout: t.timeout || 0
                }, typeof e == "string") this[r].url = e;
                else if (e instanceof s) this[r].url = e.url, t.method || (this[r].method = e.method), t.headers || (this[r].headers = e.headers), t.body || (this[r].body = e[r].body), t.credentials || (this[r].credentials = e.credentials);
                else throw new TypeError("Request input should be a URL string or a Request object");
            }
            get cache() {
                return "default";
            }
            get credentials() {
                return this[r].credentials;
            }
            get destination() {
                return "";
            }
            get headers() {
                return this[r].headers;
            }
            get integrity() {
                return "";
            }
            get method() {
                return this[r].method;
            }
            get mode() {
                return "cors";
            }
            get priority() {
                return "auto";
            }
            get redirect() {
                return "follow";
            }
            get referrer() {
                return "about:client";
            }
            get referrerPolicy() {
                return "";
            }
            get url() {
                return this[r].url;
            }
            clone() {
                return g(this), new s(this.url, this[r]);
            }
        }, c = class s {
            constructor(e, t = {}){
                this[r] = {
                    body: e ? p.from(e) : null,
                    bodyUsed: !1,
                    headers: new i.Headers(t.headers),
                    status: t.status,
                    statusText: t.statusText
                };
            }
            get headers() {
                return this[r].headers;
            }
            get ok() {
                let e = this[r].status;
                return e >= 200 && e < 300;
            }
            get redirected() {
                return this[r].redirected;
            }
            get status() {
                return this[r].status;
            }
            get statusText() {
                return this[r].statusText;
            }
            get url() {
                return this[r].url;
            }
            clone() {
                return this.redirect(this[r].url, this[r].status);
            }
            redirect(e, t) {
                g(this);
                let o = new s(this[r].body, {
                    headers: this[r].headers,
                    status: t || this[r].status,
                    statusText: j[t] || this[r].statusText
                });
                return o[r].url = e || this[r].url, o[r].redirected = this[r].redirected, o;
            }
        }, f = class s {
            constructor(e){
                this[r] = {
                    body: p.from(e),
                    bodyUsed: !1
                };
            }
            get bodyUsed() {
                return this[r].bodyUsed;
            }
            static mixin(e) {
                for (let t of Object.getOwnPropertyNames(s.prototype)){
                    if (t === "constructor") continue;
                    let o = Object.getOwnPropertyDescriptor(s.prototype, t);
                    Object.defineProperty(e, t, {
                        ...o,
                        enumerable: !0
                    });
                }
            }
            arrayBuffer() {
                let e = d(this);
                return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
            }
            blob() {
                let e = this.headers && this.headers.get("content-type");
                return new Blob([
                    d(this)
                ], e && {
                    type: e
                });
            }
            text() {
                return d(this).toString();
            }
            json() {
                try {
                    return JSON.parse(d(this).toString());
                } catch (e) {
                    throw new TypeError(`invalid json response body at ${this.url} reason: ${e.message}`, "invalid-json");
                }
            }
            buffer() {
                return d(this).clone();
            }
        };
        function g(s) {
            if (s.bodyUsed) throw new TypeError(`body used already for: ${s.url}`);
        }
        function d(s) {
            return g(s), s[r].bodyUsed = !0, s[r].body || p.alloc(0);
        }
        f.mixin(l.prototype);
        f.mixin(c.prototype);
        var b = class {
            constructor(e){
                if (e instanceof i.Headers) this[r] = {
                    ...e[r]
                };
                else if (this[r] = {}, Array.isArray(e)) for (let [t, o] of e)this.append(t, o);
                else if (typeof e == "object") for(let t in e)this.set(t, e[t]);
            }
            append(e, t) {
                e = e.toLowerCase(), this[r][e] || (this[r][e] = []), this[r][e].push(t);
            }
            delete(e) {
                delete this[r][e.toLowerCase()];
            }
            set(e, t) {
                this[r][e.toLowerCase()] = [
                    t
                ];
            }
            entries() {
                let e = [];
                for(let t in this[r])for (let o of this[r][t])e.push([
                    t,
                    o
                ]);
                return e;
            }
            get(e) {
                return e = e.toLowerCase(), e in this[r] ? this[r][e].join(", ") : null;
            }
            keys() {
                return Object.keys(this[r]);
            }
            has(e) {
                return e.toLowerCase() in this[r];
            }
            values() {
                let e = [];
                for(let t in this[r])for (let o of this[r][t])e.push(o);
                return e;
            }
            *[Symbol.iterator]() {
                for(let e in this[r])for (let t of this[r][e])yield [
                    e,
                    t
                ];
            }
        };
        i.Headers = b;
        i.Request = l;
        i.Response = c;
        R.exports = i;
    });
    var a1 = {};
    E(a1, {
        FetchError: ()=>H,
        Headers: ()=>A,
        Request: ()=>F,
        Response: ()=>B,
        default: ()=>M1
    });
    var U = T1(w());
    u(a1, T1(w()));
    var { Headers: A, FetchError: H, Request: F, Response: B } = U, { default: x, ...I } = U, M1 = x !== void 0 ? x : I;
    const mod51 = {
        FetchError: H,
        Headers: A,
        Request: F,
        Response: B,
        default: M1
    };
    var __global$ = globalThis || (typeof window !== "undefined" ? window : self);
    var K = Object.create;
    var P2 = Object.defineProperty;
    var Q = Object.getOwnPropertyDescriptor;
    var Y1 = Object.getOwnPropertyNames;
    var Z1 = Object.getPrototypeOf, ee = Object.prototype.hasOwnProperty;
    var te = (s, i)=>()=>(i || s((i = {
                exports: {}
            }).exports, i), i.exports), re = (s, i)=>{
        for(var h in i)P2(s, h, {
            get: i[h],
            enumerable: !0
        });
    }, R = (s, i, h, d)=>{
        if (i && typeof i == "object" || typeof i == "function") for (let m of Y1(i))!ee.call(s, m) && m !== h && P2(s, m, {
            get: ()=>i[m],
            enumerable: !(d = Q(i, m)) || d.enumerable
        });
        return s;
    }, _1 = (s, i, h)=>(R(s, i, "default"), h && R(h, i, "default")), F1 = (s, i, h)=>(h = s != null ? K(Z1(s)) : {}, R(i || !s || !s.__esModule ? P2(h, "default", {
            value: s,
            enumerable: !0
        }) : h, s));
    var j1 = te((T, U)=>{
        (function(s) {
            "use strict";
            function i(h) {
                var d = h && h.Promise || s.Promise, m = h && h.XMLHttpRequest || s.XMLHttpRequest;
                return function() {
                    var w = Object.create(s, {
                        fetch: {
                            value: void 0,
                            writable: !0
                        }
                    });
                    return function(c, f) {
                        typeof T == "object" && typeof U < "u" ? f(T) : typeof define == "function" && define.amd ? define([
                            "exports"
                        ], f) : f(c.WHATWGFetch = {});
                    }(this, function(c) {
                        "use strict";
                        var f = typeof w < "u" && w || typeof self < "u" && self || typeof f < "u" && f, l = {
                            searchParams: "URLSearchParams" in f,
                            iterable: "Symbol" in f && "iterator" in Symbol,
                            blob: "FileReader" in f && "Blob" in f && function() {
                                try {
                                    return new Blob, !0;
                                } catch  {
                                    return !1;
                                }
                            }(),
                            formData: "FormData" in f,
                            arrayBuffer: "ArrayBuffer" in f
                        };
                        function q(e) {
                            return e && DataView.prototype.isPrototypeOf(e);
                        }
                        if (l.arrayBuffer) var L = [
                            "[object Int8Array]",
                            "[object Uint8Array]",
                            "[object Uint8ClampedArray]",
                            "[object Int16Array]",
                            "[object Uint16Array]",
                            "[object Int32Array]",
                            "[object Uint32Array]",
                            "[object Float32Array]",
                            "[object Float64Array]"
                        ], C = ArrayBuffer.isView || function(e) {
                            return e && L.indexOf(Object.prototype.toString.call(e)) > -1;
                        };
                        function A(e) {
                            if (typeof e != "string" && (e = String(e)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(e) || e === "") throw new TypeError("Invalid character in header field name");
                            return e.toLowerCase();
                        }
                        function g(e) {
                            return typeof e != "string" && (e = String(e)), e;
                        }
                        function O(e) {
                            var t = {
                                next: function() {
                                    var r = e.shift();
                                    return {
                                        done: r === void 0,
                                        value: r
                                    };
                                }
                            };
                            return l.iterable && (t[Symbol.iterator] = function() {
                                return t;
                            }), t;
                        }
                        function u(e) {
                            this.map = {}, e instanceof u ? e.forEach(function(t, r) {
                                this.append(r, t);
                            }, this) : Array.isArray(e) ? e.forEach(function(t) {
                                this.append(t[0], t[1]);
                            }, this) : e && Object.getOwnPropertyNames(e).forEach(function(t) {
                                this.append(t, e[t]);
                            }, this);
                        }
                        u.prototype.append = function(e, t) {
                            e = A(e), t = g(t);
                            var r = this.map[e];
                            this.map[e] = r ? r + ", " + t : t;
                        }, u.prototype.delete = function(e) {
                            delete this.map[A(e)];
                        }, u.prototype.get = function(e) {
                            return e = A(e), this.has(e) ? this.map[e] : null;
                        }, u.prototype.has = function(e) {
                            return this.map.hasOwnProperty(A(e));
                        }, u.prototype.set = function(e, t) {
                            this.map[A(e)] = g(t);
                        }, u.prototype.forEach = function(e, t) {
                            for(var r in this.map)this.map.hasOwnProperty(r) && e.call(t, this.map[r], r, this);
                        }, u.prototype.keys = function() {
                            var e = [];
                            return this.forEach(function(t, r) {
                                e.push(r);
                            }), O(e);
                        }, u.prototype.values = function() {
                            var e = [];
                            return this.forEach(function(t) {
                                e.push(t);
                            }), O(e);
                        }, u.prototype.entries = function() {
                            var e = [];
                            return this.forEach(function(t, r) {
                                e.push([
                                    r,
                                    t
                                ]);
                            }), O(e);
                        }, l.iterable && (u.prototype[Symbol.iterator] = u.prototype.entries);
                        function x(e) {
                            if (e.bodyUsed) return d.reject(new TypeError("Already read"));
                            e.bodyUsed = !0;
                        }
                        function H(e) {
                            return new d(function(t, r) {
                                e.onload = function() {
                                    t(e.result);
                                }, e.onerror = function() {
                                    r(e.error);
                                };
                            });
                        }
                        function k(e) {
                            var t = new FileReader, r = H(t);
                            return t.readAsArrayBuffer(e), r;
                        }
                        function N(e) {
                            var t = new FileReader, r = H(t);
                            return t.readAsText(e), r;
                        }
                        function G(e) {
                            for(var t = new Uint8Array(e), r = new Array(t.length), o = 0; o < t.length; o++)r[o] = String.fromCharCode(t[o]);
                            return r.join("");
                        }
                        function M(e) {
                            if (e.slice) return e.slice(0);
                            var t = new Uint8Array(e.byteLength);
                            return t.set(new Uint8Array(e)), t.buffer;
                        }
                        function S() {
                            return this.bodyUsed = !1, this._initBody = function(e) {
                                this.bodyUsed = this.bodyUsed, this._bodyInit = e, e ? typeof e == "string" ? this._bodyText = e : l.blob && Blob.prototype.isPrototypeOf(e) ? this._bodyBlob = e : l.formData && FormData.prototype.isPrototypeOf(e) ? this._bodyFormData = e : l.searchParams && URLSearchParams.prototype.isPrototypeOf(e) ? this._bodyText = e.toString() : l.arrayBuffer && l.blob && q(e) ? (this._bodyArrayBuffer = M(e.buffer), this._bodyInit = new Blob([
                                    this._bodyArrayBuffer
                                ])) : l.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(e) || C(e)) ? this._bodyArrayBuffer = M(e) : this._bodyText = e = Object.prototype.toString.call(e) : this._bodyText = "", this.headers.get("content-type") || (typeof e == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : l.searchParams && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
                            }, l.blob && (this.blob = function() {
                                var e = x(this);
                                if (e) return e;
                                if (this._bodyBlob) return d.resolve(this._bodyBlob);
                                if (this._bodyArrayBuffer) return d.resolve(new Blob([
                                    this._bodyArrayBuffer
                                ]));
                                if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                                return d.resolve(new Blob([
                                    this._bodyText
                                ]));
                            }, this.arrayBuffer = function() {
                                if (this._bodyArrayBuffer) {
                                    var e = x(this);
                                    return e || (ArrayBuffer.isView(this._bodyArrayBuffer) ? d.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : d.resolve(this._bodyArrayBuffer));
                                } else return this.blob().then(k);
                            }), this.text = function() {
                                var e = x(this);
                                if (e) return e;
                                if (this._bodyBlob) return N(this._bodyBlob);
                                if (this._bodyArrayBuffer) return d.resolve(G(this._bodyArrayBuffer));
                                if (this._bodyFormData) throw new Error("could not read FormData body as text");
                                return d.resolve(this._bodyText);
                            }, l.formData && (this.formData = function() {
                                return this.text().then(z);
                            }), this.json = function() {
                                return this.text().then(JSON.parse);
                            }, this;
                        }
                        var V = [
                            "DELETE",
                            "GET",
                            "HEAD",
                            "OPTIONS",
                            "POST",
                            "PUT"
                        ];
                        function X(e) {
                            var t = e.toUpperCase();
                            return V.indexOf(t) > -1 ? t : e;
                        }
                        function b(e, t) {
                            if (!(this instanceof b)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                            t = t || {};
                            var r = t.body;
                            if (e instanceof b) {
                                if (e.bodyUsed) throw new TypeError("Already read");
                                this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new u(e.headers)), this.method = e.method, this.mode = e.mode, this.signal = e.signal, !r && e._bodyInit != null && (r = e._bodyInit, e.bodyUsed = !0);
                            } else this.url = String(e);
                            if (this.credentials = t.credentials || this.credentials || "same-origin", (t.headers || !this.headers) && (this.headers = new u(t.headers)), this.method = X(t.method || this.method || "GET"), this.mode = t.mode || this.mode || null, this.signal = t.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && r) throw new TypeError("Body not allowed for GET or HEAD requests");
                            if (this._initBody(r), (this.method === "GET" || this.method === "HEAD") && (t.cache === "no-store" || t.cache === "no-cache")) {
                                var o = /([?&])_=[^&]*/;
                                if (o.test(this.url)) this.url = this.url.replace(o, "$1_=" + new Date().getTime());
                                else {
                                    var a = /\?/;
                                    this.url += (a.test(this.url) ? "&" : "?") + "_=" + new Date().getTime();
                                }
                            }
                        }
                        b.prototype.clone = function() {
                            return new b(this, {
                                body: this._bodyInit
                            });
                        };
                        function z(e) {
                            var t = new FormData;
                            return e.trim().split("&").forEach(function(r) {
                                if (r) {
                                    var o = r.split("="), a = o.shift().replace(/\+/g, " "), n = o.join("=").replace(/\+/g, " ");
                                    t.append(decodeURIComponent(a), decodeURIComponent(n));
                                }
                            }), t;
                        }
                        function W(e) {
                            var t = new u, r = e.replace(/\r?\n[\t ]+/g, " ");
                            return r.split("\r").map(function(o) {
                                return o.indexOf(`
`) === 0 ? o.substr(1, o.length) : o;
                            }).forEach(function(o) {
                                var a = o.split(":"), n = a.shift().trim();
                                if (n) {
                                    var E = a.join(":").trim();
                                    t.append(n, E);
                                }
                            }), t;
                        }
                        S.call(b.prototype);
                        function p(e, t) {
                            if (!(this instanceof p)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                            t || (t = {}), this.type = "default", this.status = t.status === void 0 ? 200 : t.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "", this.headers = new u(t.headers), this.url = t.url || "", this._initBody(e);
                        }
                        S.call(p.prototype), p.prototype.clone = function() {
                            return new p(this._bodyInit, {
                                status: this.status,
                                statusText: this.statusText,
                                headers: new u(this.headers),
                                url: this.url
                            });
                        }, p.error = function() {
                            var e = new p(null, {
                                status: 0,
                                statusText: ""
                            });
                            return e.type = "error", e;
                        };
                        var $ = [
                            301,
                            302,
                            303,
                            307,
                            308
                        ];
                        p.redirect = function(e, t) {
                            if ($.indexOf(t) === -1) throw new RangeError("Invalid status code");
                            return new p(null, {
                                status: t,
                                headers: {
                                    location: e
                                }
                            });
                        }, c.DOMException = f.DOMException;
                        try {
                            new c.DOMException;
                        } catch  {
                            c.DOMException = function(t, r) {
                                this.message = t, this.name = r;
                                var o = Error(t);
                                this.stack = o.stack;
                            }, c.DOMException.prototype = Object.create(Error.prototype), c.DOMException.prototype.constructor = c.DOMException;
                        }
                        function D(e, t) {
                            return new d(function(r, o) {
                                var a = new b(e, t);
                                if (a.signal && a.signal.aborted) return o(new c.DOMException("Aborted", "AbortError"));
                                var n = new m;
                                function E() {
                                    n.abort();
                                }
                                n.onload = function() {
                                    var y = {
                                        status: n.status,
                                        statusText: n.statusText,
                                        headers: W(n.getAllResponseHeaders() || "")
                                    };
                                    y.url = "responseURL" in n ? n.responseURL : y.headers.get("X-Request-URL");
                                    var B = "response" in n ? n.response : n.responseText;
                                    setTimeout(function() {
                                        r(new p(B, y));
                                    }, 0);
                                }, n.onerror = function() {
                                    setTimeout(function() {
                                        o(new TypeError("Network request failed"));
                                    }, 0);
                                }, n.ontimeout = function() {
                                    setTimeout(function() {
                                        o(new TypeError("Network request failed"));
                                    }, 0);
                                }, n.onabort = function() {
                                    setTimeout(function() {
                                        o(new c.DOMException("Aborted", "AbortError"));
                                    }, 0);
                                };
                                function J(y) {
                                    try {
                                        return y === "" && f.location.href ? f.location.href : y;
                                    } catch  {
                                        return y;
                                    }
                                }
                                n.open(a.method, J(a.url), !0), a.credentials === "include" ? n.withCredentials = !0 : a.credentials === "omit" && (n.withCredentials = !1), "responseType" in n && (l.blob ? n.responseType = "blob" : l.arrayBuffer && a.headers.get("Content-Type") && a.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (n.responseType = "arraybuffer")), t && typeof t.headers == "object" && !(t.headers instanceof u) ? Object.getOwnPropertyNames(t.headers).forEach(function(y) {
                                    n.setRequestHeader(y, g(t.headers[y]));
                                }) : a.headers.forEach(function(y, B) {
                                    n.setRequestHeader(B, y);
                                }), a.signal && (a.signal.addEventListener("abort", E), n.onreadystatechange = function() {
                                    n.readyState === 4 && a.signal.removeEventListener("abort", E);
                                }), n.send(typeof a._bodyInit > "u" ? null : a._bodyInit);
                            });
                        }
                        D.polyfill = !0, f.fetch || (f.fetch = D, f.Headers = u, f.Request = b, f.Response = p), c.Headers = u, c.Request = b, c.Response = p, c.fetch = D, Object.defineProperty(c, "__esModule", {
                            value: !0
                        });
                    }), {
                        fetch: w.fetch,
                        Headers: w.Headers,
                        Request: w.Request,
                        Response: w.Response,
                        DOMException: w.DOMException
                    };
                }();
            }
            typeof define == "function" && define.amd ? define(function() {
                return i;
            }) : typeof T == "object" ? U.exports = i : s.fetchPonyfill = i;
        })(typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof __global$ < "u" ? __global$ : T);
    });
    var v2 = {};
    re(v2, {
        default: ()=>ie
    });
    var ne = F1(j1());
    _1(v2, F1(j1()));
    var { default: I1, ...oe } = ne, ie = I1 !== void 0 ? I1 : oe;
    const mod52 = {
        default: ie
    };
    var be = Object.defineProperty;
    var u1 = (t, e)=>{
        for(var r in e)be(t, r, {
            get: e[r],
            enumerable: !0
        });
    };
    var rt = {};
    u1(rt, {
        currentVersion: ()=>xe,
        retrieveLastVersion: ()=>je,
        retrieveVersion: ()=>we1,
        save: ()=>Oe,
        undo: ()=>ve
    });
    function xe() {
        return this.log.length;
    }
    function we1(t = 1) {
        if (t <= 0 || t > this.currentVersion()) return null;
        {
            let [e, r] = this.log[t - 1], n = new this.constructor(JSON.parse(e), JSON.parse(r));
            return n.log = this.log.slice(0, t), n;
        }
    }
    function ve(t = 1) {
        return this.retrieveVersion(this.currentVersion() - t);
    }
    function je() {
        return this.retrieveVersion(this.currentVersion());
    }
    function Oe() {
        return this.log.push([
            JSON.stringify(this.data),
            JSON.stringify(this._options)
        ]), this;
    }
    var nt = {};
    u1(nt, {
        defaultOptions: ()=>Pe,
        options: ()=>Ee
    });
    var Dt = [
        "real",
        "string"
    ], It = [
        "json",
        "html",
        "string",
        "rtf"
    ], Lt = [
        "csl",
        "bibtex",
        "bibtxt",
        "citation-*",
        "ris",
        "ndjson"
    ], Rt = [
        "string",
        "function"
    ];
    function T2(t) {
        if (typeof t != "object") throw new TypeError("Options not an object!");
        let { format: e, type: r, style: n, lang: i, append: s, prepend: o } = t;
        if (e && !Dt.includes(e)) throw new TypeError(`Option format ("${e}") should be one of: ${Dt}`);
        if (r && !It.includes(r)) throw new TypeError(`Option type ("${r}") should be one of: ${It}`);
        if (n && !Lt.includes(n) && !/^citation/.test(n)) throw new TypeError(`Option style ("${n}") should be one of: ${Lt}`);
        if (i && typeof i != "string") throw new TypeError(`Option lang should be a string, but is a ${typeof i}`);
        if (o && !Rt.includes(typeof o)) throw new TypeError(`Option prepend should be a string or a function, but is a ${typeof o}`);
        if (s && !Rt.includes(typeof s)) throw new TypeError(`Option append should be a string or a function, but is a ${typeof s}`);
        if (/^citation/.test(n) && r === "json") throw new Error(`Combination type/style of json/citation-* is not valid: ${r}/${n}`);
        return !0;
    }
    function Te(t) {
        if (typeof t != "object") throw new TypeError("Options should be an object");
        if (t.output) T2(t.output);
        else {
            if (t.maxChainLength && typeof t.maxChainLength != "number") throw new TypeError("Option maxChainLength should be a number");
            if (t.forceType && typeof t.forceType != "string") throw new TypeError("Option forceType should be a string");
            if (t.generateGraph != null && typeof t.generateGraph != "boolean") throw new TypeError("Option generateGraph should be a boolean");
            if (t.strict != null && typeof t.strict != "boolean") throw new TypeError("Option strict should be a boolean");
            if (t.target != null && typeof t.target != "string") throw new TypeError("Option target should be a boolean");
        }
        return !0;
    }
    var Pe = {
        format: "real",
        type: "json",
        style: "csl",
        lang: "en-US"
    };
    function Ee(t, e) {
        return T2(t), e && this.save(), Object.assign(this._options, t), this;
    }
    var Et = {};
    u1(Et, {
        add: ()=>ar,
        addAsync: ()=>cr,
        reset: ()=>pr,
        set: ()=>ur,
        setAsync: ()=>lr
    });
    var Y2 = {};
    u1(Y2, {
        add: ()=>rr,
        addDataParser: ()=>Q1,
        addTypeParser: ()=>lt,
        chain: ()=>J1,
        chainAsync: ()=>M2,
        chainLink: ()=>Ze,
        chainLinkAsync: ()=>tr,
        data: ()=>V2,
        dataAsync: ()=>z,
        get: ()=>Ot,
        has: ()=>ir,
        hasDataParser: ()=>ne1,
        hasTypeParser: ()=>Se,
        list: ()=>sr,
        listDataParser: ()=>er,
        listTypeParser: ()=>$e,
        remove: ()=>nr,
        removeDataParser: ()=>q2,
        removeTypeParser: ()=>pt,
        treeTypeParser: ()=>Ce1,
        type: ()=>y1,
        typeMatcher: ()=>ft,
        util: ()=>or
    });
    var ot = {};
    u1(ot, {
        dataTypeOf: ()=>st,
        typeOf: ()=>it
    });
    function it(t) {
        switch(t){
            case void 0:
                return "Undefined";
            case null:
                return "Null";
            default:
                return t.constructor.name;
        }
    }
    function st(t) {
        switch(typeof t){
            case "string":
                return "String";
            case "object":
                if (Array.isArray(t)) return "Array";
                if (it(t) === "Object") return "SimpleObject";
                if (it(t) !== "Null") return "ComplexObject";
            default:
                return "Primitive";
        }
    }
    var ut = {};
    u1(ut, {
        applyGraph: ()=>at,
        removeGraph: ()=>ct1
    });
    function at(t, e) {
        if (t._graph) {
            let r = e.findIndex(({ type: n })=>n === "@else/list+object");
            r !== -1 && e.splice(r + 1, 0, ...t._graph.slice(0, -1));
        }
        return t._graph = e, t;
    }
    function ct1(t) {
        return delete t._graph, t;
    }
    var ht = {};
    u1(ht, {
        DataParser: ()=>N2,
        FormatParser: ()=>D,
        TypeParser: ()=>H1
    });
    var P3 = {
        _output (t, e, r) {
            this._log.push(e, r), !(this._levels.indexOf(t) < this._levels.indexOf(this.level)) && this._console.log(e, ...r);
        },
        _console: null,
        _log: [],
        _levels: [
            "http",
            "debug",
            "unmapped",
            "info",
            "warn",
            "error",
            "silent"
        ],
        level: "silent"
    };
    for (let t of P3._levels)P3[t] = (e, ...r)=>P3._output(t, e, r);
    typeof console.Console == "function" ? P3._console = new console.Console(process2.stderr) : P3._console = console;
    var p1 = P3;
    var h = {}, b = {}, E1 = {};
    function Jt(t, e) {
        switch(e){
            case "Array":
                return t.length === 0 || t.every((r)=>y1(r) === "@csl/object") ? "@csl/list+object" : "@else/list+object";
            case "SimpleObject":
            case "ComplexObject":
                return "@csl/object";
            default:
                return "@invalid";
        }
    }
    function Mt(t = [], e) {
        for (let r of t)if (h[r].predicate(e)) return Mt(h[r].extensions, e) || r;
    }
    function y1(t) {
        let e = st(t);
        return e === "Array" && t.length === 0 ? Jt(t, e) : Mt(b[e], t) || Jt(t, e);
    }
    function lt(t, { dataType: e, predicate: r, extends: n }) {
        let i = [];
        t in E1 && (i = E1[t], delete E1[t], p1.debug("[core]", `Subclasses "${i}" finally registered to parent type "${t}"`));
        let s = {
            predicate: r,
            extensions: i
        };
        if (h[t] = s, n) {
            let o = h[n];
            o ? o.extensions.push(t) : (E1[n] || (E1[n] = []), E1[n].push(t), p1.debug("[core]", `Subclass "${t}" is waiting on parent type "${n}"`));
        } else (b[e] || (b[e] = [])).push(t);
    }
    function Se(t) {
        return Object.prototype.hasOwnProperty.call(h, t);
    }
    function pt(t) {
        delete h[t], [
            ...Object.keys(b).map((r)=>b[r]),
            ...Object.keys(h).map((r)=>h[r].extensions).filter((r)=>r.length > 0)
        ].forEach((r)=>{
            let n = r.indexOf(t);
            n > -1 && r.splice(n, 1);
        });
    }
    function $e() {
        return Object.keys(h);
    }
    function Ce1() {
        let t = (e)=>({
                name: e,
                children: h[e].extensions.map(t)
            });
        return {
            name: "Type tree",
            children: Object.keys(b).map((e)=>({
                    name: e,
                    children: b[e].map(t)
                }))
        };
    }
    var ft = /^(?:@(.+?))(?:\/(?:(.+?)\+)?(?:(.+)))?$/;
    function ke1(t, e, r) {
        return e = _e1(e), e in t ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = r, t;
    }
    function _e1(t) {
        var e = Ae(t, "string");
        return typeof e == "symbol" ? e : String(e);
    }
    function Ae(t, e) {
        if (typeof t != "object" || t === null) return t;
        var r = t[Symbol.toPrimitive];
        if (r !== void 0) {
            var n = r.call(t, e || "default");
            if (typeof n != "object") return n;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (e === "string" ? String : Number)(t);
    }
    var H1 = class {
        constructor(e){
            ke1(this, "validDataTypes", [
                "String",
                "Array",
                "SimpleObject",
                "ComplexObject",
                "Primitive"
            ]), this.data = e;
        }
        validateDataType() {
            let e = this.data.dataType;
            if (e && !this.validDataTypes.includes(e)) throw new RangeError(`dataType was ${e}; expected one of ${this.validDataTypes}`);
        }
        validateParseType() {
            let e = this.data.predicate;
            if (e && !(e instanceof RegExp || typeof e == "function")) throw new TypeError(`predicate was ${typeof e}; expected RegExp or function`);
        }
        validateTokenList() {
            let e = this.data.tokenList;
            if (e && typeof e != "object") throw new TypeError(`tokenList was ${typeof e}; expected object or RegExp`);
        }
        validatePropertyConstraint() {
            let e = this.data.propertyConstraint;
            if (e && typeof e != "object") throw new TypeError(`propertyConstraint was ${typeof e}; expected array or object`);
        }
        validateElementConstraint() {
            let e = this.data.elementConstraint;
            if (e && typeof e != "string") throw new TypeError(`elementConstraint was ${typeof e}; expected string`);
        }
        validateExtends() {
            let e = this.data.extends;
            if (e && typeof e != "string") throw new TypeError(`extends was ${typeof e}; expected string`);
        }
        validate() {
            if (this.data === null || typeof this.data != "object") throw new TypeError(`typeParser was ${typeof this.data}; expected object`);
            this.validateDataType(), this.validateParseType(), this.validateTokenList(), this.validatePropertyConstraint(), this.validateElementConstraint(), this.validateExtends();
        }
        parseTokenList() {
            let e = this.data.tokenList;
            if (e) e instanceof RegExp && (e = {
                token: e
            });
            else return [];
            let { token: r, split: n = /\s+/, trim: i = !0, every: s = !0 } = e, o = (c)=>i ? c.trim() : c, f = s ? "every" : "some";
            return [
                (c)=>o(c).split(n)[f]((l)=>r.test(l))
            ];
        }
        parsePropertyConstraint() {
            return [].concat(this.data.propertyConstraint || []).map(({ props: r, match: n, value: i })=>{
                switch(r = [].concat(r), n){
                    case "any":
                    case "some":
                        return (s)=>r.some((o)=>o in s && (!i || i(s[o])));
                    case "none":
                        return (s)=>!r.some((o)=>o in s && (!i || i(s[o])));
                    case "every":
                    default:
                        return (s)=>r.every((o)=>o in s && (!i || i(s[o])));
                }
            });
        }
        parseElementConstraint() {
            let e = this.data.elementConstraint;
            return e ? [
                (r)=>r.every((n)=>y1(n) === e)
            ] : [];
        }
        parsePredicate() {
            return this.data.predicate instanceof RegExp ? [
                this.data.predicate.test.bind(this.data.predicate)
            ] : this.data.predicate ? [
                this.data.predicate
            ] : [];
        }
        getCombinedPredicate() {
            let e = [
                ...this.parsePredicate(),
                ...this.parseTokenList(),
                ...this.parsePropertyConstraint(),
                ...this.parseElementConstraint()
            ];
            return e.length === 0 ? ()=>!0 : e.length === 1 ? e[0] : (r)=>e.every((n)=>n(r));
        }
        getDataType() {
            return this.data.dataType ? this.data.dataType : this.data.predicate instanceof RegExp || this.data.tokenList ? "String" : this.data.elementConstraint ? "Array" : "Primitive";
        }
        get dataType() {
            return this.getDataType();
        }
        get predicate() {
            return this.getCombinedPredicate();
        }
        get extends() {
            return this.data.extends;
        }
    }, N2 = class {
        constructor(e, { async: r } = {}){
            this.parser = e, this.async = r;
        }
        validate() {
            let e = this.parser;
            if (typeof e != "function") throw new TypeError(`parser was ${typeof e}; expected function`);
        }
    }, D = class {
        constructor(e, r = {}){
            this.format = e, r.parseType && (this.typeParser = new H1(r.parseType)), r.parse && (this.dataParser = new N2(r.parse, {
                async: !1
            })), r.parseAsync && (this.asyncDataParser = new N2(r.parseAsync, {
                async: !0
            }));
        }
        validateFormat() {
            let e = this.format;
            if (!ft.test(e)) throw new TypeError(`format name was "${e}"; didn't match expected pattern`);
        }
        validate() {
            this.validateFormat(), this.typeParser && this.typeParser.validate(), this.dataParser && this.dataParser.validate(), this.asyncDataParser && this.asyncDataParser.validate();
        }
    };
    var bt = {};
    u1(bt, {
        clean: ()=>mt
    });
    function Vt(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(t);
            e && (n = n.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), r.push.apply(r, n);
        }
        return r;
    }
    function Ft(t) {
        for(var e = 1; e < arguments.length; e++){
            var r = arguments[e] != null ? arguments[e] : {};
            e % 2 ? Vt(Object(r), !0).forEach(function(n) {
                Ne(t, n, r[n]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Vt(Object(r)).forEach(function(n) {
                Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(r, n));
            });
        }
        return t;
    }
    function Ne(t, e, r) {
        return e = De(e), e in t ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = r, t;
    }
    function De(t) {
        var e = Ie(t, "string");
        return typeof e == "symbol" ? e : String(e);
    }
    function Ie(t, e) {
        if (typeof t != "object" || t === null) return t;
        var r = t[Symbol.toPrimitive];
        if (r !== void 0) {
            var n = r.call(t, e || "default");
            if (typeof n != "object") return n;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (e === "string" ? String : Number)(t);
    }
    var Re = 1, a2 = 2, g1 = 3, Bt1 = 4, dt = {
        article: !0,
        "article-journal": !0,
        "article-magazine": !0,
        "article-newspaper": !0,
        bill: !0,
        book: !0,
        broadcast: !0,
        chapter: !0,
        classic: !0,
        collection: !0,
        dataset: !0,
        document: !0,
        entry: !0,
        "entry-dictionary": !0,
        "entry-encyclopedia": !0,
        event: !0,
        figure: !0,
        graphic: !0,
        hearing: !0,
        interview: !0,
        legal_case: !0,
        legislation: !0,
        manuscript: !0,
        map: !0,
        motion_picture: !0,
        musical_score: !0,
        pamphlet: !0,
        "paper-conference": !0,
        patent: !0,
        performance: !0,
        periodical: !0,
        personal_communication: !0,
        post: !0,
        "post-weblog": !0,
        regulation: !0,
        report: !0,
        review: !0,
        "review-book": !0,
        software: !0,
        song: !0,
        speech: !0,
        standard: !0,
        thesis: !0,
        treaty: !0,
        webpage: !0,
        "journal-article": "article-journal",
        "book-chapter": "chapter",
        "posted-content": "manuscript",
        "proceedings-article": "paper-conference"
    }, Ut = {
        author: a2,
        chair: a2,
        "collection-editor": a2,
        compiler: a2,
        composer: a2,
        "container-author": a2,
        contributor: a2,
        curator: a2,
        director: a2,
        editor: a2,
        "editorial-director": a2,
        "executive-producer": a2,
        guest: a2,
        host: a2,
        interviewer: a2,
        illustrator: a2,
        narrator: a2,
        organizer: a2,
        "original-author": a2,
        performer: a2,
        producer: a2,
        "reviewed-author": a2,
        recipient: a2,
        "script-writer": a2,
        "series-creator": a2,
        translator: a2,
        accessed: g1,
        "available-date": g1,
        container: g1,
        "event-date": g1,
        issued: g1,
        "original-date": g1,
        submitted: g1,
        type: Bt1,
        categories: "object",
        custom: "object",
        id: [
            "string",
            "number"
        ],
        language: "string",
        journalAbbreviation: "string",
        shortTitle: "string",
        abstract: "string",
        annote: "string",
        archive: "string",
        archive_collection: "string",
        archive_location: "string",
        "archive-place": "string",
        authority: "string",
        "call-number": "string",
        "chapter-number": "string",
        "citation-number": "string",
        "citation-key": "string",
        "citation-label": "string",
        "collection-number": "string",
        "collection-title": "string",
        "container-title": "string",
        "container-title-short": "string",
        dimensions: "string",
        division: "string",
        DOI: "string",
        edition: [
            "string",
            "number"
        ],
        event: "string",
        "event-title": "string",
        "event-place": "string",
        "first-reference-note-number": "string",
        genre: "string",
        ISBN: "string",
        ISSN: "string",
        issue: [
            "string",
            "number"
        ],
        jurisdiction: "string",
        keyword: "string",
        locator: "string",
        medium: "string",
        note: "string",
        number: [
            "string",
            "number"
        ],
        "number-of-pages": "string",
        "number-of-volumes": [
            "string",
            "number"
        ],
        "original-publisher": "string",
        "original-publisher-place": "string",
        "original-title": "string",
        page: "string",
        "page-first": "string",
        "part-number": [
            "string",
            "number"
        ],
        "part-title": "string",
        PMCID: "string",
        PMID: "string",
        printing: "string",
        publisher: "string",
        "publisher-place": "string",
        references: "string",
        "reviewed-title": "string",
        "reviewed-genre": "string",
        scale: "string",
        section: "string",
        source: "string",
        status: "string",
        supplement: [
            "string",
            "number"
        ],
        title: "string",
        "title-short": "string",
        URL: "string",
        version: "string",
        volume: [
            "string",
            "number"
        ],
        "volume-title": "string",
        "volume-title-short": "string",
        "year-suffix": "string"
    };
    function Ht(t, e) {
        if (typeof t == "object" && t !== null && (t.literal || t.given || t.family)) return t;
        if (e) {
            if (typeof t == "string") return iu(t);
        } else return;
    }
    function Je(t, e) {
        if (t instanceof Array) {
            let r = t.map((n)=>Ht(n, e)).filter(Boolean);
            return r.length ? r : void 0;
        }
    }
    function yt(t, e) {
        return t.every((r)=>typeof r == "number") ? t : !e || t.some((r)=>isNaN(parseInt(r))) ? void 0 : t.map((r)=>parseInt(r));
    }
    function Me(t, e) {
        let r = "date-parts";
        if (!(typeof t != "object" || t === null)) {
            if (t[r] instanceof Array && t[r].every((n)=>n instanceof Array)) {
                let n = t[r].map((i)=>yt(i, e)).filter(Boolean);
                return n.length ? Ft(Ft({}, t), {}, {
                    "date-parts": n
                }) : void 0;
            } else if (t instanceof Array && t.every((n)=>n[r] instanceof Array)) {
                let n = t.map((i)=>yt(i[r], e)).filter(Boolean);
                return n.length ? {
                    "date-parts": n
                } : void 0;
            } else if (t[r] instanceof Array) {
                let n = yt(t[r], e);
                return n && {
                    "date-parts": [
                        n
                    ]
                };
            } else if ("literal" in t || "raw" in t) return t;
        }
    }
    function Ve(t, e) {
        return t = gt("language", t, e), dt[t] === !0 ? t : e && t in dt ? dt[t] : void 0;
    }
    function gt(t, e, r) {
        let n = [].concat(Ut[t]);
        switch(Ut[t]){
            case Re:
                return Ht(e, r);
            case a2:
                return Je(e, r);
            case g1:
                return Me(e, r);
            case Bt1:
                return Ve(e, r);
        }
        if (r) {
            if (typeof e == "string" && n.includes("number") && !n.includes("string") && !isNaN(+e)) return parseFloat(e);
            if (typeof e == "number" && n.includes("string") && !n.includes("number")) return e.toString();
            if (Array.isArray(e) && e.length) return gt(t, e[0], r);
        }
        if (n.includes(typeof e)) return e;
    }
    function mt(t, e = !0) {
        return t.map(function(r) {
            let n = {};
            for(let i in r){
                let s = gt(i, r[i], e);
                s !== void 0 && (n[i] = s);
            }
            return n;
        });
    }
    var jt = {};
    u1(jt, {
        Grammar: ()=>K1,
        Register: ()=>$,
        TokenStack: ()=>ee1,
        Translator: ()=>x1,
        deepCopy: ()=>m2,
        downgradeCsl: ()=>S2,
        fetchFile: ()=>Xt,
        fetchFileAsync: ()=>Zt,
        fetchId: ()=>R1,
        setUserAgent: ()=>te1,
        upgradeCsl: ()=>I2
    });
    function Gt(t, e) {
        var r = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(t);
            e && (n = n.filter(function(i) {
                return Object.getOwnPropertyDescriptor(t, i).enumerable;
            })), r.push.apply(r, n);
        }
        return r;
    }
    function Kt(t) {
        for(var e = 1; e < arguments.length; e++){
            var r = arguments[e] != null ? arguments[e] : {};
            e % 2 ? Gt(Object(r), !0).forEach(function(n) {
                Fe(t, n, r[n]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Gt(Object(r)).forEach(function(n) {
                Object.defineProperty(t, n, Object.getOwnPropertyDescriptor(r, n));
            });
        }
        return t;
    }
    function Fe(t, e, r) {
        return e = Ue(e), e in t ? Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : t[e] = r, t;
    }
    function Ue(t) {
        var e = Be(t, "string");
        return typeof e == "symbol" ? e : String(e);
    }
    function Be(t, e) {
        if (typeof t != "object" || t === null) return t;
        var r = t[Symbol.toPrimitive];
        if (r !== void 0) {
            var n = r.call(t, e || "default");
            if (typeof n != "object") return n;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (e === "string" ? String : Number)(t);
    }
    function I2(t) {
        return Array.isArray(t) ? t.map(I2) : (t = Kt({}, t), "event" in t && (t["event-title"] = t.event, delete t.event), t.type === "book" && "version" in t && (t.type = "software"), t);
    }
    function S2(t) {
        return Array.isArray(t) ? t.map(S2) : (t = Kt({}, t), "event-title" in t && (t.event = t["event-title"], delete t["event-title"]), t.type === "software" && (t.type = "book"), t);
    }
    function L2(t, e = new Set) {
        if (typeof t != "object" || t === null || t.constructor !== Object && t.constructor !== Array) return t;
        if (e.has(t)) throw new TypeError("Recursively copying circular structure");
        e.add(t);
        let r;
        if (t.constructor === Array) r = t.map((n)=>L2(n, e));
        else {
            let n = {};
            for(let i in t)n[i] = L2(t[i], e);
            r = n;
        }
        return e.delete(t), r;
    }
    var m2 = L2;
    var G = {
        name: "@citation-js/core",
        version: "0.7.1",
        description: "Convert different bibliographic metadata sources",
        keywords: [
            "citation-js",
            "citation",
            "bibliography"
        ],
        author: "Lars Willighagen <lars.willighagen@gmail.com>",
        license: "MIT",
        main: "lib/index.js",
        module: "lib-mjs/index.js",
        directories: {
            lib: "src",
            test: "__tests__"
        },
        homepage: "https://citation.js.org/",
        repository: {
            type: "git",
            url: "https://github.com/citation-js/citation-js.git",
            directory: "packages/core"
        },
        bugs: {
            url: "https://github.com/citation-js/citation-js/issues"
        },
        engines: {
            node: ">=16.0.0"
        },
        files: [
            "lib",
            "lib-mjs"
        ],
        scripts: {
            test: "mocha -c -R dot test/*.spec.js"
        },
        dependencies: {
            "@citation-js/date": "^0.5.0",
            "@citation-js/name": "^0.4.2",
            "fetch-ponyfill": "^7.1.0",
            "sync-fetch": "^0.4.1"
        },
        gitHead: "771fade1be9060b5b500604b33a8afa5a05ca542"
    };
    var { fetch: Ke, Headers: We } = ie(), zt = typeof location < "u" && typeof document < "u", xt1 = zt ? "" : `Citation.js/${G.version} Node.js/${process2.version}`;
    function Qt(t) {
        let e = {}, r = t instanceof We || t instanceof M1.Headers ? Array.from(t) : Object.entries(t);
        for (let [n, i] of r)e[n.toLowerCase()] = i.toString();
        return e;
    }
    function qt(t = {}) {
        let e = {
            headers: {
                accept: "*/*"
            },
            method: "GET",
            checkContentType: t.checkContentType
        };
        if (xt1 && !zt && (e.headers["user-agent"] = xt1), t.body) {
            e.method = "POST";
            let r = typeof t.body != "string";
            e.body = r ? JSON.stringify(t.body) : t.body, e.headers["content-type"] = r ? "application/json" : "text/plain";
        }
        return t.headers && Object.assign(e.headers, Qt(t.headers)), e;
    }
    function ze(t, e) {
        if (!t.accept || t.accept === "*/*" || !e["content-type"]) return !0;
        let [r, n] = e["content-type"].split(";")[0].trim().split("/");
        return t.accept.split(",").map((i)=>i.split(";")[0].trim().split("/")).some(([i, s])=>(i === r || i === "*") && (s === n || s === "*"));
    }
    function Yt(t, e) {
        let { status: r, headers: n } = t, i;
        if (r >= 400 ? i = new Error(`Server responded with status code ${r}`) : e.checkContentType === !0 && !ze(e.headers, Qt(n)) && (i = new Error(`Server responded with content-type ${n.get("content-type")}`)), i) throw i.status = r, i.headers = n, i.body = t.body, i;
        return t;
    }
    function Xt(t, e) {
        let r = qt(e);
        return p1.http("[core]", r.method, t, r), Yt(M1(t, r), r).text();
    }
    async function Zt(t, e) {
        let r = qt(e);
        return p1.http("[core]", r.method, t, r), Ke(t, r).then((n)=>Yt(n, r)).then((n)=>n.text());
    }
    function te1(t) {
        xt1 = t;
    }
    function Qe(t, e) {
        let r;
        for(; r === void 0 || t.includes(r);)r = `${e}${Math.random().toString().slice(2)}`;
        return r;
    }
    var R1 = Qe;
    var wt = class t {
        constructor(e){
            this.stack = e, this.index = 0, this.current = this.stack[this.index];
        }
        static getPatternText(e) {
            return `"${e instanceof RegExp ? e.source : e}"`;
        }
        static getMatchCallback(e) {
            if (Array.isArray(e)) {
                let r = e.map(t.getMatchCallback);
                return (n)=>r.some((i)=>i(n));
            } else return e instanceof Function ? e : e instanceof RegExp ? (r)=>e.test(r) : (r)=>e === r;
        }
        tokensLeft() {
            return this.stack.length - this.index;
        }
        matches(e) {
            return t.getMatchCallback(e)(this.current, this.index, this.stack);
        }
        matchesSequence(e) {
            let r = this.stack.slice(this.index, this.index + e.length).join("");
            return typeof e == "string" ? r === e : e.every((n, i)=>t.getMatchCallback(n)(r[i]));
        }
        consumeToken(e = /^[\s\S]$/, { inverse: r = !1, spaced: n = !0 } = {}) {
            n && this.consumeWhitespace();
            let i = this.current;
            if (t.getMatchCallback(e)(i, this.index, this.stack)) this.current = this.stack[++this.index];
            else throw new SyntaxError(`Unexpected token at index ${this.index}: Expected ${t.getPatternText(e)}, got "${i}"`);
            return n && this.consumeWhitespace(), i;
        }
        consumeWhitespace(e = /^\s$/, { optional: r = !0 } = {}) {
            return this.consume(e, {
                min: +!r
            });
        }
        consumeN(e) {
            if (this.tokensLeft() < e) throw new SyntaxError("Not enough tokens left");
            let r = this.index;
            for(; e--;)this.current = this.stack[++this.index];
            return this.stack.slice(r, this.index).join("");
        }
        consumeSequence(e) {
            if (this.matchesSequence(e)) return this.consumeN(e.length);
            throw new SyntaxError(`Expected "${e}", got "${this.consumeN(e.length)}"`);
        }
        consume(e = /^[\s\S]$/, { min: r = 0, max: n = 1 / 0, inverse: i = !1, tokenMap: s, tokenFilter: o } = {}) {
            let f = this.index, d = t.getMatchCallback(e);
            for(; d(this.current, this.index, this.stack) !== i;)this.current = this.stack[++this.index];
            let c = this.stack.slice(f, this.index);
            if (c.length < r) throw new SyntaxError(`Not enough ${t.getPatternText(e)}`);
            if (c.length > n) throw new SyntaxError(`Too many ${t.getPatternText(e)}`);
            return s && (c = c.map(s)), o && (c = c.filter(o)), c.join("");
        }
    }, ee1 = wt;
    var vt1 = class {
        constructor(e = {}){
            this.data = e;
        }
        set(e, r) {
            return this.data[e] = r, this;
        }
        add(...e) {
            return this.set(...e);
        }
        delete(e) {
            return delete this.data[e], this;
        }
        remove(...e) {
            return this.delete(...e);
        }
        get(e) {
            return this.data[e];
        }
        has(e) {
            return Object.prototype.hasOwnProperty.call(this.data, e);
        }
        list() {
            return Object.keys(this.data);
        }
    }, $ = vt1;
    var K1 = class {
        constructor(e, r){
            this.rules = e, this.defaultState = r, this.mainRule = Object.keys(e)[0], this.log = [];
        }
        parse(e, r) {
            return this.lexer = e, this.token = this.lexer.next(), this.state = L2(this.defaultState), this.log = [], this.consumeRule(r || this.mainRule);
        }
        matchEndOfFile() {
            return !this.token;
        }
        matchToken(e) {
            return this.token && e === this.token.type;
        }
        consumeToken(e, r) {
            let n = this.token;
            if (!e || n && n.type === e) return this.token = this.lexer.next(), n;
            if (r) return;
            {
                let i = n ? `"${n.type}"` : "EOF", s = new SyntaxError(this.lexer.formatError(n, `expected "${e}", got ${i}`));
                throw s.message += ` (${this.log.join("->")})`, s;
            }
        }
        consumeRule(e) {
            this.log.push(e);
            let r = this.rules[e].call(this);
            return this.log.pop(), r;
        }
    };
    function qe(t) {
        return function(r) {
            return typeof t == "boolean" ? t : Object.keys(t).every((n)=>{
                let i = t[n];
                return i === !0 ? n in r : i === !1 ? !(n in r) : typeof i == "function" ? i(r[n]) : Array.isArray(i) ? i.includes(r[n]) : r[n] === i;
            });
        };
    }
    function Ye1(t, e) {
        let r, n, i, s;
        if (typeof t == "string") r = n = t;
        else if (t) r = e ? t.target : t.source, n = e ? t.source : t.target, t.convert && (i = e ? t.convert.toSource : t.convert.toTarget), t.when && (s = e ? t.when.target : t.when.source, s != null && (s = qe(s)));
        else return null;
        return r = [].concat(r).filter(Boolean), n = [].concat(n).filter(Boolean), {
            inputProp: r,
            outputProp: n,
            convert: i,
            condition: s
        };
    }
    function re1(t, e) {
        return e = e === x1.CONVERT_TO_SOURCE, t = t.map((r)=>Ye1(r, e)).filter(Boolean), function(n) {
            let i = {};
            for (let { inputProp: s, outputProp: o, convert: f, condition: d } of t){
                if (o.length === 0) continue;
                if (d && !d(n)) continue;
                if (s.length !== 0 && s.every((l)=>!(l in n))) continue;
                let c = s.map((l)=>n[l]);
                if (f) try {
                    let l = f.apply(n, c);
                    c = o.length === 1 ? [
                        l
                    ] : l;
                } catch (l) {
                    throw new Error(`Failed to convert ${s} to ${o}`, {
                        cause: l
                    });
                }
                o.forEach((l, O)=>{
                    let B = c[O];
                    B !== void 0 && (i[l] = B);
                });
            }
            return i;
        };
    }
    var x1 = class t {
        constructor(e){
            this.convertToSource = re1(e, t.CONVERT_TO_SOURCE), this.convertToTarget = re1(e, t.CONVERT_TO_TARGET);
        }
    };
    x1.CONVERT_TO_SOURCE = Symbol("convert to source");
    x1.CONVERT_TO_TARGET = Symbol("convert to target");
    function Xe(t) {
        return t.reduce((e, r)=>{
            let n = e[e.length - 1];
            return n && n.type === r.type ? n.count = n.count + 1 || 2 : e.push(r), e;
        }, []).map((e)=>(e.count > 1 ? e.count + "x " : "") + e.type).join(" -> ");
    }
    var W = class {
        constructor(e, r = {}){
            this.options = Object.assign({
                generateGraph: !0,
                forceType: y1(e),
                maxChainLength: 10,
                strict: !0,
                target: "@csl/list+object"
            }, r), this.type = this.options.forceType, this.data = typeof e == "object" ? m2(e) : e, this.graph = [
                {
                    type: this.type,
                    data: e
                }
            ], this.iteration = 0;
        }
        iterate() {
            if (this.iteration !== 0) {
                let e = Ot(this.type);
                e && e.outputs ? this.type = e.outputs : this.type = y1(this.data), this.graph.push({
                    type: this.type
                });
            }
            return this.error || this.type === this.options.target ? !1 : this.iteration >= this.options.maxChainLength ? (this.error = new RangeError(`Max. number of parsing iterations reached (${Xe(this.graph)})`), !1) : (this.iteration++, !0);
        }
        end() {
            if (this.error) {
                if (p1.error("[core]", this.error.message), this.options.strict !== !1) throw this.error;
                return [];
            } else return this.options.target === "@csl/list+object" ? I2(this.data).map(this.options.generateGraph ? (e)=>at(e, this.graph) : ct1) : this.data;
        }
    }, J1 = (...t)=>{
        let e = new W(...t);
        for(; e.iterate();)try {
            e.data = V2(e.data, e.type);
        } catch (r) {
            e.error = r;
        }
        return e.end();
    }, Ze = (t)=>{
        let e = y1(t), r = e.match(/array|object/) ? m2(t) : t;
        return V2(r, e);
    }, M2 = async (...t)=>{
        let e = new W(...t);
        for(; e.iterate();)e.data = await z(e.data, e.type).catch((r)=>{
            e.error = r;
        });
        return e.end();
    }, tr = async (t)=>{
        let e = y1(t), r = e.match(/array|object/) ? m2(t) : t;
        return z(r, e);
    };
    var C1 = {}, k1 = {}, Tt1 = {
        "@csl/object": (t)=>[
                t
            ],
        "@csl/list+object": (t)=>t,
        "@else/list+object": (t)=>t.map(J1).flat(),
        "@invalid": ()=>{
            throw new Error("This format is not supported or recognized");
        }
    }, Pt1 = {
        "@else/list+object": async (t)=>(await Promise.all(t.map(M2))).flat()
    };
    function V2(t, e) {
        if (typeof C1[e] == "function") return C1[e](t);
        if (typeof Tt1[e] == "function") return Tt1[e](t);
        throw new TypeError(`No synchronous parser found for ${e}`);
    }
    async function z(t, e) {
        if (typeof k1[e] == "function") return k1[e](t);
        if (typeof Pt1[e] == "function") return Pt1[e](t);
        if (ne1(e, !1)) return V2(t, e);
        throw new TypeError(`No parser found for ${e}`);
    }
    function Q1(t, { parser: e, async: r }) {
        r ? k1[t] = e : C1[t] = e;
    }
    function ne1(t, e) {
        return e ? k1[t] || Pt1[t] : C1[t] || Tt1[t];
    }
    function q2(t, e) {
        delete (e ? k1 : C1)[t];
    }
    function er(t) {
        return Object.keys(t ? k1 : C1);
    }
    var w1 = {};
    function rr(t, e) {
        let r = new D(t, e);
        r.validate();
        let n = w1[t] || (w1[t] = {});
        r.typeParser && (lt(t, r.typeParser), n.type = !0), r.dataParser && (Q1(t, r.dataParser), n.data = !0), r.asyncDataParser && (Q1(t, r.asyncDataParser), n.asyncData = !0), e.outputs && (n.outputs = e.outputs);
    }
    function Ot(t) {
        return w1[t];
    }
    function nr(t) {
        let e = w1[t];
        e && (e.type && pt(t), e.data && q2(t), e.asyncData && q2(t, !0), delete w1[t]);
    }
    function ir(t) {
        return t in w1;
    }
    function sr() {
        return Object.keys(w1);
    }
    var or = Object.assign({}, ot, ut, ht, bt);
    function ar(t, e = {}, r = !1) {
        return (e === !0 || r === !0) && this.save(), this.data.push(...J1(t, e)), this.data.filter((n)=>!Object.prototype.hasOwnProperty.call(n, "id")).forEach((n)=>{
            n.id = R1(this.getIds(), "temp_id_");
        }), this;
    }
    async function cr(t, e = {}, r = !1) {
        return (e === !0 || r === !0) && this.save(), this.data.push(...await M2(t, e)), this.data.filter((n)=>!Object.prototype.hasOwnProperty.call(n, "id")).forEach((n)=>{
            n.id = R1(this.getIds(), "temp_id_");
        }), this;
    }
    function ur(t, e = {}, r = !1) {
        return (e === !0 || r === !0) && this.save(), this.data = [], typeof e != "boolean" ? this.add(t, e) : this.add(t);
    }
    async function lr(t, e = {}, r = !1) {
        return (e === !0 || r === !0) && this.save(), this.data = [], typeof e != "boolean" ? this.addAsync(t, e) : this.addAsync(t);
    }
    function pr(t) {
        return t && this.save(), this.data = [], this._options = {}, this;
    }
    var $t = {};
    u1($t, {
        sort: ()=>yr
    });
    function St(t) {
        if ("citation-label" in t) return t["citation-label"];
        let e = "";
        return t.author && (e += t.author[0].family || t.author[0].literal), t.issued && t.issued["date-parts"] && t.issued["date-parts"][0] && (e += t.issued["date-parts"][0][0]), t["year-suffix"] ? e += t["year-suffix"] : t.title && (e += t.title.replace(/<\/?.*?>/g, "").match(/^(?:(?:the|a|an)\s+)?(\S+)/i)[1]), e;
    }
    var ie1 = {
        label (t) {
            return t.reduce((e, r)=>(e[r.id] = St(r), e), {});
        }
    };
    function se(t, e, r = e === "label") {
        let n = r ? St(t) : t[e];
        switch(e){
            case "author":
            case "editor":
                return n.map((i)=>i.literal || i.family || su(i));
            case "accessed":
            case "issued":
                return n["date-parts"][0];
            case "page":
                return n.split("-").map((i)=>parseInt(i));
            case "edition":
            case "issue":
            case "volume":
                return n = parseInt(n), isNaN(n) ? -1 / 0 : n;
            default:
                return n || -1 / 0;
        }
    }
    function hr(t, e, r, n = /^!/.test(r)) {
        r = r.replace(/^!/, "");
        let i = se(t, r), s = se(e, r);
        return (n ? -1 : 1) * (i > s ? 1 : i < s ? -1 : 0);
    }
    function dr(...t) {
        return (e, r)=>{
            let n = t.slice(), i = 0;
            for(; !i && n.length;)i = hr(e, r, n.shift());
            return i;
        };
    }
    function yr(t = [], e) {
        return e && this.save(), this.data.sort(typeof t == "function" ? t : dr(...t, "label")), this;
    }
    var kt = {};
    u1(kt, {
        format: ()=>jr,
        get: ()=>Or,
        getIds: ()=>vr
    });
    var X = {};
    u1(X, {
        add: ()=>mr,
        format: ()=>Ct,
        has: ()=>xr,
        list: ()=>wr,
        register: ()=>v3,
        remove: ()=>br
    });
    function gr(t, e) {
        if (typeof t != "string") throw new TypeError(`Invalid output format name, expected string, got ${typeof t}`);
        if (typeof e != "function") throw new TypeError(`Invalid formatter, expected function, got ${typeof e}`);
    }
    var v3 = new $;
    function mr(t, e) {
        gr(t, e), v3.set(t, e);
    }
    function br(t) {
        v3.remove(t);
    }
    function xr(t) {
        return v3.has(t);
    }
    function wr() {
        return v3.list();
    }
    function Ct(t, e, ...r) {
        if (!v3.has(t)) throw new Error(`Output format "${t}" unavailable`);
        return v3.get(t)(e, ...r);
    }
    function vr() {
        return this.data.map((t)=>t.id);
    }
    function jr(t, ...e) {
        return Ct(t, mt(this.data), ...e);
    }
    function Or(t = {}) {
        T2(t);
        let e = Object.assign({}, this.defaultOptions, this._options.output, t), { type: r, style: n } = e, [i, s] = n.split("-"), o = i === "citation" ? "bibliography" : i === "csl" ? "data" : i, f = r === "string" ? "text" : r === "json" ? "object" : r, d;
        switch(o){
            case "bibliography":
                {
                    let { lang: O, append: B, prepend: me } = e;
                    d = {
                        template: s,
                        lang: O,
                        format: f,
                        append: B,
                        prepend: me
                    };
                    break;
                }
            case "data":
            case "bibtex":
            case "bibtxt":
            case "ndjson":
            case "ris":
                d = {
                    type: f
                };
                break;
            default:
                throw new Error(`Invalid style "${o}"`);
        }
        let c = this.format(o, Object.assign(d, t._newOptions)), { format: l } = e;
        if (l === "real" && f === "html" && typeof document < "u" && typeof document.createElement == "function") {
            let O = document.createElement("div");
            return O.innerHTML = c, O.firstChild;
        } else return l === "string" && typeof c == "object" ? JSON.stringify(c) : c;
    }
    var _t = {};
    u1(_t, {
        async: ()=>oe1,
        validateOptions: ()=>Te,
        validateOutputOptions: ()=>T2
    });
    function Tr(t, e, r) {
        typeof e == "function" && !r && (r = e, e = void 0);
        let n = new this().setAsync(t, e);
        if (typeof r == "function") {
            n.then(r);
            return;
        } else return n;
    }
    var oe1 = Tr;
    function _2(t, e = {}) {
        return this instanceof _2 ? (this._options = e, this.log = [], this.data = [], this.set(t, e), this.options(e), this) : new _2(t, e);
    }
    Object.assign(_2.prototype, rt, nt, Et, $t, kt);
    _2.prototype[Symbol.iterator] = function*() {
        yield* this.data;
    };
    Object.assign(_2, _t);
    var Pr = _2;
    var tt = {};
    u1(tt, {
        add: ()=>Nt,
        config: ()=>Z2,
        dict: ()=>A1,
        has: ()=>Vr,
        input: ()=>Y2,
        list: ()=>Fr,
        output: ()=>X,
        remove: ()=>Mr
    });
    var A1 = {};
    u1(A1, {
        add: ()=>Sr,
        get: ()=>_r,
        has: ()=>Cr,
        htmlDict: ()=>Ar,
        list: ()=>kr1,
        register: ()=>j2,
        remove: ()=>$r,
        textDict: ()=>Nr
    });
    function Er(t, e) {
        if (typeof t != "string") throw new TypeError(`Invalid dict name, expected string, got ${typeof t}`);
        if (typeof e != "object") throw new TypeError(`Invalid dict, expected object, got ${typeof e}`);
        for(let r in e){
            let n = e[r];
            if (!Array.isArray(n) || n.some((i)=>typeof i != "string")) throw new TypeError(`Invalid dict entry "${r}", expected array of strings`);
        }
    }
    var j2 = new $({
        html: {
            bibliographyContainer: [
                '<div class="csl-bib-body">',
                "</div>"
            ],
            entry: [
                '<div class="csl-entry">',
                "</div>"
            ],
            list: [
                '<ul style="list-style-type:none">',
                "</ul>"
            ],
            listItem: [
                "<li>",
                "</li>"
            ]
        },
        text: {
            bibliographyContainer: [
                "",
                `
`
            ],
            entry: [
                "",
                `
`
            ],
            list: [
                `
`,
                ""
            ],
            listItem: [
                "	",
                `
`
            ]
        }
    });
    function Sr(t, e) {
        Er(t, e), j2.set(t, e);
    }
    function $r(t) {
        j2.remove(t);
    }
    function Cr(t) {
        return j2.has(t);
    }
    function kr1() {
        return j2.list();
    }
    function _r(t) {
        if (!j2.has(t)) throw new Error(`Dict "${t}" unavailable`);
        return j2.get(t);
    }
    var Ar = {
        wr_start: '<div class="csl-bib-body">',
        wr_end: "</div>",
        en_start: '<div class="csl-entry">',
        en_end: "</div>",
        ul_start: '<ul style="list-style-type:none">',
        ul_end: "</ul>",
        li_start: "<li>",
        li_end: "</li>"
    }, Nr = {
        wr_start: "",
        wr_end: `
`,
        en_start: "",
        en_end: `
`,
        ul_start: `
`,
        ul_end: "",
        li_start: "	",
        li_end: `
`
    };
    var Z2 = {};
    u1(Z2, {
        add: ()=>Dr,
        get: ()=>Ir,
        has: ()=>Lr,
        list: ()=>Jr,
        remove: ()=>Rr
    });
    var F2 = {};
    function Dr(t, e) {
        F2[t] = e;
    }
    function Ir(t) {
        return F2[t];
    }
    function Lr(t) {
        return Object.prototype.hasOwnProperty.call(F2, t);
    }
    function Rr(t) {
        delete F2[t];
    }
    function Jr() {
        return Object.keys(F2);
    }
    var At = {
        input: Y2,
        output: X,
        dict: A1,
        config: Z2
    }, U1 = {};
    function Nt(t, e = {}) {
        let r = U1[t] = {};
        for(let n in e){
            if (n === "config") {
                r.config = {
                    [t]: e.config
                }, At.config.add(t, e.config);
                continue;
            }
            let i = r[n] = {}, s = e[n];
            for(let o in s){
                let f = s[o];
                i[o] = !0, At[n].add(o, f);
            }
        }
    }
    function Mr(t) {
        let e = U1[t];
        for(let r in e){
            let n = e[r];
            for(let i in n)At[r].remove(i);
        }
        delete U1[t];
    }
    function Vr(t) {
        return t in U1;
    }
    function Fr() {
        return Object.keys(U1);
    }
    function et() {
        return [];
    }
    var Br = [
        [
            /((?:\[|:|,)\s*)'((?:\\'|[^'])*?[^\\])?'(?=\s*(?:\]|}|,))/g,
            '$1"$2"'
        ],
        [
            /((?:(?:"|]|}|\/[gmiuys]|\.|(?:\d|\.|-)*\d)\s*,|{)\s*)(?:"([^":\n]+?)"|'([^":\n]+?)'|([^":\n]+?))(\s*):/g,
            '$1"$2$3$4"$5:'
        ]
    ];
    function ae(t) {
        if (typeof t != "string") return JSON.parse(t);
        try {
            return JSON.parse(t);
        } catch  {
            return p1.debug("[plugin-common]", "Invalid JSON, switching to experimental parser"), Br.forEach(([r, n])=>{
                t = t.replace(r, n);
            }), JSON.parse(t);
        }
    }
    function ce(t) {
        return t.val() || t.text() || t.html();
    }
    function ue(t) {
        return t.value || t.textContent;
    }
    var le = "@else";
    var pe = {
        "@empty/text": {
            parse: et,
            parseType: {
                dataType: "String",
                predicate: (t)=>t === ""
            }
        },
        "@empty/whitespace+text": {
            parse: et,
            parseType: {
                dataType: "String",
                predicate: /^\s+$/
            }
        },
        "@empty": {
            parse: et,
            parseType: {
                dataType: "Primitive",
                predicate: (t)=>t == null
            }
        },
        "@else/json": {
            parse: ae,
            parseType: {
                dataType: "String",
                predicate: /^\s*(\{[\S\s]*\}|\[[\S\s]*\])\s*$/
            }
        },
        "@else/url": {
            parseType: {
                dataType: "String",
                predicate: /^https?:\/\/(([\w-]+\.)*[\w-]+)(:\d+)?(\/[^?/]*)*(\?[^#]*)?(#.*)?$/i
            }
        },
        "@else/jquery": {
            parse: ce,
            parseType: {
                dataType: "ComplexObject",
                predicate (t) {
                    return typeof jQuery < "u" && t instanceof jQuery;
                }
            }
        },
        "@else/html": {
            parse: ue,
            parseType: {
                dataType: "ComplexObject",
                predicate (t) {
                    return typeof HTMLElement < "u" && t instanceof HTMLElement;
                }
            }
        }
    };
    function he(t, e, r) {
        return t + (e < r.length - 1 ? "," : "");
    }
    function de(t, e) {
        let r = Array.isArray(t), n;
        return r ? n = t.map((i)=>fe(i, e)) : n = Object.keys(t).filter((i)=>JSON.stringify(t[i])).map((i)=>`"${i}": ${fe(t[i], e)}`), n = n.map(he).map((i)=>e.listItem.join(i)), n = e.list.join(n.join("")), r ? `[${n}]` : `{${n}}`;
    }
    function fe(t, e) {
        return typeof t == "object" && t !== null ? t.length === 0 ? "[]" : Object.keys(t).length === 0 ? "{}" : de(t, e) : JSON.stringify(t);
    }
    function Wr(t, e) {
        let r = t.map((n)=>de(n, e));
        return r = r.map(he).map((n)=>e.entry.join(n)), r = r.join(""), e.bibliographyContainer.join(`[${r}]`);
    }
    var ye = {
        data (t, { type: e, format: r = e || "text", version: n = "1.0.2" } = {}) {
            return n < "1.0.2" && (t = S2(t)), r === "object" ? m2(t) : r === "text" ? JSON.stringify(t, null, 2) : (p1.warn("[core]", "This feature (JSON output with special formatting) is unstable. See https://github.com/larsgw/citation.js/issues/144"), Wr(t, A1.get(r)));
        },
        ndjson (t, { version: e = "1.0.2" } = {}) {
            return e < "1.0.2" && (t = S2(t)), t.map((r)=>JSON.stringify(r)).join(`
`);
        }
    };
    var ge = Object.assign({}, ye, ie1);
    Nt(le, {
        input: pe,
        output: ge
    });
    var gi1 = G.version;
    const mod53 = {
        Cite: Pr,
        logger: p1,
        plugins: tt,
        util: jt,
        version: gi1
    };
    var R2 = Object.create;
    var g2 = Object.defineProperty;
    var z1 = Object.getOwnPropertyDescriptor;
    var N3 = Object.getOwnPropertyNames;
    var k2 = Object.getPrototypeOf, x2 = Object.prototype.hasOwnProperty;
    var v4 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), T3 = (e, t)=>{
        for(var r in t)g2(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, _3 = (e, t, r, n)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of N3(t))!x2.call(e, a) && a !== r && g2(e, a, {
            get: ()=>t[a],
            enumerable: !(n = z1(t, a)) || n.enumerable
        });
        return e;
    }, l = (e, t, r)=>(_3(e, t, "default"), r && _3(r, t, "default")), A2 = (e, t, r)=>(r = e != null ? R2(k2(e)) : {}, _3(t || !e || !e.__esModule ? g2(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var P4 = v4((p)=>{
        "use strict";
        Object.defineProperty(p, "__esModule", {
            value: !0
        });
        p.default = void 0;
        function c(e, t) {
            return C(e) || q(e, t) || S(e, t) || B();
        }
        function B() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function S(e, t) {
            if (e) {
                if (typeof e == "string") return D(e, t);
                var r = Object.prototype.toString.call(e).slice(8, -1);
                if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
                if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return D(e, t);
            }
        }
        function D(e, t) {
            (t == null || t > e.length) && (t = e.length);
            for(var r = 0, n = new Array(t); r < t; r++)n[r] = e[r];
            return n;
        }
        function q(e, t) {
            var r = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
            if (r != null) {
                var n = [], a = !0, u = !1, s, o;
                try {
                    for(r = r.call(e); !(a = (s = r.next()).done) && (n.push(s.value), !(t && n.length === t)); a = !0);
                } catch (h) {
                    u = !0, o = h;
                } finally{
                    try {
                        !a && r.return != null && r.return();
                    } finally{
                        if (u) throw o;
                    }
                }
                return n;
            }
        }
        function C(e) {
            if (Array.isArray(e)) return e;
        }
        var L = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12
        }, Y = / (?:to|[-/]) | ?(?:--|[–—]) ?/, M = /^(\d{4}-\d{2}-\d{2})\/(\d{4}-\d{2}-\d{2})$/;
        function f(e) {
            return L[e.toLowerCase().slice(0, 3)];
        }
        function F(e) {
            let t = new Date(e);
            return typeof e == "number" && !isNaN(t.valueOf()) ? [
                t.getFullYear(),
                t.getMonth() + 1,
                t.getDate()
            ] : null;
        }
        var H = function(t) {
            let r = /^(\d{4}|[-+]\d{6,})-(\d{2})(?:-(\d{2}))?/;
            if (typeof t != "string" || !r.test(t)) return null;
            let n = t.match(r), a = c(n, 4), u = a[1], s = a[2], o = a[3];
            return +s ? +o ? [
                u,
                s,
                o
            ] : [
                u,
                s
            ] : [
                u
            ];
        }, U = function(t) {
            let r = /^(?:[a-z]{3},\s*)?(\d{1,2}) ([a-z]{3}) (\d{4,})/i;
            if (typeof t != "string" || !r.test(t)) return null;
            let n = t.match(r), a = c(n, 4), u = a[1], s = a[2], o = a[3];
            return s = f(s), s ? [
                o,
                s,
                u
            ] : null;
        };
        function W(e) {
            let t = /^(\d{1,2})\/(\d{1,2})\/(\d{2}(?:\d{2})?)/;
            if (typeof e != "string" || !t.test(e)) return null;
            let r = e.match(t), n = c(r, 4), a = n[1], u = n[2], s = n[3];
            return new Date(s, a, u).getMonth() === parseInt(a) ? [
                s,
                a,
                u
            ] : null;
        }
        function E(e) {
            let t = /^(\d{1,2})[ .\-/](\d{1,2}|[a-z]{3,10})[ .\-/](-?\d+)/i, r = /^(-?\d+)[ .\-/](\d{1,2}|[a-z]{3,10})[ .\-/](\d{1,2})/i, n, a, u;
            if (typeof e != "string") return null;
            if (t.test(e)) {
                var s = e.match(t), o = c(s, 4);
                u = o[1], a = o[2], n = o[3];
            } else if (r.test(e)) {
                var h = e.match(r), m = c(h, 4);
                n = m[1], a = m[2], u = m[3];
            } else return null;
            if (f(a)) a = f(a);
            else if (isNaN(a)) return null;
            return [
                n,
                a,
                u
            ];
        }
        function G(e) {
            let t = /^([a-z]{3,10}|-?\d+)[^\w-]+([a-z]{3,10}|-?\d+)$/i;
            if (typeof e == "string" && t.test(e)) {
                let r = e.match(t).slice(1, 3), n;
                if (f(r[1])) n = f(r.pop());
                else if (f(r[0])) n = f(r.shift());
                else {
                    if (r.some(isNaN) || r.every((u)=>+u < 0)) return null;
                    +r[0] < 0 || +r[0] > +r[1] && +r[1] > 0 ? n = r.pop() : n = r.shift();
                }
                return [
                    r.pop(),
                    n
                ];
            } else return null;
        }
        function J(e) {
            if (typeof e != "string") return null;
            let t = e.match(/^(\d+) ?(a\.?d\.?|b\.?c\.?)$/i);
            if (t) {
                let r = t.slice(1), n = c(r, 2), a = n[0], u = n[1];
                return [
                    a * (u.toLowerCase()[0] === "a" ? 1 : -1)
                ];
            } else return /^-?\d+$/.test(e) ? [
                e
            ] : null;
        }
        function K(e) {
            let t = F(e) || H(e) || U(e) || W(e) || E(e) || G(e) || J(e);
            return t && t.map((r)=>parseInt(r));
        }
        function Q(e) {
            return M.test(e) ? e.match(M).slice(1, 3) : e.split(Y);
        }
        function V(e, t) {
            let r = [], n = typeof e == "string" && Q(e);
            t ? r.push(e, t) : n && n.length === 2 ? r.push(...n) : r.push(e);
            let a = r.map(K);
            return a.filter(Boolean).length === r.length ? {
                "date-parts": a
            } : {
                raw: t ? r.join("/") : e
            };
        }
        var X = V;
        p.default = X;
    });
    var j3 = v4((d)=>{
        "use strict";
        Object.defineProperty(d, "__esModule", {
            value: !0
        });
        d.default = void 0;
        function b(e, t, r) {
            if (e.length >= t) return e;
            for(; e.length < t;)e = r + e;
            return e.slice(-t);
        }
        var Z = function(t, r = "-") {
            if (!t["date-parts"]) return t.raw;
            let n = t["date-parts"][0].map((a)=>a.toString());
            switch(n.length){
                case 3:
                    n[2] = b(n[2], 2, "0");
                case 2:
                    n[1] = b(n[1], 2, "0");
                case 1:
                    n[0] = b(n[0], 4, "0");
                    break;
            }
            return n.join(r);
        }, ee = Z;
        d.default = ee;
    });
    var w2 = v4((y)=>{
        "use strict";
        Object.defineProperty(y, "__esModule", {
            value: !0
        });
        Object.defineProperty(y, "format", {
            enumerable: !0,
            get: function() {
                return re.default;
            }
        });
        Object.defineProperty(y, "parse", {
            enumerable: !0,
            get: function() {
                return te.default;
            }
        });
        var te = I(P4()), re = I(j3());
        function I(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
    });
    var i = {};
    T3(i, {
        __esModule: ()=>ne2,
        default: ()=>oe2,
        format: ()=>ae1,
        parse: ()=>ue1
    });
    var O2 = A2(w2());
    l(i, A2(w2()));
    var { __esModule: ne2, format: ae1, parse: ue1 } = O2, { default: $1, ...se1 } = O2, oe2 = $1 !== void 0 ? $1 : se1;
    const mod54 = {
        __esModule: ne2,
        default: oe2,
        format: ae1,
        parse: ue1
    };
    var d1 = Object.defineProperty;
    var m3 = (e, r)=>{
        for(var o in r)d1(e, o, {
            get: r[o],
            enumerable: !0
        });
    };
    var c = {};
    m3(c, {
        quickscrapeRecord: ()=>i1,
        record: ()=>n1
    });
    function a3(e) {
        let { firstname: r, lastname: o, firstName: t = r, lastName: s = o } = e;
        if (t && s) return {
            given: t,
            family: s
        };
        if (e.name) return iu(e.name);
    }
    var b1 = [
        "PMID",
        "PMCID",
        "DOI",
        "ISBN"
    ], y2 = [
        "ISSN"
    ];
    function p2(e, r) {
        let o = {};
        for(let t in e){
            let s = t.toUpperCase();
            r.includes(s) && (o[s] = e[t]);
        }
        if (e.identifier) for (let { id: t, type: s = "" } of e.identifier)s = s.toUpperCase(), r.includes(s) && (o[s] = t);
        return o;
    }
    var h1 = {
        article: "article",
        book: "book",
        booklet: "book",
        proceedings: "book",
        mastersthesis: "thesis",
        inbook: "chapter",
        incollection: "chapter",
        conference: "paper-conference",
        inproceedings: "paper-conference",
        manual: "report",
        misc: "document",
        online: "website",
        patent: "patent",
        phdthesis: "thesis",
        techreport: "report",
        unpublished: "manuscript"
    };
    function j4() {
        return {
            type: "article-journal"
        };
    }
    function f1(e) {
        let r = {
            type: h1[e.type] || "document",
            title: e.title
        };
        if (e.author && (r.author = e.author.map(a3).filter(Boolean)), e.editor && (r.editor = e.editor.map(a3).filter(Boolean)), e.reviewer && (e.author && (r["reviewed-author"] = r.author), r.author = e.reviewer.map(a3).filter(Boolean)), Array.isArray(e.keywords) ? r.keyword = e.keywords.join() : e.keywords && (r.keyword = e.keywords), e.publisher && (r.publisher = e.publisher.name || e.publisher), e.date && e.date.published ? r.issued = ue1(e.date.published) : e.year && (r.issued = {
            "date-parts": [
                [
                    +e.year
                ]
            ]
        }), e.date && e.date.submitted && (r.submitted = ue1(e.date.submitted)), e.journal) {
            let o = e.journal;
            o.name && (r["container-title"] = o.name), o.volume && (r.volume = o.volume), o.issue && (r.issue = o.issue), Object.assign(r, p2(o, y2)), o.firstpage && (r["page-first"] = o.firstpage), o.pages ? r.page = o.pages.replace("--", "-") : o.firstpage && o.lastpage && (r.page = o.firstpage + "-" + o.lastpage);
        }
        return e.link && typeof e.link[0] == "object" && (r.URL = e.link[0].url), Object.assign(r, p2(e, b1)), e.cid ? r.id = e.cid : r.DOI && (r.id = r.DOI), r;
    }
    var i1 = function(e) {
        return Object.assign(f1(e), j4(e));
    }, n1 = function(e) {
        return f1(e);
    };
    var g3 = [
        "fulltext_html",
        "fulltext_xml",
        "fulltext_pdf"
    ], v5 = [
        "name",
        "lastname",
        "lastName",
        "firstname",
        "firstName"
    ], w3 = "@bibjson", P5 = {
        json: c
    }, C2 = {
        "@bibjson/quickscrape+record+object": {
            parse: i1,
            parseType: {
                propertyConstraint: {
                    props: "link",
                    value (e) {
                        return g3.some((r)=>e.find(({ type: o })=>o === r));
                    }
                },
                extends: "@bibjson/record+object"
            }
        },
        "@bibjson/record+object": {
            parse: n1,
            parseType: {
                dataType: "SimpleObject",
                propertyConstraint: [
                    {
                        props: "title"
                    },
                    {
                        props: [
                            "author",
                            "editor"
                        ],
                        match: "some",
                        value (e) {
                            return Array.isArray(e) && e[0] && v5.some((r)=>r in e[0]);
                        }
                    }
                ]
            }
        },
        "@bibjson/collection+object": {
            parse (e) {
                return e.records;
            },
            parseType: {
                dataType: "SimpleObject",
                propertyConstraint: [
                    {
                        props: "metadata",
                        value (e) {
                            return "collection" in e;
                        }
                    },
                    {
                        props: "records",
                        value (e) {
                            return Array.isArray(e);
                        }
                    }
                ]
            }
        }
    };
    tt.add(w3, {
        input: C2
    });
    const mod55 = {
        formats: C2,
        parsers: P5,
        ref: w3
    };
    var te2 = Object.create;
    var G1 = Object.defineProperty;
    var ne3 = Object.getOwnPropertyDescriptor;
    var ae2 = Object.getOwnPropertyNames;
    var ie2 = Object.getPrototypeOf, le1 = Object.prototype.hasOwnProperty;
    var oe3 = (h, u)=>()=>(u || h((u = {
                exports: {}
            }).exports, u), u.exports), se2 = (h, u)=>{
        for(var p in u)G1(h, p, {
            get: u[p],
            enumerable: !0
        });
    }, M3 = (h, u, p, w)=>{
        if (u && typeof u == "object" || typeof u == "function") for (let y of ae2(u))!le1.call(h, y) && y !== p && G1(h, y, {
            get: ()=>u[y],
            enumerable: !(w = ne3(u, y)) || w.enumerable
        });
        return h;
    }, T4 = (h, u, p)=>(M3(h, u, "default"), p && M3(p, u, "default")), z2 = (h, u, p)=>(p = h != null ? te2(ie2(h)) : {}, M3(u || !h || !h.__esModule ? G1(p, "default", {
            value: h,
            enumerable: !0
        }) : p, h));
    var C3 = oe3((D, A)=>{
        (function(h, u) {
            typeof define == "function" && define.amd ? define([], u) : typeof A == "object" && A.exports ? A.exports = u() : h.moo = u();
        })(D, function() {
            "use strict";
            var h = Object.prototype.hasOwnProperty, u = Object.prototype.toString, p = typeof new RegExp().sticky == "boolean";
            function w(e) {
                return e && u.call(e) === "[object RegExp]";
            }
            function y(e) {
                return e && typeof e == "object" && !w(e) && !Array.isArray(e);
            }
            function U(e) {
                return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            }
            function F(e) {
                var r = new RegExp("|" + e);
                return r.exec("").length - 1;
            }
            function J(e) {
                return "(" + e + ")";
            }
            function P(e) {
                if (!e.length) return "(?!)";
                var r = e.map(function(t) {
                    return "(?:" + t + ")";
                }).join("|");
                return "(?:" + r + ")";
            }
            function H(e) {
                if (typeof e == "string") return "(?:" + U(e) + ")";
                if (w(e)) {
                    if (e.ignoreCase) throw new Error("RegExp /i flag not allowed");
                    if (e.global) throw new Error("RegExp /g flag is implied");
                    if (e.sticky) throw new Error("RegExp /y flag is implied");
                    if (e.multiline) throw new Error("RegExp /m flag is implied");
                    return e.source;
                } else throw new Error("Not a pattern: " + e);
            }
            function L(e, r) {
                return e.length > r ? e : Array(r - e.length + 1).join(" ") + e;
            }
            function Q(e, r) {
                for(var t = e.length, n = 0;;){
                    var l = e.lastIndexOf(`
`, t - 1);
                    if (l === -1 || (n++, t = l, n === r) || t === 0) break;
                }
                var a = n < r ? 0 : t + 1;
                return e.substring(a).split(`
`);
            }
            function V(e) {
                for(var r = Object.getOwnPropertyNames(e), t = [], n = 0; n < r.length; n++){
                    var l = r[n], a = e[l], o = [].concat(a);
                    if (l === "include") {
                        for(var f = 0; f < o.length; f++)t.push({
                            include: o[f]
                        });
                        continue;
                    }
                    var s = [];
                    o.forEach(function(i) {
                        y(i) ? (s.length && t.push(S(l, s)), t.push(S(l, i)), s = []) : s.push(i);
                    }), s.length && t.push(S(l, s));
                }
                return t;
            }
            function W(e) {
                for(var r = [], t = 0; t < e.length; t++){
                    var n = e[t];
                    if (n.include) {
                        for(var l = [].concat(n.include), a = 0; a < l.length; a++)r.push({
                            include: l[a]
                        });
                        continue;
                    }
                    if (!n.type) throw new Error("Rule has no type: " + JSON.stringify(n));
                    r.push(S(n.type, n));
                }
                return r;
            }
            function S(e, r) {
                if (y(r) || (r = {
                    match: r
                }), r.include) throw new Error("Matching rules cannot also include states");
                var t = {
                    defaultType: e,
                    lineBreaks: !!r.error || !!r.fallback,
                    pop: !1,
                    next: null,
                    push: null,
                    error: !1,
                    fallback: !1,
                    value: null,
                    type: null,
                    shouldThrow: !1
                };
                for(var n in r)h.call(r, n) && (t[n] = r[n]);
                if (typeof t.type == "string" && e !== t.type) throw new Error("Type transform cannot be a string (type '" + t.type + "' for token '" + e + "')");
                var l = t.match;
                return t.match = Array.isArray(l) ? l : l ? [
                    l
                ] : [], t.match.sort(function(a, o) {
                    return w(a) && w(o) ? 0 : w(o) ? -1 : w(a) ? 1 : o.length - a.length;
                }), t;
            }
            function _(e) {
                return Array.isArray(e) ? W(e) : V(e);
            }
            var X = S("error", {
                lineBreaks: !0,
                shouldThrow: !0
            });
            function N(e, r) {
                for(var t = null, n = Object.create(null), l = !0, a = null, o = [], f = [], s = 0; s < e.length; s++)e[s].fallback && (l = !1);
                for(var s = 0; s < e.length; s++){
                    var i = e[s];
                    if (i.include) throw new Error("Inheritance is not allowed in stateless lexers");
                    if (i.error || i.fallback) {
                        if (t) throw !i.fallback == !t.fallback ? new Error("Multiple " + (i.fallback ? "fallback" : "error") + " rules not allowed (for token '" + i.defaultType + "')") : new Error("fallback and error are mutually exclusive (for token '" + i.defaultType + "')");
                        t = i;
                    }
                    var c = i.match.slice();
                    if (l) for(; c.length && typeof c[0] == "string" && c[0].length === 1;){
                        var g = c.shift();
                        n[g.charCodeAt(0)] = i;
                    }
                    if (i.pop || i.push || i.next) {
                        if (!r) throw new Error("State-switching options are not allowed in stateless lexers (for token '" + i.defaultType + "')");
                        if (i.fallback) throw new Error("State-switching options are not allowed on fallback tokens (for token '" + i.defaultType + "')");
                    }
                    if (c.length !== 0) {
                        l = !1, o.push(i);
                        for(var k = 0; k < c.length; k++){
                            var x = c[k];
                            if (w(x)) {
                                if (a === null) a = x.unicode;
                                else if (a !== x.unicode && i.fallback === !1) throw new Error("If one rule is /u then all must be");
                            }
                        }
                        var b = P(c.map(H)), d = new RegExp(b);
                        if (d.test("")) throw new Error("RegExp matches empty string: " + d);
                        var O = F(b);
                        if (O > 0) throw new Error("RegExp has capture groups: " + d + `
Use (?: \u2026 ) instead`);
                        if (!i.lineBreaks && d.test(`
`)) throw new Error("Rule should declare lineBreaks: " + d);
                        f.push(J(b));
                    }
                }
                var m = t && t.fallback, q = p && !m ? "ym" : "gm", R = p || m ? "" : "|";
                a === !0 && (q += "u");
                var re = new RegExp(P(f) + R, q);
                return {
                    regexp: re,
                    groups: o,
                    fast: n,
                    error: t || X
                };
            }
            function Y(e) {
                var r = N(_(e));
                return new v({
                    start: r
                }, "start");
            }
            function $(e, r, t) {
                var n = e && (e.push || e.next);
                if (n && !t[n]) throw new Error("Missing state '" + n + "' (in token '" + e.defaultType + "' of state '" + r + "')");
                if (e && e.pop && +e.pop != 1) throw new Error("pop must be 1 (in token '" + e.defaultType + "' of state '" + r + "')");
            }
            function Z(e, r) {
                var t = e.$all ? _(e.$all) : [];
                delete e.$all;
                var n = Object.getOwnPropertyNames(e);
                r || (r = n[0]);
                for(var l = Object.create(null), a = 0; a < n.length; a++){
                    var o = n[a];
                    l[o] = _(e[o]).concat(t);
                }
                for(var a = 0; a < n.length; a++)for(var o = n[a], f = l[o], s = Object.create(null), i = 0; i < f.length; i++){
                    var c = f[i];
                    if (c.include) {
                        var g = [
                            i,
                            1
                        ];
                        if (c.include !== o && !s[c.include]) {
                            s[c.include] = !0;
                            var k = l[c.include];
                            if (!k) throw new Error("Cannot include nonexistent state '" + c.include + "' (in state '" + o + "')");
                            for(var x = 0; x < k.length; x++){
                                var b = k[x];
                                f.indexOf(b) === -1 && g.push(b);
                            }
                        }
                        f.splice.apply(f, g), i--;
                    }
                }
                for(var d = Object.create(null), a = 0; a < n.length; a++){
                    var o = n[a];
                    d[o] = N(l[o], !0);
                }
                for(var a = 0; a < n.length; a++){
                    for(var O = n[a], m = d[O], q = m.groups, i = 0; i < q.length; i++)$(q[i], O, d);
                    for(var R = Object.getOwnPropertyNames(m.fast), i = 0; i < R.length; i++)$(m.fast[R[i]], O, d);
                }
                return new v(d, r);
            }
            function K(e) {
                for(var r = typeof Map < "u", t = r ? new Map : Object.create(null), n = Object.getOwnPropertyNames(e), l = 0; l < n.length; l++){
                    var a = n[l], o = e[a], f = Array.isArray(o) ? o : [
                        o
                    ];
                    f.forEach(function(s) {
                        if (typeof s != "string") throw new Error("keyword must be string (in keyword '" + a + "')");
                        r ? t.set(s, a) : t[s] = a;
                    });
                }
                return function(s) {
                    return r ? t.get(s) : t[s];
                };
            }
            var v = function(e, r) {
                this.startState = r, this.states = e, this.buffer = "", this.stack = [], this.reset();
            };
            v.prototype.reset = function(e, r) {
                return this.buffer = e || "", this.index = 0, this.line = r ? r.line : 1, this.col = r ? r.col : 1, this.queuedToken = r ? r.queuedToken : null, this.queuedText = r ? r.queuedText : "", this.queuedThrow = r ? r.queuedThrow : null, this.setState(r ? r.state : this.startState), this.stack = r && r.stack ? r.stack.slice() : [], this;
            }, v.prototype.save = function() {
                return {
                    line: this.line,
                    col: this.col,
                    state: this.state,
                    stack: this.stack.slice(),
                    queuedToken: this.queuedToken,
                    queuedText: this.queuedText,
                    queuedThrow: this.queuedThrow
                };
            }, v.prototype.setState = function(e) {
                if (!(!e || this.state === e)) {
                    this.state = e;
                    var r = this.states[e];
                    this.groups = r.groups, this.error = r.error, this.re = r.regexp, this.fast = r.fast;
                }
            }, v.prototype.popState = function() {
                this.setState(this.stack.pop());
            }, v.prototype.pushState = function(e) {
                this.stack.push(this.state), this.setState(e);
            };
            var j = p ? function(e, r) {
                return e.exec(r);
            } : function(e, r) {
                var t = e.exec(r);
                return t[0].length === 0 ? null : t;
            };
            v.prototype._getGroup = function(e) {
                for(var r = this.groups.length, t = 0; t < r; t++)if (e[t + 1] !== void 0) return this.groups[t];
                throw new Error("Cannot find token type for matched text");
            };
            function ee() {
                return this.value;
            }
            if (v.prototype.next = function() {
                var e = this.index;
                if (this.queuedGroup) {
                    var r = this._token(this.queuedGroup, this.queuedText, e);
                    return this.queuedGroup = null, this.queuedText = "", r;
                }
                var t = this.buffer;
                if (e !== t.length) {
                    var o = this.fast[t.charCodeAt(e)];
                    if (o) return this._token(o, t.charAt(e), e);
                    var n = this.re;
                    n.lastIndex = e;
                    var l = j(n, t), a = this.error;
                    if (l == null) return this._token(a, t.slice(e, t.length), e);
                    var o = this._getGroup(l), f = l[0];
                    return a.fallback && l.index !== e ? (this.queuedGroup = o, this.queuedText = f, this._token(a, t.slice(e, l.index), e)) : this._token(o, f, e);
                }
            }, v.prototype._token = function(e, r, t) {
                var n = 0;
                if (e.lineBreaks) {
                    var l = /\n/g, a = 1;
                    if (r === `
`) n = 1;
                    else for(; l.exec(r);)n++, a = l.lastIndex;
                }
                var o = {
                    type: typeof e.type == "function" && e.type(r) || e.defaultType,
                    value: typeof e.value == "function" ? e.value(r) : r,
                    text: r,
                    toString: ee,
                    offset: t,
                    lineBreaks: n,
                    line: this.line,
                    col: this.col
                }, f = r.length;
                if (this.index += f, this.line += n, n !== 0 ? this.col = f - a + 1 : this.col += f, e.shouldThrow) {
                    var s = new Error(this.formatError(o, "invalid syntax"));
                    throw s;
                }
                return e.pop ? this.popState() : e.push ? this.pushState(e.push) : e.next && this.setState(e.next), o;
            }, typeof Symbol < "u" && Symbol.iterator) {
                var B = function(e) {
                    this.lexer = e;
                };
                B.prototype.next = function() {
                    var e = this.lexer.next();
                    return {
                        value: e,
                        done: !e
                    };
                }, B.prototype[Symbol.iterator] = function() {
                    return this;
                }, v.prototype[Symbol.iterator] = function() {
                    return new B(this);
                };
            }
            return v.prototype.formatError = function(e, r) {
                if (e == null) var t = this.buffer.slice(this.index), e = {
                    text: t,
                    offset: this.index,
                    lineBreaks: t.indexOf(`
`) === -1 ? 0 : 1,
                    line: this.line,
                    col: this.col
                };
                var n = 2, l = Math.max(e.line - n, 1), a = e.line + n, o = String(a).length, f = Q(this.buffer, this.line - e.line + n + 1).slice(0, 5), s = [];
                s.push(r + " at line " + e.line + " col " + e.col + ":"), s.push("");
                for(var i = 0; i < f.length; i++){
                    var c = f[i], g = l + i;
                    s.push(L(String(g), o) + "  " + c), g === e.line && s.push(L("", o + e.col + 1) + "^");
                }
                return s.join(`
`);
            }, v.prototype.clone = function() {
                return new v(this.states, this.state);
            }, v.prototype.has = function(e) {
                return !0;
            }, {
                compile: Y,
                states: Z,
                error: Object.freeze({
                    error: !0
                }),
                fallback: Object.freeze({
                    fallback: !0
                }),
                keywords: K
            };
        });
    });
    var E2 = {};
    se2(E2, {
        default: ()=>he1
    });
    var ue2 = z2(C3());
    T4(E2, z2(C3()));
    var { default: I3, ...fe1 } = ue2, he1 = I3 !== void 0 ? I3 : fe1;
    const mod56 = {
        default: he1
    };
    var ze1 = Object.defineProperty;
    var Fe1 = (e, t)=>{
        for(var r in t)ze1(e, r, {
            get: t[r],
            enumerable: !0
        });
    };
    var L3 = {};
    Fe1(L3, {
        argumentCommands: ()=>_4,
        commands: ()=>b2,
        defaultStrings: ()=>D1,
        diacritics: ()=>g4,
        fieldTypes: ()=>x3,
        formatting: ()=>T5,
        formattingCommands: ()=>C4,
        formattingEnvs: ()=>k3,
        ligaturePattern: ()=>$2,
        ligatures: ()=>y3,
        mathScriptFormatting: ()=>S3,
        mathScripts: ()=>R3,
        required: ()=>O3,
        sentenceCaseLanguages: ()=>q3
    });
    var ee2 = {
        biblatex: {
            article: [
                "author",
                "title",
                "journaltitle",
                [
                    "year",
                    "date"
                ]
            ],
            book: [
                "author",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            mvbook: [
                "author",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            inbook: [
                "author",
                "title",
                "booktitle",
                [
                    "year",
                    "date"
                ]
            ],
            booklet: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            collection: [
                "editor",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            mvcollection: [
                "editor",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            incollection: [
                "author",
                "title",
                "booktitle",
                [
                    "year",
                    "date"
                ]
            ],
            dataset: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            online: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "year",
                    "date"
                ],
                [
                    "doi",
                    "eprint",
                    "url"
                ]
            ],
            patent: [
                "author",
                "title",
                "number",
                [
                    "year",
                    "date"
                ]
            ],
            periodical: [
                "editor",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            proceedings: [
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            mvproceedings: [
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            inproceedings: [
                "author",
                "title",
                "booktitle",
                [
                    "year",
                    "date"
                ]
            ],
            report: [
                "author",
                "title",
                "type",
                "institution",
                [
                    "year",
                    "date"
                ]
            ],
            thesis: [
                "author",
                "title",
                "type",
                "institution",
                [
                    "year",
                    "date"
                ]
            ],
            unpublished: [
                "author",
                "title",
                [
                    "year",
                    "date"
                ]
            ],
            conference: [
                "author",
                "title",
                "booktitle",
                [
                    "year",
                    "date"
                ]
            ],
            electronic: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "year",
                    "date"
                ],
                [
                    "doi",
                    "eprint",
                    "url"
                ]
            ],
            mastersthesis: [
                "author",
                "title",
                "institution",
                [
                    "year",
                    "date"
                ]
            ],
            phdthesis: [
                "author",
                "title",
                "institution",
                [
                    "year",
                    "date"
                ]
            ],
            techreport: [
                "author",
                "title",
                "institution",
                [
                    "year",
                    "date"
                ]
            ],
            www: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "year",
                    "date"
                ],
                [
                    "doi",
                    "eprint",
                    "url"
                ]
            ]
        },
        bibtex: {
            article: [
                "author",
                "title",
                "journal",
                "year"
            ],
            book: [
                [
                    "author",
                    "editor"
                ],
                "title",
                "publisher",
                "year"
            ],
            booklet: [
                "title"
            ],
            inbook: [
                [
                    "author",
                    "editor"
                ],
                "title",
                [
                    "chapter",
                    "pages"
                ],
                "publisher",
                "year"
            ],
            incollection: [
                "author",
                "title",
                "booktitle",
                "publisher",
                "year"
            ],
            inproceedings: [
                "author",
                "title",
                "booktitle",
                "year"
            ],
            mastersthesis: [
                "author",
                "title",
                "school",
                "year"
            ],
            phdthesis: [
                "author",
                "title",
                "school",
                "year"
            ],
            proceedings: [
                "title",
                "year"
            ],
            techreport: [
                "author",
                "title",
                "institution",
                "year"
            ],
            unpublished: [
                "author",
                "title",
                "note"
            ]
        }
    };
    var te3 = {
        abstract: [
            "field",
            "literal"
        ],
        addendum: [
            "field",
            "literal"
        ],
        afterword: [
            "list",
            "name"
        ],
        annotation: [
            "field",
            "literal"
        ],
        annotator: [
            "list",
            "name"
        ],
        author: [
            "list",
            "name"
        ],
        authortype: [
            "field",
            "key"
        ],
        bookauthor: [
            "list",
            "name"
        ],
        bookpagination: [
            "field",
            "key"
        ],
        booksubtitle: [
            "field",
            "literal"
        ],
        booktitle: [
            "field",
            "title"
        ],
        booktitleaddon: [
            "field",
            "literal"
        ],
        chapter: [
            "field",
            "literal"
        ],
        commentator: [
            "list",
            "name"
        ],
        date: [
            "field",
            "date"
        ],
        doi: [
            "field",
            "verbatim"
        ],
        edition: [
            "field",
            "literal"
        ],
        editor: [
            "list",
            "name"
        ],
        editora: [
            "list",
            "name"
        ],
        editorb: [
            "list",
            "name"
        ],
        editorc: [
            "list",
            "name"
        ],
        editortype: [
            "field",
            "key"
        ],
        editoratype: [
            "field",
            "key"
        ],
        editorbtype: [
            "field",
            "key"
        ],
        editorctype: [
            "field",
            "key"
        ],
        eid: [
            "field",
            "literal"
        ],
        entrysubtype: [
            "field",
            "literal"
        ],
        eprint: [
            "field",
            "verbatim"
        ],
        eprintclass: [
            "field",
            "literal"
        ],
        eprinttype: [
            "field",
            "literal"
        ],
        eventdate: [
            "field",
            "date"
        ],
        eventtitle: [
            "field",
            "title"
        ],
        eventtitleaddon: [
            "field",
            "literal"
        ],
        file: [
            "field",
            "verbatim"
        ],
        foreword: [
            "list",
            "name"
        ],
        holder: [
            "list",
            "name"
        ],
        howpublished: [
            "field",
            "literal"
        ],
        indextitle: [
            "field",
            "literal"
        ],
        institution: [
            "list",
            "literal"
        ],
        introduction: [
            "list",
            "name"
        ],
        isan: [
            "field",
            "literal"
        ],
        isbn: [
            "field",
            "literal"
        ],
        ismn: [
            "field",
            "literal"
        ],
        isrn: [
            "field",
            "literal"
        ],
        issn: [
            "field",
            "literal"
        ],
        issue: [
            "field",
            "literal"
        ],
        issuesubtitle: [
            "field",
            "literal"
        ],
        issuetitle: [
            "field",
            "literal"
        ],
        iswc: [
            "field",
            "literal"
        ],
        journalsubtitle: [
            "field",
            "literal"
        ],
        journaltitle: [
            "field",
            "literal"
        ],
        label: [
            "field",
            "literal"
        ],
        language: [
            "list",
            "key"
        ],
        library: [
            "field",
            "literal"
        ],
        location: [
            "list",
            "literal"
        ],
        mainsubtitle: [
            "field",
            "literal"
        ],
        maintitle: [
            "field",
            "title"
        ],
        maintitleaddon: [
            "field",
            "literal"
        ],
        month: [
            "field",
            "literal"
        ],
        nameaddon: [
            "field",
            "literal"
        ],
        note: [
            "field",
            "literal"
        ],
        number: [
            "field",
            "literal"
        ],
        organization: [
            "list",
            "literal"
        ],
        origdate: [
            "field",
            "date"
        ],
        origlanguage: [
            "list",
            "key"
        ],
        origlocation: [
            "list",
            "literal"
        ],
        origpublisher: [
            "list",
            "literal"
        ],
        origtitle: [
            "field",
            "title"
        ],
        pages: [
            "field",
            "range"
        ],
        pagetotal: [
            "field",
            "literal"
        ],
        pagination: [
            "field",
            "key"
        ],
        part: [
            "field",
            "literal"
        ],
        publisher: [
            "list",
            "literal"
        ],
        pubstate: [
            "field",
            "key"
        ],
        reprinttitle: [
            "field",
            "literal"
        ],
        series: [
            "field",
            "title"
        ],
        shortauthor: [
            "list",
            "name"
        ],
        shorteditor: [
            "list",
            "name"
        ],
        shorthand: [
            "field",
            "literal"
        ],
        shorthandintro: [
            "field",
            "literal"
        ],
        shortjournal: [
            "field",
            "literal"
        ],
        shortseries: [
            "field",
            "literal"
        ],
        shorttitle: [
            "field",
            "title"
        ],
        subtitle: [
            "field",
            "literal"
        ],
        title: [
            "field",
            "title"
        ],
        titleaddon: [
            "field",
            "literal"
        ],
        translator: [
            "list",
            "name"
        ],
        type: [
            "field",
            "title"
        ],
        url: [
            "field",
            "uri"
        ],
        urldate: [
            "field",
            "date"
        ],
        venue: [
            "field",
            "literal"
        ],
        version: [
            "field",
            "literal"
        ],
        volume: [
            "field",
            "integer"
        ],
        volumes: [
            "field",
            "integer"
        ],
        year: [
            "field",
            "literal"
        ],
        crossref: [
            "field",
            "entry key"
        ],
        entryset: [
            "separated",
            "literal"
        ],
        execute: [
            "field",
            "code"
        ],
        gender: [
            "field",
            "gender"
        ],
        langid: [
            "field",
            "identifier"
        ],
        langidopts: [
            "field",
            "literal"
        ],
        ids: [
            "separated",
            "entry key"
        ],
        indexsorttitle: [
            "field",
            "literal"
        ],
        keywords: [
            "separated",
            "literal"
        ],
        options: [
            "separated",
            "options"
        ],
        presort: [
            "field",
            "string"
        ],
        related: [
            "separated",
            "literal"
        ],
        relatedoptions: [
            "separated",
            "literal"
        ],
        relatedtype: [
            "field",
            "identifier"
        ],
        relatedstring: [
            "field",
            "literal"
        ],
        sortkey: [
            "field",
            "literal"
        ],
        sortname: [
            "list",
            "name"
        ],
        sortshorthand: [
            "field",
            "literal"
        ],
        sorttitle: [
            "field",
            "literal"
        ],
        sortyear: [
            "field",
            "integer"
        ],
        xdata: [
            "separated",
            "entry key"
        ],
        xref: [
            "field",
            "entry key"
        ],
        namea: [
            "list",
            "name"
        ],
        nameb: [
            "list",
            "name"
        ],
        namec: [
            "list",
            "name"
        ],
        nameatype: [
            "field",
            "key"
        ],
        namebtype: [
            "field",
            "key"
        ],
        namectype: [
            "field",
            "key"
        ],
        lista: [
            "list",
            "literal"
        ],
        listb: [
            "list",
            "literal"
        ],
        listc: [
            "list",
            "literal"
        ],
        listd: [
            "list",
            "literal"
        ],
        liste: [
            "list",
            "literal"
        ],
        listf: [
            "list",
            "literal"
        ],
        usera: [
            "field",
            "literal"
        ],
        userb: [
            "field",
            "literal"
        ],
        userc: [
            "field",
            "literal"
        ],
        userd: [
            "field",
            "literal"
        ],
        usere: [
            "field",
            "literal"
        ],
        userf: [
            "field",
            "literal"
        ],
        verba: [
            "field",
            "literal"
        ],
        verbb: [
            "field",
            "literal"
        ],
        verbc: [
            "field",
            "literal"
        ],
        address: [
            "list",
            "literal"
        ],
        annote: [
            "field",
            "literal"
        ],
        archiveprefix: [
            "field",
            "literal"
        ],
        journal: [
            "field",
            "literal"
        ],
        key: [
            "field",
            "literal"
        ],
        pdf: [
            "field",
            "verbatim"
        ],
        primaryclass: [
            "field",
            "literal"
        ],
        school: [
            "list",
            "literal"
        ],
        numpages: [
            "field",
            "integer"
        ],
        pmid: [
            "field",
            "literal"
        ],
        pmcid: [
            "field",
            "literal"
        ]
    };
    var N4 = {
        diacritics: {
            "`": "\u0300",
            "'": "\u0301",
            "^": "\u0302",
            "~": "\u0303",
            "=": "\u0304",
            u: "\u0306",
            ".": "\u0307",
            '"': "\u0308",
            r: "\u030A",
            H: "\u030B",
            v: "\u030C",
            b: "\u0332",
            d: "\u0323",
            c: "\u0327",
            k: "\u0328",
            t: "\u0361",
            textcommabelow: "\u0326"
        },
        commands: {
            textquotesingle: "'",
            textasciigrave: "`",
            textquotedbl: '"',
            textdollar: "$",
            textless: "<",
            textgreater: ">",
            textbackslash: "\\",
            textasciicircum: "^",
            textunderscore: "_",
            textbraceleft: "{",
            textbar: "|",
            textbraceright: "}",
            textasciitilde: "~",
            textexclamdown: "\xA1",
            textcent: "\xA2",
            textsterling: "\xA3",
            textcurrency: "\xA4",
            textyen: "\xA5",
            textbrokenbar: "\xA6",
            textsection: "\xA7",
            textasciidieresis: "\xA8",
            textcopyright: "\xA9",
            textordfeminine: "\xAA",
            guillemetleft: "\xAB",
            guillemotleft: "\xAB",
            textlnot: "\xAC",
            textregistered: "\xAE",
            textasciimacron: "\xAF",
            textdegree: "\xB0",
            textpm: "\xB1",
            texttwosuperior: "\xB2",
            textthreesuperior: "\xB3",
            textasciiacute: "\xB4",
            textmu: "\xB5",
            textparagraph: "\xB6",
            textperiodcentered: "\xB7",
            textonesuperior: "\xB9",
            textordmasculine: "\xBA",
            guillemetright: "\xBB",
            guillemotright: "\xBB",
            textonequarter: "\xBC",
            textonehalf: "\xBD",
            textthreequarters: "\xBE",
            textquestiondown: "\xBF",
            AE: "\xC6",
            DH: "\xD0",
            texttimes: "\xD7",
            O: "\xD8",
            TH: "\xDE",
            ss: "\xDF",
            ae: "\xE6",
            dh: "\xF0",
            textdiv: "\xF7",
            o: "\xF8",
            th: "\xFE",
            DJ: "\u0110",
            dj: "\u0111",
            i: "\u0131",
            IJ: "\u0132",
            ij: "\u0133",
            L: "\u0141",
            l: "\u0142",
            NG: "\u014A",
            ng: "\u014B",
            OE: "\u0152",
            oe: "\u0153",
            textflorin: "\u0192",
            j: "\u0237",
            textasciicaron: "\u02C7",
            textasciibreve: "\u02D8",
            textacutedbl: "\u02DD",
            textgravedbl: "\u02F5",
            texttildelow: "\u02F7",
            textbaht: "\u0E3F",
            SS: "\u1E9E",
            textcompwordmark: "\u200C",
            textendash: "\u2013",
            textemdash: "\u2014",
            textbardbl: "\u2016",
            textquoteleft: "\u2018",
            textquoteright: "\u2019",
            quotesinglbase: "\u201A",
            textquotedblleft: "\u201C",
            textquotedblright: "\u201D",
            quotedblbase: "\u201E",
            textdagger: "\u2020",
            textdaggerdbl: "\u2021",
            textbullet: "\u2022",
            textellipsis: "\u2026",
            textperthousand: "\u2030",
            textpertenthousand: "\u2031",
            guilsinglleft: "\u2039",
            guilsinglright: "\u203A",
            textreferencemark: "\u203B",
            textinterrobang: "\u203D",
            textfractionsolidus: "\u2044",
            textlquill: "\u2045",
            textrquill: "\u2046",
            textdiscount: "\u2052",
            textcolonmonetary: "\u20A1",
            textlira: "\u20A4",
            textnaira: "\u20A6",
            textwon: "\u20A9",
            textdong: "\u20AB",
            texteuro: "\u20AC",
            textpeso: "\u20B1",
            textcelsius: "\u2103",
            textnumero: "\u2116",
            textcircledP: "\u2117",
            textrecipe: "\u211E",
            textservicemark: "\u2120",
            texttrademark: "\u2122",
            textohm: "\u2126",
            textmho: "\u2127",
            textestimated: "\u212E",
            textleftarrow: "\u2190",
            textuparrow: "\u2191",
            textrightarrow: "\u2192",
            textdownarrow: "\u2193",
            textminus: "\u2212",
            Hwithstroke: "\u0126",
            hwithstroke: "\u0127",
            textasteriskcentered: "\u2217",
            textsurd: "\u221A",
            textlangle: "\u2329",
            textrangle: "\u232A",
            textblank: "\u2422",
            textvisiblespace: "\u2423",
            textopenbullet: "\u25E6",
            textbigcircle: "\u25EF",
            textmusicalnote: "\u266A",
            textmarried: "\u26AD",
            textdivorced: "\u26AE",
            textinterrobangdown: "\u2E18",
            textcommabelow: null,
            copyright: "\xA9",
            Gamma: "\u0393",
            Delta: "\u0394",
            Theta: "\u0398",
            Lambda: "\u039B",
            Xi: "\u039E",
            Pi: "\u03A0",
            Sigma: "\u03A3",
            Phi: "\u03A6",
            Psi: "\u03A8",
            Omega: "\u03A9",
            alpha: "\u03B1",
            beta: "\u03B2",
            gamma: "\u03B3",
            delta: "\u03B4",
            varepsilon: "\u03B5",
            zeta: "\u03B6",
            eta: "\u03B7",
            theta: "\u03B8",
            iota: "\u03B9",
            kappa: "\u03BA",
            lambda: "\u03BB",
            mu: "\u03BC",
            nu: "\u03BD",
            xi: "\u03BE",
            pi: "\u03C0",
            rho: "\u03C1",
            varsigma: "\u03C2",
            sigma: "\u03C3",
            tau: "\u03C4",
            upsilon: "\u03C5",
            varphi: "\u03C6",
            chi: "\u03C7",
            psi: "\u03C8",
            omega: "\u03C9",
            vartheta: "\u03D1",
            Upsilon: "\u03D2",
            phi: "\u03D5",
            varpi: "\u03D6",
            varrho: "\u03F1",
            epsilon: "\u03F5"
        }
    };
    var O3 = ee2, x3 = te3, g4 = N4.diacritics, b2 = N4.commands, D1 = {
        jan: "01",
        feb: "02",
        mar: "03",
        apr: "04",
        may: "05",
        jun: "06",
        jul: "07",
        aug: "08",
        sep: "09",
        oct: "10",
        nov: "11",
        dec: "12",
        acmcs: "ACM Computing Surveys",
        acta: "Acta Informatica",
        cacm: "Communications of the ACM",
        ibmjrd: "IBM Journal of Research and Development",
        ibmsj: "IBM Systems Journal",
        ieeese: "IEEE Transactions on Software Engineering",
        ieeetc: "IEEE Transactions on Computers",
        ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
        ipl: "Information Processing Letters",
        jacm: "Journal of the ACM",
        jcss: "Journal of Computer and System Sciences",
        scp: "Science of Computer Programming",
        sicomp: "SIAM Journal on Computing",
        tocs: "ACM Transactions on Computer Systems",
        tods: "ACM Transactions on Database Systems",
        tog: "ACM Transactions on Graphics",
        toms: "ACM Transactions on Mathematical Software",
        toois: "ACM Transactions on Office Information Systems",
        toplas: "ACM Transactions on Programming Languages and Systems",
        tcs: "Theoretical Computer Science"
    }, k3 = {
        it: "italics",
        itshape: "italics",
        sl: "italics",
        slshape: "italics",
        em: "italics",
        bf: "bold",
        bfseries: "bold",
        sc: "smallcaps",
        scshape: "smallcaps",
        rm: void 0,
        sf: void 0,
        tt: void 0
    }, C4 = {
        textit: "italics",
        textsl: "italics",
        emph: "italics",
        mkbibitalic: "italics",
        mkbibemph: "italics",
        textbf: "bold",
        strong: "bold",
        mkbibbold: "bold",
        textsc: "smallcaps",
        textsuperscript: "superscript",
        textsubscript: "subscript",
        enquote: "quotes",
        mkbibquote: "quotes",
        textmd: void 0,
        textrm: void 0,
        textsf: void 0,
        texttt: void 0,
        textup: void 0
    }, T5 = {
        italics: [
            "<i>",
            "</i>"
        ],
        bold: [
            "<b>",
            "</b>"
        ],
        superscript: [
            "<sup>",
            "</sup>"
        ],
        subscript: [
            "<sub>",
            "</sub>"
        ],
        smallcaps: [
            '<span style="font-variant:small-caps;">',
            "</span>"
        ],
        nocase: [
            '<span class="nocase">',
            "</span>"
        ],
        quotes: [
            "\u201C",
            "\u201D"
        ]
    }, _4 = {
        ElsevierGlyph (e) {
            return String.fromCharCode(parseInt(e, 16));
        },
        href (e, t) {
            return e;
        },
        url (e) {
            return e;
        }
    }, $2 = /---?|''|``|~/g, y3 = {
        "--": "\u2013",
        "---": "\u2014",
        "``": "\u201C",
        "''": "\u201D",
        "~": "\xA0"
    }, S3 = {
        "^": "superscript",
        sp: "superscript",
        _: "subscript",
        sb: "subscript",
        mathrm: void 0
    }, R3 = {
        "^": {
            0: "\u2070",
            1: "\xB9",
            2: "\xB2",
            3: "\xB3",
            4: "\u2074",
            5: "\u2075",
            6: "\u2076",
            7: "\u2077",
            8: "\u2078",
            9: "\u2079",
            "+": "\u207A",
            "-": "\u207B",
            "=": "\u207C",
            "(": "\u207D",
            ")": "\u207E",
            i: "\u2071",
            n: "\u207F"
        },
        _: {
            0: "\u2080",
            1: "\u2081",
            2: "\u2082",
            3: "\u2083",
            4: "\u2084",
            5: "\u2085",
            6: "\u2086",
            7: "\u2087",
            8: "\u2088",
            9: "\u2089",
            "+": "\u208A",
            "-": "\u208B",
            "=": "\u208C",
            "(": "\u208D",
            ")": "\u208E",
            a: "\u2090",
            e: "\u2091",
            o: "\u2092",
            x: "\u2093",
            ə: "\u2094",
            h: "\u2095",
            k: "\u2096",
            l: "\u2097",
            m: "\u2098",
            n: "\u2099",
            s: "\u209A",
            p: "\u209B",
            t: "\u209C"
        }
    }, q3 = [
        "american",
        "british",
        "canadian",
        "english",
        "australian",
        "newzealand",
        "usenglish",
        "ukenglish",
        "en",
        "eng",
        "en-au",
        "en-bz",
        "en-ca",
        "en-cb",
        "en-gb",
        "en-ie",
        "en-jm",
        "en-nz",
        "en-ph",
        "en-tt",
        "en-us",
        "en-za",
        "en-zw",
        "anglais"
    ];
    function re2(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
            })), r.push.apply(r, i);
        }
        return r;
    }
    function f2(e) {
        for(var t = 1; t < arguments.length; t++){
            var r = arguments[t] != null ? arguments[t] : {};
            t % 2 ? re2(Object(r), !0).forEach(function(i) {
                He(e, i, r[i]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : re2(Object(r)).forEach(function(i) {
                Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
            });
        }
        return e;
    }
    function He(e, t, r) {
        return t = Ye2(t), t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function Ye2(e) {
        var t = Ve1(e, "string");
        return typeof t == "symbol" ? t : String(t);
    }
    function Ve1(e, t) {
        if (typeof e != "object" || e === null) return e;
        var r = e[Symbol.toPrimitive];
        if (r !== void 0) {
            var i = r.call(e, t || "default");
            if (typeof i != "object") return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    var ie3 = /[a-zA-Z_][a-zA-Z0-9_:-]*/, I4 = {
        comment: /%.*/,
        whitespace: {
            match: /\s+/,
            lineBreaks: !0
        }
    }, Xe1 = he1.states({
        main: {
            junk: {
                match: /@[cC][oO][mM][mM][eE][nN][tT].+|[^@]+/,
                lineBreaks: !0
            },
            at: {
                match: "@",
                push: "entry"
            }
        },
        entry: f2(f2({}, I4), {}, {
            otherEntryType: {
                match: /[sS][tT][rR][iI][nN][gG]|[pP][rR][eE][aA][mM][bB][lL][eE]/,
                next: "otherEntryContents"
            },
            dataEntryType: {
                match: ie3,
                next: "dataEntryContents"
            }
        }),
        otherEntryContents: f2(f2({}, I4), {}, {
            lbrace: {
                match: /[{(]/,
                next: "fields"
            }
        }),
        dataEntryContents: f2(f2({}, I4), {}, {
            lbrace: {
                match: /[{(]/,
                next: "dataEntryContents"
            },
            label: /[^,\s]+/,
            comma: {
                match: ",",
                next: "fields"
            }
        }),
        fields: f2(f2({}, I4), {}, {
            identifier: ie3,
            number: /-?\d+/,
            hash: "#",
            equals: "=",
            comma: ",",
            quote: {
                match: '"',
                push: "quotedLiteral"
            },
            lbrace: {
                match: "{",
                push: "bracedLiteral"
            },
            rbrace: {
                match: /[})]/,
                pop: !0
            }
        }),
        quotedLiteral: {
            lbrace: {
                match: "{",
                push: "bracedLiteral"
            },
            quote: {
                match: '"',
                pop: !0
            },
            text: {
                match: /(?:\\[\\{]|[^{"])+/,
                lineBreaks: !0
            }
        },
        bracedLiteral: {
            lbrace: {
                match: "{",
                push: "bracedLiteral"
            },
            rbrace: {
                match: "}",
                pop: !0
            },
            text: {
                match: /(?:\\[\\{}]|[^{}])+/,
                lineBreaks: !0
            }
        }
    }), Qe1 = {
        "(": ")",
        "{": "}"
    }, et1 = new jt.Grammar({
        Main () {
            let e = [];
            for(;;){
                for(; this.matchToken("junk");)this.consumeToken("junk");
                if (this.matchEndOfFile()) break;
                e.push(this.consumeRule("Entry"));
            }
            return e.filter(Boolean);
        },
        _ () {
            let e;
            for(; e !== this.token;)e = this.token, this.consumeToken("whitespace", !0), this.consumeToken("comment", !0);
        },
        Entry () {
            this.consumeToken("at"), this.consumeRule("_");
            let e = (this.matchToken("otherEntryType") ? this.consumeToken("otherEntryType") : this.consumeToken("dataEntryType")).value.toLowerCase();
            this.consumeRule("_");
            let t = this.consumeToken("lbrace").value;
            this.consumeRule("_");
            let r;
            if (e === "string") {
                let [n, o] = this.consumeRule("Field");
                this.state.strings[n] = o;
            } else if (e === "preamble") this.consumeRule("Expression");
            else {
                let n = this.consumeToken("label").value;
                this.consumeRule("_"), this.consumeToken("comma"), this.consumeRule("_");
                let o = this.consumeRule("EntryBody");
                r = {
                    type: e,
                    label: n,
                    properties: o
                };
            }
            this.consumeRule("_");
            let i = this.consumeToken("rbrace").value;
            return i !== Qe1[t] && p1.warn("[plugin-bibtex]", `entry started with "${t}", but ends with "${i}"`), r;
        },
        EntryBody () {
            let e = {};
            for(; this.matchToken("identifier");){
                let [t, r] = this.consumeRule("Field");
                if (e[t] = r, this.consumeRule("_"), this.consumeToken("comma", !0)) this.consumeRule("_");
                else break;
            }
            return e;
        },
        Field () {
            let e = this.consumeToken("identifier").value.toLowerCase();
            this.consumeRule("_"), this.consumeToken("equals"), this.consumeRule("_");
            let t = this.consumeRule("Expression");
            return [
                e,
                t
            ];
        },
        Expression () {
            let e = this.consumeRule("ExpressionPart");
            for(this.consumeRule("_"); this.matchToken("hash");)this.consumeToken("hash"), this.consumeRule("_"), e += this.consumeRule("ExpressionPart").toString(), this.consumeRule("_");
            return e;
        },
        ExpressionPart () {
            return this.matchToken("identifier") ? this.state.strings[this.consumeToken("identifier").value.toLowerCase()] || "" : this.matchToken("number") ? parseInt(this.consumeToken("number")) : this.matchToken("quote") ? this.consumeRule("QuoteString") : this.consumeRule("BracketString");
        },
        QuoteString () {
            let e = "";
            for(this.consumeToken("quote"); !this.matchToken("quote");)e += this.consumeRule("Text");
            return this.consumeToken("quote"), e;
        },
        BracketString () {
            let e = "";
            for(this.consumeToken("lbrace"); !this.matchToken("rbrace");)e += this.consumeRule("Text");
            return this.consumeToken("rbrace"), e;
        },
        Text () {
            return this.matchToken("lbrace") ? `{${this.consumeRule("BracketString")}}` : this.consumeToken("text").value;
        }
    }, {
        strings: D1
    });
    function M4(e) {
        return et1.parse(Xe1.reset(e));
    }
    var A3 = {
        splitEntries: /\n\s*(?=\[)/g,
        parseEntry: /^\[(.+?)\]\s*(?:\n([\s\S]+))?$/,
        splitPairs: /((?=.)\s)*\n\s*/g,
        splitPair: /:(.*)/
    }, tt1 = (e)=>{
        let [, t, r] = e.match(A3.parseEntry) || [];
        if (!t || !r) return {};
        {
            let i = {
                type: "book",
                label: t,
                properties: {}
            };
            return r.trim().split(A3.splitPairs).filter((n)=>n).forEach((n)=>{
                let [o, s] = n.split(A3.splitPair);
                s && (o = o.trim(), s = s.trim(), o === "type" ? i.type = s : i.properties[o] = s);
            }), i;
        }
    }, ne4 = (e)=>e.trim().split(A3.splitEntries).map(tt1);
    var E3 = {
        source: {
            article: "article-journal",
            book: "book",
            mvbook: "book",
            inbook: "chapter",
            bookinbook: "book",
            booklet: "book",
            collection: "book",
            mvcollection: "book",
            incollection: "chapter",
            dataset: "dataset",
            manual: "report",
            misc: "document",
            online: "webpage",
            patent: "patent",
            periodical: "periodical",
            proceedings: "book",
            mvproceedings: "book",
            inproceedings: "paper-conference",
            reference: "book",
            mvreference: "book",
            inreference: "entry",
            report: "report",
            software: "software",
            thesis: "thesis",
            unpublished: "manuscript",
            artwork: "graphic",
            audio: "song",
            image: "figure",
            jurisdiction: "legal_case",
            legislation: "legislation",
            legal: "treaty",
            letter: "personal_communication",
            movie: "motion_picture",
            music: "musical_score",
            performance: "performance",
            review: "review",
            standard: "standard",
            video: "motion_picture",
            conference: "paper-conference",
            electronic: "webpage",
            mastersthesis: "thesis",
            phdthesis: "thesis",
            techreport: "report",
            www: "webpage"
        },
        target: {
            article: "article",
            "article-journal": "article",
            "article-magazine": "article",
            "article-newspaper": "article",
            bill: "legislation",
            book: "book",
            broadcast: "audio",
            chapter: "inbook",
            classic: "unpublished",
            collection: "misc",
            dataset: "dataset",
            document: "misc",
            entry: "inreference",
            "entry-dictionary": "inreference",
            "entry-encyclopedia": "inreference",
            event: "misc",
            figure: "artwork",
            graphic: "artwork",
            hearing: "legal",
            interview: "audio",
            legal_case: "jurisdiction",
            legislation: "legislation",
            manuscript: "unpublished",
            motion_picture: "movie",
            musical_score: "music",
            "paper-conference": "inproceedings",
            patent: "patent",
            performance: "performance",
            periodical: "periodical",
            personal_communication: "letter",
            post: "online",
            "post-weblog": "online",
            regulation: "legal",
            report: "report",
            review: "review",
            "review-book": "review",
            software: "software",
            song: "music",
            speech: "audio",
            standard: "standard",
            thesis: "thesis",
            treaty: "legal",
            webpage: "online"
        }
    };
    var j5 = {
        source: {
            article: "article-journal",
            book: "book",
            booklet: "book",
            conference: "paper-conference",
            inbook: "chapter",
            incollection: "chapter",
            inproceedings: "paper-conference",
            manual: "report",
            mastersthesis: "thesis",
            misc: "document",
            phdthesis: "thesis",
            proceedings: "book",
            techreport: "report",
            unpublished: "manuscript"
        },
        target: {
            article: "article",
            "article-journal": "article",
            "article-magazine": "article",
            "article-newspaper": "article",
            book: "book",
            chapter: "inbook",
            manuscript: "unpublished",
            "paper-conference": "inproceedings",
            report: "techreport",
            review: "article",
            "review-book": "article"
        }
    };
    var p3 = {
        constants: L3,
        types: {
            biblatex: E3,
            bibtex: j5
        },
        parse: {
            biblatex: !0,
            strict: !1,
            sentenceCase: "never"
        },
        format: {
            useIdAsLabel: !1
        }
    };
    var ot1 = new Set([
        "the",
        "a",
        "an"
    ]), z3 = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, at1 = /[^\u0020-\u007F]+/g;
    function oe4(e) {
        return e ? e.normalize("NFKD").replace(at1, "").split(z3).find((t)=>t.length && !ot1.has(t.toLowerCase())) : "";
    }
    var ae3 = new jt.Translator([
        {
            source: "given",
            target: "given"
        },
        {
            source: "family",
            target: "family"
        },
        {
            source: "suffix",
            target: "suffix"
        },
        {
            source: "prefix",
            target: "non-dropping-particle"
        },
        {
            source: "family",
            target: "literal",
            when: {
                source: !1,
                target: {
                    family: !1,
                    given: !1
                }
            }
        }
    ]), st1 = [
        "jan",
        "feb",
        "mar",
        "apr",
        "may",
        "jun",
        "jul",
        "aug",
        "sep",
        "oct",
        "nov",
        "dec"
    ], l1 = "BibTeX type", h2 = "BibTeX label", v6 = {
        jan: 1,
        feb: 2,
        mar: 3,
        apr: 4,
        may: 5,
        jun: 6,
        jul: 7,
        aug: 8,
        sep: 9,
        oct: 10,
        nov: 11,
        dec: 12,
        january: 1,
        february: 2,
        march: 3,
        april: 4,
        may: 5,
        june: 6,
        july: 7,
        august: 8,
        september: 9,
        october: 10,
        november: 11,
        december: 12
    }, se3 = {
        bathesis: "Bachelor's thesis",
        mathesis: "Master's thesis",
        phdthesis: "PhD thesis",
        candthesis: "Candidate thesis",
        techreport: "technical report",
        resreport: "research report",
        software: "computer software",
        datacd: "data cd",
        audiocd: "audio cd",
        patent: "patent",
        patentde: "German patent",
        patenteu: "European patent",
        patentfr: "French patent",
        patentuk: "British patent",
        patentus: "U.S. patent",
        patreq: "patent request",
        patreqde: "German patent request",
        patreqeu: "European patent request",
        patreqfr: "French patent request",
        patrequk: "British patent request",
        patrequs: "U.S. patent request"
    }, lt1 = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
    function ct2(e) {
        let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), i = +t[1], n = +t[2];
        return !i || i > 20 ? [
            r
        ] : n ? [
            r,
            i,
            n
        ] : [
            r,
            i
        ];
    }
    function ut1(e) {
        if (e == null) return [];
        if (+e) return [
            parseInt(e, 10)
        ];
        if (e = e.trim().toLowerCase(), e in v6) return [
            v6[e]
        ];
        let t = e.split(/\s+/), r, i;
        return t[0] in v6 ? (r = v6[t[0]], i = parseInt(t[1])) : t[1] in v6 && (r = v6[t[1]], i = parseInt(t[0])), i ? [
            r,
            i
        ] : r ? [
            r
        ] : [];
    }
    function pt1(e, t, r, i) {
        let n = "";
        return e && e[0] && (n += oe4(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (n += t["date-parts"][0][0]), r ? n += r : i && (n += oe4(i)), n;
    }
    var a4 = {
        PICK: {
            toTarget (...e) {
                return e.find(Boolean);
            },
            toSource (e) {
                return [
                    e
                ];
            }
        },
        DATE: {
            toTarget (e) {
                let t = e.split("/").map((r)=>r && r !== ".." ? ct2(r) : void 0);
                return isNaN(t[0][0]) ? {
                    literal: e
                } : {
                    "date-parts": t
                };
            },
            toSource (e) {
                if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
            }
        },
        YEAR_MONTH: {
            toTarget (e, t, r) {
                return isNaN(+e) ? {
                    literal: e
                } : !isNaN(+r) && !isNaN(+t) ? {
                    "date-parts": [
                        [
                            +e,
                            +t,
                            +r
                        ]
                    ]
                } : {
                    "date-parts": [
                        [
                            +e,
                            ...ut1(t)
                        ]
                    ]
                };
            },
            toSource (e) {
                if ("date-parts" in e) {
                    let [t, r, i] = e["date-parts"][0];
                    return [
                        t.toString(),
                        r ? i ? `${st1[r - 1]} ${i}` : r : void 0
                    ];
                } else return [];
            }
        },
        EPRINT: {
            toTarget (e, t) {
                if (t === "pubmed") return e;
            },
            toSource (e) {
                return [
                    e,
                    "pubmed"
                ];
            }
        },
        EVENT_TITLE: {
            toTarget (e, t) {
                return t && (e += " (" + t + ")"), e;
            },
            toSource (e) {
                return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
            }
        },
        HOW_PUBLISHED: {
            toTarget (e) {
                if (e.startsWith("http")) return e;
            }
        },
        KEYWORDS: {
            toTarget (e) {
                return e.join(",");
            },
            toSource (e) {
                return e.split(",");
            }
        },
        LABEL: {
            toTarget (e) {
                return [
                    e,
                    e
                ];
            },
            toSource (e, t, r, i, n, o) {
                let s;
                return e === null ? s = "null" : e === void 0 ? s = "undefined" : s = e.toString().replace(z3, ""), p3.format.useIdAsLabel ? s : t && !z3.test(t) ? t : pt1(r, i, n, o) || s;
            }
        },
        NAMES: {
            toTarget (e) {
                return e.map(ae3.convertToTarget);
            },
            toSource (e) {
                return e.map(ae3.convertToSource);
            }
        },
        PAGES: {
            toTarget (e) {
                return e.replace(/[–—]/, "-");
            },
            toSource (e) {
                return e.replace("-", "--");
            }
        },
        STANDARD_NUMBERS: {
            toTarget (...e) {
                return e.find(Boolean);
            },
            toSource (e) {
                let t = e.toString().match(lt1);
                return t ? t.slice(1, 5) : [];
            }
        },
        STATUS: {
            toSource (e) {
                if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
            }
        },
        TITLE: {
            toTarget (e, t, r) {
                return t && (e += ": " + t), e;
            },
            toSource (e) {
                return [
                    e
                ];
            }
        }
    };
    var ht1 = [
        {
            source: "note",
            target: "accessed",
            when: {
                source: !1,
                target: {
                    note: !1,
                    addendum: !1
                }
            },
            convert: {
                toSource (e) {
                    return `[Online; accessed ${ae1(e)}]`;
                }
            }
        },
        {
            source: "numpages",
            target: "number-of-pages",
            when: {
                source: {
                    pagetotal: !1
                },
                target: !1
            }
        },
        {
            source: "pmid",
            target: "PMID",
            when: {
                source: {
                    eprinttype (e) {
                        return e !== "pmid";
                    },
                    archiveprefix (e) {
                        return e !== "pmid";
                    }
                },
                target: !1
            }
        },
        {
            source: "pmcid",
            target: "PMCID",
            when: {
                target: !1
            }
        },
        {
            source: "s2id",
            target: "custom",
            convert: {
                toTarget (e) {
                    return {
                        S2ID: e
                    };
                },
                toSource ({ S2ID: e }) {
                    return e;
                }
            }
        }
    ], dt1 = [
        {
            source: "annote",
            target: "annote",
            when: {
                source: {
                    annotation: !1
                },
                target: !1
            }
        },
        {
            source: "address",
            target: "publisher-place",
            convert: a4.PICK,
            when: {
                source: {
                    location: !1
                },
                target: !1
            }
        },
        {
            source: [
                "eprint",
                "archiveprefix"
            ],
            target: "PMID",
            convert: a4.EPRINT,
            when: {
                source: {
                    eprinttype: !1
                },
                target: !1
            }
        },
        {
            source: "journal",
            target: "container-title",
            when: {
                source: {
                    maintitle: !1,
                    booktitle: !1,
                    journaltitle: !1
                },
                target: !1
            }
        },
        {
            source: "school",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    institution: !1,
                    organization: !1,
                    publisher: !1
                },
                target: !1
            }
        }
    ], F3 = new jt.Translator([
        ...dt1,
        ...ht1,
        {
            source: "abstract",
            target: "abstract"
        },
        {
            source: "urldate",
            target: "accessed",
            convert: a4.DATE
        },
        {
            source: "annotation",
            target: "annote"
        },
        {
            source: "author",
            target: "author",
            convert: a4.NAMES
        },
        {
            source: "library",
            target: "call-number"
        },
        {
            source: "chapter",
            target: "chapter-number"
        },
        {
            source: "bookauthor",
            target: "container-author",
            convert: a4.NAMES
        },
        {
            source: [
                "maintitle",
                "mainsubtitle",
                "maintitleaddon"
            ],
            target: "container-title",
            when: {
                source: !0,
                target: {
                    "number-of-volumes": !0
                }
            },
            convert: a4.TITLE
        },
        {
            source: [
                "booktitle",
                "booksubtitle",
                "booktitleaddon"
            ],
            target: "container-title",
            when: {
                source: {
                    maintitle: !1
                },
                target: {
                    "number-of-volumes": !1,
                    type (e) {
                        return !e || !e.startsWith("article");
                    }
                }
            },
            convert: a4.TITLE
        },
        {
            source: [
                "journaltitle",
                "journalsubtitle",
                "journaltitleaddon"
            ],
            target: "container-title",
            when: {
                source: {
                    [l1]: "article"
                },
                target: {
                    type: [
                        "article",
                        "article-newspaper",
                        "article-journal",
                        "article-magazine"
                    ]
                }
            },
            convert: a4.TITLE
        },
        {
            source: "shortjournal",
            target: "container-title-short",
            when: {
                source: {
                    [l1]: "article"
                },
                target: {
                    type: [
                        "article",
                        "article-newspaper",
                        "article-journal",
                        "article-magazine"
                    ]
                }
            }
        },
        {
            source: "shortjournal",
            target: "journalAbbreviation",
            when: {
                source: !1,
                target: {
                    "container-title-short": !1
                }
            }
        },
        {
            source: "number",
            target: "collection-number",
            when: {
                source: {
                    [l1]: [
                        "book",
                        "mvbook",
                        "inbook",
                        "bookinbook",
                        "suppbook",
                        "collection",
                        "mvcollection",
                        "incollection",
                        "suppcollection",
                        "manual",
                        "suppperiodical",
                        "proceedings",
                        "mvproceedings",
                        "refererence"
                    ]
                },
                target: {
                    type: [
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "dataset",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "figure",
                        "graphic",
                        "interview",
                        "legislation",
                        "legal_case",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "post",
                        "post-weblog",
                        "personal_communication",
                        "review",
                        "review-book",
                        "song",
                        "speech",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "series",
            target: "collection-title"
        },
        {
            source: "shortseries",
            target: "collection-title-short"
        },
        {
            source: "doi",
            target: "DOI"
        },
        {
            source: "edition",
            target: "edition"
        },
        {
            source: "editor",
            target: "editor",
            convert: a4.NAMES
        },
        {
            source: [
                l1,
                "entrysubtype",
                "type"
            ],
            target: [
                "type",
                "genre"
            ],
            convert: {
                toTarget (e, t, r) {
                    return r || (e === "mastersthesis" && (r = "mathesis"), e === "phdthesis" && (r = "phdthesis"), e === "techreport" && (r = "techreport")), [
                        E3.source[e] || "document",
                        r || t
                    ];
                },
                toSource (e, t) {
                    let r = E3.target[e] || "misc";
                    return t in se3 ? [
                        r,
                        void 0,
                        t
                    ] : [
                        r,
                        t
                    ];
                }
            }
        },
        {
            source: l1,
            when: {
                target: {
                    type: !1
                }
            },
            convert: {
                toSource () {
                    return "misc";
                }
            }
        },
        {
            source: "eventdate",
            target: "event-date",
            convert: a4.DATE
        },
        {
            source: "venue",
            target: "event-place"
        },
        {
            source: [
                "eventtitle",
                "eventtitleaddon"
            ],
            target: "event-title",
            convert: a4.EVENT_TITLE
        },
        {
            source: [
                "eventtitle",
                "eventtitleaddon"
            ],
            target: "event",
            convert: a4.EVENT_TITLE,
            when: {
                source: !1,
                target: {
                    "event-title": !1
                }
            }
        },
        {
            source: h2,
            target: [
                "id",
                "citation-key",
                "author",
                "issued",
                "year-suffix",
                "title"
            ],
            convert: a4.LABEL
        },
        {
            source: "isbn",
            target: "ISBN"
        },
        {
            source: "issn",
            target: "ISSN"
        },
        {
            source: "issue",
            target: "issue",
            when: {
                source: {
                    number: !1,
                    [l1]: [
                        "article",
                        "periodical"
                    ]
                },
                target: {
                    issue (e) {
                        return typeof e == "string" && !e.match(/\d+/);
                    },
                    type: [
                        "article",
                        "article-journal",
                        "article-newspaper",
                        "article-magazine",
                        "periodical"
                    ]
                }
            }
        },
        {
            source: "number",
            target: "issue",
            when: {
                source: {
                    [l1]: [
                        "article",
                        "periodical",
                        "inproceedings"
                    ]
                },
                target: {
                    issue (e) {
                        return e && (typeof e == "number" || e.match(/\d+/));
                    },
                    type: [
                        "article",
                        "article-journal",
                        "article-newspaper",
                        "article-magazine",
                        "paper-conference",
                        "periodical"
                    ]
                }
            }
        },
        {
            source: "date",
            target: "issued",
            convert: a4.DATE
        },
        {
            source: [
                "year",
                "month",
                "day"
            ],
            target: "issued",
            convert: a4.YEAR_MONTH,
            when: {
                source: {
                    date: !1
                },
                target: !1
            }
        },
        {
            source: "location",
            target: "jurisdiction",
            when: {
                source: {
                    type: "patent"
                },
                target: {
                    type: "patent"
                }
            }
        },
        {
            source: "keywords",
            target: "keyword",
            convert: a4.KEYWORDS
        },
        {
            source: "language",
            target: "language",
            convert: a4.PICK
        },
        {
            source: "langid",
            target: "language",
            when: {
                source: {
                    language: !1
                },
                target: !1
            }
        },
        {
            source: "note",
            target: "note"
        },
        {
            source: "addendum",
            target: "note",
            when: {
                source: {
                    note: !1
                },
                target: !1
            }
        },
        {
            source: "eid",
            target: "number",
            when: {
                target: {
                    type: [
                        "article-journal"
                    ]
                }
            }
        },
        {
            source: [
                "isan",
                "ismn",
                "isrn",
                "iswc"
            ],
            target: "number",
            convert: a4.STANDARD_NUMBERS,
            when: {
                source: {
                    [l1] (e) {
                        return e !== "patent";
                    }
                },
                target: {
                    type (e) {
                        return e !== "patent";
                    }
                }
            }
        },
        {
            source: "number",
            target: "number",
            when: {
                source: {
                    [l1]: [
                        "patent",
                        "report",
                        "techreport",
                        "legislation"
                    ]
                },
                target: {
                    type: [
                        "patent",
                        "report",
                        "legislation"
                    ]
                }
            }
        },
        {
            source: "origdate",
            target: "original-date",
            convert: a4.DATE
        },
        {
            source: "origlocation",
            target: "original-publisher-place",
            convert: a4.PICK
        },
        {
            source: "origpublisher",
            target: "original-publisher",
            convert: a4.PICK
        },
        {
            source: "origtitle",
            target: "original-title"
        },
        {
            source: "pages",
            target: "page",
            when: {
                source: {
                    bookpagination: [
                        void 0,
                        "page"
                    ]
                }
            },
            convert: a4.PAGES
        },
        {
            source: "pagetotal",
            target: "number-of-pages"
        },
        {
            source: "part",
            target: "part-number"
        },
        {
            source: [
                "eprint",
                "eprinttype"
            ],
            target: "PMID",
            convert: a4.EPRINT
        },
        {
            source: "location",
            target: "publisher-place",
            convert: a4.PICK
        },
        {
            source: "publisher",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: !0,
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "organization",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1
                },
                target: {
                    type: "webpage"
                }
            }
        },
        {
            source: "institution",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1,
                    organization: !1
                },
                target: {
                    type: [
                        "report",
                        "thesis"
                    ]
                }
            }
        },
        {
            source: "howpublished",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1,
                    organization: !1,
                    institution: !1
                },
                target: {
                    type: "manuscript"
                }
            }
        },
        {
            source: [
                "pages",
                "bookpagination"
            ],
            target: "section",
            when: {
                source: {
                    bookpagination: "section"
                },
                target: {
                    page: !1
                }
            },
            convert: {
                toTarget (e) {
                    return e;
                },
                toSource (e) {
                    return [
                        e,
                        "section"
                    ];
                }
            }
        },
        {
            source: "pubstate",
            target: "status",
            convert: a4.STATUS
        },
        {
            source: "shorttitle",
            target: "title-short"
        },
        {
            source: "shorttitle",
            target: "shortTitle",
            when: {
                source: !1,
                target: {
                    "title-short": !1
                }
            }
        },
        {
            source: [
                "title",
                "subtitle",
                "titleaddon"
            ],
            target: "title",
            convert: a4.TITLE
        },
        {
            source: "translator",
            target: "translator",
            convert: a4.NAMES
        },
        {
            source: "url",
            target: "URL"
        },
        {
            source: "howpublished",
            target: "URL",
            convert: a4.HOW_PUBLISHED,
            when: {
                source: {
                    url: !1
                },
                target: !1
            }
        },
        {
            source: "version",
            target: "version"
        },
        {
            source: "volume",
            target: "volume"
        },
        {
            source: "volumes",
            target: "number-of-volumes"
        },
        {
            source: [
                "issuetitle",
                "issuesubtitle",
                "issuetitleaddon"
            ],
            target: "volume-title",
            convert: a4.TITLE
        }
    ]);
    var K2 = new jt.Translator([
        {
            source: "note",
            target: "accessed",
            when: {
                source: !1,
                target: {
                    note: !1
                }
            },
            convert: {
                toSource (e) {
                    return `[Online; accessed ${ae1(e)}]`;
                }
            }
        },
        {
            source: "annote",
            target: "annote"
        },
        {
            source: "address",
            target: "publisher-place",
            convert: a4.PICK
        },
        {
            source: "author",
            target: "author",
            convert: a4.NAMES
        },
        {
            source: "chapter",
            target: "chapter-number"
        },
        {
            source: "number",
            target: "collection-number",
            when: {
                source: {
                    [l1]: [
                        "book",
                        "mvbook",
                        "inbook",
                        "collection",
                        "mvcollection",
                        "incollection",
                        "suppcollection",
                        "manual",
                        "suppperiodical",
                        "proceedings",
                        "mvproceedings",
                        "refererence"
                    ]
                },
                target: {
                    type: [
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "dataset",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "figure",
                        "graphic",
                        "interview",
                        "legislation",
                        "legal_case",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "post",
                        "post-weblog",
                        "personal_communication",
                        "review",
                        "review-book",
                        "song",
                        "speech",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "series",
            target: "collection-title"
        },
        {
            source: "booktitle",
            target: "container-title",
            when: {
                target: {
                    type: [
                        "chapter",
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "journal",
            target: "container-title",
            when: {
                source: {
                    [l1]: "article"
                },
                target: {
                    type: [
                        "article",
                        "article-newspaper",
                        "article-journal",
                        "article-magazine"
                    ]
                }
            }
        },
        {
            source: "edition",
            target: "edition"
        },
        {
            source: "editor",
            target: "editor",
            convert: a4.NAMES
        },
        {
            source: h2,
            target: [
                "id",
                "citation-key",
                "author",
                "issued",
                "year-suffix",
                "title"
            ],
            convert: a4.LABEL
        },
        {
            source: "number",
            target: "issue",
            when: {
                source: {
                    [l1]: [
                        "article",
                        "periodical",
                        "inproceedings"
                    ]
                },
                target: {
                    issue (e) {
                        return typeof e == "number" || typeof e == "string" && e.match(/\d+/);
                    },
                    type: [
                        "article",
                        "article-journal",
                        "article-newspaper",
                        "article-magazine",
                        "paper-conference",
                        "periodical"
                    ]
                }
            }
        },
        {
            source: [
                "year",
                "month",
                "day"
            ],
            target: "issued",
            convert: a4.YEAR_MONTH
        },
        {
            source: "note",
            target: "note"
        },
        {
            source: "number",
            target: "number",
            when: {
                source: {
                    [l1]: [
                        "patent",
                        "report",
                        "techreport"
                    ]
                },
                target: {
                    type: [
                        "patent",
                        "report"
                    ]
                }
            }
        },
        {
            source: "pages",
            target: "page",
            convert: a4.PAGES
        },
        {
            source: "publisher",
            target: "publisher",
            convert: a4.PICK,
            when: {
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "organization",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1
                },
                target: {
                    type: "paper-conference"
                }
            }
        },
        {
            source: "institution",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1,
                    organization: !1
                },
                target: {
                    type: "report"
                }
            }
        },
        {
            source: "school",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    institution: !1,
                    organization: !1,
                    publisher: !1
                },
                target: {
                    type: "thesis"
                }
            }
        },
        {
            source: "howpublished",
            target: "publisher",
            convert: a4.PICK,
            when: {
                source: {
                    publisher: !1,
                    organization: !1,
                    institution: !1,
                    school: !1
                },
                target: {
                    type: "manuscript"
                }
            }
        },
        {
            source: "title",
            target: "title"
        },
        {
            source: [
                l1,
                "type"
            ],
            target: [
                "type",
                "genre"
            ],
            convert: {
                toTarget (e, t) {
                    let r = j5.source[e] || "document";
                    return t ? [
                        r,
                        t
                    ] : e === "mastersthesis" ? [
                        r,
                        "Master's thesis"
                    ] : e === "phdthesis" ? [
                        r,
                        "PhD thesis"
                    ] : [
                        r
                    ];
                },
                toSource (e, t) {
                    let r = j5.target[e] || "misc";
                    return /^(master'?s|diploma) thesis$/i.test(t) ? [
                        "mastersthesis"
                    ] : /^(phd|doctoral) thesis$/i.test(t) ? [
                        "phdthesis"
                    ] : [
                        r,
                        t
                    ];
                }
            }
        },
        {
            source: l1,
            when: {
                target: {
                    type: !1
                }
            },
            convert: {
                toSource () {
                    return "misc";
                }
            }
        },
        {
            source: "howpublished",
            target: "URL",
            convert: a4.HOW_PUBLISHED,
            when: {
                target: {
                    publisher: !1
                }
            }
        },
        {
            source: "volume",
            target: "volume"
        }
    ]);
    function le2(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
            })), r.push.apply(r, i);
        }
        return r;
    }
    function yt1(e) {
        for(var t = 1; t < arguments.length; t++){
            var r = arguments[t] != null ? arguments[t] : {};
            t % 2 ? le2(Object(r), !0).forEach(function(i) {
                xt2(e, i, r[i]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : le2(Object(r)).forEach(function(i) {
                Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
            });
        }
        return e;
    }
    function xt2(e, t, r) {
        return t = vt2(t), t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function vt2(e) {
        var t = wt1(e, "string");
        return typeof t == "symbol" ? t : String(t);
    }
    function wt1(e, t) {
        if (typeof e != "object" || e === null) return e;
        var r = e[Symbol.toPrimitive];
        if (r !== void 0) {
            var i = r.call(e, t || "default");
            if (typeof i != "object") return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    var kt1 = new Set([
        "book",
        "inbook",
        "bookinbook",
        "suppbook"
    ]), me = new Set([
        "inbook",
        "bookinbook",
        "suppbook"
    ]), ce1 = new Set([
        "collection",
        "reference",
        "incollection",
        "inreference",
        "suppcollection"
    ]), ue3 = new Set([
        "incollection",
        "inreference",
        "suppcollection"
    ]), Tt2 = new Set([
        "proceedings",
        "inproceedings"
    ]), St1 = new Set([
        "inproceedings"
    ]), Et1 = new Set([
        "article",
        "suppperiodical"
    ]), pe1 = {
        mvbook: [
            "main",
            kt1
        ],
        mvcollection: [
            "main",
            ce1
        ],
        mvreference: [
            "main",
            ce1
        ],
        mvproceedings: [
            "main",
            Tt2
        ],
        book: [
            "book",
            me
        ],
        collection: [
            "book",
            ue3
        ],
        reference: [
            "book",
            ue3
        ],
        proceedings: [
            "book",
            St1
        ],
        periodical: [
            "journal",
            Et1
        ]
    };
    function U2(e, t, r) {
        if (t.crossref in r) {
            let i = r[t.crossref];
            if (i.properties === t) return t;
            let n = yt1({}, U2(i.type, i.properties, r));
            if (delete n.ids, delete n.crossref, delete n.xref, delete n.entryset, delete n.entrysubtype, delete n.execute, delete n.label, delete n.options, delete n.presort, delete n.related, delete n.relatedoptions, delete n.relatedstring, delete n.relatedtype, delete n.shortand, delete n.shortandintro, delete n.sortkey, (i.type === "mvbook" || i.type === "book") && me.has(e) && (n.bookauthor = n.author), i.type in pe1) {
                let [o, s] = pe1[i.type];
                s.has(e) && (n[o + "title"] = n.title, n[o + "subtitle"] = n.subtitle, o !== "journal" && (n[o + "titleaddon"] = n.titleaddon), delete n.title, delete n.subtitle, delete n.titleaddon, delete n.shorttitle, delete n.sorttitle, delete n.indextitle, delete n.indexsorttitle);
            }
            return Object.assign(n, t);
        }
        return t;
    }
    function jt1(e, t) {
        if (e == null) return {};
        var r = Pt2(e, t), i, n;
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for(n = 0; n < o.length; n++)i = o[n], !(t.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(e, i) && (r[i] = e[i]);
        }
        return r;
    }
    function Pt2(e, t) {
        if (e == null) return {};
        var r = {}, i = Object.keys(e), n, o;
        for(o = 0; o < i.length; o++)n = i[o], !(t.indexOf(n) >= 0) && (r[n] = e[n]);
        return r;
    }
    function fe2(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
            })), r.push.apply(r, i);
        }
        return r;
    }
    function Ot1(e) {
        for(var t = 1; t < arguments.length; t++){
            var r = arguments[t] != null ? arguments[t] : {};
            t % 2 ? fe2(Object(r), !0).forEach(function(i) {
                Ct1(e, i, r[i]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : fe2(Object(r)).forEach(function(i) {
                Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
            });
        }
        return e;
    }
    function Ct1(e, t, r) {
        return t = he2(t), t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function he2(e) {
        var t = _t1(e, "string");
        return typeof t == "symbol" ? t : String(t);
    }
    function _t1(e, t) {
        if (typeof e != "object" || e === null) return e;
        var r = e[Symbol.toPrimitive];
        if (r !== void 0) {
            var i = r.call(e, t || "default");
            if (typeof i != "object") return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    function de1(e, t) {
        let r = {};
        for (let i of e)r[i.label] = i;
        return e.map(({ type: i, label: n, properties: o })=>t.convertToTarget(Ot1({
                [l1]: i,
                [h2]: n
            }, U2(i, o, r))));
    }
    function ge1(e, t) {
        return e.map((r)=>{
            let i = t.convertToSource(r), { [l1]: n, [h2]: o } = i, s = jt1(i, [
                l1,
                h2
            ].map(he2));
            return {
                type: n,
                label: o,
                properties: s
            };
        });
    }
    function be1(e) {
        return de1(e, K2);
    }
    function ye1(e) {
        return ge1(e, K2);
    }
    function xe1(e) {
        return de1(e, F3);
    }
    function ve1(e) {
        return ge1(e, F3);
    }
    function we2(e) {
        let t = e.toUpperCase(), r = e.toLowerCase();
        for(let i = 0; i < e.length; i++)if (t[i] !== r[i]) return t[i] === e[i];
        return null;
    }
    function m4(e) {
        if (e.length === 0) return;
        let t = "";
        for(; e.length > 1;){
            let { value: i, hyphenated: n } = e.shift();
            t += i + (n ? "-" : " ");
        }
        let r = t + e[0].value;
        return r[0] && r;
    }
    function Rt1(e, t = !0) {
        let r = [], i = [];
        if (t) for(; e.length > 1 && e[0].upperCase !== !1;){
            for(r.push(...i), i.length = 0; e.length > 1 && e[0].upperCase !== !1 && !e[0].hyphenated;)r.push(e.shift());
            for(; e.length > 0 && e[0].upperCase !== !1 && e[0].hyphenated;)i.push(e.shift());
        }
        let n = [], o = [];
        for(; e.length > 1;){
            for(n.push(...o), o.length = 0; e.length > 1 && e[0].upperCase === !1;)n.push(e.shift());
            for(; e.length > 0 && e[0].upperCase !== !1;)o.push(e.shift());
        }
        return i.length && o.unshift(...i), e.length && o.push(e[0]), [
            m4(r),
            m4(n),
            m4(o)
        ];
    }
    function ke2(e) {
        if (e[0][0].label) {
            let o = {};
            for (let [{ value: s, label: u }] of e)o[u] = s;
            return o;
        }
        let t = {}, [r, i, n] = Rt1(e[0], e.length === 1);
        return n && (t.family = n), i && (t.prefix = i), e.length === 3 ? (t.given = m4(e[2]), t.suffix = m4(e[1])) : e.length === 2 ? t.given = m4(e[1]) : r && (t.given = r), t;
    }
    function Te1(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
            })), r.push.apply(r, i);
        }
        return r;
    }
    function c1(e) {
        for(var t = 1; t < arguments.length; t++){
            var r = arguments[t] != null ? arguments[t] : {};
            t % 2 ? Te1(Object(r), !0).forEach(function(i) {
                Lt1(e, i, r[i]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Te1(Object(r)).forEach(function(i) {
                Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
            });
        }
        return e;
    }
    function Lt1(e, t, r) {
        return t = It1(t), t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function It1(e) {
        var t = At1(e, "string");
        return typeof t == "symbol" ? t : String(t);
    }
    function At1(e, t) {
        if (typeof e != "object" || e === null) return e;
        var r = e[Symbol.toPrimitive];
        if (r !== void 0) {
            var i = r.call(e, t || "default");
            if (typeof i != "object") return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    var w4 = {
        command: {
            match: /\\(?:[a-zA-Z]+|.) */,
            type: he1.keywords({
                commandBegin: "\\begin",
                commandEnd: "\\end"
            }),
            value: (e)=>e.slice(1).trim()
        },
        lbrace: {
            match: "{",
            push: "bracedLiteral"
        },
        mathShift: {
            match: "$",
            push: "mathLiteral"
        },
        whitespace: {
            match: /[\s]+|~/,
            lineBreaks: !0,
            value (e) {
                return e === "~" ? "\xA0" : " ";
            }
        }
    }, Nt1 = he1.states({
        stringLiteral: c1(c1({}, w4), {}, {
            text: /[^{$}\s~\\]+/
        }),
        namesLiteral: c1(c1({
            and: /\s+[aA][nN][dD]\s+/,
            comma: ",",
            hyphen: "-",
            equals: "="
        }, w4), {}, {
            text: /[^{$}\s~\\,=-]+/
        }),
        listLiteral: c1(c1({
            and: /\s+and\s+/
        }, w4), {}, {
            text: /[^{$}\s~\\]+/
        }),
        separatedLiteral: c1(c1({
            comma: ","
        }, w4), {}, {
            text: /[^{$}\s~\\,]+/
        }),
        bracedLiteral: c1(c1({}, w4), {}, {
            rbrace: {
                match: "}",
                pop: !0
            },
            text: /[^{$}\s~\\]+/
        }),
        mathLiteral: c1(c1({}, w4), {}, {
            mathShift: {
                match: "$",
                pop: !0
            },
            script: /[\^_]/,
            text: /[^{$}\s~\\^_]+/
        })
    });
    function B1(e) {
        return e[0], e;
    }
    function P6(e, t) {
        return t in T5 ? e && T5[t].join(e) : e;
    }
    var Dt1 = new jt.Grammar({
        String () {
            let e = "";
            for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
            return B1(e);
        },
        StringNames () {
            let e = [];
            for(;;){
                if (this.consumeToken("whitespace", !0), e.push(this.consumeRule("Name")), this.consumeToken("whitespace", !0), this.matchEndOfFile()) return e;
                this.consumeToken("and");
            }
        },
        Name () {
            let e = [];
            for(;;){
                if (e.push(this.consumeRule("NamePiece")), this.matchEndOfFile() || this.matchToken("and")) return ke2(e);
                this.consumeToken("comma"), this.consumeToken("whitespace", !0);
            }
        },
        NamePiece () {
            let e = [];
            for(;;){
                let t = this.consumeRule("NameToken");
                if (t.label) return t.label = m4([
                    ...e,
                    {
                        value: t.label
                    }
                ]), [
                    t
                ];
                if (e.push(t), this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma")) return e;
                for(; this.matchToken("hyphen") || this.matchToken("whitespace");)this.consumeToken();
            }
        },
        NameToken () {
            let e = null, t = "";
            for(;;)if (e === null && this.matchToken("text")) {
                let r = this.consumeToken().value;
                t += r, e = we2(r);
            } else {
                if (this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma") || this.matchToken("whitespace")) return {
                    value: t,
                    upperCase: e
                };
                if (this.matchToken("hyphen")) return {
                    value: t,
                    upperCase: e,
                    hyphenated: !0
                };
                if (this.matchToken("equals")) {
                    this.consumeToken("equals");
                    let r = this.consumeRule("NamePiece");
                    return r[0].label && (t += "=" + r[0].label), {
                        value: m4(r),
                        label: t
                    };
                } else t += this.consumeRule("Text");
            }
        },
        StringList () {
            let e = [];
            for(; !this.matchEndOfFile();){
                let t = "";
                for(; !this.matchEndOfFile() && !this.matchToken("and");)t += this.consumeRule("Text");
                e.push(B1(t)), this.consumeToken("and", !0);
            }
            return e.length === 1 ? e[0] : e;
        },
        StringSeparated () {
            let e = [];
            for(; !this.matchEndOfFile();){
                let t = "";
                for(; !this.matchEndOfFile() && !this.matchToken("comma");)t += this.consumeRule("Text");
                e.push(t.trim()), this.consumeToken("comma", !0), this.consumeToken("whitespace", !0);
            }
            return e;
        },
        StringVerbatim () {
            let e = "";
            for(; !this.matchEndOfFile();)e += this.consumeToken().text;
            return B1(e);
        },
        StringUri () {
            let e = this.consumeRule("StringVerbatim");
            try {
                return decodeURI(e) === e ? encodeURI(e) : e;
            } catch  {
                return encodeURI(e);
            }
        },
        StringTitleCase () {
            this.state.sentenceCase = !0;
            let e = "";
            for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
            return B1(e);
        },
        BracketString () {
            var e;
            let t = "";
            this.consumeToken("lbrace");
            let r = this.state.sentenceCase;
            for(this.state.sentenceCase = r && this.matchToken("command"), (e = this.state).partlyLowercase && (e.partlyLowercase = this.state.sentenceCase); !this.matchToken("rbrace");)t += this.consumeRule("Text");
            let n = r && !this.state.sentenceCase && this.state.partlyLowercase;
            return this.state.sentenceCase = r, this.consumeToken("rbrace"), n ? P6(t, "nocase") : t;
        },
        MathString () {
            let e = "";
            for(this.consumeToken("mathShift"); !this.matchToken("mathShift");){
                if (this.matchToken("script")) {
                    let t = this.consumeToken("script").value, r = this.consumeRule("Text").split("");
                    if (r.every((i)=>i in R3[t])) e += r.map((i)=>R3[t][i]).join("");
                    else {
                        let i = S3[t];
                        e += T5[i].join(r.join(""));
                    }
                    continue;
                }
                if (this.matchToken("command")) {
                    let t = this.token.value;
                    if (t in S3) {
                        this.consumeToken("command");
                        let r = this.consumeRule("BracketString");
                        e += P6(r, S3[t]);
                        continue;
                    }
                }
                e += this.consumeRule("Text");
            }
            return this.consumeToken("mathShift"), e;
        },
        Text () {
            if (this.matchToken("lbrace")) return this.consumeRule("BracketString");
            if (this.matchToken("mathShift")) return this.consumeRule("MathString");
            if (this.matchToken("whitespace")) return this.consumeToken("whitespace").value;
            if (this.matchToken("commandBegin")) return this.consumeRule("EnclosedEnv");
            if (this.matchToken("command")) return this.consumeRule("Command");
            let e = this.consumeToken("text").value.replace($2, (u)=>y3[u]), t = this.state.afterPunctuation;
            if (this.state.afterPunctuation = /[?!.:]$/.test(e), !this.state.sentenceCase) {
                var r;
                return (r = this.state).partlyLowercase || (r.partlyLowercase = e === e.toLowerCase() && e !== e.toUpperCase()), e;
            }
            let [i, ...n] = e, o = n.join(""), s = o.toLowerCase();
            return o !== s ? e : t ? i + s : e.toLowerCase();
        },
        Command () {
            let e = this.consumeToken("command"), t = e.value;
            if (t in k3) {
                let r = this.consumeRule("Env"), i = k3[t];
                return P6(r, i);
            } else if (t in C4) {
                let r = this.consumeRule("BracketString"), i = C4[t];
                return P6(r, i);
            } else {
                if (t in b2) return b2[t];
                if (t in g4 && !this.matchEndOfFile()) {
                    let r = this.consumeRule("Text");
                    return (r[0] + g4[t]).normalize("NFC") + r.slice(1);
                } else if (t in _4) {
                    let r = _4[t], i = [], n = r.length;
                    for(; n-- > 0;)this.consumeToken("whitespace", !0), i.push(this.consumeRule("BracketString"));
                    return r(...i);
                } else return /^[&%$#_{}]$/.test(t) ? e.text.slice(1) : e.text;
            }
        },
        Env () {
            let e = "";
            for(; !this.matchEndOfFile() && !this.matchToken("rbrace");)e += this.consumeRule("Text");
            return e;
        },
        EnclosedEnv () {
            this.consumeToken("commandBegin");
            let e = this.consumeRule("BracketString"), t = "";
            for(; !this.matchToken("commandEnd");)t += this.consumeRule("Text");
            let r = this.consumeToken("commandEnd"), i = this.consumeRule("BracketString");
            if (e !== i) throw new SyntaxError(this.lexer.formatError(r, `environment started with "${e}", ended with "${i}"`));
            return P6(t, k3[e]);
        }
    }, {
        sentenceCase: !1,
        partlyLowercase: !1,
        afterPunctuation: !0
    });
    function Se1(e) {
        return q3.includes(e.toLowerCase());
    }
    function $t1(e) {
        return Array.isArray(e) ? e.every(Se1) : Se1(e);
    }
    function qt1(e, t) {
        if (e[1] === "name") return e[0] === "list" ? "StringNames" : "Name";
        if (e[1] === "title") {
            let r = p3.parse.sentenceCase;
            return r === "always" || r === "english" && $t1(t) ? "StringTitleCase" : "String";
        }
        switch(e[0] === "field" ? e[1] : e[0]){
            case "list":
                return "StringList";
            case "separated":
                return "StringSeparated";
            case "verbatim":
                return "StringVerbatim";
            case "uri":
                return "StringUri";
            case "title":
            case "literal":
            default:
                return "String";
        }
    }
    function Mt1(e) {
        if (e[1] === "name") return "namesLiteral";
        switch(e[0]){
            case "list":
                return "listLiteral";
            case "separated":
                return "separatedLiteral";
            case "field":
            default:
                return "stringLiteral";
        }
    }
    function G2(e, t, r = []) {
        let i = x3[t] || [];
        return Dt1.parse(Nt1.reset(e, {
            state: Mt1(i),
            line: 0,
            col: 0
        }), qt1(i, r));
    }
    function je1(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            t && (i = i.filter(function(n) {
                return Object.getOwnPropertyDescriptor(e, n).enumerable;
            })), r.push.apply(r, i);
        }
        return r;
    }
    function Pe1(e) {
        for(var t = 1; t < arguments.length; t++){
            var r = arguments[t] != null ? arguments[t] : {};
            t % 2 ? je1(Object(r), !0).forEach(function(i) {
                zt1(e, i, r[i]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : je1(Object(r)).forEach(function(i) {
                Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
            });
        }
        return e;
    }
    function zt1(e, t, r) {
        return t = Ft1(t), t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function Ft1(e) {
        var t = Kt1(e, "string");
        return typeof t == "symbol" ? t : String(t);
    }
    function Kt1(e, t) {
        if (typeof e != "object" || e === null) return e;
        var r = e[Symbol.toPrimitive];
        if (r !== void 0) {
            var i = r.call(e, t || "default");
            if (typeof i != "object") return i;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    function Oe1(e, t) {
        let r = [];
        for (let { type: i, label: n, properties: o } of e)if (i in t) {
            let s = [];
            for (let u of t[i])Array.isArray(u) && !u.some((Me)=>Me in o) ? s.push(u.join("/")) : typeof u == "string" && !(u in o) && s.push(u);
            s.length && r.push([
                n,
                `missing fields: ${s.join(", ")}`
            ]);
        } else r.push([
            n,
            `invalid type: "${i}"`
        ]);
        if (r.length) throw new RangeError([
            "Invalid entries:"
        ].concat(r.map(([i, n])=>`  - ${i} has ${n}`)).join(`
`));
    }
    function Ce2(e) {
        let t = {};
        "language" in e.properties && (t.language = G2(e.properties.language, "language"));
        for(let r in e.properties){
            let i = e.properties[r];
            i !== "" && (t[r] = G2(i + "", r, t.language));
        }
        return Pe1(Pe1({}, e), {}, {
            properties: t
        });
    }
    function H2(e) {
        return p3.parse.strict && Oe1(e, O3.biblatex), xe1(e.map(Ce2));
    }
    function Y3(e) {
        return p3.parse.strict && Oe1(e, O3.bibtex), be1(e.map(Ce2));
    }
    var _e2 = "@bibtex", Re1 = {
        "@biblatex/text": {
            parse: M4,
            parseType: {
                dataType: "String",
                predicate: /@\s{0,5}[A-Za-z]{1,13}\s{0,5}\{\s{0,5}[^@{}"=,\\\s]{0,100}\s{0,5},[\s\S]*\}/
            }
        },
        "@biblatex/entry+object": {
            parse (e) {
                return H2([
                    e
                ]);
            },
            parseType: {
                dataType: "SimpleObject",
                propertyConstraint: {
                    props: [
                        "type",
                        "label",
                        "properties"
                    ]
                }
            }
        },
        "@biblatex/entries+list": {
            parse: H2,
            parseType: {
                elementConstraint: "@biblatex/entry+object"
            }
        },
        "@bibtex/text": {
            parse: M4,
            outputs: "@bibtex/entries+list"
        },
        "@bibtex/entry+object": {
            parse (e) {
                return Y3([
                    e
                ]);
            }
        },
        "@bibtex/entries+list": {
            parse: Y3
        },
        "@bibtxt/text": {
            parse: ne4,
            parseType: {
                dataType: "String",
                predicate: /^\s*(\[(?!\s*[{[]).*?\]\s*(\n\s*[^[]((?!:)\S)+\s*:\s*.+?\s*)*\s*)+$/
            }
        }
    };
    var d2 = {};
    for(let e in b2)d2[b2[e]] = e;
    for(let e in g4)d2[g4[e]] = e;
    for(let e in y3)d2[y3[e]] = e;
    var Ut1 = /[^a-zA-Z0-9\s!"#%&'()*+,\-./:;=?@[\]{}\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]/g, Gt1 = /.[\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]+/g, W1 = {
        separated: ",",
        list: " and "
    }, Le1 = {
        i: "\\textit{",
        b: "\\textbf{",
        sc: "\\textsc{",
        sup: "\\textsuperscript{",
        sub: "\\textsubscript{",
        'span style="font-variant:small-caps;"': "\\textsc{",
        'span class="nocase"': "{"
    };
    function J2(e) {
        return e.normalize("NFKD").replace(Ut1, (t)=>t in d2 ? d2[t] in y3 ? d2[t] : `\\${d2[t]}{}` : "").replace(Gt1, (t)=>Array.from(t).reduce((r, i)=>`{\\${d2[i]} ${r}}`));
    }
    function Ie1(e) {
        let t = [], r = e.split(/<(\/?(?:i|b|sc|sup|sub|span)|span .*?)>/g);
        return r = r.map((i, n)=>n % 2 === 0 ? J2(i) : i in Le1 ? (t.push("/" + i.split(" ")[0]), Le1[i]) : i === t[t.length - 1] ? (t.pop(), "}") : ""), r.join("");
    }
    function Ht1(e) {
        if (e.family && !e.prefix && !e.given & !e.suffix) return e.family.includes(W1.list) ? e.family : `{${e.family}}`;
        let t = [
            ""
        ];
        return e.prefix && e.family && (t[0] += e.prefix + " "), e.family && (t[0] += e.family), e.suffix ? (t.push(e.suffix), t.push(e.given || "")) : t.push(e.given), J2(t.join(", ").trim());
    }
    function Yt1(e) {
        return Ie1(e).split(/(:\s*)/).map((t, r)=>r % 2 ? t : t.replace(/(?!^)\b[a-z]*[A-Z].*?\b/g, "{$&}")).join("");
    }
    function V3(e, t) {
        switch(t){
            case "title":
                return Yt1(e);
            case "literal":
                return Ie1(e.toString());
            case "name":
                return Ht1(e);
            case "verbatim":
            case "uri":
                return e.toString();
            default:
                return J2(e.toString());
        }
    }
    function Vt1(e, t, r) {
        let i = W1[r];
        return e.map((n)=>{
            let o = V3(n, t);
            return o.includes(i) ? `{${o}}` : o;
        }).join(i);
    }
    function Ae1(e, t) {
        if (!(e in x3)) return V3(t, "verbatim");
        let [r, i] = x3[e];
        return r in W1 ? Vt1(t, i, r) : V3(t, i);
    }
    function Be1({ type: e, label: t, properties: r }) {
        let i = {};
        for(let n in r){
            let o = r[n];
            i[n] = Ae1(n, o);
        }
        return {
            type: e,
            label: t,
            properties: i
        };
    }
    function Ne1(e) {
        return ve1(e).map(Be1);
    }
    function Z3(e) {
        return ye1(e).map(Be1);
    }
    function Wt({ type: e, label: t, properties: r }, i) {
        let n = Object.entries(r).map(([o, s])=>i.listItem.join(`${o} = {${s}},`));
        return i.entry.join(`@${e}{${t},${i.list.join(n.join(""))}}`);
    }
    function X1(e, t) {
        let r = e.map((i)=>Wt(i, t)).join("");
        return t.bibliographyContainer.join(r);
    }
    function Jt1({ type: e, label: t, properties: r }, i) {
        let n = Object.entries(r).concat([
            [
                "type",
                e
            ]
        ]).map(([o, s])=>i.listItem.join(`${o}: ${s}`));
        return i.entry.join(`[${t}]${i.list.join(n.join(""))}`);
    }
    function De1(e, t) {
        let r = e.map((i)=>Jt1(i, t)).join(`
`);
        return t.bibliographyContainer.join(r);
    }
    var Q2 = function(e, t) {
        return function(r, i = {}) {
            let { type: n, format: o = n || "text" } = i;
            if (r = e(r), o === "object") return r;
            if (tt.dict.has(o)) return t(r, tt.dict.get(o), i);
            throw new RangeError(`Output dictionary "${o}" not available`);
        };
    }, qe1 = {
        bibtex: Q2(Z3, X1),
        biblatex: Q2(Ne1, X1),
        bibtxt: Q2(Z3, De1)
    };
    tt.add(_e2, {
        input: Re1,
        output: qe1,
        config: p3
    });
    const mod57 = {};
    var $t2 = Object.create;
    var At2 = Object.defineProperty;
    var Wt1 = Object.getOwnPropertyDescriptor;
    var Qt1 = Object.getOwnPropertyNames;
    var Ht2 = Object.getPrototypeOf, Jt2 = Object.prototype.hasOwnProperty;
    var Kt2 = (t, e)=>()=>(e || t((e = {
                exports: {}
            }).exports, e), e.exports), Yt2 = (t, e)=>{
        for(var i in e)At2(t, i, {
            get: e[i],
            enumerable: !0
        });
    }, Nt2 = (t, e, i, s)=>{
        if (e && typeof e == "object" || typeof e == "function") for (let n of Qt1(e))!Jt2.call(t, n) && n !== i && At2(t, n, {
            get: ()=>e[n],
            enumerable: !(s = Wt1(e, n)) || s.enumerable
        });
        return t;
    }, dt2 = (t, e, i)=>(Nt2(t, e, "default"), i && Nt2(i, e, "default")), Lt2 = (t, e, i)=>(i = t != null ? $t2(Ht2(t)) : {}, Nt2(e || !t || !t.__esModule ? At2(i, "default", {
            value: t,
            enumerable: !0
        }) : i, t));
    var It2 = Kt2((fr, Ut)=>{
        "use strict";
        var r = {
            PROCESSOR_VERSION: "1.4.61",
            error: function(t) {
                throw typeof Error > "u" ? new Error("citeproc-js error: " + t) : "citeproc-js error: " + t;
            },
            debug: function(t) {
                typeof console > "u" ? dump("CSL: " + t + `
`) : console.log("citeproc-js warning: " + t);
            },
            toLocaleUpperCase (t) {
                var e = this.tmp.lang_array;
                try {
                    t = t.toLocaleUpperCase(e);
                } catch  {
                    t = t.toUpperCase();
                }
                return t;
            },
            toLocaleLowerCase (t) {
                var e = this.tmp.lang_array;
                try {
                    t = t.toLocaleLowerCase(e);
                } catch  {
                    t = t.toLowerCase();
                }
                return t;
            },
            LOCATOR_LABELS_REGEXP: new RegExp("^((vrs|sv|subpara|op|subch|add|amend|annot|app|art|bibliog|bk|ch|cl|col|cmt|dec|dept|div|ex|fig|fld|fol|n|hypo|illus|intro|l|no|p|pp|para|pt|pmbl|princ|pub|r|rn|sched|sec|ser|subdiv|subsec|supp|tbl|tit|vol)\\.)\\s+(.*)"),
            STATUTE_SUBDIV_PLAIN_REGEX: /(?:(?:^| )(?:vrs|sv|subpara|op|subch|add|amend|annot|app|art|bibliog|bk|ch|cl|col|cmt|dec|dept|div|ex|fig|fld|fol|n|hypo|illus|intro|l|no|p|pp|para|pt|pmbl|princ|pub|r|rn|sched|sec|ser|subdiv|subsec|supp|tbl|tit|vol)\. *)/,
            STATUTE_SUBDIV_PLAIN_REGEX_FRONT: /(?:^\s*[.,;]*\s*(?:vrs|sv|subpara|op|subch|add|amend|annot|app|art|bibliog|bk|ch|cl|col|cmt|dec|dept|div|ex|fig|fld|fol|n|hypo|illus|intro|l|no|p|pp|para|pt|pmbl|princ|pub|r|rn|sched|sec|ser|subdiv|subsec|supp|tbl|tit|vol)\. *)/,
            STATUTE_SUBDIV_STRINGS: {
                "vrs.": "verse",
                "sv.": "sub-verbo",
                "subpara.": "subparagraph",
                "op.": "opus",
                "subch.": "subchapter",
                "add.": "addendum",
                "amend.": "amendment",
                "annot.": "annotation",
                "app.": "appendix",
                "art.": "article",
                "bibliog.": "bibliography",
                "bk.": "book",
                "ch.": "chapter",
                "cl.": "clause",
                "col.": "column",
                "cmt.": "comment",
                "dec.": "decision",
                "dept.": "department",
                "ex.": "example",
                "fig.": "figure",
                "fld.": "field",
                "fol.": "folio",
                "n.": "note",
                "hypo.": "hypothetical",
                "illus.": "illustration",
                "intro.": "introduction",
                "l.": "line",
                "no.": "issue",
                "p.": "page",
                "pp.": "page",
                "para.": "paragraph",
                "pt.": "part",
                "pmbl.": "preamble",
                "princ.": "principle",
                "pub.": "publication",
                "r.": "rule",
                "rn.": "randnummer",
                "sched.": "schedule",
                "sec.": "section",
                "ser.": "series,",
                "subdiv.": "subdivision",
                "subsec.": "subsection",
                "supp.": "supplement",
                "tbl.": "table",
                "tit.": "title",
                "vol.": "volume"
            },
            STATUTE_SUBDIV_STRINGS_REVERSE: {
                verse: "vrs.",
                "sub-verbo": "sv.",
                "sub verbo": "sv.",
                subparagraph: "subpara.",
                opus: "op.",
                subchapter: "subch.",
                addendum: "add.",
                amendment: "amend.",
                annotation: "annot.",
                appendix: "app.",
                article: "art.",
                bibliography: "bibliog.",
                book: "bk.",
                chapter: "ch.",
                clause: "cl.",
                column: "col.",
                comment: "cmt.",
                decision: "dec.",
                department: "dept.",
                example: "ex.",
                figure: "fig.",
                field: "fld.",
                folio: "fol.",
                note: "n.",
                hypothetical: "hypo.",
                illustration: "illus.",
                introduction: "intro.",
                line: "l.",
                issue: "no.",
                page: "p.",
                paragraph: "para.",
                part: "pt.",
                preamble: "pmbl.",
                principle: "princ.",
                publication: "pub.",
                rule: "r.",
                randnummer: "rn.",
                schedule: "sched.",
                section: "sec.",
                "series,": "ser.",
                subdivision: "subdiv.",
                subsection: "subsec.",
                supplement: "supp.",
                table: "tbl.",
                title: "tit.",
                volume: "vol."
            },
            LOCATOR_LABELS_MAP: {
                vrs: "verse",
                sv: "sub-verbo",
                subpara: "subparagraph",
                op: "opus",
                subch: "subchapter",
                add: "addendum",
                amend: "amendment",
                annot: "annotation",
                app: "appendix",
                art: "article",
                bibliog: "bibliography",
                bk: "book",
                ch: "chapter",
                cl: "clause",
                col: "column",
                cmt: "comment",
                dec: "decision",
                dept: "department",
                ex: "example",
                fig: "figure",
                fld: "field",
                fol: "folio",
                n: "note",
                hypo: "hypothetical",
                illus: "illustration",
                intro: "introduction",
                l: "line",
                no: "issue",
                p: "page",
                pp: "page",
                para: "paragraph",
                pt: "part",
                pmbl: "preamble",
                princ: "principle",
                pub: "publication",
                r: "rule",
                rn: "randnummer",
                sched: "schedule",
                sec: "section",
                ser: "series,",
                subdiv: "subdivision",
                subsec: "subsection",
                supp: "supplement",
                tbl: "table",
                tit: "title",
                vol: "volume"
            },
            MODULE_MACROS: {
                "juris-pretitle": !0,
                "juris-title": !0,
                "juris-pretitle-short": !0,
                "juris-title-short": !0,
                "juris-main": !0,
                "juris-main-short": !0,
                "juris-tail": !0,
                "juris-tail-short": !0,
                "juris-locator": !0
            },
            MODULE_TYPES: {
                legal_case: !0,
                legislation: !0,
                bill: !0,
                hearing: !0,
                gazette: !0,
                report: !0,
                regulation: !0,
                standard: !0,
                patent: !0,
                locator: !0
            },
            checkNestedBrace: function(t) {
                t.opt.xclass === "note" ? (this.depth = 0, this.update = function(i) {
                    for(var i = i || "", s = i.split(/([\(\)])/), n = 1, a = s.length; n < a; n += 2)s[n] === "(" ? (this.depth % 2 === 1 && (s[n] = "["), this.depth += 1) : s[n] === ")" && (this.depth % 2 === 0 && (s[n] = "]"), this.depth -= 1);
                    var o = s.join("");
                    return o;
                }) : this.update = function(e) {
                    return e;
                };
            },
            MULTI_FIELDS: [
                "event",
                "publisher",
                "publisher-place",
                "event-place",
                "title",
                "container-title",
                "collection-title",
                "authority",
                "genre",
                "title-short",
                "medium",
                "country",
                "jurisdiction",
                "archive",
                "archive-place"
            ],
            LangPrefsMap: {
                title: "titles",
                "title-short": "titles",
                event: "titles",
                genre: "titles",
                medium: "titles",
                "container-title": "journals",
                "collection-title": "titles",
                archive: "journals",
                publisher: "publishers",
                authority: "publishers",
                "publisher-place": "places",
                "event-place": "places",
                "archive-place": "places",
                jurisdiction: "places",
                number: "places",
                edition: "places",
                issue: "places",
                volume: "places"
            },
            AbbreviationSegments: function() {
                this["container-title"] = {}, this["collection-title"] = {}, this["institution-entire"] = {}, this["institution-part"] = {}, this.nickname = {}, this.number = {}, this.title = {}, this.place = {}, this.hereinafter = {}, this.classic = {}, this["container-phrase"] = {}, this["title-phrase"] = {};
            },
            getAbbrevsDomain: function(t, e, i) {
                var s = null;
                if (t.opt.availableAbbrevDomains && e && e !== "default") {
                    var n = t.locale[t.opt.lang].opts["jurisdiction-preference"], a = null;
                    if (t.locale[i] && (a = t.locale[i].opts["jurisdiction-preference"]), a) {
                        for(var o = a.length - 1; o > -1; o--)if (t.opt.availableAbbrevDomains[e].indexOf(a[o]) > -1) {
                            s = a[o];
                            break;
                        }
                    }
                    if (!s && n) {
                        for(var o = n.length - 1; o > -1; o--)if (t.opt.availableAbbrevDomains[e].indexOf(n[o]) > -1) {
                            s = n[o];
                            break;
                        }
                    }
                }
                return s;
            },
            FIELD_CATEGORY_REMAP: {
                title: "title",
                "container-title": "container-title",
                "collection-title": "collection-title",
                country: "place",
                number: "number",
                place: "place",
                archive: "container-title",
                "title-short": "title",
                genre: "title",
                event: "title",
                medium: "title",
                "archive-place": "place",
                "publisher-place": "place",
                "event-place": "place",
                jurisdiction: "place",
                "language-name": "place",
                "language-name-original": "place",
                "call-number": "number",
                "chapter-number": "number",
                "collection-number": "number",
                edition: "number",
                page: "number",
                issue: "number",
                locator: "number",
                "locator-extra": "number",
                "number-of-pages": "number",
                "number-of-volumes": "number",
                volume: "number",
                "citation-number": "number",
                publisher: "institution-part"
            },
            parseLocator: function(t) {
                if (this.opt.development_extensions.locator_date_and_revision && t.locator) {
                    t.locator = "" + t.locator;
                    var e = t.locator.indexOf("|");
                    if (e > -1) {
                        var i = t.locator;
                        t.locator = i.slice(0, e), i = i.slice(e + 1);
                        var s = i.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}).*/);
                        s && (t["locator-date"] = this.fun.dateparser.parseDateToObject(s[1]), i = i.slice(s[1].length)), t["locator-extra"] = i.replace(/^\s+/, "").replace(/\s+$/, "");
                    }
                }
                return t.locator && (t.locator = ("" + t.locator).replace(/\s+$/, "")), t;
            },
            normalizeLocaleStr: function(t) {
                if (t) {
                    var e = t.split("-");
                    return e[0] = e[0].toLowerCase(), e[1] && (e[1] = e[1].toUpperCase()), e.join("-");
                }
            },
            parseNoteFieldHacks: function(t, e, i) {
                if (typeof t.note == "string") {
                    for(var s = [], n = t.note.split(`
`), a = 0, o = n.length; a < o; a++){
                        var l = n[a], s = [], u = l.match(r.NOTE_FIELDS_REGEXP);
                        if (u) {
                            for(var f = l.split(r.NOTE_FIELDS_REGEXP), h = 0, d = f.length - 1; h < d; h++)s.push(f[h]), s.push(u[h]);
                            s.push(f[f.length - 1]);
                            for(var h = 1, d = s.length; h < d && !(s[h - 1].trim() && (a > 0 || h > 1) && !s[h - 1].match(r.NOTE_FIELD_REGEXP)); h += 2)s[h] = `
` + s[h].slice(2, -1).trim() + `
`;
                            n[a] = s.join("");
                        }
                    }
                    n = n.join(`
`).split(`
`);
                    for(var p = 0, m = {}, a = 0, o = n.length; a < o; a++){
                        var l = n[a], b = l.match(r.NOTE_FIELD_REGEXP);
                        if (l.trim()) {
                            if (!b) {
                                if (a === 0) continue;
                                p = a;
                                break;
                            }
                        } else continue;
                        var c = b[1], S = b[2].replace(/^\s+/, "").replace(/\s+$/, "");
                        if (c === "type") t.type = S, n[a] = "";
                        else if (r.DATE_VARIABLES.indexOf(c.replace(/^alt-/, "")) > -1) (!t[c] || i) && (t[c] = r.DateParser.parseDateToArray(S), (!e || e[c] && this.isDateString(S)) && (n[a] = ""));
                        else if (!t[c]) {
                            if (r.NAME_VARIABLES.indexOf(c.replace(/^alt-/, "")) > -1) {
                                m[c] || (m[c] = []);
                                var g = S.split(/\s*\|\|\s*/);
                                if (g.length === 1) m[c].push({
                                    literal: g[0]
                                });
                                else if (g.length === 2) {
                                    var v = {
                                        family: g[0],
                                        given: g[1]
                                    };
                                    r.parseParticles(v), m[c].push(v);
                                }
                            } else t[c] = S;
                            (!e || e[c]) && (n[a] = "");
                        }
                    }
                    for(var c in m)t[c] = m[c];
                    if (e) {
                        n[p].trim() && (n[p] = `
` + n[p]);
                        for(var a = p - 1; a > -1; a--)n[a].trim() || (n = n.slice(0, a).concat(n.slice(a + 1)));
                    }
                    t.note = n.join(`
`).trim();
                }
            },
            checkPrefixSpaceAppend: function(t, a) {
                a || (a = "");
                var i = "", s = a.replace(/<[^>]+>/g, "").replace(/["'\u201d\u2019\u00bb\u202f\u00a0 ]+$/g, ""), n = s.slice(-1);
                (s.match(r.ENDSWITH_ROMANESQUE_REGEXP) || r.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(n) > -1 || n.match(/[\)\],0-9]/)) && (i = " ");
                var a = (a + i).replace(/\s+/g, " ");
                return a;
            },
            checkIgnorePredecessor: function(t, e) {
                var s = e.replace(/<[^>]+>/g, "").replace(/["'\u201d\u2019\u00bb\u202f\u00a0 ]+$/g, ""), n = s.slice(-1);
                return r.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(n) > -1 && e.trim().indexOf(" ") > -1 ? (t.tmp.term_predecessor = !1, !0) : !1;
            },
            checkSuffixSpacePrepend: function(t, e) {
                return e ? ((e.match(r.STARTSWITH_ROMANESQUE_REGEXP) || [
                    "[",
                    "("
                ].indexOf(e.slice(0, 1)) > -1) && (e = " " + e), e) : "";
            },
            GENDERS: [
                "masculine",
                "feminine"
            ],
            ERROR_NO_RENDERED_FORM: 1,
            PREVIEW: "Just for laughs.",
            ASSUME_ALL_ITEMS_REGISTERED: 2,
            START: 0,
            END: 1,
            SINGLETON: 2,
            SEEN: 6,
            SUCCESSOR: 3,
            SUCCESSOR_OF_SUCCESSOR: 4,
            SUPPRESS: 5,
            SINGULAR: 0,
            PLURAL: 1,
            LITERAL: !0,
            BEFORE: 1,
            AFTER: 2,
            DESCENDING: 1,
            ASCENDING: 2,
            PRIMARY: 1,
            SECONDARY: 2,
            POSITION_FIRST: 0,
            POSITION_SUBSEQUENT: 1,
            POSITION_IBID: 2,
            POSITION_IBID_WITH_LOCATOR: 3,
            POSITION_CONTAINER_SUBSEQUENT: 4,
            POSITION_MAP: {
                0: 0,
                4: 1,
                1: 2,
                2: 3,
                3: 4
            },
            POSITION_TEST_VARS: [
                "position",
                "first-reference-note-number",
                "near-note"
            ],
            AREAS: [
                "citation",
                "citation_sort",
                "bibliography",
                "bibliography_sort",
                "intext"
            ],
            CITE_FIELDS: [
                "first-reference-note-number",
                "first-container-reference-note-number",
                "locator",
                "locator-extra"
            ],
            SWAPPING_PUNCTUATION: [
                ".",
                "!",
                "?",
                ":",
                ","
            ],
            TERMINAL_PUNCTUATION: [
                ":",
                ".",
                ";",
                "!",
                "?",
                " "
            ],
            NONE: 0,
            NUMERIC: 1,
            POSITION: 2,
            TRIGRAPH: 3,
            DATE_PARTS: [
                "year",
                "month",
                "day"
            ],
            DATE_PARTS_ALL: [
                "year",
                "month",
                "day",
                "season"
            ],
            DATE_PARTS_INTERNAL: [
                "year",
                "month",
                "day",
                "year_end",
                "month_end",
                "day_end"
            ],
            NAME_PARTS: [
                "non-dropping-particle",
                "family",
                "given",
                "dropping-particle",
                "suffix",
                "literal"
            ],
            DISAMBIGUATE_OPTIONS: [
                "disambiguate-add-names",
                "disambiguate-add-givenname",
                "disambiguate-add-year-suffix"
            ],
            GIVENNAME_DISAMBIGUATION_RULES: [
                "all-names",
                "all-names-with-initials",
                "primary-name",
                "primary-name-with-initials",
                "by-cite"
            ],
            NAME_ATTRIBUTES: [
                "and",
                "delimiter-precedes-last",
                "delimiter-precedes-et-al",
                "initialize-with",
                "initialize",
                "name-as-sort-order",
                "sort-separator",
                "et-al-min",
                "et-al-use-first",
                "et-al-subsequent-min",
                "et-al-subsequent-use-first",
                "form",
                "prefix",
                "suffix",
                "delimiter"
            ],
            LOOSE: 0,
            STRICT: 1,
            TOLERANT: 2,
            PREFIX_PUNCTUATION: /[.;:]\s*$/,
            SUFFIX_PUNCTUATION: /^\s*[.;:,\(\)]/,
            NUMBER_REGEXP: /(?:^\d+|\d+$)/,
            NAME_INITIAL_REGEXP: /^([A-Z\u0e01-\u0e5b\u00c0-\u017f\u0400-\u042f\u0590-\u05d4\u05d6-\u05ff\u0600-\u06ff\u0370\u0372\u0376\u0386\u0388-\u03ab\u03e2\u03e4\u03e6\u03e8\u03ea\u03ec\u03ee\u03f4\u03f7\u03fd-\u03ff])([a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0400-\u052f\u0600-\u06ff\u0370-\u03ff\u1f00-\u1fff]*|)(\.)*/,
            ROMANESQUE_REGEXP: /[-0-9a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0370-\u03ff\u0400-\u052f\u0590-\u05d4\u05d6-\u05ff\u1f00-\u1fff\u0600-\u06ff\u200c\u200d\u200e\u0218\u0219\u021a\u021b\u202a-\u202e]/,
            ROMANESQUE_NOT_REGEXP: /[^a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0370-\u03ff\u0400-\u052f\u0590-\u05d4\u05d6-\u05ff\u1f00-\u1fff\u0600-\u06ff\u200c\u200d\u200e\u0218\u0219\u021a\u021b\u202a-\u202e]/g,
            STARTSWITH_ROMANESQUE_REGEXP: /^[&a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0370-\u03ff\u0400-\u052f\u0590-\u05d4\u05d6-\u05ff\u1f00-\u1fff\u0600-\u06ff\u200c\u200d\u200e\u0218\u0219\u021a\u021b\u202a-\u202e]/,
            ENDSWITH_ROMANESQUE_REGEXP: /[.;:&a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0370-\u03ff\u0400-\u052f\u0590-\u05d4\u05d6-\u05ff\u1f00-\u1fff\u0600-\u06ff\u200c\u200d\u200e\u0218\u0219\u021a\u021b\u202a-\u202e]$/,
            ALL_ROMANESQUE_REGEXP: /^[a-zA-Z\u0e01-\u0e5b\u00c0-\u017f\u0370-\u03ff\u0400-\u052f\u0590-\u05d4\u05d6-\u05ff\u1f00-\u1fff\u0600-\u06ff\u200c\u200d\u200e\u0218\u0219\u021a\u021b\u202a-\u202e]+$/,
            VIETNAMESE_SPECIALS: /[\u00c0-\u00c3\u00c8-\u00ca\u00cc\u00cd\u00d2-\u00d5\u00d9\u00da\u00dd\u00e0-\u00e3\u00e8-\u00ea\u00ec\u00ed\u00f2-\u00f5\u00f9\u00fa\u00fd\u0101\u0103\u0110\u0111\u0128\u0129\u0168\u0169\u01a0\u01a1\u01af\u01b0\u1ea0-\u1ef9]/,
            VIETNAMESE_NAMES: /^(?:(?:[.AaBbCcDdEeGgHhIiKkLlMmNnOoPpQqRrSsTtUuVvXxYy \u00c0-\u00c3\u00c8-\u00ca\u00cc\u00cd\u00d2-\u00d5\u00d9\u00da\u00dd\u00e0-\u00e3\u00e8-\u00ea\u00ec\u00ed\u00f2-\u00f5\u00f9\u00fa\u00fd\u0101\u0103\u0110\u0111\u0128\u0129\u0168\u0169\u01a0\u01a1\u01af\u01b0\u1ea0-\u1ef9]{2,6})(\s+|$))+$/,
            NOTE_FIELDS_REGEXP: /\{:(?:[\-_a-z]+|[A-Z]+):[^\}]+\}/g,
            NOTE_FIELD_REGEXP: /^([\-_a-z]+|[A-Z]+):\s*([^\}]+)$/,
            PARTICLE_GIVEN_REGEXP: /^([^ ]+(?:\u02bb |\u2019 | |\' ) *)(.+)$/,
            PARTICLE_FAMILY_REGEXP: /^([^ ]+(?:\-|\u02bb|\u2019| |\') *)(.+)$/,
            DISPLAY_CLASSES: [
                "block",
                "left-margin",
                "right-inline",
                "indent"
            ],
            NAME_VARIABLES: [
                "author",
                "chair",
                "collection-editor",
                "compiler",
                "composer",
                "container-author",
                "contributor",
                "curator",
                "director",
                "editor",
                "editor-translator",
                "editorial-director",
                "executive-producer",
                "guest",
                "host",
                "illustrator",
                "interviewer",
                "narrator",
                "organizer",
                "original-author",
                "performer",
                "producer",
                "recipient",
                "reviewed-author",
                "script-writer",
                "series-creator",
                "translator",
                "commenter"
            ],
            CREATORS: [
                "author",
                "chair",
                "collection-editor",
                "compiler",
                "composer",
                "container-author",
                "contributor",
                "curator",
                "director",
                "editor",
                "editor-translator",
                "editorial-director",
                "executive-producer",
                "guest",
                "host",
                "illustrator",
                "interviewer",
                "narrator",
                "organizer",
                "original-author",
                "performer",
                "producer",
                "recipient",
                "reviewed-author",
                "script-writer",
                "series-creator",
                "translator",
                "commenter"
            ],
            NUMERIC_VARIABLES: [
                "call-number",
                "chapter-number",
                "collection-number",
                "division",
                "edition",
                "page",
                "issue",
                "locator",
                "locator-extra",
                "number",
                "number-of-pages",
                "number-of-volumes",
                "part-number",
                "printing-number",
                "section",
                "supplement-number",
                "version",
                "volume",
                "supplement",
                "citation-number"
            ],
            DATE_VARIABLES: [
                "locator-date",
                "issued",
                "event-date",
                "accessed",
                "original-date",
                "publication-date",
                "available-date",
                "submitted",
                "alt-issued",
                "alt-event"
            ],
            VARIABLES_WITH_SHORT_FORM: [
                "title",
                "container-title"
            ],
            TITLE_FIELD_SPLITS: function(t) {
                for(var e = [
                    "title",
                    "short",
                    "main",
                    "sub",
                    "subjoin"
                ], i = {}, s = 0, n = e.length; s < n; s++)i[e[s]] = t + "title" + (e[s] === "title" ? "" : "-" + e[s]);
                return i;
            },
            demoteNoiseWords: function(t, e, i) {
                var s = t.locale[t.opt.lang].opts["leading-noise-words"];
                if (e && i) {
                    e = e.split(/\s+/), e.reverse();
                    for(var n = [], a = e.length - 1; a > -1 && s.indexOf(e[a].toLowerCase()) > -1; a += -1)n.push(e.pop());
                    e.reverse();
                    var o = e.join(" "), l = n.join(" ");
                    i === "drop" || !l ? e = o : i === "demote" && (e = [
                        o,
                        l
                    ].join(", "));
                }
                return e;
            },
            extractTitleAndSubtitle: function(t, e) {
                var i = e ? "\u202F" : "", s = [
                    ""
                ];
                this.opt.development_extensions.split_container_title && s.push("container-");
                for(var n = 0, a = s.length; n < a; n++){
                    var o = s[n], l = r.TITLE_FIELD_SPLITS(o), u = [
                        !1
                    ];
                    if (t.multi) for(var f in t.multi._keys[l.short])u.push(f);
                    for(var h = 0, d = u.length; h < d; h++){
                        var f = u[h], p = {};
                        f ? (t.multi._keys[l.title] && (p[l.title] = t.multi._keys[l.title][f]), t.multi._keys[l.short] && (p[l.short] = t.multi._keys[l.short][f])) : (p[l.title] = t[l.title], p[l.short] = t[l.short]), p[l.main] = p[l.title], p[l.sub] = !1;
                        var m = p[l.short];
                        if (p[l.title]) {
                            if (m && m.toLowerCase() === p[l.title].toLowerCase()) p[l.main] = p[l.title], p[l.subjoin] = "", p[l.sub] = "";
                            else if (m) {
                                var b = p[l.title].slice(m.replace(/[\?\!]+$/, "").length), c = p[l.title].replace(b.replace(/^[\?\!]+/, ""), "").trim(), S = r.TITLE_SPLIT_REGEXP.matchfirst.exec(b);
                                if (S && c.toLowerCase() === m.toLowerCase()) p[l.main] = c, p[l.subjoin] = S[1].replace(/[\?\!]+(\s*)$/, "$1"), p[l.sub] = b.replace(r.TITLE_SPLIT_REGEXP.matchfirst, ""), this.opt.development_extensions.force_short_title_casing_alignment && (p[l.short] = p[l.main]);
                                else {
                                    var g = r.TITLE_SPLIT(p[l.title]);
                                    g.length == 3 ? (p[l.main] = g[0], p[l.subjoin] = g[1], p[l.sub] = g[2]) : (p[l.main] = p[l.title], p[l.subjoin] = "", p[l.sub] = "");
                                }
                            } else {
                                var g = r.TITLE_SPLIT(p[l.title]);
                                if (g.length == 3) {
                                    if (p[l.main] = g[0], p[l.subjoin] = g[1], p[l.sub] = g[2], this.opt.development_extensions.implicit_short_title && t.type !== "legal_case" && !t[l.short] && !p[l.main].match(/^[\-\.[0-9]+$/)) {
                                        var v = p[l.subjoin].trim();
                                        [
                                            "?",
                                            "!"
                                        ].indexOf(v) === -1 && (v = ""), p[l.short] = p[l.main] + v;
                                    }
                                } else p[l.main] = p[l.title], p[l.subjoin] = "", p[l.sub] = "";
                            }
                            if (p[l.subjoin] && p[l.subjoin].match(/([\?\!])/)) {
                                var S = p[l.subjoin].match(/(\s*)$/);
                                p[l.main] = p[l.main] + i + p[l.subjoin].trim(), p[l.subjoin] = S[1];
                            }
                        }
                        if (p[l.subjoin] && (p[l.subjoin].indexOf(":") > -1 && (p[l.subjoin] = i + ": "), (p[l.subjoin].indexOf("-") > -1 || p[l.subjoin].indexOf("\u2014") > -1) && (p[l.subjoin] = "\u2014")), f) for(var y in p)t.multi._keys[y] || (t.multi._keys[y] = {}), t.multi._keys[y][f] = p[y];
                        else for(var y in p)t[y] = p[y];
                    }
                }
            },
            titlecaseSentenceOrNormal: function(t, e, i, s, n) {
                var a = r.TITLE_FIELD_SPLITS(i), o = {};
                if (s && e.multi ? (e.multi._keys[a.title] && (o[a.title] = e.multi._keys[a.title][s]), e.multi._keys[a.main] && (o[a.main] = e.multi._keys[a.main][s]), e.multi._keys[a.sub] && (o[a.sub] = e.multi._keys[a.sub][s]), e.multi._keys[a.subjoin] && (o[a.subjoin] = e.multi._keys[a.subjoin][s])) : (o[a.title] = e[a.title], o[a.main] = e[a.main], o[a.sub] = e[a.sub], o[a.subjoin] = e[a.subjoin]), o[a.main] && o[a.sub]) {
                    var l = o[a.main], u = o[a.subjoin], f = o[a.sub];
                    return n ? (l = r.Output.Formatters.sentence(t, l), f = r.Output.Formatters.sentence(t, f)) : t.opt.development_extensions.uppercase_subtitles && (f = r.Output.Formatters["capitalize-first"](t, f)), [
                        l,
                        u,
                        f
                    ].join("");
                } else if (o[a.title]) {
                    if (n) return r.Output.Formatters.sentence(t, o[a.title]);
                    if (t.opt.development_extensions.uppercase_subtitles) {
                        for(var h = r.TITLE_SPLIT(o[a.title]), d = 0, p = h.length; d < p; d += 2)h[d] = r.Output.Formatters["capitalize-first"](t, h[d]);
                        for(var d = 1, p = h.length - 1; d < p; d += 2){
                            var m = h[d].match(/([:\?\!] )/);
                            if (m) {
                                var b = t.opt["default-locale"][0].slice(0, 2).toLowerCase() === "fr" ? "\u202F" : "";
                                h[d] = b + m[1];
                            }
                            (h[d].indexOf("-") > -1 || h[d].indexOf("\u2014") > -1) && (h[d] = "\u2014");
                        }
                        return o[a.title] = h.join(""), o[a.title];
                    } else return o[a.title];
                } else return "";
            },
            getSafeEscape: function(t) {
                if ([
                    "bibliography",
                    "citation"
                ].indexOf(t.tmp.area) > -1) {
                    var e = [];
                    return t.opt.development_extensions.thin_non_breaking_space_html_hack && t.opt.mode === "html" && e.push(function(i) {
                        return i.replace(/\u202f/g, '<span style="white-space:nowrap">&thinsp;</span>');
                    }), e.length ? function(i) {
                        for(var s = 0, n = e.length; s < n; s += 1)i = e[s](i);
                        return r.Output.Formats[t.opt.mode].text_escape(i);
                    } : r.Output.Formats[t.opt.mode].text_escape;
                } else return function(i) {
                    return i;
                };
            },
            SKIP_WORDS: [
                "about",
                "above",
                "across",
                "afore",
                "after",
                "against",
                "al",
                "along",
                "alongside",
                "amid",
                "amidst",
                "among",
                "amongst",
                "anenst",
                "apropos",
                "apud",
                "around",
                "as",
                "aside",
                "astride",
                "at",
                "athwart",
                "atop",
                "barring",
                "before",
                "behind",
                "below",
                "beneath",
                "beside",
                "besides",
                "between",
                "beyond",
                "but",
                "by",
                "circa",
                "despite",
                "down",
                "during",
                "et",
                "except",
                "for",
                "forenenst",
                "from",
                "given",
                "in",
                "inside",
                "into",
                "lest",
                "like",
                "modulo",
                "near",
                "next",
                "notwithstanding",
                "of",
                "off",
                "on",
                "onto",
                "out",
                "over",
                "per",
                "plus",
                "pro",
                "qua",
                "sans",
                "since",
                "than",
                "through",
                " thru",
                "throughout",
                "thruout",
                "till",
                "to",
                "toward",
                "towards",
                "under",
                "underneath",
                "until",
                "unto",
                "up",
                "upon",
                "versus",
                "vs.",
                "v.",
                "vs",
                "v",
                "via",
                "vis-\xE0-vis",
                "with",
                "within",
                "without",
                "according to",
                "ahead of",
                "apart from",
                "as for",
                "as of",
                "as per",
                "as regards",
                "aside from",
                "back to",
                "because of",
                "close to",
                "due to",
                "except for",
                "far from",
                "inside of",
                "instead of",
                "near to",
                "next to",
                "on to",
                "out from",
                "out of",
                "outside of",
                "prior to",
                "pursuant to",
                "rather than",
                "regardless of",
                "such as",
                "that of",
                "up to",
                "where as",
                "or",
                "yet",
                "so",
                "for",
                "and",
                "nor",
                "a",
                "an",
                "the",
                "de",
                "d'",
                "von",
                "van",
                "c",
                "ca"
            ],
            FORMAT_KEY_SEQUENCE: [
                "@strip-periods",
                "@font-style",
                "@font-variant",
                "@font-weight",
                "@text-decoration",
                "@vertical-align",
                "@quotes"
            ],
            INSTITUTION_KEYS: [
                "font-style",
                "font-variant",
                "font-weight",
                "text-decoration",
                "text-case"
            ],
            SUFFIX_CHARS: "a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z",
            ROMAN_NUMERALS: [
                [
                    "",
                    "i",
                    "ii",
                    "iii",
                    "iv",
                    "v",
                    "vi",
                    "vii",
                    "viii",
                    "ix"
                ],
                [
                    "",
                    "x",
                    "xx",
                    "xxx",
                    "xl",
                    "l",
                    "lx",
                    "lxx",
                    "lxxx",
                    "xc"
                ],
                [
                    "",
                    "c",
                    "cc",
                    "ccc",
                    "cd",
                    "d",
                    "dc",
                    "dcc",
                    "dccc",
                    "cm"
                ],
                [
                    "",
                    "m",
                    "mm",
                    "mmm",
                    "mmmm",
                    "mmmmm"
                ]
            ],
            LANGS: {
                "af-ZA": "Afrikaans",
                ar: "Arabic",
                "bg-BG": "Bulgarian",
                "ca-AD": "Catalan",
                "cs-CZ": "Czech",
                "da-DK": "Danish",
                "de-AT": "Austrian",
                "de-CH": "German (CH)",
                "de-DE": "German (DE)",
                "el-GR": "Greek",
                "en-GB": "English (GB)",
                "en-US": "English (US)",
                "es-ES": "Spanish",
                "et-EE": "Estonian",
                eu: "European",
                "fa-IR": "Persian",
                "fi-FI": "Finnish",
                "fr-CA": "French (CA)",
                "fr-FR": "French (FR)",
                "he-IL": "Hebrew",
                "hr-HR": "Croatian",
                "hu-HU": "Hungarian",
                "is-IS": "Icelandic",
                "it-IT": "Italian",
                "ja-JP": "Japanese",
                "km-KH": "Khmer",
                "ko-KR": "Korean",
                "lt-LT": "Lithuanian",
                "lv-LV": "Latvian",
                "mn-MN": "Mongolian",
                "nb-NO": "Norwegian (Bokm\xE5l)",
                "nl-NL": "Dutch",
                "nn-NO": "Norwegian (Nynorsk)",
                "pl-PL": "Polish",
                "pt-BR": "Portuguese (BR)",
                "pt-PT": "Portuguese (PT)",
                "ro-RO": "Romanian",
                "ru-RU": "Russian",
                "sk-SK": "Slovak",
                "sl-SI": "Slovenian",
                "sr-RS": "Serbian",
                "sv-SE": "Swedish",
                "th-TH": "Thai",
                "tr-TR": "Turkish",
                "uk-UA": "Ukrainian",
                "vi-VN": "Vietnamese",
                "zh-CN": "Chinese (CN)",
                "zh-TW": "Chinese (TW)"
            },
            LANG_BASES: {
                af: "af_ZA",
                ar: "ar",
                bg: "bg_BG",
                ca: "ca_AD",
                cs: "cs_CZ",
                da: "da_DK",
                de: "de_DE",
                el: "el_GR",
                en: "en_US",
                es: "es_ES",
                et: "et_EE",
                eu: "eu",
                fa: "fa_IR",
                fi: "fi_FI",
                fr: "fr_FR",
                he: "he_IL",
                hr: "hr-HR",
                hu: "hu_HU",
                is: "is_IS",
                it: "it_IT",
                ja: "ja_JP",
                km: "km_KH",
                ko: "ko_KR",
                lt: "lt_LT",
                lv: "lv-LV",
                mn: "mn_MN",
                nb: "nb_NO",
                nl: "nl_NL",
                nn: "nn-NO",
                pl: "pl_PL",
                pt: "pt_PT",
                ro: "ro_RO",
                ru: "ru_RU",
                sk: "sk_SK",
                sl: "sl_SI",
                sr: "sr_RS",
                sv: "sv_SE",
                th: "th_TH",
                tr: "tr_TR",
                uk: "uk_UA",
                vi: "vi_VN",
                zh: "zh_CN"
            },
            SUPERSCRIPTS: {
                ª: "a",
                "\xB2": "2",
                "\xB3": "3",
                "\xB9": "1",
                º: "o",
                ʰ: "h",
                ʱ: "\u0266",
                ʲ: "j",
                ʳ: "r",
                ʴ: "\u0279",
                ʵ: "\u027B",
                ʶ: "\u0281",
                ʷ: "w",
                ʸ: "y",
                ˠ: "\u0263",
                ˡ: "l",
                ˢ: "s",
                ˣ: "x",
                ˤ: "\u0295",
                "\u1D2C": "A",
                "\u1D2D": "\xC6",
                "\u1D2E": "B",
                "\u1D30": "D",
                "\u1D31": "E",
                "\u1D32": "\u018E",
                "\u1D33": "G",
                "\u1D34": "H",
                "\u1D35": "I",
                "\u1D36": "J",
                "\u1D37": "K",
                "\u1D38": "L",
                "\u1D39": "M",
                "\u1D3A": "N",
                "\u1D3C": "O",
                "\u1D3D": "\u0222",
                "\u1D3E": "P",
                "\u1D3F": "R",
                "\u1D40": "T",
                "\u1D41": "U",
                "\u1D42": "W",
                "\u1D43": "a",
                "\u1D44": "\u0250",
                "\u1D45": "\u0251",
                "\u1D46": "\u1D02",
                "\u1D47": "b",
                "\u1D48": "d",
                "\u1D49": "e",
                "\u1D4A": "\u0259",
                "\u1D4B": "\u025B",
                "\u1D4C": "\u025C",
                "\u1D4D": "g",
                "\u1D4F": "k",
                "\u1D50": "m",
                "\u1D51": "\u014B",
                "\u1D52": "o",
                "\u1D53": "\u0254",
                "\u1D54": "\u1D16",
                "\u1D55": "\u1D17",
                "\u1D56": "p",
                "\u1D57": "t",
                "\u1D58": "u",
                "\u1D59": "\u1D1D",
                "\u1D5A": "\u026F",
                "\u1D5B": "v",
                "\u1D5C": "\u1D25",
                "\u1D5D": "\u03B2",
                "\u1D5E": "\u03B3",
                "\u1D5F": "\u03B4",
                "\u1D60": "\u03C6",
                "\u1D61": "\u03C7",
                "\u2070": "0",
                "\u2071": "i",
                "\u2074": "4",
                "\u2075": "5",
                "\u2076": "6",
                "\u2077": "7",
                "\u2078": "8",
                "\u2079": "9",
                "\u207A": "+",
                "\u207B": "\u2212",
                "\u207C": "=",
                "\u207D": "(",
                "\u207E": ")",
                ⁿ: "n",
                "\u2120": "SM",
                "\u2122": "TM",
                "\u3192": "\u4E00",
                "\u3193": "\u4E8C",
                "\u3194": "\u4E09",
                "\u3195": "\u56DB",
                "\u3196": "\u4E0A",
                "\u3197": "\u4E2D",
                "\u3198": "\u4E0B",
                "\u3199": "\u7532",
                "\u319A": "\u4E59",
                "\u319B": "\u4E19",
                "\u319C": "\u4E01",
                "\u319D": "\u5929",
                "\u319E": "\u5730",
                "\u319F": "\u4EBA",
                ˀ: "\u0294",
                ˁ: "\u0295",
                ۥ: "\u0648",
                ۦ: "\u064A"
            },
            SUPERSCRIPTS_REGEXP: new RegExp("[\xAA\xB2\xB3\xB9\xBA\u02B0\u02B1\u02B2\u02B3\u02B4\u02B5\u02B6\u02B7\u02B8\u02E0\u02E1\u02E2\u02E3\u02E4\u1D2C\u1D2D\u1D2E\u1D30\u1D31\u1D32\u1D33\u1D34\u1D35\u1D36\u1D37\u1D38\u1D39\u1D3A\u1D3C\u1D3D\u1D3E\u1D3F\u1D40\u1D41\u1D42\u1D43\u1D44\u1D45\u1D46\u1D47\u1D48\u1D49\u1D4A\u1D4B\u1D4C\u1D4D\u1D4F\u1D50\u1D51\u1D52\u1D53\u1D54\u1D55\u1D56\u1D57\u1D58\u1D59\u1D5A\u1D5B\u1D5C\u1D5D\u1D5E\u1D5F\u1D60\u1D61\u2070\u2071\u2074\u2075\u2076\u2077\u2078\u2079\u207A\u207B\u207C\u207D\u207E\u207F\u2120\u2122\u3192\u3193\u3194\u3195\u3196\u3197\u3198\u3199\u319A\u319B\u319C\u319D\u319E\u319F\u02C0\u02C1\u06E5\u06E6]", "g"),
            UPDATE_GROUP_CONTEXT_CONDITION: function(t, e, i, s, n) {
                if (t.opt.use_context_condition) {
                    var a = t.tmp.group_context.tip;
                    a.condition ? (a.condition.termtxt || (a.condition.termtxt = e, a.condition.valueTerm = i), !a.value_seen && a.condition.test === "comma-safe-numbers-only" && n && (a.value_seen = !0, n.match(/^[0-9]/) || (t.tmp.just_did_number = !1))) : s && s.decorations.filter((o)=>o[0] === "@vertical-align").length > 0 || s && s.strings.suffix ? t.tmp.just_did_number = !1 : e && (e.match(/[0-9]$/) ? t.tmp.just_did_number = !0 : t.tmp.just_did_number = !1);
                }
            },
            EVALUATE_GROUP_CONDITION: function(t, e) {
                if (t.opt.use_context_condition) {
                    var i, s = e.condition.test === "comma-safe-numbers-only";
                    if (e.condition.test === "empty-label") i = !e.condition.termtxt;
                    else if (e.condition.test === "empty-label-no-decor") i = !e.condition.termtxt || e.condition.termtxt.indexOf("%s") > -1;
                    else if ([
                        "comma-safe",
                        "comma-safe-numbers-only"
                    ].indexOf(e.condition.test) > -1) {
                        var n = e.condition.termtxt, a = !1;
                        e.condition.termtxt && (a = e.condition.termtxt.slice(0, 1).match(r.ALL_ROMANESQUE_REGEXP));
                        var o = t.tmp.just_did_number;
                        o ? e.condition.valueTerm ? i = !s : n ? a ? i = !s : [
                            "always",
                            "after-number"
                        ].indexOf(t.opt.require_comma_on_symbol) > -1 ? i = !0 : i = !1 : i = !0 : e.condition.valueTerm ? i = !1 : n ? a ? i = !s : t.opt.require_comma_on_symbol === "always" ? i = !0 : i = !1 : i = !1;
                    }
                    if (i) var l = !1;
                    else var l = !0;
                    return e.condition.not && (l = !l), l;
                }
            },
            SYS_OPTIONS: [
                "prioritize_disambiguate_condition",
                "csl_reverse_lookup_support",
                "main_title_from_short_title",
                "uppercase_subtitles",
                "force_short_title_casing_alignment",
                "implicit_short_title",
                "split_container_title"
            ],
            TITLE_SPLIT_REGEXP: function() {
                var t = [
                    "\\.\\s+",
                    "\\!\\s+",
                    "\\?\\s+",
                    "\\s*::*\\s+",
                    "\\s*\u2014\\s*",
                    "\\s+\\-\\s+",
                    "\\s*\\-\\-\\-*\\s*"
                ];
                return {
                    match: new RegExp("(" + t.join("|") + ")", "g"),
                    matchfirst: new RegExp("^(" + t.join("|") + ")"),
                    split: new RegExp("(?:" + t.join("|") + ")")
                };
            }(),
            TITLE_SPLIT: function(t) {
                if (!t) return t;
                for(var e = t.match(r.TITLE_SPLIT_REGEXP.match), i = t.split(r.TITLE_SPLIT_REGEXP.split), s = i.length - 2; s > -1; s--)i[s] = i[s].trim(), i[s] && i[s].slice(-1).toLowerCase() !== i[s].slice(-1) ? (i[s] = i[s] + e[s] + i[s + 1], i = i.slice(0, s + 1).concat(i.slice(s + 2))) : i = i.slice(0, s + 1).concat([
                    e[s]
                ]).concat(i.slice(s + 1));
                return i;
            },
            GET_COURT_CLASS: function(t, e, i) {
                var s = "", n = null, a = e.jurisdiction ? e.jurisdiction.split(":")[0] : null, o = "court_condition_classes";
                return i && (o = "court_key_classes"), a && e.authority && (typeof e.authority == "string" ? n = e.authority : e.authority[0] && e.authority[0].literal && (n = e.authority[0].literal)), n && (this.lang && t.locale[this.lang].opts[o] && t.locale[this.lang].opts[o][a] && t.locale[this.lang].opts[o][a][n] ? s = t.locale[this.lang].opts[o][a][n] : t.locale[t.opt["default-locale"][0]].opts[o] && t.locale[t.opt["default-locale"][0]].opts[o][a] && t.locale[t.opt["default-locale"][0]].opts[o][a][n] && (s = t.locale[t.opt["default-locale"][0]].opts[o][a][n])), s;
            },
            SET_COURT_CLASSES: function(t, e, i, s) {
                for(var n = i.getNodesByName(s, "court-class"), a = 0, o = i.numberofnodes(n); a < o; a += 1){
                    var l = n[a], u = i.attributes(l), f = u["@name"], h = u["@country"], d = u["@courts"], p = "court_key_classes";
                    if (t.registry && (p = "court_condition_classes"), f && h && d) {
                        d = d.trim().split(/\s+/), t.locale[e].opts[p] || (t.locale[e].opts[p] = {}), t.locale[e].opts[p][h] || (t.locale[e].opts[p][h] = {});
                        for(var m = 0, b = d.length; m < b; m++)t.locale[e].opts[p][h][d[m]] = f;
                    }
                }
            },
            INIT_JURISDICTION_MACROS: function(t, e, i, s) {
                if (e["best-jurisdiction"]) return !0;
                if (!t.sys.retrieveStyleModule || !r.MODULE_MACROS[s] || !e.jurisdiction) return !1;
                var l = t.getJurisdictionList(e.jurisdiction);
                if (!t.opt.jurisdictions_seen[l[0]]) {
                    var n = t.retrieveAllStyleModules(l);
                    for(var a in n){
                        var o = t.loadStyleModule(a, n[a]);
                        o && (n[o] || (Object.assign(n, t.retrieveAllStyleModules([
                            o
                        ])), t.loadStyleModule(o, n[o], !0)));
                    }
                }
                var l = t.getJurisdictionList(e.jurisdiction);
                t.opt.parallel.enable && (t.parallel || (t.parallel = new r.Parallel(t)));
                for(var u = 0, f = l.length; u < f; u++){
                    var a = l[u];
                    if (i && t.juris[a] && !i["best-jurisdiction"] && t.juris[a].types.locator && (e["best-jurisdiction"] = a), t.juris[a] && t.juris[a].types[e.type]) return e["best-jurisdiction"] = a, !0;
                }
                return !1;
            }
        };
        r.XmlJSON = function(t) {
            this.dataObj = t, this.institution = {
                name: "institution",
                attrs: {
                    "institution-parts": "long",
                    delimiter: ", "
                },
                children: [
                    {
                        name: "institution-part",
                        attrs: {
                            name: "long"
                        },
                        children: []
                    }
                ]
            };
        };
        r.XmlJSON.prototype.clean = function(t) {
            return t;
        };
        r.XmlJSON.prototype.getStyleId = function(t, e) {
            var i = "id";
            e && (i = "title");
            for(var s = "", n = t.children, a = 0, o = n.length; a < o; a++)if (n[a].name === "info") for(var l = n[a].children, u = 0, f = l.length; u < f; u++)l[u].name === i && (s = l[u].children[0]);
            return s;
        };
        r.XmlJSON.prototype.children = function(t) {
            return t && t.children.length ? t.children.slice() : !1;
        };
        r.XmlJSON.prototype.nodename = function(t) {
            return t ? t.name : null;
        };
        r.XmlJSON.prototype.attributes = function(t) {
            var e = {};
            for(var i in t.attrs)e["@" + i] = t.attrs[i];
            return e;
        };
        r.XmlJSON.prototype.content = function(t) {
            var e = "";
            if (!t || !t.children) return e;
            for(var i = 0, s = t.children.length; i < s; i += 1)typeof t.children[i] == "string" && (e += t.children[i]);
            return e;
        };
        r.XmlJSON.prototype.namespace = {};
        r.XmlJSON.prototype.numberofnodes = function(t) {
            return t && typeof t.length == "number" ? t.length : 0;
        };
        r.XmlJSON.prototype.getAttributeValue = function(t, e, i) {
            var s = "";
            return i && (e = i + ":" + e), t && t.attrs && (t.attrs[e] ? s = t.attrs[e] : s = ""), s;
        };
        r.XmlJSON.prototype.getNodeValue = function(t, e) {
            var i = "";
            if (e) for(var s = 0, n = t.children.length; s < n; s += 1)t.children[s].name === e && (t.children[s].children.length ? i = t.children[s] : i = "");
            else t && (i = t);
            return i && i.children && i.children.length == 1 && typeof i.children[0] == "string" && (i = i.children[0]), i;
        };
        r.XmlJSON.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function(t, e, i, s, n) {
            s.slice(0, 1) === "@" && (s = s.slice(1));
            for(var h = 0, d = t.children.length; h < d; h += 1)t.children[h].name === e && t.children[h].attrs.name === i && (t.children[h].attrs[s] = n);
        };
        r.XmlJSON.prototype.deleteNodeByNameAttribute = function(t, e) {
            var i, s;
            for(i = 0, s = t.children.length; i < s; i += 1)!t.children[i] || typeof t.children[i] == "string" || t.children[i].attrs.name == e && (t.children = t.children.slice(0, i).concat(t.children.slice(i + 1)));
        };
        r.XmlJSON.prototype.deleteAttribute = function(t, e) {
            typeof t.attrs[e] < "u" && t.attrs.pop(e);
        };
        r.XmlJSON.prototype.setAttribute = function(t, e, i) {
            return t.attrs[e] = i, !1;
        };
        r.XmlJSON.prototype.nodeCopy = function(t, e) {
            if (!e) var e = {};
            if (typeof e == "object" && typeof e.length > "u") for(var i in t)typeof t[i] == "string" ? e[i] = t[i] : typeof t[i] == "object" && (typeof t[i].length > "u" ? e[i] = this.nodeCopy(t[i], {}) : e[i] = this.nodeCopy(t[i], []));
            else for(var s = 0, n = t.length; s < n; s += 1)typeof t[s] == "string" ? e[s] = t[s] : e[s] = this.nodeCopy(t[s], {});
            return e;
        };
        r.XmlJSON.prototype.getNodesByName = function(t, e, i, s) {
            if (!s) var s = [];
            if (!t || !t.children) return s;
            e === t.name && (i ? i === t.attrs.name && s.push(t) : s.push(t));
            for(var u = 0, f = t.children.length; u < f; u += 1)typeof t.children[u] == "object" && this.getNodesByName(t.children[u], e, i, s);
            return s;
        };
        r.XmlJSON.prototype.nodeNameIs = function(t, e) {
            return typeof t > "u" ? !1 : e == t.name;
        };
        r.XmlJSON.prototype.makeXml = function(t) {
            return typeof t == "string" && (t.slice(0, 1) === "<" ? t = this.jsonStringWalker.walkToObject(t) : t = JSON.parse(t)), t;
        };
        r.XmlJSON.prototype.insertChildNodeAfter = function(t, e, i, s) {
            for(var n = 0, a = t.children.length; n < a; n += 1)if (e === t.children[n]) {
                t.children = t.children.slice(0, n).concat([
                    s
                ]).concat(t.children.slice(n + 1));
                break;
            }
            return t;
        };
        r.XmlJSON.prototype.insertPublisherAndPlace = function(t) {
            if (t.name === "group") {
                for(var e = !0, i = [
                    "publisher",
                    "publisher-place"
                ], s = 0, n = t.children.length; s < n; s += 1){
                    var a = i.indexOf(t.children[s].attrs.variable), o = t.children[s].name === "text";
                    if (o && a > -1 && !t.children[s].attrs.prefix && !t.children[s].attrs.suffix) i = i.slice(0, a).concat(i.slice(a + 1));
                    else {
                        e = !1;
                        break;
                    }
                }
                e && !i.length && (t.attrs["has-publisher-and-publisher-place"] = !0);
            }
            for(var s = 0, n = t.children.length; s < n; s += 1)typeof t.children[s] == "object" && this.insertPublisherAndPlace(t.children[s]);
        };
        r.XmlJSON.prototype.isChildOfSubstitute = function(t) {
            if (t.length > 0) {
                var e = t.slice(), i = e.pop();
                return i === "substitute" ? !0 : this.isChildOfSubstitute(e);
            }
            return !1;
        };
        r.XmlJSON.prototype.addMissingNameNodes = function(t, e) {
            if (e || (e = []), t.name === "names" && !this.isChildOfSubstitute(e)) {
                for(var i = !0, s = 0, n = t.children.length; s < n; s++)if (t.children[s].name === "name") {
                    i = !1;
                    break;
                }
                i && (t.children = [
                    {
                        name: "name",
                        attrs: {},
                        children: []
                    }
                ].concat(t.children));
            }
            e.push(t.name);
            for(var s = 0, n = t.children.length; s < n; s += 1)typeof t.children[s] == "object" && this.addMissingNameNodes(t.children[s], e);
            e.pop();
        };
        r.XmlJSON.prototype.addInstitutionNodes = function(t) {
            var s;
            if (t.name === "names") {
                for(var h = {}, d = -1, p = 0, m = t.children.length; p < m; p += 1){
                    if (t.children[p].name == "name") {
                        for(var b in t.children[p].attrs)h[b] = t.children[p].attrs[b];
                        h.delimiter = t.children[p].attrs.delimiter, h.and = t.children[p].attrs.and, d = p;
                        for(var c = 0, S = t.children[p].children.length; c < S; c += 1)if (t.children[p].children[c].attrs.name === "family") for(var b in t.children[p].children[c].attrs)h[b] = t.children[p].children[c].attrs[b];
                    }
                    if (t.children[p].name == "institution") {
                        d = -1;
                        break;
                    }
                }
                if (d > -1) {
                    for(var s = this.nodeCopy(this.institution), p = 0, m = r.INSTITUTION_KEYS.length; p < m; p += 1){
                        var g = r.INSTITUTION_KEYS[p];
                        typeof h[g] < "u" && (s.children[0].attrs[g] = h[g]), h.delimiter && (s.attrs.delimiter = h.delimiter), h.and && (s.attrs.and = h.and);
                    }
                    t.children = t.children.slice(0, d + 1).concat([
                        s
                    ]).concat(t.children.slice(d + 1));
                }
            }
            for(var p = 0, m = t.children.length; p < m; p += 1)typeof t.children[p] != "string" && this.addInstitutionNodes(t.children[p]);
        };
        r.XmlJSON.prototype.flagDateMacros = function(t) {
            for(var e = 0, i = t.children.length; e < i; e += 1)t.children[e].name === "macro" && this.inspectDateMacros(t.children[e]) && (t.children[e].attrs["macro-has-date"] = "true");
        };
        r.XmlJSON.prototype.inspectDateMacros = function(t) {
            if (!t || !t.children) return !1;
            if (t.name === "date") return !0;
            for(var e = 0, i = t.children.length; e < i; e += 1)if (this.inspectDateMacros(t.children[e])) return !0;
            return !1;
        };
        r.stripXmlProcessingInstruction = function(t) {
            return t && (t = t.replace(/^<\?[^?]+\?>/, ""), t = t.replace(/<!--[^>]+-->/g, ""), t = t.replace(/^\s+/g, ""), t = t.replace(/\s+$/g, ""), t);
        };
        r.parseXml = function(t) {
            var i = {
                children: []
            }, s = [
                i.children
            ];
            function n(v) {
                v = v.split(/(?:\r\n|\n|\r)/).join(" ").replace(/>[	 ]+</g, "><").replace(/<\!--.*?-->/g, "");
                for(var y = v.split("><"), _ = null, E = 0, x = y.length; E < x; E++)E > 0 && (y[E] = "<" + y[E]), E < y.length - 1 && (y[E] = y[E] + ">"), typeof _ != "number" && (y[E].slice(0, 7) === "<style " || y[E].slice(0, 8) == "<locale ") && (_ = E);
                y = y.slice(_);
                for(var E = y.length - 2; E > -1; E--)if (y[E].slice(1).indexOf("<") === -1) {
                    var k = y[E].slice(0, 5);
                    y[E].slice(-2) !== "/>" && (k === "<term" ? y[E + 1].slice(0, 6) === "</term" && (y[E] = y[E] + y[E + 1], y = y.slice(0, E + 1).concat(y.slice(E + 2))) : [
                        "<sing",
                        "<mult"
                    ].indexOf(k) > -1 && y[E].slice(-2) !== "/>" && y[E + 1].slice(0, 1) === "<" && (y[E] = y[E] + y[E + 1], y = y.slice(0, E + 1).concat(y.slice(E + 2))));
                }
                return y;
            }
            function a(v) {
                return v.split("&amp;").join("&").split("&quot;").join('"').split("&gt;").join(">").split("&lt;").join("<").replace(/&#([0-9]{1,6});/gi, function(y, _) {
                    var E = parseInt(_, 10);
                    return String.fromCharCode(E);
                }).replace(/&#x([a-f0-9]{1,6});/gi, function(y, _) {
                    var E = parseInt(_, 16);
                    return String.fromCharCode(E);
                });
            }
            function o(v) {
                var y = v.match(/([^\'\"=	 ]+)=(?:\"[^\"]*\"|\'[^\']*\')/g);
                if (y) for(var _ = 0, E = y.length; _ < E; _++)y[_] = y[_].replace(/=.*/, "");
                return y;
            }
            function l(v, y) {
                var _ = RegExp("^.*[	 ]+" + y + `=("(?:[^"]*)"|'(?:[^']*)').*$`), E = v.match(_);
                return E ? E[1].slice(1, -1) : null;
            }
            function u(v) {
                var y = RegExp("^<([^	 />]+)"), _ = v.match(y);
                return _ ? _[1] : null;
            }
            function f(v) {
                var y = {};
                y.name = u(v), y.attrs = {};
                var _ = o(v);
                if (_) for(var E = 0, x = _.length; E < x; E++){
                    var k = {
                        name: _[E],
                        value: l(v, _[E])
                    };
                    y.attrs[k.name] = a(k.value);
                }
                return y.children = [], y;
            }
            function h(v) {
                var y = v.match(/^.*>([^<]*)<.*$/);
                return a(y[1]);
            }
            function d(v) {
                s.slice(-1)[0].push(v);
            }
            function p(v) {
                s.push(v.children);
            }
            function m(v) {
                var y;
                if (v.slice(1).indexOf("<") > -1) {
                    var _ = v.slice(0, v.indexOf(">") + 1);
                    y = f(_), y.children = [
                        h(v)
                    ], d(y);
                } else v.slice(-2) === "/>" ? (y = f(v), u(v) === "term" && y.children.push(""), d(y)) : v.slice(0, 2) === "</" ? s.pop() : (y = f(v), d(y), p(y));
            }
            for(var b = n(t), c = 0, S = b.length; c < S; c++){
                var g = b[c];
                m(g);
            }
            return i.children[0];
        };
        r.XmlDOM = function(t) {
            this.dataObj = t, typeof DOMParser > "u" ? (DOMParser = function() {}, DOMParser.prototype.parseFromString = function(a, o) {
                if (typeof ActiveXObject < "u") {
                    var l = new ActiveXObject("MSXML.DomDocument");
                    return l.async = !1, l.loadXML(a), l;
                } else if (typeof XMLHttpRequest < "u") {
                    var l = new XMLHttpRequest;
                    return o || (o = "text/xml"), l.open("GET", "data:" + o + ";charset=utf-8," + encodeURIComponent(a), !1), l.overrideMimeType && l.overrideMimeType(o), l.send(null), l.responseXML;
                } else if (typeof marknote < "u") {
                    var u = new marknote.Parser;
                    return u.parse(a);
                }
            }, this.hasAttributes = function(a) {
                var o;
                return a.attributes && a.attributes.length ? o = !0 : o = !1, o;
            }) : this.hasAttributes = function(a) {
                var o;
                return a.attributes && a.attributes.length ? o = !0 : o = !1, o;
            }, this.importNode = function(a, o) {
                var l;
                return typeof a.importNode > "u" ? l = this._importNode(a, o, !0) : l = a.importNode(o, !0), l;
            }, this._importNode = function(a, o, l) {
                switch(o.nodeType){
                    case 1:
                        var u = a.createElement(o.nodeName);
                        if (o.attributes && o.attributes.length > 0) for(var f = 0, h = o.attributes.length; f < h;)u.setAttribute(o.attributes[f].nodeName, o.getAttribute(o.attributes[f++].nodeName));
                        if (l && o.childNodes && o.childNodes.length > 0) for(var f = 0, h = o.childNodes.length; f < h;)u.appendChild(this._importNode(a, o.childNodes[f++], l));
                        return u;
                    case 3:
                    case 4:
                    case 8:
                }
            }, this.parser = new DOMParser;
            var e = '<docco><institution institution-parts="long" delimiter=", " substitute-use-first="1" use-last="1"><institution-part name="long"/></institution></docco>', i = this.parser.parseFromString(e, "text/xml"), s = i.getElementsByTagName("institution");
            this.institution = s.item(0);
            var n = i.getElementsByTagName("institution-part");
            this.institutionpart = n.item(0), this.ns = "http://purl.org/net/xbiblio/csl";
        };
        r.XmlDOM.prototype.clean = function(t) {
            return t = t.replace(/<\?[^?]+\?>/g, ""), t = t.replace(/<![^>]+>/g, ""), t = t.replace(/^\s+/, ""), t = t.replace(/\s+$/, ""), t = t.replace(/^\n*/, ""), t;
        };
        r.XmlDOM.prototype.getStyleId = function(t, e) {
            var i = "", s = "id";
            e && (s = "title");
            var n = t.getElementsByTagName(s);
            return n && n.length && (n = n.item(0)), n && (i = n.textContent), i || (i = n.innerText), i || (i = n.innerHTML), i;
        };
        r.XmlDOM.prototype.children = function(t) {
            var e, i, s, n;
            if (t) {
                for(n = [], e = t.childNodes, i = 0, s = e.length; i < s; i += 1)e[i].nodeName != "#text" && n.push(e[i]);
                return n;
            } else return [];
        };
        r.XmlDOM.prototype.nodename = function(t) {
            var e = t.nodeName;
            return e;
        };
        r.XmlDOM.prototype.attributes = function(t) {
            var e, i, s, o, l;
            if (e = new Object, t && this.hasAttributes(t)) for(i = t.attributes, o = 0, l = i.length; o < l; o += 1)s = i[o], e["@" + s.name] = s.value;
            return e;
        };
        r.XmlDOM.prototype.content = function(t) {
            var e;
            return typeof t.textContent < "u" ? e = t.textContent : typeof t.innerText < "u" ? e = t.innerText : e = t.txt, e;
        };
        r.XmlDOM.prototype.namespace = {
            xml: "http://www.w3.org/XML/1998/namespace"
        };
        r.XmlDOM.prototype.numberofnodes = function(t) {
            return t ? t.length : 0;
        };
        r.XmlDOM.prototype.getAttributeName = function(t) {
            var e = t.name;
            return e;
        };
        r.XmlDOM.prototype.getAttributeValue = function(t, e, i) {
            var s = "";
            return i && (e = i + ":" + e), t && this.hasAttributes(t) && t.getAttribute(e) && (s = t.getAttribute(e)), s;
        };
        r.XmlDOM.prototype.getNodeValue = function(t, e) {
            var i = null;
            if (e) {
                var s = t.getElementsByTagName(e);
                s.length > 0 && (typeof s[0].textContent < "u" ? i = s[0].textContent : typeof s[0].innerText < "u" ? i = s[0].innerText : i = s[0].text);
            }
            return i === null && t && t.childNodes && (t.childNodes.length == 0 || t.childNodes.length == 1 && t.firstChild.nodeName == "#text") && (typeof t.textContent < "u" ? i = t.textContent : typeof t.innerText < "u" ? i = t.innerText : i = t.text), i === null && (i = t), i;
        };
        r.XmlDOM.prototype.setAttributeOnNodeIdentifiedByNameAttribute = function(t, e, i, s, n) {
            var a, o, u, f;
            for(s.slice(0, 1) === "@" && (s = s.slice(1)), u = t.getElementsByTagName(e), a = 0, o = u.length; a < o; a += 1)f = u[a], f.getAttribute("name") == i && f.setAttribute(s, n);
        };
        r.XmlDOM.prototype.deleteNodeByNameAttribute = function(t, e) {
            var i, s, n, a;
            for(a = t.childNodes, i = 0, s = a.length; i < s; i += 1)n = a[i], !(!n || n.nodeType == n.TEXT_NODE) && this.hasAttributes(n) && n.getAttribute("name") == e && t.removeChild(a[i]);
        };
        r.XmlDOM.prototype.deleteAttribute = function(t, e) {
            t.removeAttribute(e);
        };
        r.XmlDOM.prototype.setAttribute = function(t, e, i) {
            return t.ownerDocument || (t = t.firstChild), [
                "function",
                "unknown"
            ].indexOf(typeof t.setAttribute) > -1 && t.setAttribute(e, i), !1;
        };
        r.XmlDOM.prototype.nodeCopy = function(t) {
            var e = t.cloneNode(!0);
            return e;
        };
        r.XmlDOM.prototype.getNodesByName = function(t, e, i) {
            var s, n, a, o, l;
            for(s = [], n = t.getElementsByTagName(e), o = 0, l = n.length; o < l; o += 1)a = n.item(o), !(i && !(this.hasAttributes(a) && a.getAttribute("name") == i)) && s.push(a);
            return s;
        };
        r.XmlDOM.prototype.nodeNameIs = function(t, e) {
            return e == t.nodeName;
        };
        r.XmlDOM.prototype.makeXml = function(t) {
            t || (t = "<docco><bogus/></docco>"), t = t.replace(/\s*<\?[^>]*\?>\s*\n*/g, "");
            var s = this.parser.parseFromString(t, "application/xml");
            return s.firstChild;
        };
        r.XmlDOM.prototype.insertChildNodeAfter = function(t, e, i, s) {
            var n;
            return n = this.importNode(e.ownerDocument, s), t.replaceChild(n, e), t;
        };
        r.XmlDOM.prototype.insertPublisherAndPlace = function(t) {
            for(var e = t.getElementsByTagName("group"), i = 0, s = e.length; i < s; i += 1){
                for(var n = e.item(i), a = [], o = 0, l = n.childNodes.length; o < l; o += 1)n.childNodes.item(o).nodeType !== 1 && a.push(o);
                if (n.childNodes.length - a.length === 2) {
                    for(var u = [], o = 0, l = 2; o < l; o += 1)if (!(a.indexOf(o) > -1)) {
                        for(var f = n.childNodes.item(o), h = [], d = 0, p = f.childNodes.length; d < p; d += 1)f.childNodes.item(d).nodeType !== 1 && h.push(d);
                        if (f.childNodes.length - h.length === 0 && (u.push(f.getAttribute("variable")), f.getAttribute("suffix") || f.getAttribute("prefix"))) {
                            u = [];
                            break;
                        }
                    }
                    u.indexOf("publisher") > -1 && u.indexOf("publisher-place") > -1 && n.setAttribute("has-publisher-and-publisher-place", !0);
                }
            }
        };
        r.XmlDOM.prototype.isChildOfSubstitute = function(t) {
            return t.parentNode ? t.parentNode.tagName.toLowerCase() === "substitute" ? !0 : this.isChildOfSubstitute(t.parentNode) : !1;
        };
        r.XmlDOM.prototype.addMissingNameNodes = function(t) {
            for(var e = t.getElementsByTagName("names"), i = 0, s = e.length; i < s; i += 1){
                var n = e.item(i), a = n.getElementsByTagName("name");
                if ((!a || a.length === 0) && !this.isChildOfSubstitute(n)) {
                    var o = n.ownerDocument, l = o.createElement("name");
                    n.appendChild(l);
                }
            }
        };
        r.XmlDOM.prototype.addInstitutionNodes = function(t) {
            var e, i, s, n, a, o, l, f, h;
            for(e = t.getElementsByTagName("names"), f = 0, h = e.length; f < h; f += 1)if (i = e.item(f), o = i.getElementsByTagName("name"), o.length != 0 && (s = i.getElementsByTagName("institution"), s.length == 0)) {
                n = this.importNode(t.ownerDocument, this.institution), a = n.getElementsByTagName("institution-part").item(0), l = o.item(0), i.insertBefore(n, l.nextSibling);
                for(var d = 0, p = r.INSTITUTION_KEYS.length; d < p; d += 1){
                    var m = r.INSTITUTION_KEYS[d], b = l.getAttribute(m);
                    b && a.setAttribute(m, b);
                }
                for(var c = l.getElementsByTagName("name-part"), d = 0, p = c.length; d < p; d += 1)if (c[d].getAttribute("name") === "family") for(var S = 0, g = r.INSTITUTION_KEYS.length; S < g; S += 1){
                    var m = r.INSTITUTION_KEYS[S], b = c[d].getAttribute(m);
                    b && a.setAttribute(m, b);
                }
            }
        };
        r.XmlDOM.prototype.flagDateMacros = function(t) {
            var e, i, s, n, a = t.getElementsByTagName("macro");
            for(e = 0, i = a.length; e < i; e += 1)s = a.item(e), n = s.getElementsByTagName("date"), n.length && s.setAttribute("macro-has-date", "true");
        };
        r.setupXml = function(t) {
            var e = {}, i = null;
            return typeof t < "u" ? typeof t == "string" ? (t = t.replace("^\uFEFF", "").replace(/^\s+/, ""), t.slice(0, 1) === "<" ? e = r.parseXml(t) : e = JSON.parse(t), i = new r.XmlJSON(e)) : typeof t.getAttribute < "u" ? i = new r.XmlDOM(t) : typeof t.toXMLString < "u" ? i = new r.XmlE4X(t) : i = new r.XmlJSON(t) : r.error("unable to parse XML input"), i || r.error("citeproc-js error: unable to parse CSL style or locale object"), i;
        };
        r.getSortCompare = function(t) {
            if (r.stringCompare) return r.stringCompare;
            var e = this, i, s = {
                sensitivity: "base",
                ignorePunctuation: !0,
                numeric: !0
            };
            t || (t = "en-US"), i = function(u, f) {
                return r.toLocaleLowerCase.call(e, u).localeCompare(r.toLocaleLowerCase.call(e, f), t, s);
            };
            var n = function(u) {
                return u.replace(/^[\[\]\'\"]*/g, "");
            }, a = function() {
                return i("[x", "x") ? function(u, f) {
                    return i(n(u), n(f));
                } : !1;
            }, o = a(), l = function(u, f) {
                return o ? o(u, f) : i(u, f);
            };
            return l;
        };
        r.ambigConfigDiff = function(t, e) {
            var i, s, n, a;
            if (t.names.length !== e.names.length) return 1;
            for(i = 0, s = t.names.length; i < s; i += 1){
                if (t.names[i] !== e.names[i]) return 1;
                for(n = 0, a = t.givens[i]; n < a; n += 1)if (t.givens[i][n] !== e.givens[i][n]) return 1;
            }
            return t.disambiguate != e.disambiguate || t.year_suffix !== e.year_suffix ? 1 : 0;
        };
        r.cloneAmbigConfig = function(t, e) {
            var i, s, n, a, o, l = {};
            for(l.names = [], l.givens = [], l.year_suffix = !1, l.disambiguate = !1, i = 0, s = t.names.length; i < s; i += 1)o = t.names[i], l.names[i] = o;
            for(i = 0, s = t.givens.length; i < s; i += 1){
                for(o = [], n = 0, a = t.givens[i].length; n < a; n += 1)o.push(t.givens[i][n]);
                l.givens.push(o);
            }
            return e ? (l.year_suffix = e.year_suffix, l.disambiguate = e.disambiguate) : (l.year_suffix = t.year_suffix, l.disambiguate = t.disambiguate), l;
        };
        r.getAmbigConfig = function() {
            var t, e;
            t = this.tmp.disambig_request, t || (t = this.tmp.disambig_settings);
            var e = r.cloneAmbigConfig(t);
            return e;
        };
        r.getMaxVals = function() {
            return this.tmp.names_max.mystack.slice();
        };
        r.getMinVal = function() {
            return this.tmp["et-al-min"];
        };
        r.tokenExec = function(t, e, i) {
            var s, n, a, o;
            o = !1, s = t.next, n = !1;
            var l = function(h) {
                return h ? (this.tmp.jump.replace("succeed"), t.succeed) : (this.tmp.jump.replace("fail"), t.fail);
            };
            t.test && (s = l.call(this, t.test(e, i)));
            for(var u = 0, f = t.execs.length; u < f; u++)a = t.execs[u], n = a.call(t, this, e, i), n && (s = n);
            return o && r.debug(t.name + " (" + t.tokentype + ") ---> done"), s;
        };
        r.expandMacro = function(t, e) {
            var i, s, n, a;
            i = t.postponed_macro;
            var o = t.strings.sort_direction;
            t = new r.Token("group", r.START);
            var l = !1, u = !1;
            s = this.cslXml.getNodesByName(this.cslXml.dataObj, "macro", i), s.length && (u = this.cslXml.getAttributeValue(s[0], "cslid"), l = this.cslXml.getAttributeValue(s[0], "macro-has-date")), l && (i = i + "@" + this.build.current_default_locale, a = function(d) {
                d.tmp.extension && (d.tmp["doing-macro-with-date"] = !0);
            }, t.execs.push(a)), this.build.macro_stack.indexOf(i) > -1 ? r.error('CSL processor error: call to macro "' + i + '" would cause an infinite loop') : this.build.macro_stack.push(i), t.cslid = u, r.MODULE_MACROS[i] && (t.juris = i, this.opt.update_mode = r.POSITION), r.Node.group.build.call(t, this, e, !0), this.cslXml.getNodeValue(s) || r.error('CSL style error: undefined macro "' + i + '"');
            var f = r.getMacroTarget.call(this, i);
            if (f && (r.buildMacro.call(this, f, s), r.configureMacro.call(this, f)), !this.build.extension) {
                var a = function(p) {
                    return function(m, b, c) {
                        for(var S = 0; S < m.macros[p].length;)S = r.tokenExec.call(m, m.macros[p][S], b, c);
                    };
                }(i), h = new r.Token("text", r.SINGLETON);
                h.execs.push(a), e.push(h);
            }
            n = new r.Token("group", r.END), n.strings.sort_direction = o, l && (a = function(d) {
                d.tmp.extension && (d.tmp["doing-macro-with-date"] = !1);
            }, n.execs.push(a)), t.juris && (n.juris = i), r.Node.group.build.call(n, this, e, !0), this.build.macro_stack.pop();
        };
        r.getMacroTarget = function(t) {
            var e = !1;
            return this.build.extension ? e = this[this.build.root + this.build.extension].tokens : this.macros[t] || (e = [], this.macros[t] = e), e;
        };
        r.buildMacro = function(t, e) {
            var i = r.makeBuilder(this, t), s;
            typeof e.length > "u" ? s = e : s = e[0], i(s);
        };
        r.configureMacro = function(t) {
            this.build.extension || this.configureTokenList(t);
        };
        r.XmlToToken = function(t, e, i, s) {
            var n, a, l, u, f, h, d;
            if (n = t.cslXml.nodename(this), !(t.build.skip && t.build.skip !== n)) {
                if (!n) {
                    a = t.cslXml.content(this), a && (t.build.text = a);
                    return;
                }
                if (r.Node[t.cslXml.nodename(this)] || r.error('Undefined node name "' + n + '".'), [], l = t.cslXml.attributes(this), u = r.setDecorations.call(this, t, l), f = new r.Token(n, e), e !== r.END || n === "if" || n === "else-if" || n === "layout") {
                    for(var h in l)if (l.hasOwnProperty(h)) {
                        if (e === r.END && h !== "@language" && h !== "@locale") continue;
                        if (l.hasOwnProperty(h)) if (r.Attributes[h]) try {
                            r.Attributes[h].call(f, t, "" + l[h]);
                        } catch (m) {
                            r.error(h + " attribute: " + m);
                        }
                        else r.debug('warning: undefined attribute "' + h + '" in style');
                    }
                    f.decorations = u, r.DATE_VARIABLES.indexOf(l["@variable"]) > -1 && s.push(f.variables);
                } else e === r.END && l["@variable"] && (f.hasVariable = !0, r.DATE_VARIABLES.indexOf(l["@variable"]) > -1 && (f.variables = s.pop()));
                i ? d = i : d = t[t.build.area].tokens, r.Node[n].build.call(f, t, d, !0);
            }
        };
        r.DateParser = function() {
            for(var t = [
                [
                    "\u660E\u6CBB",
                    1867
                ],
                [
                    "\u5927\u6B63",
                    1911
                ],
                [
                    "\u662D\u548C",
                    1925
                ],
                [
                    "\u5E73\u6210",
                    1988
                ]
            ], e = {}, i = 0, s = t.length; i < s; i++){
                var n = t[i][0], a = t[i][1];
                e[n] = a;
            }
            for(var o = [], l = {}, i = 0, s = t.length; i < s; i++){
                var u = t[i], a = u[0];
                o.push(a), l[u[0]] = u[1];
            }
            var f = o.join("|"), h = new RegExp("(?:" + f + ")(?:[0-9]+)"), d = new RegExp("(?:" + f + ")(?:[0-9]+)", "g"), p = /(\u6708|\u5E74)/g, m = /\u65E5/g, b = /\u301c/g, c = "(?:[?0-9]{1,2}%%NUMD%%){0,2}[?0-9]{4}(?![0-9])", S = "[?0-9]{4}(?:%%NUMD%%[?0-9]{1,2}){0,2}(?![0-9])", g = "[?0-9]{1,3}", v = "[%%DATED%%]", y = "[?~]", _ = "[^-/~?0-9]+", E = "(" + S + "|" + c + "|" + g + "|" + v + "|" + y + "|" + _ + ")", x = new RegExp(E.replace(/%%NUMD%%/g, "-").replace(/%%DATED%%/g, "-")), k = new RegExp(E.replace(/%%NUMD%%/g, "-").replace(/%%DATED%%/g, "/")), O = new RegExp(E.replace(/%%NUMD%%/g, "/").replace(/%%DATED%%/g, "-")), A = "january february march april may june july august september october november december spring summer fall winter spring summer";
            this.monthStrings = A.split(" "), this.setOrderDayMonth = function() {
                this.monthGuess = 1, this.dayGuess = 0;
            }, this.setOrderMonthDay = function() {
                this.monthGuess = 0, this.dayGuess = 1;
            }, this.resetDateParserMonths = function() {
                this.monthSets = [];
                for(var N = 0, T = this.monthStrings.length; N < T; N++)this.monthSets.push([
                    this.monthStrings[N]
                ]);
                this.monthAbbrevs = [];
                for(var N = 0, T = this.monthSets.length; N < T; N++){
                    this.monthAbbrevs.push([]);
                    for(var D = 0, C = this.monthSets[N].length; D < C; D++)this.monthAbbrevs[N].push(this.monthSets[N][0].slice(0, 3));
                }
                this.monthRexes = [];
                for(var N = 0, T = this.monthAbbrevs.length; N < T; N++)this.monthRexes.push(new RegExp("(?:" + this.monthAbbrevs[N].join("|") + ")"));
            }, this.addDateParserMonths = function(N) {
                if (typeof N == "string" && (N = N.split(/\s+/)), N.length !== 12 && N.length !== 16) {
                    r.debug("month [+season] list of " + N.length + ", expected 12 or 16. Ignoring.");
                    return;
                }
                for(var T = 0, D = N.length; T < D; T++){
                    for(var C = null, I = !1, P = 3, M = {}, F = 0, U = this.monthAbbrevs.length; F < U; F++){
                        if (M[F] = {}, F === T) {
                            for(var j = 0, X = this.monthAbbrevs[T].length; j < X; j++)if (this.monthAbbrevs[T][j] === N[T].slice(0, this.monthAbbrevs[T][j].length)) {
                                I = !0;
                                break;
                            }
                        } else for(var j = 0, X = this.monthAbbrevs[F].length; j < X; j++)if (C = this.monthAbbrevs[F][j].length, this.monthAbbrevs[F][j] === N[T].slice(0, C)) {
                            for(; this.monthSets[F][j].slice(0, C) === N[T].slice(0, C);)if (C > N[T].length || C > this.monthSets[F][j].length) {
                                r.debug("unable to disambiguate month string in date parser: " + N[T]);
                                break;
                            } else C += 1;
                            P = C, M[F][j] = C;
                        }
                        for(var R in M)for(var w in M[R])C = M[R][w], R = parseInt(R, 10), w = parseInt(w, 10), this.monthAbbrevs[R][w] = this.monthSets[R][w].slice(0, C);
                    }
                    I || (this.monthSets[T].push(N[T]), this.monthAbbrevs[T].push(N[T].slice(0, P)));
                }
                this.monthRexes = [], this.monthRexStrs = [];
                for(var T = 0, D = this.monthAbbrevs.length; T < D; T++)this.monthRexes.push(new RegExp("^(?:" + this.monthAbbrevs[T].join("|") + ")")), this.monthRexStrs.push("^(?:" + this.monthAbbrevs[T].join("|") + ")");
                if (this.monthAbbrevs.length === 18) for(var T = 12, D = 14; T < D; T++)this.monthRexes[T + 4] = new RegExp("^(?:" + this.monthAbbrevs[T].join("|") + ")"), this.monthRexStrs[T + 4] = "^(?:" + this.monthAbbrevs[T].join("|") + ")";
            }, this.convertDateObjectToArray = function(N) {
                N["date-parts"] = [], N["date-parts"].push([]);
                for(var T = 0, D, C = 0, I = 3; C < I && (D = [
                    "year",
                    "month",
                    "day"
                ][C], !!N[D]); C++)T += 1, N["date-parts"][0].push(N[D]), delete N[D];
                N["date-parts"].push([]);
                for(var C = 0, I = T; C < I && (D = [
                    "year_end",
                    "month_end",
                    "day_end"
                ][C], !!N[D]); C++)N["date-parts"][1].push(N[D]), delete N[D];
                return N["date-parts"][0].length !== N["date-parts"][1].length && N["date-parts"].pop(), N;
            }, this.convertDateObjectToString = function(N) {
                for(var T = [], D = 0, C = 3; D < C && N[r.DATE_PARTS_ALL[D]]; D += 1)T.push(N[r.DATE_PARTS_ALL[D]]);
                return T.join("-");
            }, this._parseNumericDate = function(N, T, D, C) {
                D || (D = "");
                for(var I = C.split(T), P = 0, M = I.length; P < M; P++)if (I[P].length === 4) {
                    N["year" + D] = I[P].replace(/^0*/, ""), P ? I = I.slice(0, P) : I = I.slice(1);
                    break;
                }
                for(var P = 0, M = I.length; P < M; P++)I[P] = parseInt(I[P], 10);
                if (I.length === 1 || I.length === 2 && !I[1]) {
                    var F = I[0];
                    F && (N["month" + D] = "" + I[0]);
                } else if (I.length === 2) if (I[this.monthGuess] > 12) {
                    var F = I[this.dayGuess], U = I[this.monthGuess];
                    F && (N["month" + D] = "" + F, U && (N["day" + D] = "" + U));
                } else {
                    var F = I[this.monthGuess], U = I[this.dayGuess];
                    F && (N["month" + D] = "" + F, U && (N["day" + D] = "" + U));
                }
            }, this.parseDateToObject = function(N) {
                var T = N, D = -1, C = -1, I = !1, P;
                if (N) {
                    if (N = N.replace(/^(.*[0-9])T[0-9].*/, "$1"), N.slice(0, 1) === "-" && (I = !0, N = N.slice(1)), N.match(/^[0-9]{1,3}$/)) for(; N.length < 4;)N = "0" + N;
                    N = "" + N, N = N.replace(/\s*[0-9]{2}:[0-9]{2}(?::[0-9]+)/, "");
                    var M = N.match(p);
                    if (M) {
                        N = N.replace(/\s+/g, ""), N = N.replace(m, ""), N = N.replace(p, "-"), N = N.replace(b, "/"), N = N.replace(/\-\//g, "/"), N = N.replace(/-$/g, "");
                        var F = N.split(h);
                        P = [];
                        var U = N.match(d);
                        if (U) {
                            for(var j = [], X = 0, R = U.length; X < R; X++)j = j.concat(U[X].match(/([^0-9]+)([0-9]+)/).slice(1));
                            for(var X = 0, R = F.length; X < R; X++)if (P.push(F[X]), X !== R - 1) {
                                var w = X * 2;
                                P.push(j[w]), P.push(j[w + 1]);
                            }
                        } else P = F;
                        for(var X = 1, R = P.length; X < R; X += 3)P[X + 1] = l[P[X]] + parseInt(P[X + 1], 10), P[X] = "";
                        N = P.join(""), N = N.replace(/\s*-\s*$/, "").replace(/\s*-\s*\//, "/"), N = N.replace(/\.\s*$/, ""), N = N.replace(/\.(?! )/, ""), D = N.indexOf("/"), C = N.indexOf("-");
                    }
                }
                N = N.replace(/([A-Za-z])\./g, "$1");
                var L = "", z = "", B = {}, q, G;
                if (N.slice(0, 1) === '"' && N.slice(-1) === '"') return B.literal = N.slice(1, -1), B;
                if (D > -1 && C > -1) {
                    var V = N.split("/");
                    V.length > 3 ? (q = "-", N = N.replace(/\_/g, "-"), G = "/", P = N.split(O)) : (q = "/", N = N.replace(/\_/g, "/"), G = "-", P = N.split(k));
                } else N = N.replace(/\//g, "-"), N = N.replace(/\_/g, "-"), q = "-", G = "-", P = N.split(x);
                for(var $ = [], X = 0, R = P.length; X < R; X++){
                    var M = P[X].match(/^\s*([\-\/]|[^\-\/\~\?0-9]+|[\-~?0-9]+)\s*$/);
                    M && $.push(M[1]);
                }
                var J = $.indexOf(q), Y = [], Q = !1;
                J > -1 ? (Y.push([
                    0,
                    J
                ]), Y.push([
                    J + 1,
                    $.length
                ]), Q = !0) : Y.push([
                    0,
                    $.length
                ]);
                for(var W = "", X = 0, R = Y.length; X < R; X++){
                    var tt = Y[X], H = $.slice(tt[0], tt[1]);
                    t: for(var et = 0, rt = H.length; et < rt; et++){
                        var K = H[et];
                        if (K.indexOf(G) > -1) {
                            this._parseNumericDate(B, G, W, K);
                            continue;
                        }
                        if (K.match(/[0-9]{4}/)) {
                            B["year" + W] = K.replace(/^0*/, "");
                            continue;
                        }
                        (K === "~" || K === "?" || K === "c" || K.match(/^cir/)) && (B.circa = !0);
                        for(var it = 0, gt = this.monthRexes.length; it < gt; it++)if (K.toLocaleLowerCase().match(this.monthRexes[it])) {
                            B["month" + W] = "" + (parseInt(it, 10) + 1);
                            continue t;
                        }
                        if (K.match(/^[0-9]+$/) && (L = K), K.toLocaleLowerCase().match(/^bc/) && L) {
                            B["year" + W] = "" + L * -1, L = "";
                            continue;
                        }
                        if (K.toLocaleLowerCase().match(/^ad/) && L) {
                            B["year" + W] = "" + L, L = "";
                            continue;
                        }
                        if (K.toLocaleLowerCase().match(/(?:mic|tri|hil|eas)/) && !B["season" + W]) {
                            z = K;
                            continue;
                        }
                    }
                    L && (B["day" + W] = L, L = ""), z && !B["season" + W] && (B["season" + W] = z.trim(), z = ""), W = "_end";
                }
                if (Q) for(var et = 0, rt = r.DATE_PARTS_ALL.length; et < rt; et++){
                    var Z = r.DATE_PARTS_ALL[et];
                    B[Z] && !B[Z + "_end"] ? B[Z + "_end"] = B[Z] : !B[Z] && B[Z + "_end"] && (B[Z] = B[Z + "_end"]);
                }
                (!B.year || B.year && B.day && !B.month) && (B = {
                    literal: T
                });
                for(var ut = [
                    "year",
                    "month",
                    "day",
                    "year_end",
                    "month_end",
                    "day_end"
                ], X = 0, R = ut.length; X < R; X++){
                    var ht = ut[X];
                    typeof B[ht] == "string" && B[ht].match(/^[0-9]+$/) && (B[ht] = parseInt(B[ht], 10));
                }
                return I && Object.keys(B).indexOf("year") > -1 && (B.year = B.year * -1), B;
            }, this.parseDateToArray = function(N) {
                return this.convertDateObjectToArray(this.parseDateToObject(N));
            }, this.parseDateToString = function(N) {
                return this.convertDateObjectToString(this.parseDateToObject(N));
            }, this.parse = function(N) {
                return this.parseDateToObject(N);
            }, this.setOrderMonthDay(), this.resetDateParserMonths();
        };
        r.DateParser = new r.DateParser;
        r.Engine = function(t, e, i, s) {
            var n, a;
            this.processor_version = r.PROCESSOR_VERSION, this.csl_version = "1.0", this.sys = t, typeof Object.assign != "function" && Object.defineProperty(Object, "assign", {
                value: function(d) {
                    "use strict";
                    if (d == null) throw new TypeError("Cannot convert undefined or null to object");
                    for(var p = Object(d), m = 1; m < arguments.length; m++){
                        var b = arguments[m];
                        if (b != null) for(var c in b)Object.prototype.hasOwnProperty.call(b, c) && (p[c] = b[c]);
                    }
                    return p;
                },
                writable: !0,
                configurable: !0
            }), t.variableWrapper && (r.VARIABLE_WRAPPER_PREPUNCT_REX = new RegExp("^([" + [
                " "
            ].concat(r.SWAPPING_PUNCTUATION).join("") + "]*)(.*)")), r.retrieveStyleModule && (this.sys.retrieveStyleModule = r.retrieveStyleModule), r.getAbbreviation && (this.sys.getAbbreviation = r.getAbbreviation), this.sys.stringCompare && (r.stringCompare = this.sys.stringCompare), this.sys.AbbreviationSegments = r.AbbreviationSegments, this.transform = new r.Transform(this), this.setParseNames = function(h) {
                this.opt["parse-names"] = h;
            }, this.opt = new r.Engine.Opt, this.tmp = new r.Engine.Tmp, this.build = new r.Engine.Build, this.fun = new r.Engine.Fun(this), this.configure = new r.Engine.Configure, this.citation_sort = new r.Engine.CitationSort, this.bibliography_sort = new r.Engine.BibliographySort, this.citation = new r.Engine.Citation(this), this.bibliography = new r.Engine.Bibliography, this.intext = new r.Engine.InText, this.output = new r.Output.Queue(this), this.dateput = new r.Output.Queue(this), this.cslXml = r.setupXml(e);
            for(var o in r.SYS_OPTIONS){
                var l = r.SYS_OPTIONS[o];
                typeof this.sys[l] == "boolean" && (this.opt.development_extensions[l] = this.sys[l]);
            }
            (this.opt.development_extensions.uppercase_subtitles || this.opt.development_extensions.implicit_short_title) && (this.opt.development_extensions.main_title_from_short_title = !0), this.opt.development_extensions.csl_reverse_lookup_support && (this.build.cslNodeId = 0, this.setCslNodeIds = function(h, d) {
                var p = this.cslXml.children(h);
                this.cslXml.setAttribute(h, "cslid", this.build.cslNodeId), this.opt.nodenames.push(d), this.build.cslNodeId += 1;
                for(var m = 0, b = this.cslXml.numberofnodes(p); m < b; m += 1)d = this.cslXml.nodename(p[m]), d && this.setCslNodeIds(p[m], d);
            }, this.setCslNodeIds(this.cslXml.dataObj, "style")), this.cslXml.addMissingNameNodes(this.cslXml.dataObj), this.cslXml.addInstitutionNodes(this.cslXml.dataObj), this.cslXml.insertPublisherAndPlace(this.cslXml.dataObj), this.cslXml.flagDateMacros(this.cslXml.dataObj), n = this.cslXml.attributes(this.cslXml.dataObj), typeof n["@sort-separator"] > "u" && this.cslXml.setAttribute(this.cslXml.dataObj, "sort-separator", ", "), this.opt["initialize-with-hyphen"] = !0, this.setStyleAttributes(), this.opt.xclass = this.cslXml.getAttributeValue(this.cslXml.dataObj, "class"), this.opt.class = this.opt.xclass, this.opt.styleID = this.cslXml.getStyleId(this.cslXml.dataObj), this.opt.styleName = this.cslXml.getStyleId(this.cslXml.dataObj, !0), this.opt.version.slice(0, 4) === "1.1m" && (this.opt.development_extensions.consolidate_legal_items = !0, this.opt.development_extensions.consolidate_container_items = !0, this.opt.development_extensions.main_title_from_short_title = !0, this.opt.development_extensions.expect_and_symbol_form = !0, this.opt.development_extensions.require_explicit_legal_case_title_short = !0, this.opt.development_extensions.force_jurisdiction = !0, this.opt.development_extensions.force_title_abbrev_fallback = !0), i && (i = i.replace("_", "-"), i = r.normalizeLocaleStr(i)), this.opt["default-locale"][0] && (this.opt["default-locale"][0] = this.opt["default-locale"][0].replace("_", "-"), this.opt["default-locale"][0] = r.normalizeLocaleStr(this.opt["default-locale"][0])), i && s && (this.opt["default-locale"] = [
                i
            ]), i && !s && this.opt["default-locale"][0] && (i = this.opt["default-locale"][0]), this.opt["default-locale"].length === 0 && (i || (i = "en-US"), this.opt["default-locale"].push("en-US")), i || (i = this.opt["default-locale"][0]), a = r.localeResolve(i), this.opt.lang = a.best, this.opt["default-locale"][0] = a.best, this.locale = {}, this.opt["default-locale-sort"] || (this.opt["default-locale-sort"] = this.opt["default-locale"][0]), "dale|".localeCompare("daleb", this.opt["default-locale-sort"]) > -1 ? this.opt.sort_sep = "@" : this.opt.sort_sep = "|", this.localeConfigure(a);
            function u(d) {
                var d = d.slice(), p = new RegExp("(?:(?:[?!:]*\\s+|-|^)(?:" + d.join("|") + ")(?=[!?:]*\\s+|-|$))", "g");
                return p;
            }
            this.locale[this.opt.lang].opts["skip-words-regexp"] = u(this.locale[this.opt.lang].opts["skip-words"]), this.output.adjust = new r.Output.Queue.adjust(this.getOpt("punctuation-in-quote")), this.registry = new r.Registry(this), this.macros = {}, this.build.area = "citation";
            var f = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);
            this.buildTokenLists(f, this[this.build.area].tokens), this.build.area = "bibliography";
            var f = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);
            this.buildTokenLists(f, this[this.build.area].tokens), this.build.area = "intext";
            var f = this.cslXml.getNodesByName(this.cslXml.dataObj, this.build.area);
            this.buildTokenLists(f, this[this.build.area].tokens), this.opt.parallel.enable && (this.parallel = new r.Parallel(this)), this.juris = {}, this.configureTokenLists(), this.disambiguate = new r.Disambiguation(this), this.splice_delimiter = !1, this.fun.dateparser = r.DateParser, this.fun.flipflopper = new r.Util.FlipFlopper(this), this.setCloseQuotesArray(), this.fun.ordinalizer.init(this), this.fun.long_ordinalizer.init(this), this.fun.page_mangler = r.Util.PageRangeMangler.getFunction(this, "page"), this.fun.year_mangler = r.Util.PageRangeMangler.getFunction(this, "year"), this.setOutputFormat("html");
        };
        r.Engine.prototype.setCloseQuotesArray = function() {
            var t;
            t = [], t.push(this.getTerm("close-quote")), t.push(this.getTerm("close-inner-quote")), t.push('"'), t.push("'"), this.opt.close_quotes_array = t;
        };
        r.makeBuilder = function(t, e) {
            var i = [], s = [];
            function n(u) {
                s.push(u), r.XmlToToken.call(u, t, r.START, e, i);
            }
            function a() {
                var u = s.pop();
                r.XmlToToken.call(u, t, r.END, e, i);
            }
            function o(u) {
                r.XmlToToken.call(u, t, r.SINGLETON, e, i);
            }
            function l(u, f, h) {
                h || (h = []), u || (u = []), typeof u.length > "u" && (u = [
                    u
                ]);
                for(var d = 0; d < u.length; d++){
                    var p = u[d];
                    t.cslXml.nodename(p) !== null && (f && t.cslXml.nodename(p) === "date" && (r.Util.fixDateNode.call(t, f, d, p), p = t.cslXml.children(f)[d]), t.cslXml.numberofnodes(t.cslXml.children(p)) ? (n(p), l(t.cslXml.children(p), p, h), a()) : o(p));
                }
            }
            return l;
        };
        r.Engine.prototype.buildTokenLists = function(t, e) {
            if (this.cslXml.getNodeValue(t)) {
                var i = r.makeBuilder(this, e), s;
                typeof t.length > "u" ? s = t : s = t[0], i(s);
            }
        };
        r.Engine.prototype.setStyleAttributes = function() {
            var i, t, e, i = {};
            i.name = this.cslXml.nodename(this.cslXml.dataObj), t = this.cslXml.attributes(this.cslXml.dataObj);
            for(e in t)t.hasOwnProperty(e) && r.Attributes[e].call(i, this, t[e]);
        };
        r.Engine.prototype.getTerm = function(t, e, i, s, n, a) {
            t && t.match(/[A-Z]/) && t === t.toUpperCase() && (r.debug("Warning: term key is in uppercase form: " + t), t = t.toLowerCase());
            var o;
            a ? o = this.opt["default-locale"][0] : o = this.opt.lang;
            var l = r.Engine.getField(r.LOOSE, this.locale[o].terms, t, e, i, s);
            return !l && t === "range-delimiter" && (l = "\u2013"), typeof l > "u" && (n === r.STRICT ? r.error('Error in getTerm: term "' + t + '" does not exist.') : n === r.TOLERANT && (l = "")), l && (this.tmp.cite_renders_content = !0), l;
        };
        r.Engine.prototype.getDate = function(t, e) {
            var i;
            return e ? i = this.opt["default-locale"] : i = this.opt.lang, this.locale[i].dates[t] ? this.locale[i].dates[t] : !1;
        };
        r.Engine.prototype.getOpt = function(t) {
            return typeof this.locale[this.opt.lang].opts[t] < "u" ? this.locale[this.opt.lang].opts[t] : !1;
        };
        r.Engine.prototype.getVariable = function(t, e, i, s) {
            return r.Engine.getField(r.LOOSE, t, e, i, s);
        };
        r.Engine.prototype.getDateNum = function(t, e) {
            return typeof t > "u" ? 0 : t[e];
        };
        r.Engine.getField = function(t, e, i, s, n, a) {
            var o, l, u, f, h, d;
            if (o = "", typeof e[i] > "u") if (t === r.STRICT) r.error('Error in getField: term "' + i + '" does not exist.');
            else return;
            for(a && e[i][a] ? d = e[i][a] : d = e[i], l = [], s === "symbol" ? l = [
                "symbol",
                "short"
            ] : s === "verb-short" ? l = [
                "verb-short",
                "verb"
            ] : s !== "long" && (l = [
                s
            ]), l = l.concat([
                "long"
            ]), h = l.length, f = 0; f < h; f += 1)if (u = l[f], typeof d == "string" || typeof d == "number") o = d;
            else if (typeof d[u] < "u") {
                typeof d[u] == "string" || typeof d[u] == "number" ? o = d[u] : typeof n == "number" ? o = d[u][n] : o = d[u][0];
                break;
            }
            return o;
        };
        r.Engine.prototype.configureTokenLists = function() {
            var t, e, i;
            for(i = r.AREAS.length, e = 0; e < i; e += 1){
                t = r.AREAS[e];
                var s = this[t].tokens;
                this.configureTokenList(s);
            }
            return this.version = r.version, this.state;
        };
        r.Engine.prototype.configureTokenList = function(t) {
            var e, i, s, n, a, o, l, u;
            for(e = [
                "year",
                "month",
                "day"
            ], l = t.length - 1, a = l; a > -1; a += -1){
                if (i = t[a], i.name === "date" && r.END === i.tokentype && (s = []), i.name === "date-part" && i.strings.name) for(u = e.length, o = 0; o < u; o += 1)n = e[o], n === i.strings.name && s.push(i.strings.name);
                i.name === "date" && r.START === i.tokentype && (s.reverse(), i.dateparts = s), i.next = a + 1, i.name && r.Node[i.name].configure && r.Node[i.name].configure.call(i, this, a);
            }
        };
        r.Engine.prototype.refetchItems = function(t) {
            for(var e = [], i = 0, s = t.length; i < s; i += 1)e.push(this.refetchItem("" + t[i]));
            return e;
        };
        r.ITERATION = 0;
        r.Engine.prototype.retrieveItem = function(t) {
            var e, i, s;
            if (!this.tmp.loadedItemIDs[t]) this.tmp.loadedItemIDs[t] = !0;
            else return this.registry.refhash[t];
            if (this.opt.development_extensions.normalize_lang_keys_to_lowercase && typeof this.opt.development_extensions.normalize_lang_keys_to_lowercase == "boolean") {
                for(var s = 0, n = this.opt["default-locale"].length; s < n; s += 1)this.opt["default-locale"][s] = this.opt["default-locale"][s].toLowerCase();
                for(var s = 0, n = this.opt["locale-translit"].length; s < n; s += 1)this.opt["locale-translit"][s] = this.opt["locale-translit"][s].toLowerCase();
                for(var s = 0, n = this.opt["locale-translat"].length; s < n; s += 1)this.opt["locale-translat"][s] = this.opt["locale-translat"][s].toLowerCase();
                this.opt.development_extensions.normalize_lang_keys_to_lowercase = 100;
            }
            if (r.ITERATION += 1, e = JSON.parse(JSON.stringify(this.sys.retrieveItem("" + t))), this.opt.development_extensions.normalize_lang_keys_to_lowercase) {
                if (e.multi) {
                    if (e.multi._keys) for(var a in e.multi._keys)for(var o in e.multi._keys[a])o !== o.toLowerCase() && (e.multi._keys[a][o.toLowerCase()] = e.multi._keys[a][o], delete e.multi._keys[a][o]);
                    if (e.multi.main) for(var a in e.multi.main)e.multi.main[a] = e.multi.main[a].toLowerCase();
                }
                for(var s = 0, n = r.NAME_VARIABLES.length; s > n; s += 1){
                    var l = r.NAME_VARIABLES[s];
                    if (e[l] && e[l].multi) for(var u = 0, f = e[l].length; u < f; u += 1){
                        var h = e[l][u];
                        if (h.multi) {
                            if (h.multi._key) for(var o in h.multi._key)o !== o.toLowerCase() && (h.multi._key[o.toLowerCase()] = h.multi._key[o], delete h.multi._key[o]);
                            h.multi.main && (h.multi.main = h.multi.main.toLowerCase());
                        }
                    }
                }
            }
            if (e.language && e.language.match(/[><]/)) {
                var i = e.language.match(/(.*?)([<>])(.*)/);
                i[2] === "<" ? (e["language-name"] = i[1], e["language-name-original"] = i[3]) : (e["language-name"] = i[3], e["language-name-original"] = i[1]), this.opt.multi_layout ? e["language-name-original"] && (e.language = e["language-name-original"]) : e["language-name"] && (e.language = e["language-name"]);
            }
            if (e.page) {
                e["page-first"] = e.page;
                var d = "" + e.page, i = d.split(/\s*(?:&|, |-|\u2013)\s*/);
                i[0].slice(-1) !== "\\" && (e["page-first"] = i[0]);
            }
            this.opt.development_extensions.field_hack && e.note && r.parseNoteFieldHacks(e, !1, this.opt.development_extensions.allow_field_hack_date_override);
            for(var o in e)if (r.DATE_VARIABLES.indexOf(o.replace(/^alt-/, "")) > -1) {
                var p = e[o];
                p && (this.opt.development_extensions.raw_date_parsing && p.raw && (!p["date-parts"] || p["date-parts"].length === 0) && (p = this.fun.dateparser.parseDateToObject(p.raw)), e[o] = this.dateParseArray(p));
            }
            if (this.opt.development_extensions.consolidate_legal_items && e.type && [
                "bill",
                "gazette",
                "legislation",
                "regulation",
                "treaty"
            ].indexOf(e.type) > -1) {
                for(var m, b = [
                    "type",
                    "title",
                    "jurisdiction",
                    "genre",
                    "volume",
                    "container-title"
                ], c = [], s = 0, n = b.length; s < n; s += 1)m = b[s], e[m] && c.push(e[m]);
                b = [
                    "original-date",
                    "issued"
                ];
                for(var s = 0, n = b.length; s < n; s += 1)if (m = b[s], e[m] && e[m].year) {
                    var S = e[m].year;
                    c.push(S);
                    break;
                }
                e.legislation_id = c.join("::");
            }
            if (this.bibliography.opt.track_container_items && this.bibliography.opt.track_container_items.indexOf(e.type) > -1) {
                for(var m, b = [
                    "type",
                    "container-title",
                    "publisher",
                    "edition"
                ], g = [], s = 0, n = b.length; s < n; s += 1)m = b[s], e[m] && g.push(e[m]);
                e.container_id = g.join("::");
            }
            if (this.opt.development_extensions.force_jurisdiction && typeof e.authority == "string" && (e.authority = [
                {
                    literal: e.authority,
                    multi: {
                        _key: {}
                    }
                }
            ], e.multi && e.multi._keys && e.multi._keys.authority)) {
                e.authority[0].multi._key = {};
                for(var o in e.multi._keys.authority)e.authority[0].multi._key[o] = {
                    literal: e.multi._keys.authority[o]
                };
            }
            if (e["title-short"] || (e["title-short"] = e.shortTitle), this.opt.development_extensions.main_title_from_short_title) {
                var v = this.opt["default-locale"][0].slice(0, 2).toLowerCase() === "fr";
                r.extractTitleAndSubtitle.call(this, e, v);
            }
            var y = [
                "bill",
                "legal_case",
                "legislation",
                "gazette",
                "regulation"
            ].indexOf(e.type) > -1;
            this.opt.development_extensions.force_jurisdiction && y && (e.jurisdiction || (e.jurisdiction = "us"));
            var _;
            if (!y && e.title && this.sys.getAbbreviation) {
                e.jurisdiction || !0, this.sys.normalizeAbbrevsKey ? _ = this.sys.normalizeAbbrevsKey("title", e.title) : _ = e.title;
                var x = this.transform.loadAbbreviation(e.jurisdiction, "title", _, e.language);
                this.transform.abbrevs[x].title && this.transform.abbrevs[x].title[_] && (e["title-short"] = this.transform.abbrevs[x].title[_]);
            }
            if (e["container-title-short"] || (e["container-title-short"] = e.journalAbbreviation), e["container-title"] && this.sys.getAbbreviation) {
                this.sys.normalizeAbbrevsKey ? _ = this.sys.normalizeAbbrevsKey(e["container-title"]) : _ = e["container-title"];
                var x = this.transform.loadAbbreviation(e.jurisdiction, "container-title", _, e.language);
                this.transform.abbrevs[x]["container-title"] && this.transform.abbrevs[x]["container-title"][_] && (e["container-title-short"] = this.transform.abbrevs[x]["container-title"][_]);
            }
            if (e.jurisdiction && (e.country = e.jurisdiction.split(":")[0]), this.registry.refhash[t]) {
                if (JSON.stringify(this.registry.refhash[t]) != JSON.stringify(e)) {
                    for(var o in this.registry.refhash[t])delete this.registry.refhash[t][o];
                    this.tmp.taintedItemIDs[e.id] = !0, Object.assign(this.registry.refhash[t], e);
                }
            } else this.registry.refhash[t] = e;
            return this.registry.refhash[t];
        };
        r.Engine.prototype.refetchItem = function(t) {
            return this.registry.refhash[t];
        };
        r.Engine.prototype.setOpt = function(t, e, i) {
            t.name === "style" || t.name === "cslstyle" ? (this.opt.inheritedAttributes[e] = i, this.citation.opt.inheritedAttributes[e] = i, this.bibliography.opt.inheritedAttributes[e] = i) : [
                "citation",
                "bibliography"
            ].indexOf(t.name) > -1 ? this[t.name].opt.inheritedAttributes[e] = i : t.strings[e] = i;
        };
        r.Engine.prototype.inheritOpt = function(t, e, i, s) {
            if (typeof t.strings[e] < "u") return t.strings[e];
            var n = this[this.tmp.root].opt.inheritedAttributes[i || e];
            return typeof n < "u" ? n : s;
        };
        r.Engine.prototype.remapSectionVariable = function(t) {
            for(var e = 0, i = t.length; e < i; e += 1){
                var s = t[e][0], n = t[e][1];
                if ([
                    "bill",
                    "gazette",
                    "legislation",
                    "regulation",
                    "treaty"
                ].indexOf(s.type) > -1) {
                    if (n.locator) {
                        n.locator = n.locator.trim();
                        var a = n.locator.match(r.STATUTE_SUBDIV_PLAIN_REGEX_FRONT);
                        a || (n.label ? n.locator = r.STATUTE_SUBDIV_STRINGS_REVERSE[n.label] + " " + n.locator : n.locator = "p. " + n.locator);
                    }
                    var o = null;
                    if (s.section) {
                        s.section = s.section.trim();
                        var a = s.section.match(r.STATUTE_SUBDIV_PLAIN_REGEX_FRONT);
                        a ? o = a[0].trim() : (s.section = "sec. " + s.section, o = "sec.");
                    }
                    if (s.section) if (!n.locator) n.locator = s.section;
                    else {
                        var a = n.locator.match(/^([^ ]*)\s*(.*)/), l = " ";
                        a ? (a[1] === "p." && o !== "p." && (n.locator = a[2]), [
                            "[",
                            "(",
                            ".",
                            ",",
                            ";",
                            ":",
                            "?"
                        ].indexOf(n.locator.slice(0, 1)) > -1 && (l = "")) : l = "", n.locator = s.section + l + n.locator;
                    }
                    n.label = "";
                }
            }
        };
        r.Engine.prototype.setNumberLabels = function(t) {
            if (t.number && [
                "bill",
                "gazette",
                "legislation",
                "regulation",
                "treaty"
            ].indexOf(t.type) > -1 && this.opt.development_extensions.consolidate_legal_items && !this.tmp.shadow_numbers.number) {
                this.tmp.shadow_numbers.number = {}, this.tmp.shadow_numbers.number.values = [], this.tmp.shadow_numbers.number.plural = 0, this.tmp.shadow_numbers.number.numeric = !1, this.tmp.shadow_numbers.number.label = !1;
                var e = "" + t.number;
                e = e.split("\\").join("");
                var i = e.split(/\s+/)[0], s = r.STATUTE_SUBDIV_STRINGS[i];
                if (s) {
                    var n = e.split(r.STATUTE_SUBDIV_PLAIN_REGEX);
                    if (n.length > 1) {
                        for(var a = [], o = 1, l = n.length; o < l; o += 1)a.push(n[o].replace(/\s*$/, "").replace(/^\s*/, ""));
                        e = a.join(" ");
                    } else e = n[0];
                    this.tmp.shadow_numbers.number.label = s, this.tmp.shadow_numbers.number.values.push([
                        "Blob",
                        e,
                        !1
                    ]), this.tmp.shadow_numbers.number.numeric = !1;
                } else this.tmp.shadow_numbers.number.values.push([
                    "Blob",
                    e,
                    !1
                ]), this.tmp.shadow_numbers.number.numeric = !0;
            }
        };
        r.substituteOne = function(t) {
            return function(e, i) {
                return i ? t.replace("%%STRING%%", i) : "";
            };
        };
        r.substituteTwo = function(t) {
            return function(e) {
                var i = t.replace("%%PARAM%%", e);
                return function(s, n) {
                    return n ? i.replace("%%STRING%%", n) : "";
                };
            };
        };
        r.Mode = function(t) {
            var e, i, s, n, a, o;
            e = {}, i = r.Output.Formats[t];
            for(s in i){
                if (s.slice(0, 1) !== "@") {
                    e[s] = i[s];
                    continue;
                }
                n = !1, a = i[s], o = s.split("/"), typeof a == "string" && a.indexOf("%%STRING%%") > -1 ? a.indexOf("%%PARAM%%") > -1 ? n = r.substituteTwo(a) : n = r.substituteOne(a) : typeof a == "boolean" && !a ? n = r.Output.Formatters.passthrough : typeof a == "function" ? n = a : r.error("Bad " + t + " config entry for " + s + ": " + a), o.length === 1 ? e[o[0]] = n : o.length === 2 && (e[o[0]] || (e[o[0]] = {}), e[o[0]][o[1]] = n);
            }
            return e;
        };
        r.setDecorations = function(t, e) {
            var i, s, n;
            i = [];
            for(n in r.FORMAT_KEY_SEQUENCE){
                var s = r.FORMAT_KEY_SEQUENCE[n];
                e[s] && (i.push([
                    s,
                    e[s]
                ]), delete e[s]);
            }
            return i;
        };
        r.Doppeler = function(t, e) {
            var i = new RegExp("(" + t + ")", "g"), s = new RegExp(t, "g");
            this.split = function(n) {
                e && (n = e(n));
                var a = n.match(i);
                if (!a) return {
                    tags: [],
                    strings: [
                        n
                    ]
                };
                for(var o = n.split(s), l = a.length - 1; l > -1; l--){
                    typeof a[l] == "number" && (a[l] = "");
                    var u = a[l];
                    u === "'" && o[l + 1].length > 0 && (o[l + 1] = a[l] + o[l + 1], a[l] = "");
                }
                return {
                    tags: a,
                    strings: o,
                    origStrings: o.slice()
                };
            }, this.join = function(n) {
                for(var a = n.strings.slice(-1), o = n.tags.length - 1; o > -1; o--)a.push(n.tags[o]), a.push(n.strings[o]);
                return a.reverse(), a.join("");
            };
        };
        r.Engine.prototype.normalDecorIsOrphan = function(t, e) {
            if (e[1] === "normal") {
                var i = !1, s;
                this.tmp.area === "citation" ? s = [
                    this.citation.opt.layout_decorations
                ].concat(t.alldecor) : s = t.alldecor;
                for(var n = s.length - 1; n > -1; n += -1)for(var a = s[n].length - 1; a > -1; a += -1)s[n][a][0] === e[0] && s[n][a][1] !== "normal" && (i = !0);
                if (!i) return !0;
            }
            return !1;
        };
        r.Engine.prototype.getCitationLabel = function(t) {
            var e = "", i = this.getTrigraphParams(), s = i[0], n = this.getTerm("reference", "short", 0);
            typeof n > "u" && (n = "reference"), n = n.replace(".", ""), n = n.slice(0, 1).toUpperCase() + n.slice(1);
            for(var a = 0, o = r.NAME_VARIABLES.length; a < o; a += 1){
                var l = r.NAME_VARIABLES[a];
                if (t[l]) {
                    var u = t[l];
                    u.length > i.length ? s = i[i.length - 1] : s = i[u.length - 1];
                    for(var f = 0, h = u.length; f < h && f !== s.authors.length; f += 1){
                        var d = this.nameOutput.getName(u[f], "locale-translit", !0), p = d.name;
                        p && p.family ? (n = p.family, n = n.replace(/^([ \'\u2019a-z]+\s+)/, "")) : p && p.literal && (n = p.literal);
                        var m = n.toLowerCase().match(/^(a\s+|the\s+|an\s+)/);
                        if (m && (n = n.slice(m[1].length)), n = n.replace(r.ROMANESQUE_NOT_REGEXP, ""), !n) break;
                        n = n.slice(0, s.authors[f]), n.length > 1 ? n = n.slice(0, 1).toUpperCase() + n.slice(1).toLowerCase() : n.length === 1 && (n = n.toUpperCase()), e += n;
                    }
                    break;
                }
            }
            if (!e && t.title) {
                for(var b = this.locale[this.opt.lang].opts["skip-words"], c = t.title.split(/\s+/), a = c.length - 1; a > -1; a--)b.indexOf(c[a]) > -1 && (c = c.slice(0, a).concat(c.slice(a + 1)));
                var S = c.join("");
                S = S.slice(0, i[0].authors[0]), S.length > 1 ? S = S.slice(0, 1).toUpperCase() + S.slice(1).toLowerCase() : S.length === 1 && (S = S.toUpperCase()), e = S;
            }
            var g = "0000";
            return t.issued && t.issued.year && (g = "" + t.issued.year), g = g.slice(s.year * -1), e = e + g, e;
        };
        r.Engine.prototype.getTrigraphParams = function() {
            var t = [], e = this.opt.trigraph.split(":");
            (!this.opt.trigraph || this.opt.trigraph.slice(0, 1) !== "A") && r.error("Bad trigraph definition: " + this.opt.trigraph);
            for(var i = 0, s = e.length; i < s; i += 1){
                for(var n = e[i], a = {
                    authors: [],
                    year: 0
                }, o = 0, l = n.length; o < l; o += 1)switch(n.slice(o, o + 1)){
                    case "A":
                        a.authors.push(1);
                        break;
                    case "a":
                        a.authors[a.authors.length - 1] += 1;
                        break;
                    case "0":
                        a.year += 1;
                        break;
                    default:
                        r.error("Invalid character in trigraph definition: " + this.opt.trigraph);
                }
                t.push(a);
            }
            return t;
        };
        r.Engine.prototype.setOutputFormat = function(t) {
            this.opt.mode = t, this.fun.decorate = r.Mode(t), this.output[t] || (this.output[t] = {}, this.output[t].tmp = {});
        };
        r.Engine.prototype.getSortFunc = function() {
            return function(t, e) {
                return t = t.split("-"), e = e.split("-"), t.length < e.length ? 1 : t.length > e.length ? -1 : (t = t.slice(-1)[0], e = e.slice(-1)[0], t.length < e.length ? 1 : t.length > e.length ? -1 : 0);
            };
        };
        r.Engine.prototype.setLangTagsForCslSort = function(t) {
            var e, i;
            if (t) for(this.opt["locale-sort"] = [], e = 0, i = t.length; e < i; e += 1)this.opt["locale-sort"].push(t[e]);
            this.opt["locale-sort"].sort(this.getSortFunc());
        };
        r.Engine.prototype.setLangTagsForCslTransliteration = function(t) {
            var e, i;
            if (this.opt["locale-translit"] = [], t) for(e = 0, i = t.length; e < i; e += 1)this.opt["locale-translit"].push(t[e]);
            this.opt["locale-translit"].sort(this.getSortFunc());
        };
        r.Engine.prototype.setLangTagsForCslTranslation = function(t) {
            var e, i;
            if (this.opt["locale-translat"] = [], t) for(e = 0, i = t.length; e < i; e += 1)this.opt["locale-translat"].push(t[e]);
            this.opt["locale-translat"].sort(this.getSortFunc());
        };
        r.Engine.prototype.setLangPrefsForCites = function(t, e) {
            var i = this.opt["cite-lang-prefs"];
            e || (e = function(m) {
                return m.toLowerCase();
            });
            for(var s = [
                "Persons",
                "Institutions",
                "Titles",
                "Journals",
                "Publishers",
                "Places"
            ], n = 0, a = s.length; n < a; n += 1){
                var o = e(s[n]), l = s[n].toLowerCase();
                if (t[o]) {
                    for(var u = []; t[o].length > 1;)u.push(t[o].pop());
                    var f = {
                        orig: 1,
                        translit: 2,
                        translat: 3
                    };
                    for(u.length === 2 && f[u[0]] < f[u[1]] && u.reverse(); u.length;)t[o].push(u.pop());
                    for(var h = i[l]; h.length;)h.pop();
                    for(var d = 0, p = t[o].length; d < p; d += 1)h.push(t[o][d]);
                }
            }
        };
        r.Engine.prototype.setLangPrefsForCiteAffixes = function(t) {
            if (t && t.length === 48) {
                for(var e = this.opt.citeAffixes, i = 0, s = [
                    "persons",
                    "institutions",
                    "titles",
                    "journals",
                    "publishers",
                    "places"
                ], n = [
                    "translit",
                    "orig",
                    "translit",
                    "translat"
                ], a, o = 0, l = s.length; o < l; o += 1)for(var u = 0, f = n.length; u < f; u += 1)a = "", i % 8 === 4 ? !e[s[o]]["locale-" + n[u]].prefix && !e[s[o]]["locale-" + n[u]].suffix && (a = t[i] ? t[i] : "", e[s[o]]["locale-" + n[u]].prefix = a, a = t[i] ? t[i + 1] : "", e[s[o]]["locale-" + n[u]].suffix = a) : (a = t[i] ? t[i] : "", e[s[o]]["locale-" + n[u]].prefix = a, a = t[i] ? t[i + 1] : "", e[s[o]]["locale-" + n[u]].suffix = a), i += 2;
                this.opt.citeAffixes = e;
            }
        };
        r.Engine.prototype.setAutoVietnameseNamesOption = function(t) {
            t ? this.opt["auto-vietnamese-names"] = !0 : this.opt["auto-vietnamese-names"] = !1;
        };
        r.Engine.prototype.setAbbreviations = function(t) {
            this.sys.setAbbreviations && this.sys.setAbbreviations(t);
        };
        r.Engine.prototype.setSuppressTrailingPunctuation = function(t) {
            this.citation.opt.suppressTrailingPunctuation = !!t;
        };
        r.Output = {};
        r.Output.Queue = function(t) {
            this.levelname = [
                "top"
            ], this.state = t, this.queue = [], this.empty = new r.Token("empty");
            var e = {};
            e.empty = this.empty, this.formats = new r.Stack(e), this.current = new r.Stack(this.queue);
        };
        r.Output.Queue.prototype.pop = function() {
            var t = this.current.value();
            return t.length ? t.pop() : t.blobs.pop();
        };
        r.Output.Queue.prototype.getToken = function(t) {
            var e = this.formats.value()[t];
            return e;
        };
        r.Output.Queue.prototype.mergeTokenStrings = function(t, e) {
            var i, s, n, a;
            if (i = this.formats.value()[t], s = this.formats.value()[e], n = i, s) {
                i || (i = new r.Token(t, r.SINGLETON), i.decorations = []), n = new r.Token(t, r.SINGLETON);
                var a = "";
                for(var a in i.strings)i.strings.hasOwnProperty(a) && (n.strings[a] = i.strings[a]);
                for(var a in s.strings)s.strings.hasOwnProperty(a) && (n.strings[a] = s.strings[a]);
                n.decorations = i.decorations.concat(s.decorations);
            }
            return n;
        };
        r.Output.Queue.prototype.addToken = function(t, e, i) {
            var s, n;
            if (s = new r.Token("output"), typeof i == "string" && (i = this.formats.value()[i]), i && i.strings) {
                for(n in i.strings)i.strings.hasOwnProperty(n) && (s.strings[n] = i.strings[n]);
                s.decorations = i.decorations;
            }
            typeof e == "string" && (s.strings.delimiter = e), this.formats.value()[t] = s;
        };
        r.Output.Queue.prototype.pushFormats = function(t) {
            t || (t = {}), t.empty = this.empty, this.formats.push(t);
        };
        r.Output.Queue.prototype.popFormats = function() {
            this.formats.pop();
        };
        r.Output.Queue.prototype.startTag = function(t, e) {
            var i = {};
            this.state.tmp["doing-macro-with-date"] && this.state.tmp.extension && (e = this.empty, t = "empty"), i[t] = e, this.pushFormats(i), this.openLevel(t);
        };
        r.Output.Queue.prototype.endTag = function(t) {
            this.closeLevel(t), this.popFormats();
        };
        r.Output.Queue.prototype.openLevel = function(t) {
            var e, i;
            typeof t == "object" ? e = new r.Blob(void 0, t) : typeof t > "u" ? e = new r.Blob(void 0, this.formats.value().empty, "empty") : ((!this.formats.value() || !this.formats.value()[t]) && r.error('CSL processor error: call to nonexistent format token "' + t + '"'), e = new r.Blob(void 0, this.formats.value()[t], t)), i = this.current.value(), !this.state.tmp.just_looking && this.checkNestedBrace && (e.strings.prefix = this.checkNestedBrace.update(e.strings.prefix)), i.push(e), this.current.push(e);
        };
        r.Output.Queue.prototype.closeLevel = function(t) {
            t && t !== this.current.value().levelname && r.error("Level mismatch error:  wanted " + t + " but found " + this.current.value().levelname);
            var e = this.current.pop();
            !this.state.tmp.just_looking && this.checkNestedBrace && (e.strings.suffix = this.checkNestedBrace.update(e.strings.suffix));
        };
        r.Output.Queue.prototype.append = function(t, e, i, s, n) {
            var a, o, l, u = !0;
            if (i && (s = !0), this.state.tmp["doing-macro-with-date"] && !i) {
                if (e !== "macro-with-date") return !1;
                e === "macro-with-date" && (e = "empty");
            }
            if (typeof t > "u" || (typeof t == "number" && (t = "" + t), !i && this.state.tmp.element_trace && this.state.tmp.element_trace.value() === "suppress-me")) return !1;
            if (o = !1, e ? e === "literal" ? (a = !0, u = !1) : typeof e == "string" ? a = this.formats.value()[e] : a = e : a = this.formats.value().empty, a || r.error("CSL processor error: unknown format token name: " + e), a.strings && typeof a.strings.delimiter > "u" && (a.strings.delimiter = ""), typeof t == "string" && t.length && (t = t.replace(/ ([:;?!\u00bb])/g, "\u202F$1").replace(/\u00ab /g, "\xAB\u202F"), this.last_char_rendered = t.slice(-1), t = t.replace(/\s+'/g, " '"), i || (t = t.replace(/^'/g, " '")), s ? i && (this.state.tmp.term_predecessor_name = !0) : (this.state.tmp.term_predecessor = !0, this.state.tmp.in_cite_predecessor = !0)), o = new r.Blob(t, a), l = this.current.value(), typeof l > "u" && this.current.mystack.length === 0 && (this.current.mystack.push([]), l = this.current.value()), typeof o.blobs == "string" && (s ? i && (this.state.tmp.term_predecessor_name = !0) : (this.state.tmp.term_predecessor = !0, this.state.tmp.in_cite_predecessor = !0)), typeof t == "string") {
                if (typeof o.blobs == "string" && o.blobs.slice(0, 1) !== " ") {
                    for(var f = "", h = o.blobs; r.TERMINAL_PUNCTUATION.indexOf(h.slice(0, 1)) > -1;)f = f + h.slice(0, 1), h = h.slice(1);
                    h && f && (o.strings.prefix = o.strings.prefix + f, o.blobs = h);
                }
                o.strings["text-case"] && (o.blobs = r.Output.Formatters[o.strings["text-case"]](this.state, t)), this.state.tmp.strip_periods && !n && (o.blobs = o.blobs.replace(/\.([^a-z]|$)/g, "$1"));
                for(var d = o.decorations.length - 1; d > -1; d += -1)o.decorations[d][0] === "@quotes" && o.decorations[d][1] !== "false" && (o.punctuation_in_quote = this.state.getOpt("punctuation-in-quote")), o.blobs.match(r.ROMANESQUE_REGEXP) || o.decorations[d][0] === "@font-style" && (o.decorations = o.decorations.slice(0, d).concat(o.decorations.slice(d + 1)));
                l.push(o), this.state.fun.flipflopper.processTags(o);
            } else u ? l.push(o) : l.push(t);
            return !0;
        };
        r.Output.Queue.prototype.string = function(t, e, i) {
            var s, n, a, o, l, u = r.getSafeEscape(this.state), f = e.slice(), h = [];
            if (f.length === 0) return h;
            var d = "";
            i ? d = i.strings.delimiter : (t.tmp.count_offset_characters = !1, t.tmp.offset_characters = 0), i && i.new_locale && (i.old_locale = t.opt.lang, t.opt.lang = i.new_locale);
            for(var p, m, b, c, s = 0, n = f.length; s < n; s += 1){
                if (p = f[s], p.strings.first_blob && (t.tmp.count_offset_characters = p.strings.first_blob), typeof p.blobs == "string") {
                    if (typeof p.num == "number") h.push(p);
                    else if (p.blobs) {
                        p.particle && (p.blobs = p.particle + p.blobs, p.particle = ""), l = u(p.blobs);
                        var S = l.length;
                        if (!t.tmp.suppress_decorations) for(a = 0, o = p.decorations.length; a < o; a += 1)c = p.decorations[a], c[0] !== "@showid" && (t.normalDecorIsOrphan(p, c) || (l = t.fun.decorate[c[0]][c[1]].call(p, t, l, c[2])));
                        if (l && l.length) {
                            if (l = u(p.strings.prefix) + l + u(p.strings.suffix), t.opt.development_extensions.csl_reverse_lookup_support && !t.tmp.suppress_decorations) for(a = 0, o = p.decorations.length; a < o; a += 1)c = p.decorations[a], c[0] === "@showid" && (l = t.fun.decorate[c[0]][c[1]].call(p, t, l, c[2]));
                            h.push(l), t.tmp.count_offset_characters && (t.tmp.offset_characters += S + p.strings.suffix.length + p.strings.prefix.length);
                        }
                    }
                } else if (p.blobs.length) {
                    var g = t.output.string(t, p.blobs, p);
                    if (i && g !== "string" && g.length > 1 && p.strings.delimiter) for(var v = !1, a = 0, o = g.length; a < o; a++)typeof g[a] != "string" ? v = !0 : v && (g[a] = p.strings.delimiter + g[a]);
                    h = h.concat(g);
                }
                p.strings.first_blob && t.registry.registry[p.strings.first_blob] && (t.registry.registry[p.strings.first_blob].offset = t.tmp.offset_characters, t.tmp.count_offset_characters = !1);
            }
            for(s = 0, n = h.length - 1; s < n; s += 1)typeof h[s].num == "number" && typeof h[s + 1].num == "number" && !h[s + 1].UGLY_DELIMITER_SUPPRESS_HACK && (h[s].strings.suffix = h[s].strings.suffix + (d || ""), h[s + 1].successor_prefix = "", h[s + 1].UGLY_DELIMITER_SUPPRESS_HACK = !0);
            for(var y = 0, s = 0, n = h.length; s < n; s += 1)typeof h[s] == "string" && (y = parseInt(s, 10) + 1, s < h.length - 1 && typeof h[s + 1] == "object" && (d && !h[s + 1].UGLY_DELIMITER_SUPPRESS_HACK && (h[s] += u(d)), h[s + 1].UGLY_DELIMITER_SUPPRESS_HACK = !0));
            if (i && (i.decorations.length || i.strings.suffix)) y = h.length;
            else if (i && i.strings.prefix) {
                for(var s = 0, n = h.length; s < n; s++)if (typeof h[s].num < "u") {
                    y = s, s === 0 && (h[s].strings.prefix = i.strings.prefix + h[s].strings.prefix);
                    break;
                }
            }
            var _ = t.output.renderBlobs(h.slice(0, y), d, !1, i);
            if (_ && i && (i.decorations.length || i.strings.suffix || i.strings.prefix)) {
                if (!t.tmp.suppress_decorations) for(var s = 0, n = i.decorations.length; s < n; s += 1)c = i.decorations[s], !([
                    "@cite",
                    "@bibliography",
                    "@display",
                    "@showid"
                ].indexOf(c[0]) > -1) && (t.normalDecorIsOrphan(p, c) || c[0] && typeof _ == "string" && (_ = t.fun.decorate[c[0]][c[1]].call(i, t, _, c[2])));
                if (l = _, m = i.strings.suffix, l && l.length && (b = i.strings.prefix, l = u(b) + l + u(m), t.tmp.count_offset_characters && (t.tmp.offset_characters += b.length + m.length)), _ = l, !t.tmp.suppress_decorations) for(var s = 0, n = i.decorations.length; s < n; s += 1)c = i.decorations[s], [
                    "@cite",
                    "@bibliography",
                    "@display",
                    "@showid"
                ].indexOf(c[0]) !== -1 && typeof _ == "string" && (_ = t.fun.decorate[c[0]][c[1]].call(i, t, _, c[2]));
            }
            var E = h.slice(y, h.length);
            return !E.length && _ ? h = [
                _
            ] : E.length && !_ ? h = E : _ && E.length && (h = [
                _
            ].concat(E)), typeof i > "u" ? (this.queue = [], this.current.mystack = [], this.current.mystack.push(this.queue), t.tmp.suppress_decorations && (h = t.output.renderBlobs(h, void 0, !1))) : typeof i == "boolean" && (h = t.output.renderBlobs(h, void 0, !0)), i && i.new_locale && (t.opt.lang = i.old_locale), h;
        };
        r.Output.Queue.prototype.clearlevel = function() {
            var t, e, i;
            for(t = this.current.value(), i = t.blobs.length, e = 0; e < i; e += 1)t.blobs.pop();
        };
        r.Output.Queue.prototype.renderBlobs = function(t, e, i, s) {
            var n, a, l, u, f, h, d, p, m, b, c;
            if (c = r.getSafeEscape(this.state), e || (e = ""), n = this.state, a = "", [], l = "", h = t.length, this.state.tmp.area === "citation" && !this.state.tmp.just_looking && h === 1 && typeof t[0] == "object" && s) return t[0].strings.prefix = s.strings.prefix + t[0].strings.prefix, t[0].strings.suffix = t[0].strings.suffix + s.strings.suffix, t[0].decorations = t[0].decorations.concat(s.decorations), t[0].params = s.params, t[0];
            var S = !0;
            for(f = 0; f < h; f += 1)t[f].checkNext ? (t[f].checkNext(t[f + 1], S), S = !1) : t[f + 1] && t[f + 1].splice_prefix ? S = !1 : S = !0;
            var g = !0;
            for(f = t.length - 1; f > 0; f += -1)t[f].checkLast ? g && t[f].checkLast(t[f - 1]) && (g = !1) : g = !0;
            for(h = t.length, f = 0; f < h; f += 1)if (u = t[f], a && (l = e), typeof u == "string") a += c(l), a += u, n.tmp.count_offset_characters && (n.tmp.offset_characters += l.length);
            else if (i) a ? a = [
                a,
                u
            ] : a = [
                u
            ];
            else if (u.status !== r.SUPPRESS) {
                u.particle ? m = u.particle + u.num : m = u.formatter.format(u.num, u.gender);
                var v = m.replace(/<[^>]*>/g, "").length;
                this.append(m, "empty", !0);
                var y = this.pop(), _ = n.tmp.count_offset_characters;
                if (m = this.string(n, [
                    y
                ], !1), n.tmp.count_offset_characters = _, u.strings["text-case"] && (m = r.Output.Formatters[u.strings["text-case"]](this.state, m)), m && this.state.tmp.strip_periods && (m = m.replace(/\.([^a-z]|$)/g, "$1")), !n.tmp.suppress_decorations) for(p = u.decorations.length, d = 0; d < p; d += 1)b = u.decorations[d], !n.normalDecorIsOrphan(u, b) && (m = n.fun.decorate[b[0]][b[1]].call(u, n, m, b[2]));
                m = c(u.strings.prefix) + m + c(u.strings.suffix);
                var E = "";
                u.status === r.END ? E = c(u.range_prefix) : u.status === r.SUCCESSOR ? E = c(u.successor_prefix) : u.status === r.START ? f > 0 && !u.suppress_splice_prefix ? E = c(u.splice_prefix) : E = "" : u.status === r.SEEN && (E = c(u.splice_prefix)), a += E, a += m, n.tmp.count_offset_characters && (n.tmp.offset_characters += E.length + u.strings.prefix.length + v + u.strings.suffix.length);
            }
            return a;
        };
        r.Output.Queue.purgeEmptyBlobs = function(t) {
            if (!(typeof t != "object" || typeof t.blobs != "object" || !t.blobs.length)) for(var e = t.blobs.length - 1; e > -1; e--){
                r.Output.Queue.purgeEmptyBlobs(t.blobs[e]);
                var i = t.blobs[e];
                if (!i || !i.blobs || !i.blobs.length) {
                    for(var s = []; t.blobs.length - 1 > e;)s.push(t.blobs.pop());
                    for(t.blobs.pop(); s.length;)t.blobs.push(s.pop());
                }
            }
        };
        r.Output.Queue.adjust = function(t) {
            var e = {
                ";": !0,
                ":": !0
            }, i = {
                ".": !0,
                "!": !0,
                "?": !0
            }, s = {
                "!": {
                    ".": "!",
                    "?": "!?",
                    ":": "!",
                    ",": "!,",
                    ";": "!;"
                },
                "?": {
                    "!": "?!",
                    ".": "?",
                    ":": "?",
                    ",": "?,",
                    ";": "?;"
                },
                ".": {
                    "!": ".!",
                    "?": ".?",
                    ":": ".:",
                    ",": ".,",
                    ";": ".;"
                },
                ":": {
                    "!": "!",
                    "?": "?",
                    ".": ":",
                    ",": ":,",
                    ";": ":;"
                },
                ",": {
                    "!": ",!",
                    "?": ",?",
                    ":": ",:",
                    ".": ",.",
                    ";": ",;"
                },
                ";": {
                    "!": "!",
                    "?": "?",
                    ":": ";",
                    ",": ";,",
                    ".": ";"
                }
            }, n = {}, a = {}, o = {}, l = {};
            for(var u in s)o[u] = !0, l[u] = !0, e[u] || (n[u] = !0), i[u] || (a[u] = !0);
            l[" "] = !0, l["\xA0"] = !0;
            var f = {};
            for(var u in s)for(var h in s[u])f[h] || (f[h] = {}), f[h][u] = s[u][h];
            function d(O) {
                return typeof O.num == "number" || O.blobs && O.blobs.length === 1 && typeof O.blobs[0].num == "number";
            }
            function p(O) {
                if (typeof O.num == "number") return !0;
                if (!O.blobs || typeof O.blobs != "object") return !1;
                if (p(O.blobs[O.blobs.length - 1])) return !0;
            }
            function m(O, A) {
                var N = !1, T = [
                    "@font-style",
                    "@font-variant",
                    "@font-weight",
                    "@text-decoration",
                    "@vertical-align"
                ];
                if (A && T.push("@quotes"), O.decorations) {
                    for(var D = 0, C = O.decorations.length; D < C; D++)if (T.indexOf(O.decorations[D][0]) > -1) {
                        N = !0;
                        break;
                    }
                }
                return N;
            }
            function b(O) {
                if (O.decorations) {
                    for(var A = 0, N = O.decorations.length; A < N; A++)if (O.decorations[A][0] === "@quotes" && O.decorations[A][1] !== "false") return !0;
                }
                return typeof O.blobs != "object" ? !1 : b(O.blobs[O.blobs.length - 1]);
            }
            function c(O, A) {
                var N = A.strings.suffix.slice(-1);
                !N && typeof A.blobs == "string" && (N = A.blobs.slice(-1));
                var T = f[O][N];
                return T && T.length === 1 ? !0 : typeof A.blobs != "object" ? !1 : !!c(O, A.blobs[A.blobs.length - 1]);
            }
            function S(O, A) {
                if (!o[A]) return !1;
                if (typeof O.blobs == "string") return O.blobs.slice(-1) === A;
                var N = O.blobs[O.blobs.length - 1];
                if (N) {
                    var T = N.strings.suffix.slice(-1);
                    return T ? N.strings.suffix.slice(-1) == A : S(N, A);
                } else return !1;
            }
            function g(O, A, N, T, D) {
                var C = A === "blobs" ? O : O.strings, I = T === "blobs" ? N : N.strings, P = C[A].slice(-1), M = I[T].slice(0, 1);
                function F() {
                    I[T] = I[T].slice(1);
                }
                function U() {
                    C[A] = C[A].slice(0, -1);
                }
                function j($) {
                    I[T] = $ + I[T];
                }
                function X($) {
                    C[A] += $;
                }
                var R = D ? U : F;
                function w() {
                    return f[M];
                }
                function L() {
                    return s[P];
                }
                var z = D ? L : w;
                function B() {
                    var $ = s[P][M];
                    typeof $ == "string" ? (U(), F(), j($)) : (j(P), U());
                }
                function q() {
                    var $ = f[M][P];
                    typeof $ == "string" ? (U(), F(), X($)) : (X(M), F());
                }
                var G = D ? B : q, V = P === M;
                V ? R() : z() && G();
            }
            function v(O) {
                if (O.blobs && typeof O.blobs == "string") {
                    o[O.strings.suffix.slice(0, 1)] && O.strings.suffix.slice(0, 1) === O.blobs.slice(-1) && (O.strings.suffix = O.strings.suffix.slice(1));
                    return;
                } else if (typeof O != "object" || typeof O.blobs != "object" || !O.blobs.length) return;
                for(var A = m(O, !0), N = O.blobs.length - 1; N > -1; N--){
                    this.upward(O.blobs[N]);
                    var T = O.strings, D = O.blobs[N].strings;
                    if (N === 0) {
                        T.prefix.slice(-1) === " " && D.prefix.slice(0, 1) === " " && (D.prefix = D.prefix.slice(1));
                        var C = D.prefix.slice(0, 1);
                        !A && l[C] && !T.prefix && (T.prefix += C, D.prefix = D.prefix.slice(1));
                    }
                    if (N === O.blobs.length - 1) {
                        var C = D.suffix.slice(-1);
                        !A && [
                            " "
                        ].indexOf(C) > -1 && (T.suffix.slice(0, 1) !== C && (T.suffix = C + T.suffix), D.suffix = D.suffix.slice(0, -1));
                    }
                    T.delimiter && N > 0 && l[T.delimiter.slice(-1)] && T.delimiter.slice(-1) === D.prefix.slice(0, 1) && (D.prefix = D.prefix.slice(1));
                }
            }
            function y(O) {
                if (!(typeof O != "object" || typeof O.blobs != "object" || !O.blobs.length)) {
                    for(var A = O.blobs.length - 1; A > -1; A--)if (this.leftward(O.blobs[A]), A < O.blobs.length - 1 && !O.strings.delimiter) {
                        var N = O.blobs[A], T = N.strings.suffix.slice(-1), D = O.blobs[A + 1], C = D.strings.prefix.slice(0, 1), I = m(N) || m(D), P = typeof T == "number" || typeof C == "number";
                        if (!I && !P && o[C] && !P) {
                            var M = C === N.strings.suffix.slice(-1), F = !N.strings.suffix && typeof N.blobs == "string" && N.blobs.slice(-1) === C;
                            !M && !F ? g(N, "suffix", D, "prefix") : D.strings.prefix = D.strings.prefix.slice(1);
                        }
                    }
                }
            }
            function _(O) {
                if (O.blobs && typeof O.blobs == "string") {
                    o[O.strings.suffix.slice(0, 1)] && O.strings.suffix.slice(0, 1) === O.blobs.slice(-1) && (O.strings.suffix = O.strings.suffix.slice(1));
                    return;
                } else if (typeof O != "object" || typeof O.blobs != "object" || !O.blobs.length) return;
                for(var A = O.strings, N = !1, T = 0, D = O.blobs.length; T < D; T++)if (d(O.blobs[T])) {
                    !0;
                    break;
                }
                if (A.delimiter && o[A.delimiter.slice(0, 1)]) {
                    for(var C = A.delimiter.slice(0, 1), T = O.blobs.length - 2; T > -1; T--){
                        var I = O.blobs[T].strings;
                        I.suffix.slice(-1) !== C && (I.suffix += C);
                    }
                    A.delimiter = A.delimiter.slice(1);
                }
                for(var T = O.blobs.length - 1; T > -1; T--){
                    var P = O.blobs[T], I = O.blobs[T].strings, M = m(P, !0), F = d(P);
                    if (T === O.blobs.length - 1) {
                        var U = A.suffix.slice(0, 1), j = !1;
                        o[U] && (j = c(U, P), !j && t && (j = b(P))), j && o[U] && (p(P) || (typeof P.blobs == "string" ? g(P, "blobs", O, "suffix") : g(P, "suffix", O, "suffix"), A.suffix.slice(0, 1) === "." && (I.suffix += A.suffix.slice(0, 1), A.suffix = A.suffix.slice(1)))), I.suffix.slice(-1) === "\xA0" && A.suffix.slice(0, 1) === " " && (A.suffix = A.suffix.slice(1)), l[I.suffix.slice(0, 1)] && (typeof P.blobs == "string" && P.blobs.slice(-1) === I.suffix.slice(0, 1) && (I.suffix = I.suffix.slice(1)), I.suffix.slice(-1) === A.suffix.slice(0, 1) && (A.suffix = A.suffix.slice(0, -1))), S(O, O.strings.suffix.slice(0, 1)) && (O.strings.suffix = O.strings.suffix.slice(1));
                    } else if (A.delimiter) l[A.delimiter.slice(0, 1)] && A.delimiter.slice(0, 1) === I.suffix.slice(-1) && (O.blobs[T].strings.suffix = O.blobs[T].strings.suffix.slice(0, -1));
                    else {
                        var X = O.blobs[T + 1].strings;
                        !d(P) && !M && l[I.suffix.slice(-1)] && I.suffix.slice(-1) === X.prefix.slice(0, 1) && (X.prefix = X.prefix.slice(1));
                    }
                    !F && !M && o[I.suffix.slice(0, 1)] && typeof P.blobs == "string" && g(P, "blobs", P, "suffix"), this.downward(O.blobs[T]);
                }
            }
            function E(O) {
                var A = O.strings.suffix.slice(0, 1);
                if (typeof O.blobs == "string") for(; n[A];)g(O, "blobs", O, "suffix"), A = O.strings.suffix.slice(0, 1);
                else for(; n[A];)g(O.blobs[O.blobs.length - 1], "suffix", O, "suffix"), A = O.strings.suffix.slice(0, 1);
            }
            function x(O) {
                if (typeof O.blobs == "string") for(var A = O.blobs.slice(-1); a[A];)g(O, "blobs", O, "suffix", !0), A = O.blobs.slice(-1);
                else for(var A = O.blobs[O.blobs.length - 1].strings.suffix.slice(-1); a[A];)g(O.blobs[O.blobs.length - 1], "suffix", O, "suffix", !0), A = O.blobs[O.blobs.length - 1].strings.suffix.slice(-1);
            }
            function k(O) {
                if (!(typeof O != "object" || typeof O.blobs != "object" || !O.blobs.length)) {
                    for(var A, N = 0, T = O.blobs.length; N < T; N++){
                        for(var D = O.blobs[N], C = !1, I = 0, P = D.decorations.length; I < P; I++){
                            var M = D.decorations[I];
                            M[0] === "@quotes" && M[1] !== "false" && (C = !0);
                        }
                        C && (t ? E(D) : x(D)), A = this.fix(O.blobs[N]), D.blobs && typeof D.blobs == "string" && (A = D.blobs.slice(-1));
                    }
                    return A;
                }
            }
            this.upward = v, this.leftward = y, this.downward = _, this.fix = k;
        };
        r.Engine.Opt = function() {
            this.parallel = {
                enable: !1
            }, this.has_disambiguate = !1, this.mode = "html", this.dates = {}, this.jurisdictions_seen = {}, this.suppressedJurisdictions = {}, this.inheritedAttributes = {}, this["locale-sort"] = [], this["locale-translit"] = [], this["locale-translat"] = [], this.citeAffixes = {
                persons: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                },
                institutions: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                },
                titles: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                },
                journals: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                },
                publishers: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                },
                places: {
                    "locale-orig": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translit": {
                        prefix: "",
                        suffix: ""
                    },
                    "locale-translat": {
                        prefix: "",
                        suffix: ""
                    }
                }
            }, this["default-locale"] = [], this.update_mode = r.NONE, this.bib_mode = r.NONE, this.sort_citations = !1, this["et-al-min"] = 0, this["et-al-use-first"] = 1, this["et-al-use-last"] = !1, this["et-al-subsequent-min"] = !1, this["et-al-subsequent-use-first"] = !1, this["demote-non-dropping-particle"] = "display-and-sort", this["parse-names"] = !0, this.citation_number_slug = !1, this.trigraph = "Aaaa00:AaAa00:AaAA00:AAAA00", this.nodenames = [], this.gender = {}, this["cite-lang-prefs"] = {
                persons: [
                    "orig"
                ],
                institutions: [
                    "orig"
                ],
                titles: [
                    "orig"
                ],
                journals: [
                    "orig"
                ],
                publishers: [
                    "orig"
                ],
                places: [
                    "orig"
                ],
                number: [
                    "orig"
                ]
            }, this.has_layout_locale = !1, this.disable_duplicate_year_suppression = [], this.use_context_condition = !1, this.jurisdiction_fallbacks = {}, this.development_extensions = {}, this.development_extensions.field_hack = !0, this.development_extensions.allow_field_hack_date_override = !0, this.development_extensions.locator_date_and_revision = !0, this.development_extensions.locator_label_parse = !0, this.development_extensions.raw_date_parsing = !0, this.development_extensions.clean_up_csl_flaws = !0, this.development_extensions.consolidate_legal_items = !1, this.development_extensions.csl_reverse_lookup_support = !1, this.development_extensions.wrap_url_and_doi = !1, this.development_extensions.thin_non_breaking_space_html_hack = !1, this.development_extensions.apply_citation_wrapper = !1, this.development_extensions.main_title_from_short_title = !1, this.development_extensions.uppercase_subtitles = !1, this.development_extensions.normalize_lang_keys_to_lowercase = !1, this.development_extensions.strict_text_case_locales = !1, this.development_extensions.expect_and_symbol_form = !1, this.development_extensions.require_explicit_legal_case_title_short = !1, this.development_extensions.spoof_institutional_affiliations = !1, this.development_extensions.force_jurisdiction = !1, this.development_extensions.parse_names = !0, this.development_extensions.hanging_indent_legacy_number = !1, this.development_extensions.throw_on_empty = !1, this.development_extensions.strict_inputs = !0, this.development_extensions.prioritize_disambiguate_condition = !1, this.development_extensions.force_short_title_casing_alignment = !0, this.development_extensions.implicit_short_title = !1, this.development_extensions.force_title_abbrev_fallback = !1, this.development_extensions.split_container_title = !1, this.development_extensions.legacy_institution_name_ordering = !1, this.development_extensions.etal_min_etal_usefirst_hack = !1;
        };
        r.Engine.Tmp = function() {
            this.names_max = new r.Stack, this.names_base = new r.Stack, this.givens_base = new r.Stack, this.value = [], this.namepart_decorations = {}, this.namepart_type = !1, this.area = "citation", this.root = "citation", this.extension = "", this.can_substitute = new r.Stack(0, r.LITERAL), this.element_rendered_ok = !1, this.element_trace = new r.Stack("style"), this.nameset_counter = 0, this.group_context = new r.Stack({
                term_intended: !1,
                variable_attempt: !1,
                variable_success: !1,
                output_tip: void 0,
                label_form: void 0,
                parallel_first: void 0,
                parallel_last: void 0,
                parallel_delimiter_override: void 0,
                condition: !1,
                force_suppress: !1,
                done_vars: []
            }), this.term_predecessor = !1, this.in_cite_predecessor = !1, this.jump = new r.Stack(0, r.LITERAL), this.decorations = new r.Stack, this.tokenstore_stack = new r.Stack, this.last_suffix_used = "", this.last_names_used = [], this.last_years_used = [], this.years_used = [], this.names_used = [], this.taintedItemIDs = {}, this.taintedCitationIDs = {}, this.initialize_with = new r.Stack, this.disambig_request = !1, this["name-as-sort-order"] = !1, this.suppress_decorations = !1, this.disambig_settings = new r.AmbigConfig, this.bib_sort_keys = [], this.prefix = new r.Stack("", r.LITERAL), this.suffix = new r.Stack("", r.LITERAL), this.delimiter = new r.Stack("", r.LITERAL), this.cite_locales = [], this.cite_affixes = {
                citation: !1,
                bibliography: !1,
                citation_sort: !1,
                bibliography_sort: !1
            }, this.strip_periods = 0, this.shadow_numbers = {}, this.authority_stop_last = 0, this.loadedItemIDs = {}, this.condition_counter = 0, this.condition_lang_val_arr = [], this.condition_lang_counter_arr = [];
        };
        r.Engine.Fun = function(t) {
            this.match = new r.Util.Match, this.suffixator = new r.Util.Suffixator(r.SUFFIX_CHARS), this.romanizer = new r.Util.Romanizer, this.ordinalizer = new r.Util.Ordinalizer(t), this.long_ordinalizer = new r.Util.LongOrdinalizer;
        };
        r.Engine.Build = function() {
            this["alternate-term"] = !1, this.in_bibliography = !1, this.in_style = !1, this.skip = !1, this.postponed_macro = !1, this.layout_flag = !1, this.name = !1, this.names_variables = [
                []
            ], this.name_label = [
                {}
            ], this.form = !1, this.term = !1, this.macro = {}, this.macro_stack = [], this.text = !1, this.lang = !1, this.area = "citation", this.root = "citation", this.extension = "", this.substitute_level = new r.Stack(0, r.LITERAL), this.names_level = 0, this.render_nesting_level = 0, this.render_seen = !1, this.bibliography_key_pos = 0;
        };
        r.Engine.Configure = function() {
            this.tests = [], this.fail = [], this.succeed = [];
        };
        r.Engine.Citation = function(t) {
            this.opt = {
                inheritedAttributes: {}
            }, this.tokens = [], this.srt = new r.Registry.Comparifier(t, "citation_sort"), this.opt.collapse = [], this.opt["disambiguate-add-names"] = !1, this.opt["disambiguate-add-givenname"] = !1, this.opt["disambiguate-add-year-suffix"] = !1, this.opt["givenname-disambiguation-rule"] = "by-cite", this.opt["near-note-distance"] = 5, this.opt.topdecor = [], this.opt.layout_decorations = [], this.opt.layout_prefix = "", this.opt.layout_suffix = "", this.opt.layout_delimiter = "", this.opt.sort_locales = [], this.opt.max_number_of_names = 0, this.root = "citation";
        };
        r.Engine.Bibliography = function() {
            this.opt = {
                inheritedAttributes: {}
            }, this.tokens = [], this.opt.collapse = [], this.opt.topdecor = [], this.opt.layout_decorations = [], this.opt.layout_prefix = "", this.opt.layout_suffix = "", this.opt.layout_delimiter = "", this.opt["line-spacing"] = 1, this.opt["entry-spacing"] = 1, this.opt.sort_locales = [], this.opt.max_number_of_names = 0, this.root = "bibliography";
        };
        r.Engine.BibliographySort = function() {
            this.tokens = [], this.opt = {}, this.opt.sort_directions = [], this.opt.topdecor = [], this.opt.citation_number_sort_direction = r.ASCENDING, this.opt.citation_number_secondary = !1, this.tmp = {}, this.keys = [], this.root = "bibliography";
        };
        r.Engine.CitationSort = function() {
            this.tokens = [], this.opt = {}, this.opt.sort_directions = [], this.keys = [], this.opt.topdecor = [], this.root = "citation";
        };
        r.Engine.InText = function() {
            this.opt = {
                inheritedAttributes: {}
            }, this.tokens = [], this.opt.collapse = [], this.opt["disambiguate-add-names"] = !1, this.opt["disambiguate-add-givenname"] = !1, this.opt["disambiguate-add-year-suffix"] = !1, this.opt["givenname-disambiguation-rule"] = "by-cite", this.opt["near-note-distance"] = 5, this.opt.topdecor = [], this.opt.layout_decorations = [], this.opt.layout_prefix = "", this.opt.layout_suffix = "", this.opt.layout_delimiter = "", this.opt.sort_locales = [], this.opt.max_number_of_names = 0, this.root = "intext";
        };
        r.Engine.prototype.previewCitationCluster = function(t, e, i, s) {
            var n = this.opt.mode;
            this.setOutputFormat(s), t.citationID && delete t.citationID;
            var a = this.processCitationCluster(t, e, i, r.PREVIEW);
            return this.setOutputFormat(n), a[1];
        };
        r.Engine.prototype.appendCitationCluster = function(t) {
            for(var e = [], i = this.registry.citationreg.citationByIndex.length, s = 0; s < i; s += 1){
                var n = this.registry.citationreg.citationByIndex[s];
                e.push([
                    "" + n.citationID,
                    n.properties.noteIndex
                ]);
            }
            return this.processCitationCluster(t, e, [])[1];
        };
        r.Engine.prototype.processCitationCluster = function(t, e, i, s) {
            var n, a, o, l, u, f, h, d, p, m, b, c, S, g, v, y, _, E;
            this.debug = !1, this.tmp.loadedItemIDs = {}, this.tmp.citation_errors = [], this.registry.return_data = {
                bibchange: !1
            }, this.setCitationId(t);
            var x, k, O;
            if (s === r.PREVIEW) {
                this.debug && r.debug("****** start state save *********"), x = this.registry.citationreg.citationByIndex.slice(), k = this.registry.reflist.slice();
                for(var A = e.concat(i), N = {}, T = [], l = 0, u = A.length; l < u; l += 1)for(n = this.registry.citationreg.citationById[A[l][0]], f = 0, h = n.citationItems.length; f < h; f += 1)N[n.citationItems[f].id] = !0, T.push("" + n.citationItems[f].id);
                for(f = 0, h = t.citationItems.length; f < h; f += 1)N[t.citationItems[f].id] = !0, T.push("" + t.citationItems[f].id);
                O = {};
                for(var l = 0, u = k.length; l < u; l += 1)if (!N[k[l].id]) {
                    var D = this.registry.registry[k[l].id].ambig, C = this.registry.ambigcites[D];
                    if (C) for(f = 0, h = C.length; f < h; f += 1)O[C[f]] = r.cloneAmbigConfig(this.registry.registry[C[f]].disambig);
                }
                this.debug && r.debug("****** end state save *********");
            }
            this.tmp.taintedCitationIDs = {};
            for(var I = [], P = {}, l = 0, u = t.citationItems.length; l < u; l += 1){
                g = {};
                for(var c in t.citationItems[l])g[c] = t.citationItems[l][c];
                if (S = this.retrieveItem("" + g.id), S.id && this.transform.loadAbbreviation("default", "hereinafter", S.id, S.language), g = r.parseLocator.call(this, g), this.opt.development_extensions.consolidate_legal_items && this.remapSectionVariable([
                    [
                        S,
                        g
                    ]
                ]), this.opt.development_extensions.locator_label_parse && g.locator && [
                    "bill",
                    "gazette",
                    "legislation",
                    "regulation",
                    "treaty"
                ].indexOf(S.type) === -1 && (!g.label || g.label === "page")) {
                    var _ = r.LOCATOR_LABELS_REGEXP.exec(g.locator);
                    if (_) {
                        var M = r.LOCATOR_LABELS_MAP[_[2]];
                        this.getTerm(M) && (g.label = M, g.locator = _[3]);
                    }
                }
                var F = [
                    S,
                    g
                ];
                I.push(F), t.citationItems[l].item = S;
            }
            t.sortedItems = I;
            var U = [], j = {}, X;
            for(l = 0, u = e.length; l < u; l += 1)a = e[l], this.opt.development_extensions.strict_inputs && (j[a[0]] && r.error("Previously referenced citationID " + a[0] + " encountered in citationsPre"), a[1] && (X > a[1] && r.debug("Note index sequence is not sane at citationsPre[" + l + "]"), X = a[1])), this.registry.citationreg.citationById[a[0]].properties.noteIndex = a[1], U.push(this.registry.citationreg.citationById[a[0]]), j[a[0]] = this.registry.citationreg.citationById[a[0]];
            for(t.properties || (t.properties = {
                noteIndex: 0
            }), this.opt.development_extensions.strict_inputs && (j[t.citationID] && r.error("Citation with previously referenced citationID " + t.citationID), t.properties.noteIndex && (X > t.properties.noteIndex && r.debug("Note index sequence is not sane for citation " + t.citationID), X = t.properties.noteIndex)), U.push(t), j[t.citationID] = t, l = 0, u = i.length; l < u; l += 1)o = i[l], this.opt.development_extensions.strict_inputs && (j[o[0]] && r.error("Previously referenced citationID " + o[0] + " encountered in citationsPost"), o[1] && (X > o[1] && r.debug("Note index sequence is not sane at postCitation[" + l + "]"), X = o[1])), this.registry.citationreg.citationById[o[0]].properties.noteIndex = o[1], U.push(this.registry.citationreg.citationById[o[0]]), j[o[0]] = this.registry.citationreg.citationById[o[0]];
            this.registry.citationreg.citationByIndex = U, this.registry.citationreg.citationById = j, this.registry.citationreg.citationsByItemId = {}, this.opt.update_mode === r.POSITION && (y = [], v = [], E = {});
            for(var R = [], l = 0, u = U.length; l < u; l += 1){
                for(U[l].properties.index = l, f = 0, h = U[l].sortedItems.length; f < h; f += 1)g = U[l].sortedItems[f], this.registry.citationreg.citationsByItemId[g[1].id] || (this.registry.citationreg.citationsByItemId[g[1].id] = [], R.push("" + g[1].id)), this.registry.citationreg.citationsByItemId[g[1].id].indexOf(U[l]) === -1 && this.registry.citationreg.citationsByItemId[g[1].id].push(U[l]);
                this.opt.update_mode === r.POSITION && (U[l].properties.noteIndex ? v.push(U[l]) : (U[l].properties.noteIndex = 0, y.push(U[l])));
            }
            if (s !== r.ASSUME_ALL_ITEMS_REGISTERED && (this.debug && r.debug("****** start update items *********"), this.updateItems(R, null, null, !0), this.debug && r.debug("****** endo update items *********")), !this.opt.citation_number_sort && I && I.length > 1 && this.citation_sort.tokens.length > 0) {
                for(var l = 0, u = I.length; l < u; l += 1)I[l][1].sortkeys = r.getSortKeys.call(this, I[l][0], "citation_sort");
                if (this.opt.grouped_sort && !t.properties.unsorted) {
                    for(var l = 0, u = I.length; l < u; l += 1){
                        var w = I[l][1].sortkeys;
                        this.tmp.authorstring_request = !0;
                        var L = this.registry.registry[I[l][0].id].disambig;
                        this.tmp.authorstring_request = !0, r.getAmbiguousCite.call(this, I[l][0], L);
                        var z = this.registry.authorstrings[I[l][0].id];
                        this.tmp.authorstring_request = !1, I[l][1].sortkeys = [
                            z
                        ].concat(w);
                    }
                    I.sort(this.citation.srt.compareCompositeKeys);
                    for(var B = !1, q = !1, G = !1, l = 0, u = I.length; l < u; l += 1)I[l][1].sortkeys[0] !== B && (G = I[l][1].sortkeys[0], q = I[l][1].sortkeys[1]), I[l][1].sortkeys[0] = "" + q + l, B = G;
                }
                t.properties.unsorted || I.sort(this.citation.srt.compareCompositeKeys);
            }
            this.opt.parallel.enable && this.parallel.StartCitation(t.sortedItems);
            var V;
            if (this.opt.update_mode === r.POSITION) for(var l = 0; l < 2; l += 1){
                var $ = {}, J = {}, Y = {};
                for(V = [
                    y,
                    v
                ][l], f = 0, h = V.length; f < h; f += 1){
                    var Q = V[f];
                    for(V[f].properties.noteIndex || (V[f].properties.noteIndex = 0), V[f].properties.noteIndex = parseInt(V[f].properties.noteIndex, 10), f > 0 && Q.properties.noteIndex && V[f - 1].properties.noteIndex > Q.properties.noteIndex && (E = {}, $ = {}, J = {}, Y = {}), d = 0, p = Q.sortedItems.length; d < p; d += 1)Q.sortedItems[d][1].parallel && Q.sortedItems[d][1].parallel !== "first" || (E[Q.properties.noteIndex] ? E[Q.properties.noteIndex] += 1 : E[Q.properties.noteIndex] = 1);
                    for(d = 0, p = V[f].sortedItems.length; d < p; d += 1){
                        g = V[f].sortedItems[d];
                        var W = g[0].id, tt = g[0].legislation_id ? g[0].legislation_id : g[0].id, H = g[0].legislation_id ? g[0].legislation_id : g[0].container_id ? g[0].container_id : g[0].id, et = g[1]["locator-extra"], rt = g[1].locator, K = g[1].label, it, gt;
                        if (d > 0) if (Q.sortedItems[d - 1][0].legislation_id) it = Q.sortedItems[d - 1][0].legislation_id;
                        else {
                            it = Q.sortedItems[d - 1][1].id, gt = Q.sortedItems[d - 1][1]["locator-extra"];
                            for(var Z = d - 2; Z > -1; Z--)Q.sortedItems[Z][1].parallel === "first" && (it = Q.sortedItems[Z][1].id, gt = Q.sortedItems[Z][1]["locator-extra"]);
                        }
                        if (s === r.PREVIEW && Q.citationID != t.citationID) {
                            typeof $[g[1].id] > "u" && ($[tt] = Q.properties.noteIndex), J[H] = Q.properties.noteIndex;
                            continue;
                        }
                        var ut = {};
                        if (ut.position = g[1].position, ut["first-reference-note-number"] = g[1]["first-reference-note-number"], ut["first-container-reference-note-number"] = g[1]["first-container-reference-note-number"], ut["near-note"] = g[1]["near-note"], g[1]["first-reference-note-number"] = 0, g[1]["first-container-reference-note-number"] = 0, g[1]["near-note"] = !1, this.registry.citationreg.citationsByItemId[W] && this.opt.xclass === "note" && this.opt.has_disambiguate) {
                            var ht = this.registry.registry[g[0].id]["citation-count"], Xt = this.registry.citationreg.citationsByItemId[W].length;
                            if (this.registry.registry[g[0].id]["citation-count"] = this.registry.citationreg.citationsByItemId[W].length, typeof ht == "number") {
                                var qt = ht < 2, Ft = Xt < 2;
                                if (qt !== Ft) for(var Z = 0, yt = this.registry.citationreg.citationsByItemId[W].length; Z < yt; Z++)P[this.registry.registry[g[0].id].ambig] = !0, this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[W][Z].citationID] = !0;
                            } else for(var Z = 0, yt = this.registry.citationreg.citationsByItemId[W].length; Z < yt; Z++)P[this.registry.registry[g[0].id].ambig] = !0, this.tmp.taintedCitationIDs[this.registry.citationreg.citationsByItemId[W][Z].citationID] = !0;
                        }
                        var xt, Rt;
                        if (typeof J[H] > "u" && Q.properties.mode !== "author-only") $[tt] = Q.properties.noteIndex, J[H] = Q.properties.noteIndex, Y[H] = Q.properties.noteIndex, g[1].position = r.POSITION_FIRST;
                        else {
                            var ot = !1, mt = !1, st = null;
                            if (f > 0) var st = V[f - 1];
                            var bt = V[f];
                            if (f > 0) {
                                var St = 1;
                                st.properties.mode === "author-only" && f > 1 && (St = 2);
                                var kt = f - St;
                                V[kt].sortedItems.length && (xt = V[kt].sortedItems.slice(-1)[0][1].id, Rt = V[f - St].sortedItems.slice(-1)[0][1]["locator-extra"]), st.sortedItems.length && st.sortedItems[0].slice(-1)[0].legislation_id && (xt = st.sortedItems[0].slice(-1)[0].legislation_id);
                            }
                            if (f > 0 && d === 0 && st.properties.noteIndex !== bt.properties.noteIndex) {
                                var Dt = !1, wt = st.sortedItems[0][0].id;
                                if (st.sortedItems[0][0].legislation_id && (wt = st.sortedItems[0][0].legislation_id), wt == tt && st.properties.noteIndex >= bt.properties.noteIndex - 1) {
                                    var Gt = st.sortedItems[0][1]["locator-extra"], zt = bt.sortedItems[0][1]["locator-extra"];
                                    (E[st.properties.noteIndex] === 1 || st.properties.noteIndex === 0) && Gt === zt && (Dt = !0);
                                }
                                Dt ? ot = !0 : mt = !0;
                            } else d > 0 && it == tt && gt == et || d === 0 && f > 0 && st.properties.noteIndex == bt.properties.noteIndex && st.sortedItems.length && xt == tt && Rt == et ? ot = !0 : mt = !0;
                            var ct, lt, Tt, pt, Ot;
                            ot && (d > 0 ? ct = Q.sortedItems[d - 1][1] : ct = V[f - 1].sortedItems[0][1], ct.locator ? (ct.label ? Tt = ct.label : Tt = "", lt = "" + ct.locator + Tt) : lt = ct.locator, rt ? (K ? Ot = K : Ot = "", pt = "" + rt + Ot) : pt = rt), ot && lt && !pt && (ot = !1, mt = !0), ot && (!lt && pt ? g[1].position = r.POSITION_IBID_WITH_LOCATOR : !lt && !pt || lt && pt === lt ? g[1].position = r.POSITION_IBID : lt && pt && pt !== lt ? g[1].position = r.POSITION_IBID_WITH_LOCATOR : (ot = !1, mt = !0)), mt && (g[1].position = r.POSITION_CONTAINER_SUBSEQUENT, typeof $[tt] > "u" ? $[tt] = Q.properties.noteIndex : g[1].position = r.POSITION_SUBSEQUENT), (mt || ot) && (Q.properties.mode === "author-only" && (g[1].position = r.POSITION_FIRST), Y[H] != Q.properties.noteIndex && (g[1]["first-container-reference-note-number"] = Y[H], this.registry.registry[g[0].id] && (this.registry.registry[g[0].id]["first-container-reference-note-number"] = Y[H])), $[tt] != Q.properties.noteIndex && (g[1]["first-reference-note-number"] = $[tt], this.registry.registry[g[0].id] && (this.registry.registry[g[0].id]["first-reference-note-number"] = $[tt])));
                        }
                        if (Q.properties.noteIndex) {
                            var jt = parseInt(Q.properties.noteIndex, 10) - parseInt(J[H], 10);
                            g[1].position !== r.POSITION_FIRST && jt <= this.citation.opt["near-note-distance"] && (g[1]["near-note"] = !0), J[H] = Q.properties.noteIndex;
                        } else g[1].position !== r.POSITION_FIRST && (g[1]["near-note"] = !0);
                        if (Q.citationID != t.citationID) for(m = 0, b = r.POSITION_TEST_VARS.length; m < b; m += 1){
                            var Et = r.POSITION_TEST_VARS[m];
                            g[1][Et] !== ut[Et] && (this.registry.registry[g[0].id] && Et === "first-reference-note-number" && (P[this.registry.registry[g[0].id].ambig] = !0, this.tmp.taintedItemIDs[g[0].id] = !0), this.tmp.taintedCitationIDs[Q.citationID] = !0);
                        }
                        this.sys.variableWrapper && (g[1].index = Q.properties.index, g[1].noteIndex = Q.properties.noteIndex);
                    }
                }
            }
            if (this.opt.citation_number_sort && I && I.length > 1 && this.citation_sort.tokens.length > 0 && !t.properties.unsorted) {
                for(var l = 0, u = I.length; l < u; l += 1)I[l][1].sortkeys = r.getSortKeys.call(this, I[l][0], "citation_sort");
                I.sort(this.citation.srt.compareCompositeKeys);
            }
            for(var c in this.tmp.taintedItemIDs)if (this.tmp.taintedItemIDs.hasOwnProperty(c) && (V = this.registry.citationreg.citationsByItemId[c], V)) for(var l = 0, u = V.length; l < u; l += 1)this.tmp.taintedCitationIDs[V[l].citationID] = !0;
            var _t = [];
            if (s === r.PREVIEW) {
                this.debug && r.debug("****** start run processor *********");
                try {
                    _t = this.process_CitationCluster.call(this, t.sortedItems, t);
                } catch (vt) {
                    r.error("Error running CSL processor for preview: " + vt);
                }
                this.debug && (r.debug("****** end run processor *********"), r.debug("****** start state restore *********")), this.registry.citationreg.citationByIndex = x, this.registry.citationreg.citationById = {};
                for(var l = 0, u = x.length; l < u; l += 1)this.registry.citationreg.citationById[x[l].citationID] = x[l];
                this.debug && r.debug("****** start final update *********");
                for(var Ct = [], l = 0, u = k.length; l < u; l += 1)Ct.push("" + k[l].id);
                this.updateItems(Ct, null, null, !0), this.debug && r.debug("****** end final update *********");
                for(var c in O)O.hasOwnProperty(c) && (this.registry.registry[c].disambig = O[c]);
                this.debug && r.debug("****** end state restore *********");
            } else {
                for(var Vt in P)this.disambiguate.run(Vt, t);
                var at;
                for(var c in this.tmp.taintedCitationIDs)if (c != t.citationID) {
                    var nt = this.registry.citationreg.citationById[c];
                    if (!nt.properties.unsorted) {
                        for(var l = 0, u = nt.sortedItems.length; l < u; l += 1)nt.sortedItems[l][1].sortkeys = r.getSortKeys.call(this, nt.sortedItems[l][0], "citation_sort");
                        nt.sortedItems.sort(this.citation.srt.compareCompositeKeys);
                    }
                    this.tmp.citation_pos = nt.properties.index, this.tmp.citation_note_index = nt.properties.noteIndex, this.tmp.citation_id = "" + nt.citationID, at = [], at.push(nt.properties.index), at.push(this.process_CitationCluster.call(this, nt.sortedItems, nt)), at.push(nt.citationID), _t.push(at);
                }
                this.tmp.taintedItemIDs = {}, this.tmp.taintedCitationIDs = {}, this.tmp.citation_pos = t.properties.index, this.tmp.citation_note_index = t.properties.noteIndex, this.tmp.citation_id = "" + t.citationID, at = [], at.push(e.length), at.push(this.process_CitationCluster.call(this, I, t)), at.push(t.citationID), _t.push(at), _t.sort(function(vt, Pt) {
                    return vt[0] > Pt[0] ? 1 : vt[0] < Pt[0] ? -1 : 0;
                });
            }
            return this.registry.return_data.citation_errors = this.tmp.citation_errors.slice(), [
                this.registry.return_data,
                _t
            ];
        };
        r.Engine.prototype.process_CitationCluster = function(t, e) {
            var i = "";
            if (e && e.properties && e.properties.mode === "composite") {
                e.properties.mode = "author-only";
                var s = r.getCitationCluster.call(this, t, e);
                e.properties.mode = "suppress-author";
                var n = "";
                e.properties.infix && (this.output.append(e.properties.infix), n = this.output.string(this, this.output.queue), typeof n == "object" && (n = n.join("")));
                var a = r.getCitationCluster.call(this, t, e);
                e.properties.mode = "composite", s && n && r.SWAPPING_PUNCTUATION.concat([
                    "\u2019",
                    "'"
                ]).indexOf(n[0]) > -1 && (s += n, n = !1), i = [
                    s,
                    n,
                    a
                ].filter(function(o) {
                    return o;
                }).join(" ");
            } else i = r.getCitationCluster.call(this, t, e);
            return i;
        };
        r.Engine.prototype.makeCitationCluster = function(t) {
            var e, i, h, s, n, a, o;
            for(e = [], n = t.length, s = 0; s < n; s += 1){
                a = {};
                for(var l in t[s])a[l] = t[s][l];
                if (o = this.retrieveItem("" + a.id), this.opt.development_extensions.locator_label_parse && a.locator && [
                    "bill",
                    "gazette",
                    "legislation",
                    "regulation",
                    "treaty"
                ].indexOf(o.type) === -1 && (!a.label || a.label === "page")) {
                    var u = r.LOCATOR_LABELS_REGEXP.exec(a.locator);
                    if (u) {
                        var f = r.LOCATOR_LABELS_MAP[u[2]];
                        this.getTerm(f) && (a.label = f, a.locator = u[3]);
                    }
                }
                a.locator && (a.locator = ("" + a.locator).replace(/\s+$/, "")), i = [
                    o,
                    a
                ], e.push(i);
            }
            if (this.opt.development_extensions.consolidate_legal_items && this.remapSectionVariable(e), e && e.length > 1 && this.citation_sort.tokens.length > 0) {
                for(n = e.length, s = 0; s < n; s += 1)e[s][1].sortkeys = r.getSortKeys.call(this, e[s][0], "citation_sort");
                e.sort(this.citation.srt.compareCompositeKeys);
            }
            this.tmp.citation_errors = [];
            var h = r.getCitationCluster.call(this, e);
            return h;
        };
        r.getAmbiguousCite = function(t, e, i, s) {
            var p, n = this.tmp.group_context.tip, a = {
                term_intended: n.term_intended,
                variable_attempt: n.variable_attempt,
                variable_success: n.variable_success,
                output_tip: n.output_tip,
                label_form: n.label_form,
                non_parallel: n.non_parallel,
                parallel_last: n.parallel_last,
                parallel_first: n.parallel_first,
                parallel_last_override: n.parallel_last_override,
                parallel_delimiter_override: n.parallel_delimiter_override,
                parallel_delimiter_override_on_suppress: n.parallel_delimiter_override_on_suppress,
                condition: n.condition,
                force_suppress: n.force_suppress,
                done_vars: n.done_vars.slice()
            };
            e ? this.tmp.disambig_request = e : this.tmp.disambig_request = !1;
            var o = {
                position: r.POSITION_SUBSEQUENT,
                "near-note": !0
            };
            s && (o.locator = s.locator, o.label = s.label), this.registry.registry[t.id] && this.registry.citationreg.citationsByItemId && this.registry.citationreg.citationsByItemId[t.id] && this.registry.citationreg.citationsByItemId[t.id].length && i && this.citation.opt["givenname-disambiguation-rule"] === "by-cite" && (o["first-reference-note-number"] = this.registry.registry[t.id]["first-reference-note-number"]), this.tmp.area = "citation", this.tmp.root = "citation";
            var l = this.tmp.suppress_decorations;
            this.tmp.suppress_decorations = !0, this.tmp.just_looking = !0, r.getCite.call(this, t, o, null, !1);
            for(var u = 0, f = this.output.queue.length; u < f; u += 1)r.Output.Queue.purgeEmptyBlobs(this.output.queue[u]);
            if (this.opt.development_extensions.clean_up_csl_flaws) for(var h = 0, d = this.output.queue.length; h < d; h += 1)this.output.adjust.upward(this.output.queue[h]), this.output.adjust.leftward(this.output.queue[h]), this.output.adjust.downward(this.output.queue[h]), this.output.adjust.fix(this.output.queue[h]);
            var p = this.output.string(this, this.output.queue);
            return this.tmp.just_looking = !1, this.tmp.suppress_decorations = l, this.tmp.group_context.replace(a), p;
        };
        r.getSpliceDelimiter = function(t, e, i) {
            if (this.citation.opt["after-collapse-delimiter"] !== void 0) t ? this.tmp.splice_delimiter = this.citation.opt["after-collapse-delimiter"] : e && !this.tmp.have_collapsed ? this.tmp.splice_delimiter = this.citation.opt["after-collapse-delimiter"] : !e && !this.tmp.have_collapsed && this.citation.opt.collapse !== "year-suffix" ? this.tmp.splice_delimiter = this.citation.opt["after-collapse-delimiter"] : this.tmp.splice_delimiter = this.citation.opt.layout_delimiter;
            else if (this.tmp.use_cite_group_delimiter) this.tmp.splice_delimiter = this.citation.opt.cite_group_delimiter;
            else if (this.tmp.have_collapsed && this.opt.xclass === "in-text" && this.opt.update_mode !== r.NUMERIC) this.tmp.splice_delimiter = ", ";
            else if (this.tmp.cite_locales[i - 1]) {
                var s = this.tmp.cite_affixes[this.tmp.area][this.tmp.cite_locales[i - 1]];
                s && s.delimiter && (this.tmp.splice_delimiter = s.delimiter);
            } else this.tmp.splice_delimiter || (this.tmp.splice_delimiter = "");
            return this.tmp.splice_delimiter;
        };
        r.getCitationCluster = function(t, e) {
            var i, s, n, a, o, l, u, f, h, d, p, m, b, c, S, g, v, y, _, E, x, k, O = "";
            this.output.checkNestedBrace = new r.checkNestedBrace(this), e && (E = e.citationID, x = e.properties.mode === "author-only" ? !!e.properties.mode : !1, this.opt.xclass !== "note" && (k = e.properties.mode === "suppress-author" ? !!e.properties.mode : !1), e.properties.prefix && (O = r.checkPrefixSpaceAppend(this, e.properties.prefix))), t = t || [], this.tmp.last_primary_names_string = !1, y = r.getSafeEscape(this), this.tmp.area = "citation", this.tmp.root = "citation", i = "", s = [], this.tmp.last_suffix_used = "", this.tmp.last_names_used = [], this.tmp.last_years_used = [], this.tmp.backref_index = [], this.tmp.cite_locales = [], this.tmp.just_looking || (this.tmp.abbrev_trimmer = {
                QUASHES: {}
            });
            var A = this.output.checkNestedBrace.update(this.citation.opt.layout_prefix + O), N = !1;
            if (this.citation.opt.suppressTrailingPunctuation && (N = !0), E && this.registry.citationreg.citationById[E].properties["suppress-trailing-punctuation"] && (N = !0), this.opt.xclass === "note") {
                for(var T = [], D = !1, C = !1, I = !1, P = [], M = 0, F = t.length; M < F; M += 1){
                    var U = t[M][0].type, j = t[M][0].title, X = t[M][1].position, R = t[M][0].id;
                    j && U === "legal_case" && R !== I && X && ((j !== D || T.length === 0) && (P = [], T.push(P)), P.push(t[M][1])), D = j, X, I = R;
                }
                for(M = 0, F = T.length; M < F; M += 1)if (P = T[M], !(P.length < 2)) {
                    var w = P.slice(-1)[0].locator;
                    if (w) for(var L = 0, z = P.length - 1; L < z; L += 1)P[L].locator && (w = !1);
                    w && (P[0].locator = w, delete P.slice(-1)[0].locator, P[0].label = P.slice(-1)[0].label, P.slice(-1)[0].label && delete P.slice(-1)[0].label);
                }
            }
            for(n = [], a = t.length, t[0] && t[0][1] && (x ? (delete t[0][1]["suppress-author"], t[0][1]["author-only"] = !0) : k && (delete t[0][1]["author-only"], t[0][1]["suppress-author"] = !0)), this.opt.parallel.enable && this.parallel.StartCitation(t), o = 0; o < a; o += 1){
                this.tmp.cite_index = o, b = t[o][0], l = t[o][1], l = r.parseLocator.call(this, l), u = this.tmp.have_collapsed;
                var B = !1;
                if (o > 0 && t[o - 1][1] && (B = !!t[o - 1][1].locator), f = {}, this.tmp.shadow_numbers = {}, !this.tmp.just_looking && this.opt.hasPlaceholderTerm) {
                    var q = this.output;
                    this.output = new r.Output.Queue(this), this.output.adjust = new r.Output.Queue.adjust, r.getAmbiguousCite.call(this, b, null, !1, l), this.output = q;
                }
                if (this.tmp.in_cite_predecessor = !1, o > 0 ? r.getCite.call(this, b, l, "" + t[o - 1][0].id, !0) : (this.tmp.term_predecessor = !1, r.getCite.call(this, b, l, null, !0)), this.tmp.cite_renders_content || (_ = {
                    citationID: "" + this.tmp.citation_id,
                    index: this.tmp.citation_pos,
                    noteIndex: this.tmp.citation_note_index,
                    itemID: "" + b.id,
                    citationItems_pos: o,
                    error_code: r.ERROR_NO_RENDERED_FORM
                }, this.tmp.citation_errors.push(_)), f.splice_delimiter = r.getSpliceDelimiter.call(this, B, u, o), l && l["author-only"] && (this.tmp.suppress_decorations = !0), o > 0) {
                    v = t[o - 1][1];
                    var G = v.suffix && [
                        ";",
                        ".",
                        ","
                    ].indexOf(v.suffix.slice(-1)) > -1, V = !v.suffix && l.prefix && [
                        ";",
                        ".",
                        ","
                    ].indexOf(l.prefix.slice(0, 1)) > -1;
                    if (G || V) {
                        var $ = f.splice_delimiter.indexOf(" ");
                        $ > -1 && !V ? f.splice_delimiter = f.splice_delimiter.slice($) : f.splice_delimiter = "";
                    }
                }
                if (f.suppress_decorations = this.tmp.suppress_decorations, f.have_collapsed = this.tmp.have_collapsed, n.push(f), l["author-only"]) break;
            }
            h = 0, m = this.output.queue.slice();
            var J = "";
            e && (J = r.checkSuffixSpacePrepend(this, e.properties.suffix));
            var Y = this.citation.opt.layout_suffix, Q = this.tmp.cite_locales[this.tmp.cite_locales.length - 1];
            Q && this.tmp.cite_affixes[this.tmp.area][Q] && this.tmp.cite_affixes[this.tmp.area][Q].suffix && (Y = this.tmp.cite_affixes[this.tmp.area][Q].suffix), r.TERMINAL_PUNCTUATION.slice(0, -1).indexOf(Y.slice(0, 1)) > -1 && (Y = Y.slice(0, 1)), Y = this.output.checkNestedBrace.update(J + Y);
            for(var M = 0, F = this.output.queue.length; M < F; M += 1)r.Output.Queue.purgeEmptyBlobs(this.output.queue[M]);
            if (!this.tmp.suppress_decorations && this.output.queue.length && (this.opt.development_extensions.apply_citation_wrapper && this.sys.wrapCitationEntry && !this.tmp.just_looking && this.tmp.area === "citation" || (N || (this.output.queue[this.output.queue.length - 1].strings.suffix = Y), this.output.queue[0].strings.prefix = A)), this.opt.development_extensions.clean_up_csl_flaws) for(var L = 0, z = this.output.queue.length; L < z; L += 1)this.output.adjust.upward(this.output.queue[L]), this.output.adjust.leftward(this.output.queue[L]), this.output.adjust.downward(this.output.queue[L]), this.tmp.last_chr = this.output.adjust.fix(this.output.queue[L]);
            for(o = 0, a = m.length; o < a; o += 1){
                var W = [];
                if (this.output.queue = [
                    m[o]
                ], this.tmp.suppress_decorations = n[o].suppress_decorations, this.tmp.splice_delimiter = n[o].splice_delimiter, m[o].parallel_delimiter && (this.tmp.splice_delimiter = m[o].parallel_delimiter), this.tmp.have_collapsed = n[o].have_collapsed, d = this.output.string(this, this.output.queue), this.tmp.suppress_decorations = !1, typeof d == "string") return this.tmp.suppress_decorations = !1, d || (this.opt.development_extensions.throw_on_empty ? r.error("Citation would render no content") : d = "[NO_PRINTED_FORM]"), d;
                if (typeof d == "object" && d.length === 0 && !l["suppress-author"]) {
                    if (o === 0) {
                        var tt = "[CSL STYLE ERROR: reference with no printed form.]", H = o === 0 ? y(this.citation.opt.layout_prefix) : "", et = o === m.length - 1 ? y(this.citation.opt.layout_suffix) : "";
                        d.push(H + tt + et);
                    } else if (o === m.length - 1) {
                        var rt = s[s.length - 1];
                        typeof rt == "string" ? s[s.length - 1] += y(this.citation.opt.layout_suffix) : typeof rt == "object" && (rt.strings.suffix += y(this.citation.opt.layout_suffix));
                    }
                }
                if (W.length && typeof d[0] == "string") {
                    d.reverse();
                    var K = d.pop();
                    K && K.slice(0, 1) === "," ? W.push(K) : typeof W.slice(-1)[0] == "string" && W.slice(-1)[0].slice(-1) === "," ? W.push(" " + K) : K && W.push(y(this.tmp.splice_delimiter) + K);
                } else d.reverse(), p = d.pop(), typeof p < "u" && (W.length && typeof W[W.length - 1] == "string" && (W[W.length - 1] += p.successor_prefix), W.push(p));
                for(c = d.length, S = 0; S < c; S += 1){
                    if (g = d[S], typeof g == "string") {
                        W.push(y(this.tmp.splice_delimiter) + g);
                        continue;
                    }
                    p = d.pop(), typeof p < "u" && W.push(p);
                }
                W.length === 0 && !t[o][1]["suppress-author"] && (h += 1), W.length > 1 && typeof W[0] != "string" && (W = [
                    this.output.renderBlobs(W)
                ]), W.length && (typeof W[0] == "string" ? o > 0 && (W[0] = y(this.tmp.splice_delimiter) + W[0]) : o > 0 ? W[0].splice_prefix = this.tmp.splice_delimiter : W[0].splice_prefix = ""), s = s.concat(W);
            }
            if (i += this.output.renderBlobs(s), i && !this.tmp.suppress_decorations) for(a = this.citation.opt.layout_decorations.length, o = 0; o < a; o += 1)f = this.citation.opt.layout_decorations[o], f[1] !== "normal" && (!l || !l["author-only"]) && (i = this.fun.decorate[f[0]][f[1]](this, i));
            return this.tmp.suppress_decorations = !1, i || (this.opt.development_extensions.throw_on_empty ? r.error("Citation would render no content") : i = "[NO_PRINTED_FORM]"), i;
        };
        r.getCite = function(t, e, i, s) {
            var n, a, o = this.tmp.area;
            for(e && e["author-only"] && this.intext && this.intext.tokens.length > 0 && (this.tmp.area = "intext"), this.tmp.cite_renders_content = !1, this.tmp.probably_rendered_something = !1, this.tmp.prevItemID = i, r.citeStart.call(this, t, e, s), n = 0, this.tmp.name_node = {}, this.nameOutput = new r.NameOutput(this, t, e); n < this[this.tmp.area].tokens.length;)n = r.tokenExec.call(this, this[this.tmp.area].tokens[n], t, e);
            return r.citeEnd.call(this, t, e), !this.tmp.cite_renders_content && !this.tmp.just_looking && this.tmp.area === "bibliography" && (a = {
                index: this.tmp.bibliography_pos,
                itemID: "" + t.id,
                error_code: r.ERROR_NO_RENDERED_FORM
            }, this.tmp.bibliography_errors.push(a)), this.tmp.area = o, "" + t.id;
        };
        r.citeStart = function(t, e, i) {
            if (this.tmp.lang_array = [], t.language) {
                var s = t.language.match(/^([a-zA-Z]+).*/);
                s && this.tmp.lang_array.push(s[1].toLowerCase());
            }
            if (this.tmp.lang_array.push(this.opt.lang), i || (this.tmp.shadow_numbers = {}), this.tmp.disambiguate_count = 0, this.tmp.disambiguate_maxMax = 0, this.tmp.same_author_as_previous_cite = !1, this.tmp.suppress_decorations ? this.tmp.subsequent_author_substitute_ok = !1 : this.tmp.subsequent_author_substitute_ok = !0, this.tmp.lastchr = "", this.tmp.area === "citation" && this.citation.opt.collapse && this.citation.opt.collapse.length ? this.tmp.have_collapsed = !0 : this.tmp.have_collapsed = !1, this.tmp.render_seen = !1, this.tmp.disambig_request && !this.tmp.disambig_override ? this.tmp.disambig_settings = this.tmp.disambig_request : this.registry.registry[t.id] && !this.tmp.disambig_override ? (this.tmp.disambig_request = this.registry.registry[t.id].disambig, this.tmp.disambig_settings = this.registry.registry[t.id].disambig) : this.tmp.disambig_settings = new r.AmbigConfig, this.tmp.area !== "citation") {
                if (!this.registry.registry[t.id]) this.tmp.disambig_restore = new r.AmbigConfig;
                else if (this.tmp.disambig_restore = r.cloneAmbigConfig(this.registry.registry[t.id].disambig), this.tmp.area === "bibliography" && this.tmp.disambig_settings && this.tmp.disambig_override && (this.opt["disambiguate-add-names"] && (this.tmp.disambig_settings.names = this.registry.registry[t.id].disambig.names.slice(), this.tmp.disambig_request && (this.tmp.disambig_request.names = this.registry.registry[t.id].disambig.names.slice())), this.opt["disambiguate-add-givenname"])) {
                    this.tmp.disambig_request = this.tmp.disambig_settings, this.tmp.disambig_settings.givens = this.registry.registry[t.id].disambig.givens.slice(), this.tmp.disambig_request.givens = this.registry.registry[t.id].disambig.givens.slice();
                    for(var n = 0, a = this.tmp.disambig_settings.givens.length; n < a; n += 1)this.tmp.disambig_settings.givens[n] = this.registry.registry[t.id].disambig.givens[n].slice();
                    for(var n = 0, a = this.tmp.disambig_request.givens.length; n < a; n += 1)this.tmp.disambig_request.givens[n] = this.registry.registry[t.id].disambig.givens[n].slice();
                }
            }
            this.tmp.names_used = [], this.tmp.nameset_counter = 0, this.tmp.years_used = [], this.tmp.names_max.clear(), this.tmp.just_looking || (!e || e.parallel === "first" || !e.parallel) && (this.tmp.abbrev_trimmer = {
                QUASHES: {}
            }), this.tmp.splice_delimiter = this[this.tmp.area].opt.layout_delimiter, this.bibliography_sort.keys = [], this.citation_sort.keys = [], this.tmp.has_done_year_suffix = !1, this.tmp.last_cite_locale = !1, !this.tmp.just_looking && e && !e.position && this.registry.registry[t.id] && (this.tmp.disambig_restore = r.cloneAmbigConfig(this.registry.registry[t.id].disambig)), this.tmp.first_name_string = !1, this.tmp.authority_stop_last = 0;
        };
        r.citeEnd = function(t, e) {
            if (this.tmp.disambig_restore && this.registry.registry[t.id]) {
                this.registry.registry[t.id].disambig.names = this.tmp.disambig_restore.names.slice(), this.registry.registry[t.id].disambig.givens = this.tmp.disambig_restore.givens.slice();
                for(var i = 0, s = this.registry.registry[t.id].disambig.givens.length; i < s; i += 1)this.registry.registry[t.id].disambig.givens[i] = this.tmp.disambig_restore.givens[i].slice();
            }
            if (this.tmp.disambig_restore = !1, e && e.suffix ? this.tmp.last_suffix_used = e.suffix : this.tmp.last_suffix_used = "", this.tmp.last_years_used = this.tmp.years_used.slice(), this.tmp.last_names_used = this.tmp.names_used.slice(), this.tmp.cut_var = !1, this.tmp.disambig_request = !1, this.tmp.cite_locales.push(this.tmp.last_cite_locale), this.tmp.issued_date && this.tmp.renders_collection_number) {
                for(var n = [], i = this.tmp.issued_date.list.length - 1; i > this.tmp.issued_date.pos; i += -1)n.push(this.tmp.issued_date.list.pop());
                for(this.tmp.issued_date.list.pop(), i = n.length - 1; i > -1; i += -1)this.tmp.issued_date.list.push(n.pop());
            }
            this.tmp.issued_date = !1, this.tmp.renders_collection_number = !1;
        };
        r.Engine.prototype.makeBibliography = function(t) {
            var e, i, s, a, o, l, u, f, h, d, p;
            if (e = !1, !t && (this.bibliography.opt.exclude_types || this.bibliography.opt.exclude_with_fields)) {
                if (t = {
                    exclude: []
                }, this.bibliography.opt.exclude_types) for(var m in this.bibliography.opt.exclude_types){
                    var b = this.bibliography.opt.exclude_types[m];
                    t.exclude.push({
                        field: "type",
                        value: b
                    });
                }
                if (this.bibliography.opt.exclude_with_fields) for(var m in this.bibliography.opt.exclude_with_fields){
                    var c = this.bibliography.opt.exclude_with_fields[m];
                    t.exclude.push({
                        field: c,
                        value: !0
                    });
                }
            }
            if (!this.bibliography.tokens.length) return !1;
            if (typeof t == "string" && (this.opt.citation_number_slug = t, t = !1), e) {
                for(o = this.bibliography.tokens.length, l = 0; l < o; l += 1)u = this.bibliography.tokens[l], r.debug("bibtok: " + u.name);
                for(r.debug("---"), o = this.citation.tokens.length, l = 0; l < o; l += 1)f = this.citation.tokens[l], r.debug("cittok: " + u.name);
                for(r.debug("---"), o = this.bibliography_sort.tokens.length, l = 0; l < o; l += 1)h = this.bibliography_sort.tokens[l], r.debug("bibsorttok: " + u.name);
            }
            i = r.getBibliographyEntries.call(this, t), d = i[0], p = i[1];
            var S = i[2];
            for(s = {
                maxoffset: 0,
                entryspacing: this.bibliography.opt["entry-spacing"],
                linespacing: this.bibliography.opt["line-spacing"],
                "second-field-align": !1,
                entry_ids: d,
                bibliography_errors: this.tmp.bibliography_errors.slice(),
                done: S
            }, this.bibliography.opt["second-field-align"] && (s["second-field-align"] = this.bibliography.opt["second-field-align"]), o = this.registry.reflist.length, l = 0; l < o; l += 1)a = this.registry.reflist[l], a.offset > s.maxoffset && (s.maxoffset = a.offset);
            return this.bibliography.opt.hangingindent && (s.hangingindent = this.bibliography.opt.hangingindent), s.bibstart = this.fun.decorate.bibstart, s.bibend = this.fun.decorate.bibend, this.opt.citation_number_slug = !1, [
                s,
                p
            ];
        };
        r.getBibliographyEntries = function(t) {
            var e, i, s, n, a, o, l, u, f, h, d, p, m, b, c, S, g, v, y, E, x, k;
            e = [], E = [], this.tmp.area = "bibliography", this.tmp.root = "bibliography", this.tmp.last_rendered_name = !1, this.tmp.bibliography_errors = [], this.tmp.bibliography_pos = 0, t && t.page_start && t.page_length ? i = this.registry.getSortedIds() : i = this.refetchItems(this.registry.getSortedIds()), this.tmp.disambig_override = !0;
            function O(U, j) {
                return U === j;
            }
            function A(U, j) {
                for(h = j.length, d = 0; d < h; d += 1)if (O(U, j[d])) return !0;
                return !1;
            }
            function N(U, j) {
                return typeof U == "boolean" || !U ? U ? !!j : !j : typeof j == "string" ? O(U, j) : j ? A(U, j) : !1;
            }
            v = {};
            var T;
            if (t && t.page_start && t.page_length && (T = 0, t.page_start !== !0)) for(c = 0, S = i.length; c < S && (v[i[c]] = !0, t.page_start != i[c]); c += 1);
            var D = [], C = {};
            for(this.tmp.container_item_count = {}, i = i.filter((U)=>{
                var j = U;
                return U.legislation_id ? C[U.legislation_id] ? j = !1 : C[U.legislation_id] = !0 : U.container_id && (this.tmp.container_item_count[U.container_id] || (this.tmp.container_item_count[U.container_id] = 0), this.tmp.container_item_count[U.container_id]++, this.bibliography.opt.consolidate_containers.indexOf(U.type) > -1 && (C[U.container_id] ? j = !1 : C[U.container_id] = !0)), j;
            }), this.tmp.container_item_pos = {}, c = 0, S = i.length; c < S; c += 1){
                if (t && t.page_start && t.page_length) {
                    if (v[i[c]]) continue;
                    if (u = this.refetchItem(i[c]), T === t.page_length) break;
                } else if (u = i[c], v[u.id]) continue;
                if (t) {
                    if (s = !0, t.include) {
                        for(s = !1, x = 0, k = t.include.length; x < k; x += 1)if (f = t.include[x], N(f.value, u[f.field])) {
                            s = !0;
                            break;
                        }
                    } else if (t.exclude) {
                        for(n = !1, x = 0, k = t.exclude.length; x < k; x += 1)if (f = t.exclude[x], N(f.value, u[f.field])) {
                            n = !0;
                            break;
                        }
                        n && (s = !1);
                    } else if (t.select) {
                        for(s = !1, a = !0, x = 0, k = t.select.length; x < k; x += 1)f = t.select[x], N(f.value, u[f.field]) || (a = !1);
                        a && (s = !0);
                    }
                    if (t.quash) {
                        for(a = !0, x = 0, k = t.quash.length; x < k; x += 1)f = t.quash[x], N(f.value, u[f.field]) || (a = !1);
                        a && (s = !1);
                    }
                    if (!s) continue;
                }
                if (b && r.debug("BIB: " + u.id), u.container_id && (this.tmp.container_item_pos[u.container_id] || (this.tmp.container_item_pos[u.container_id] = 0), this.tmp.container_item_pos[u.container_id]++), o = new r.Token("group", r.START), o.decorations = [
                    [
                        "@bibliography",
                        "entry"
                    ]
                ].concat(this.bibliography.opt.layout_decorations), this.output.startTag("bib_entry", o), u.system_id && this.sys.embedBibliographyEntry ? this.output.current.value().item_id = u.system_id : this.output.current.value().system_id = u.id, m = [], this.registry.registry[u.id].master && !(t && t.page_start && t.page_length)) {
                    y = [
                        [
                            u,
                            {
                                id: u.id
                            }
                        ]
                    ], g = this.registry.registry[u.id].siblings;
                    for(var x = 0, k = g.length; x < k; x++)y.push([
                        this.refetchItem(g[x]),
                        {
                            id: g[x]
                        }
                    ]);
                    for(this.parallel.StartCitation(y), this.registry.registry[u.id].parallel_delimiter_override ? this.output.queue[0].strings.delimiter = this.registry.registry[u.id].parallel_delimiter_override : this.output.queue[0].strings.delimiter = ", ", this.tmp.term_predecessor = !1, this.tmp.cite_index = 0, x = 0, k = y.length; x < k; x += 1)x < y.length - 1 ? this.tmp.parallel_and_not_last = !0 : delete this.tmp.parallel_and_not_last, m.push("" + r.getCite.call(this, y[x][0], y[x][1])), this.tmp.cite_index++, v[y[x][0].id] = !0;
                } else this.registry.registry[u.id].siblings || (this.tmp.term_predecessor = !1, this.tmp.cite_index = 0, m.push("" + r.getCite.call(this, u)), t && t.page_start && t.page_length && (T += 1));
                for(E.push(""), this.tmp.bibliography_pos += 1, D.push(m), this.output.endTag("bib_entry"), this.output.queue[0].blobs.length && this.output.queue[0].blobs[0].blobs.length && (this.output.queue[0].blobs[0].blobs[0].strings ? p = this.output.queue[0].blobs[0].blobs : p = this.output.queue[0].blobs, p[0].strings.prefix = this.bibliography.opt.layout_prefix + p[0].strings.prefix), x = 0, k = this.output.queue.length; x < k; x += 1)r.Output.Queue.purgeEmptyBlobs(this.output.queue[x]);
                for(x = 0, k = this.output.queue.length; x < k; x += 1)this.output.adjust.upward(this.output.queue[x]), this.output.adjust.leftward(this.output.queue[x]), this.output.adjust.downward(this.output.queue[x], !0), this.output.adjust.fix(this.output.queue[x]);
                if (l = this.output.string(this, this.output.queue)[0], !l && this.opt.update_mode === r.NUMERIC) {
                    var I = e.length + 1 + ". [CSL STYLE ERROR: reference with no printed form.]";
                    l = r.Output.Formats[this.opt.mode]["@bibliography/entry"](this, I);
                }
                l && e.push(l);
            }
            var P = !1;
            if (t && t.page_start && t.page_length) {
                var M = i.slice(-1)[0], F = D.slice(-1)[0];
                (!M || !F || M == F) && (P = !0);
            }
            return this.tmp.disambig_override = !1, [
                D,
                e,
                P
            ];
        };
        r.Engine.prototype.setCitationId = function(t, e) {
            var i, s, n;
            if (i = !1, !t.citationID || e) {
                for(s = Math.floor(Math.random() * 1e14);;){
                    if (n = 0, this.registry.citationreg.citationById[s]) !n && s < 5e13 ? n = 1 : n = -1;
                    else {
                        t.citationID = "a" + s.toString(32);
                        break;
                    }
                    n === 1 ? s += 1 : s += -1;
                }
                i = "" + s;
            }
            return this.registry.citationreg.citationById[t.citationID] = t, i;
        };
        r.Engine.prototype.rebuildProcessorState = function(t, e, i) {
            t || (t = []), e || (e = "html");
            for(var s = {}, n = [], a = 0, o = t.length; a < o; a += 1)for(var l = 0, u = t[a].citationItems.length; l < u; l += 1){
                var f = "" + t[a].citationItems[l].id;
                s[f] || n.push(f), s[f] = !0;
            }
            this.updateItems(n);
            var h = [], d = [], p = [], m = this.opt.mode;
            this.setOutputFormat(e);
            for(var a = 0, o = t.length; a < o; a += 1){
                var b = this.processCitationCluster(t[a], h, d, r.ASSUME_ALL_ITEMS_REGISTERED);
                h.push([
                    t[a].citationID,
                    t[a].properties.noteIndex
                ]);
                for(var l = 0, u = b[1].length; l < u; l += 1){
                    var c = b[1][l][0];
                    p[c] = [
                        h[c][0],
                        h[c][1],
                        b[1][l][1]
                    ];
                }
            }
            return this.updateUncitedItems(i), this.setOutputFormat(m), p;
        };
        r.Engine.prototype.restoreProcessorState = function(t) {
            var e, i, s, n, a, o, l, u, f, h;
            u = [], f = [], t || (t = []);
            var d = [], p = {};
            for(e = 0, i = t.length; e < i; e += 1)p[t[e].citationID] && this.setCitationId(t[e], !0), p[t[e].citationID] = !0, d.push(t[e].properties.index);
            var m = t.slice();
            for(m.sort(function(c, S) {
                return c.properties.index < S.properties.index ? -1 : c.properties.index > S.properties.index ? 1 : 0;
            }), e = 0, i = m.length; e < i; e += 1)m[e].properties.index = e;
            for(e = 0, i = m.length; e < i; e += 1){
                for(h = [], s = 0, n = m[e].citationItems.length; s < n; s += 1)a = m[e].citationItems[s], typeof a.sortkeys > "u" && (a.sortkeys = []), o = this.retrieveItem("" + a.id), l = [
                    o,
                    a
                ], h.push(l), m[e].citationItems[s].item = o, f.push("" + a.id);
                m[e].properties.unsorted || h.sort(this.citation.srt.compareCompositeKeys), m[e].sortedItems = h, this.registry.citationreg.citationById[m[e].citationID] = m[e];
            }
            for(this.updateItems(f), e = 0, i = t.length; e < i; e += 1)u.push([
                "" + t[e].citationID,
                t[e].properties.noteIndex
            ]);
            var b = [];
            return t && t.length ? b = this.processCitationCluster(t[0], [], u.slice(1)) : (this.registry = new r.Registry(this), this.tmp = new r.Engine.Tmp, this.disambiguate = new r.Disambiguation(this)), b;
        };
        r.Engine.prototype.updateItems = function(t, e, i, s) {
            var n = !1, a = this.tmp.area, o = this.tmp.root, l = this.tmp.extension;
            if (this.bibliography_sort.tokens.length === 0 && (e = !0), this.tmp.area = "citation", this.tmp.root = "citation", this.tmp.extension = "", s || (this.tmp.loadedItemIDs = {}), n && r.debug("--> init <--"), this.registry.init(t), i) for(var u in this.registry.ambigcites)this.registry.ambigsTouched[u] = !0;
            return this.registry.dodeletes(this.registry.myhash), this.registry.doinserts(this.registry.mylist), this.registry.dorefreshes(), this.registry.rebuildlist(e), this.registry.setsortkeys(), this.registry.setdisambigs(), this.registry.sorttokens(e), this.registry.renumber(), this.tmp.extension = l, this.tmp.area = a, this.tmp.root = o, this.registry.getSortedIds();
        };
        r.Engine.prototype.updateUncitedItems = function(t, e) {
            var i, s = this.tmp.area, n = this.tmp.root, a = this.tmp.extension;
            if (this.bibliography_sort.tokens.length === 0 && (e = !0), this.tmp.area = "citation", this.tmp.root = "citation", this.tmp.extension = "", this.tmp.loadedItemIDs = {}, t || (t = []), typeof t == "object") {
                if (typeof t.length > "u") {
                    i = t, t = [];
                    for(var o in i)t.push(o);
                } else if (typeof t.length == "number") {
                    i = {};
                    for(var l = 0, u = t.length; l < u; l += 1)i[t[l]] = !0;
                }
            }
            return this.registry.init(t, !0), this.registry.dopurge(i), this.registry.doinserts(this.registry.mylist), this.registry.dorefreshes(), this.registry.rebuildlist(e), this.registry.setsortkeys(), this.registry.setdisambigs(), this.registry.sorttokens(e), this.registry.renumber(), this.tmp.extension = a, this.tmp.area = s, this.tmp.root = n, this.registry.getSortedIds();
        };
        r.localeResolve = function(t, e) {
            var i, s;
            return e || (e = "en-US"), t || (t = e), i = {}, s = t.split(/[\-_]/), i.base = r.LANG_BASES[s[0]], typeof i.base > "u" ? {
                base: e,
                best: t,
                bare: s[0]
            } : (s.length === 1 && (i.generic = !0), s.length === 1 || s[1] === "x" ? i.best = i.base.replace("_", "-") : i.best = s.slice(0, 2).join("-"), i.base = i.base.replace("_", "-"), i.bare = s[0], i);
        };
        r.Engine.prototype.localeConfigure = function(t, e) {
            var i;
            if (!(e && this.locale[t.best]) && (t.best === "en-US" ? (i = r.setupXml(this.sys.retrieveLocale("en-US")), this.localeSet(i, "en-US", t.best)) : t.best !== "en-US" && (t.base !== t.best && (i = r.setupXml(this.sys.retrieveLocale(t.base)), this.localeSet(i, t.base, t.best)), i = r.setupXml(this.sys.retrieveLocale(t.best)), this.localeSet(i, t.best, t.best)), this.localeSet(this.cslXml, "", t.best), this.localeSet(this.cslXml, t.bare, t.best), t.base !== t.best && this.localeSet(this.cslXml, t.base, t.best), this.localeSet(this.cslXml, t.best, t.best), typeof this.locale[t.best].terms["page-range-delimiter"] > "u" && ([
                "fr",
                "pt"
            ].indexOf(t.best.slice(0, 2).toLowerCase()) > -1 ? this.locale[t.best].terms["page-range-delimiter"] = "-" : this.locale[t.best].terms["page-range-delimiter"] = "\u2013"), typeof this.locale[t.best].terms["year-range-delimiter"] > "u" && (this.locale[t.best].terms["year-range-delimiter"] = "\u2013"), typeof this.locale[t.best].terms["citation-range-delimiter"] > "u" && (this.locale[t.best].terms["citation-range-delimiter"] = "\u2013"), this.opt.development_extensions.normalize_lang_keys_to_lowercase)) {
                for(var s = [
                    "default-locale",
                    "locale-sort",
                    "locale-translit",
                    "locale-translat"
                ], n = 0, a = s.length; n < a; n += 1)for(var o = 0, l = this.opt[s[n]].length; o < l; o += 1)this.opt[s[n]][o] = this.opt[s[n]][o].toLowerCase();
                this.opt.lang = this.opt.lang.toLowerCase();
            }
        };
        r.Engine.prototype.localeSet = function(t, e, i) {
            var s, n, a, o, l, u, f, h, d, p, m, b, c, S, g, v;
            if (e = e.replace("_", "-"), i = i.replace("_", "-"), this.opt.development_extensions.normalize_lang_keys_to_lowercase && (e = e.toLowerCase(), i = i.toLowerCase()), this.locale[i] || (this.locale[i] = {}, this.locale[i].terms = {}, this.locale[i].opts = {}, this.locale[i].opts["skip-words"] = r.SKIP_WORDS, this.locale[i].opts["leading-noise-words"] || (this.locale[i].opts["leading-noise-words"] = []), this.locale[i].dates = {}, this.locale[i].ord = {
                "1.0.1": !1,
                keys: {}
            }, this.locale[i]["noun-genders"] = {}), n = t.makeXml(), t.nodeNameIs(t.dataObj, "locale")) n = t.dataObj;
            else {
                a = t.getNodesByName(t.dataObj, "locale");
                var y = !1;
                for(l = 0, b = t.numberofnodes(a); l < b; l += 1)if (s = a[l], !y && t.getAttributeValue(s, "lang", "xml") === e) n = s, y = !0;
                else {
                    var _ = t.getAttributeValue(s, "lang", "xml"), E = t.getNodesByName(s, "style-options");
                    if (_ && E && E.length) {
                        var x = t.getAttributeValue(E[0], "jurisdiction-preference");
                        x && (this.locale[_] || (this.locale[_] = {
                            opts: {}
                        }), this.locale[_].opts["jurisdiction-preference"] = x.split(/\s+/));
                    }
                }
            }
            for(a = t.getNodesByName(n, "type"), g = 0, v = t.numberofnodes(a); g < v; g += 1){
                var k = a[g], O = t.getAttributeValue(k, "name"), A = t.getAttributeValue(k, "gender");
                this.opt.gender[O] = A;
            }
            var N = t.getNodesByName(n, "term", "ordinal").length;
            if (N) {
                for(var T in this.locale[i].ord.keys)delete this.locale[i].terms[T];
                this.locale[i].ord = {
                    "1.0.1": !1,
                    keys: {}
                };
            }
            a = t.getNodesByName(n, "term");
            var D = {
                "last-digit": {},
                "last-two-digits": {},
                "whole-number": {}
            }, C = !1, I = {};
            for(l = 0, b = t.numberofnodes(a); l < b; l += 1){
                if (u = a[l], h = t.getAttributeValue(u, "name"), h === "sub verbo" && (h = "sub-verbo"), h.slice(0, 7) === "ordinal") {
                    if (h === "ordinal") C = !0;
                    else {
                        var P = t.getAttributeValue(u, "match"), M = h.slice(8), c = t.getAttributeValue(u, "gender-form");
                        c || (c = "neuter"), P || (P = "last-two-digits", M.slice(0, 1) === "0" && (P = "last-digit")), M.slice(0, 1) === "0" && (M = M.slice(1)), D[P][M] || (D[P][M] = {}), D[P][M][c] = h;
                    }
                    this.locale[i].ord.keys[h] = !0;
                }
                typeof this.locale[i].terms[h] > "u" && (this.locale[i].terms[h] = {}), f = "long", c = !1, t.getAttributeValue(u, "form") && (f = t.getAttributeValue(u, "form")), t.getAttributeValue(u, "gender-form") && (c = t.getAttributeValue(u, "gender-form")), t.getAttributeValue(u, "gender") && (this.locale[i]["noun-genders"][h] = t.getAttributeValue(u, "gender")), c ? (this.locale[i].terms[h][c] = {}, this.locale[i].terms[h][c][f] = [], S = this.locale[i].terms[h][c], I[h] = !0) : (this.locale[i].terms[h][f] = [], S = this.locale[i].terms[h]), t.numberofnodes(t.getNodesByName(u, "multiple")) ? (S[f][0] = t.getNodeValue(u, "single"), S[f][0].indexOf("%s") > -1 && (this.opt.hasPlaceholderTerm = !0), S[f][1] = t.getNodeValue(u, "multiple"), S[f][1].indexOf("%s") > -1 && (this.opt.hasPlaceholderTerm = !0)) : (S[f] = t.getNodeValue(u), S[f].indexOf("%s") > -1 && (this.opt.hasPlaceholderTerm = !0));
            }
            if (this.locale[i].terms.supplement || (this.locale[i].terms.supplement = {}), this.locale[i].terms.supplement.long || (this.locale[i].terms.supplement.long = [
                "supplement",
                "supplements"
            ]), C) {
                for(var F in I){
                    var U = {}, j = 0;
                    for(var X in this.locale[i].terms[F])[
                        "masculine",
                        "feminine"
                    ].indexOf(X) > -1 ? U[X] = this.locale[i].terms[F][X] : j += 1;
                    if (!j) {
                        if (U.feminine) for(var X in U.feminine)this.locale[i].terms[F][X] = U.feminine[X];
                        else if (U.masculine) for(var X in U.masculine)this.locale[i].terms[F][X] = U.masculine[X];
                    }
                }
                this.locale[i].ord["1.0.1"] = D;
            }
            for(h in this.locale[i].terms)for(g = 0, v = 2; g < v; g += 1)if (c = r.GENDERS[g], this.locale[i].terms[h][c]) for(f in this.locale[i].terms[h])this.locale[i].terms[h][c][f] || (this.locale[i].terms[h][c][f] = this.locale[i].terms[h][f]);
            for(a = t.getNodesByName(n, "style-options"), l = 0, b = t.numberofnodes(a); l < b; l += 1){
                d = a[l], o = t.attributes(d);
                for(m in o)if (o.hasOwnProperty(m)) {
                    if (m === "@punctuation-in-quote" || m === "@limit-day-ordinals-to-day-1") o[m] === "true" ? this.locale[i].opts[m.slice(1)] = !0 : this.locale[i].opts[m.slice(1)] = !1;
                    else if (m === "@jurisdiction-preference") {
                        var R = o[m].split(/\s+/);
                        this.locale[i].opts[m.slice(1)] = R;
                    } else if (m === "@skip-words") {
                        var w = o[m].split(/\s*,\s*/);
                        this.locale[i].opts[m.slice(1)] = w;
                    } else if (m === "@leading-noise-words") {
                        var L = o[m].split(/\s*,\s*/);
                        this.locale[i].opts["leading-noise-words"] = L;
                    } else if (m === "@name-as-sort-order") {
                        this.locale[i].opts["name-as-sort-order"] = {};
                        for(var z = o[m].split(/\s+/), g = 0, v = z.length; g < v; g += 1)this.locale[i].opts["name-as-sort-order"][z[g]] = !0;
                    } else if (m === "@name-as-reverse-order") {
                        this.locale[i].opts["name-as-reverse-order"] = {};
                        for(var z = o[m].split(/\s+/), g = 0, v = z.length; g < v; g += 1)this.locale[i].opts["name-as-reverse-order"][z[g]] = !0;
                    } else if (m === "@name-never-short") {
                        this.locale[i].opts["name-never-short"] = {};
                        for(var z = o[m].split(/\s+/), g = 0, v = z.length; g < v; g += 1)this.locale[i].opts["name-never-short"][z[g]] = !0;
                    }
                }
            }
            for(a = t.getNodesByName(n, "date"), l = 0, b = t.numberofnodes(a); l < b; l += 1){
                var p = a[l];
                this.locale[i].dates[t.getAttributeValue(p, "form")] = p;
            }
            r.SET_COURT_CLASSES(this, i, t, n);
        };
        r.getLocaleNames = function(t, e) {
            var i = r.setupXml(t);
            function s(d, p) {
                var m = [
                    "base",
                    "best"
                ];
                if (p) for(var b = r.localeResolve(p), c = 0, S = m.length; c < S; c++)b[m[c]] && d.indexOf(b[m[c]]) === -1 && d.push(b[m[c]]);
            }
            var n = [
                "en-US"
            ];
            function a(d) {
                for(var p = i.getNodesByName(i.dataObj, d), m = 0, b = p.length; m < b; m++){
                    var c = i.getAttributeValue(p[m], "locale");
                    if (c) {
                        c = c.split(/ +/);
                        for(var S = 0, g = c.length; S < g; S++)this.extendLocaleList(n, c[S]);
                    }
                }
            }
            s(n, e);
            var o = i.getNodesByName(i.dataObj, "style")[0], l = i.getAttributeValue(o, "default-locale");
            s(n, l);
            for(var u = [
                "layout",
                "if",
                "else-if",
                "condition"
            ], f = 0, h = u.length; f < h; f++)a(i, n, u[f]);
            return n;
        };
        r.Node = {};
        r.Node.bibliography = {
            build: function(t, e) {
                if (this.tokentype === r.START) {
                    t.build.area = "bibliography", t.build.root = "bibliography", t.build.extension = "";
                    var i = function(s) {
                        s.tmp.area = "bibliography", s.tmp.root = "bibliography", s.tmp.extension = "";
                    };
                    this.execs.push(i);
                }
                e.push(this);
            }
        };
        r.Node.choose = {
            build: function(t, e) {
                var i;
                this.tokentype === r.START && (i = function(s) {
                    s.tmp.jump.push(void 0, r.LITERAL);
                }), this.tokentype === r.END && (i = function(s) {
                    s.tmp.jump.pop();
                }), this.execs.push(i), e.push(this);
            },
            configure: function(t, e) {
                this.tokentype === r.END ? (t.configure.fail.push(e), t.configure.succeed.push(e)) : (t.configure.fail.pop(), t.configure.succeed.pop());
            }
        };
        r.Node.citation = {
            build: function(t, e) {
                if (this.tokentype === r.START) {
                    t.build.area = "citation", t.build.root = "citation", t.build.extension = "";
                    var i = function(n) {
                        n.tmp.area = "citation", n.tmp.root = "citation", n.tmp.extension = "";
                    };
                    this.execs.push(i);
                }
                if (this.tokentype === r.END) {
                    if (t.opt.grouped_sort = t.opt.xclass === "in-text" && t.citation.opt.collapse && t.citation.opt.collapse.length || t.citation.opt.cite_group_delimiter && t.citation.opt.cite_group_delimiter.length && t.opt.update_mode !== r.POSITION && t.opt.update_mode !== r.NUMERIC, t.opt.grouped_sort && t.citation_sort.opt.sort_directions.length) {
                        var s = t.citation_sort.opt.sort_directions[0].slice();
                        t.citation_sort.opt.sort_directions = [
                            s
                        ].concat(t.citation_sort.opt.sort_directions);
                    }
                    t.citation.srt = new r.Registry.Comparifier(t, "citation_sort");
                }
                e.push(this);
            }
        };
        r.Node["#comment"] = {
            build: function() {}
        };
        r.Node.date = {
            build: function(t, e) {
                var i, s, n, a, o, l, u, f, h, d;
                (this.tokentype === r.START || this.tokentype === r.SINGLETON) && (t.dateput.string(t, t.dateput.queue), t.tmp.date_token = r.Util.cloneToken(this), t.tmp.date_token.strings.prefix = "", t.tmp.date_token.strings.suffix = "", t.dateput.openLevel(this), t.build.date_parts = [], t.build.date_variables = this.variables, t.build.extension || r.Util.substituteStart.call(this, t, e), t.build.extension ? i = r.dateMacroAsSortKey : i = function(p, m, b) {
                    var c;
                    if (p.tmp.element_rendered_ok = !1, p.tmp.donesies = [], p.tmp.dateparts = [], c = [], this.variables.length && !(p.tmp.just_looking && this.variables[0] === "accessed")) {
                        for(s = m[this.variables[0]], typeof s > "u" && (s = {
                            "date-parts": [
                                [
                                    0
                                ]
                            ]
                        }, p.opt.development_extensions.locator_date_and_revision && b && this.variables[0] === "locator-date" && b["locator-date"] && (s = b["locator-date"])), p.tmp.date_object = s, n = this.dateparts.length, a = 0; a < n; a += 1)o = this.dateparts[a], (typeof p.tmp.date_object[o + "_end"] < "u" || o === "month" && typeof p.tmp.date_object.season_end < "u") && c.push(o);
                        for(l = [], u = [
                            "year",
                            "month",
                            "day"
                        ], n = u.length, a = 0; a < n; a += 1)c.indexOf(u[a]) > -1 && l.push(u[a]);
                        for(c = l.slice(), f = 2, n = c.length, a = 0; a < n; a += 1)if (o = c[a], h = p.tmp.date_object[o], d = p.tmp.date_object[o + "_end"], h !== d) {
                            f = a;
                            break;
                        }
                        p.tmp.date_collapse_at = c.slice(f);
                    } else p.tmp.date_object = !1;
                }, this.execs.push(i), i = function(p, m) {
                    if (m[this.variables[0]] && (p.output.startTag("date", this), this.variables[0] === "issued" && (m.type === "legal_case" || m.type === "legislation") && p.opt.disable_duplicate_year_suppression.indexOf(m.country) === -1 && !p.tmp.extension && "" + m["collection-number"] == "" + p.tmp.date_object.year && this.dateparts.length === 1 && this.dateparts[0] === "year")) {
                        for(var b in p.tmp.date_object)if (p.tmp.date_object.hasOwnProperty(b) && b.slice(0, 4) === "year") {
                            p.tmp.issued_date = {};
                            var c = p.output.current.mystack.slice(-2)[0].blobs;
                            p.tmp.issued_date.list = c, p.tmp.issued_date.pos = c.length - 1;
                        }
                    }
                }, this.execs.push(i)), !t.build.extension && (this.tokentype === r.END || this.tokentype === r.SINGLETON) && (i = function(p, m) {
                    m[this.variables[0]] && p.output.endTag();
                }, this.execs.push(i)), e.push(this), (this.tokentype === r.END || this.tokentype === r.SINGLETON) && (t.build.extension || r.Util.substituteEnd.call(this, t, e));
            }
        };
        r.Node["date-part"] = {
            build: function(t, e) {
                var i, s, n, a, o, l, u, f, h, d, p, m, b, c, S, g, v, y, _, E, x, k, O;
                this.strings.form || (this.strings.form = "long"), t.build.date_parts.push(this.strings.name);
                var A = t.build.date_variables[0];
                function N(T, D, C) {
                    if (!C) return C;
                    if (C = "" + r.Util.Dates[this.strings.name][T](t, C, D, this.default_locale), this.strings.name === "month") {
                        if (t.tmp.strip_periods) C = C.replace(/\./g, "");
                        else for(var I = 0, P = this.decorations.length; I < P; I += 1)if (this.decorations[I][0] === "@strip-periods" && this.decorations[I][1] === "true") {
                            C = C.replace(/\./g, "");
                            break;
                        }
                    }
                    return C;
                }
                i = function(T, D) {
                    if (T.tmp.date_object) T.tmp.probably_rendered_something = !0;
                    else return;
                    var C = "";
                    if (a = !0, o = "", l = "", T.tmp.donesies.push(this.strings.name), T.tmp.date_object.literal && this.strings.name === "year" && (C = T.tmp.date_object.literal, T.output.append(T.tmp.date_object.literal, this)), T.tmp.date_object && (o = T.tmp.date_object[this.strings.name], l = T.tmp.date_object[this.strings.name + "_end"]), this.strings.name === "year" && o === 0 && !T.tmp.suppress_decorations && (o = !1), u = !T.tmp.suppress_decorations, f = T.tmp.have_collapsed, h = T[T.tmp.area].opt.collapse === "year-suffix" || T[T.tmp.area].opt.collapse === "year-suffix-ranged", d = T.opt["disambiguate-add-year-suffix"], u && d && h && (T.tmp.years_used.push(o), p = T.tmp.last_years_used.length >= T.tmp.years_used.length, p && f && T.tmp.last_years_used[T.tmp.years_used.length - 1] === o && (o = !1)), typeof o < "u") {
                        m = !1, b = !1, !1, !1, this.strings.name === "year" && (parseInt(o, 10) < 500 && parseInt(o, 10) > 0 && (b = T.getTerm("ad")), parseInt(o, 10) < 0 && (m = T.getTerm("bc"), o = parseInt(o, 10) * -1), l && (parseInt(l, 10) < 500 && parseInt(l, 10) > 0 && (S = T.getTerm("ad")), parseInt(l, 10) < 0 && (c = T.getTerm("bc"), l = parseInt(l, 10) * -1)));
                        for(var I = "" + T.tmp.date_object.month; I.length < 2;)I = "0" + I;
                        I = "month-" + I;
                        var P = T.locale[T.opt.lang]["noun-genders"][I];
                        if (this.strings.form) {
                            var M = this.strings.form, F = this.strings.form;
                            this.strings.name === "day" && M === "ordinal" && T.locale[T.opt.lang].opts["limit-day-ordinals-to-day-1"] && (o != 1 && (M = "numeric"), l != 1 && (F = "numeric")), o = N.call(this, M, P, o), l = N.call(this, F, P, l);
                        }
                        if (T.output.openLevel("empty"), T.tmp.date_collapse_at.length) {
                            for(g = !0, n = T.tmp.date_collapse_at.length, s = 0; s < n; s += 1)if (k = T.tmp.date_collapse_at[s], T.tmp.donesies.indexOf(k) === -1) {
                                g = !1;
                                break;
                            }
                            if (g) {
                                if ("" + l != "0") {
                                    if (T.dateput.queue.length === 0 && (a = !0), T.opt["year-range-format"] && T.opt["year-range-format"] !== "expanded" && !T.tmp.date_object.day && !T.tmp.date_object.month && !T.tmp.date_object.season && this.strings.name === "year" && o && l) {
                                        l = T.fun.year_mangler(o + "-" + l, !0);
                                        var U = T.getTerm("year-range-delimiter");
                                        l = l.slice(l.indexOf(U) + 1);
                                    }
                                    C = l, T.dateput.append(l, this), a && (O = T.dateput.current.value().blobs[0], O && (O.strings.prefix = ""));
                                }
                                C = o, T.output.append(o, this), v = T.output.current.value(), O = v.blobs[v.blobs.length - 1], O && (O.strings.suffix = ""), this.strings["range-delimiter"] ? T.output.append(this.strings["range-delimiter"]) : T.output.append(T.getTerm("year-range-delimiter"), "empty"), T.dateput.closeLevel(), y = T.dateput.current.value(), v.blobs = v.blobs.concat(y), T.dateput.string(T, T.dateput.queue), T.dateput.openLevel(T.tmp.date_token), T.tmp.date_collapse_at = [];
                            } else C = o, T.output.append(o, this), T.tmp.date_collapse_at.indexOf(this.strings.name) > -1 && "" + l != "0" && (T.dateput.queue.length === 0 && (a = !0), T.dateput.openLevel("empty"), C = l, T.dateput.append(l, this), a && (O = T.dateput.current.value().blobs[0], O && (O.strings.prefix = "")), m && (C = m, T.dateput.append(m)), b && (C = b, T.dateput.append(b)), T.dateput.closeLevel());
                        } else C = o, T.output.append(o, this);
                        m && (C = m, T.output.append(m)), b && (C = b, T.output.append(b)), T.output.closeLevel();
                    } else this.strings.name === "month" && T.tmp.date_object.season && (o = "" + T.tmp.date_object.season, o && o.match(/^[1-4]$/) ? (T.tmp.group_context.tip.variable_success = !0, C = "winter", T.output.append(T.getTerm("season-0" + o), this)) : o && (C = o, T.output.append(o, this)));
                    T.tmp.value = [], D[A] && (o || T.tmp.have_collapsed) && !T.opt.has_year_suffix && this.strings.name === "year" && !T.tmp.just_looking && T.registry.registry[D.id] && T.registry.registry[D.id].disambig.year_suffix !== !1 && !T.tmp.has_done_year_suffix && (T.tmp.has_done_year_suffix = !0, C = "x", E = parseInt(T.registry.registry[D.id].disambig.year_suffix, 10), _ = new r.NumericBlob(T, !1, E, this, D.id), this.successor_prefix = T[T.build.area].opt.layout_delimiter, this.splice_prefix = T[T.build.area].opt.layout_delimiter, x = new r.Util.Suffixator(r.SUFFIX_CHARS), _.setFormatter(x), T[T.tmp.area].opt.collapse === "year-suffix-ranged" && (_.range_prefix = T.getTerm("citation-range-delimiter")), T[T.tmp.area].opt.cite_group_delimiter ? _.successor_prefix = T[T.tmp.area].opt.cite_group_delimiter : T[T.tmp.area].opt["year-suffix-delimiter"] ? _.successor_prefix = T[T.tmp.area].opt["year-suffix-delimiter"] : _.successor_prefix = T[T.tmp.area].opt.layout_delimiter, _.UGLY_DELIMITER_SUPPRESS_HACK = !0, T.output.append(_, "literal")), C && !T.tmp.group_context.tip.condition && (T.tmp.just_did_number = C.match(/[0-9]$/), T.output.current.tip.strings.suffix && (T.tmp.just_did_number = !1));
                }, this.execs.push(i), e.push(this);
            }
        };
        r.Node["else-if"] = {
            build: function(t, e) {
                r.Conditions.TopNode.call(this, t, e), e.push(this);
            },
            configure: function(t, e) {
                r.Conditions.Configure.call(this, t, e);
            }
        };
        r.Node.else = {
            build: function(t, e) {
                e.push(this);
            },
            configure: function(t, e) {
                this.tokentype === r.START && (t.configure.fail[t.configure.fail.length - 1] = e);
            }
        };
        r.Node["et-al"] = {
            build: function(t, e) {
                if (t.build.area === "citation" || t.build.area === "bibliography") {
                    var i = function(s) {
                        s.tmp.etal_node = this, typeof this.strings.term == "string" && (s.tmp.etal_term = this.strings.term);
                    };
                    this.execs.push(i);
                }
                e.push(this);
            }
        };
        r.Node.group = {
            build: function(t, e, i) {
                var s, n;
                if (this.realGroup = i, this.tokentype === r.START && (r.Util.substituteStart.call(this, t, e), t.build.substitute_level.value() && t.build.substitute_level.replace(t.build.substitute_level.value() + 1), this.juris || e.push(this), s = function(p) {
                    if (p.output.startTag("group", this), this.strings.label_form_override && (p.tmp.group_context.tip.label_form || (p.tmp.group_context.tip.label_form = this.strings.label_form_override)), this.strings.label_capitalize_if_first_override && (p.tmp.group_context.tip.label_capitalize_if_first || (p.tmp.group_context.tip.label_capitalize_if_first = this.strings.label_capitalize_if_first_override)), this.realGroup) {
                        p.tmp.group_context.tip.condition && r.UPDATE_GROUP_CONTEXT_CONDITION(p, this.strings.prefix, null, this);
                        var m = !1, b = !1;
                        p.tmp.group_context.mystack.length && (p.output.current.value().parent = p.tmp.group_context.tip.output_tip);
                        var c = p.tmp.group_context.tip.label_form;
                        c || (c = this.strings.label_form_override);
                        var S = p.tmp.group_context.tip.label_capitalize_if_first;
                        S || (S = this.strings.label_capitalize_if_first), p.tmp.group_context.tip.condition ? (m = p.tmp.group_context.tip.condition, b = p.tmp.group_context.tip.force_suppress) : this.strings.reject ? m = {
                            test: this.strings.reject,
                            not: !0
                        } : this.strings.require && (m = {
                            test: this.strings.require,
                            not: !1
                        });
                        var g = {
                            old_term_predecessor: p.tmp.term_predecessor,
                            term_intended: !1,
                            variable_attempt: !1,
                            variable_success: !1,
                            variable_success_parent: p.tmp.group_context.tip.variable_success,
                            output_tip: p.output.current.tip,
                            label_form: c,
                            label_static: p.tmp.group_context.tip.label_static,
                            label_capitalize_if_first: S,
                            parallel_delimiter_override: this.strings.set_parallel_delimiter_override,
                            parallel_delimiter_override_on_suppress: this.strings.set_parallel_delimiter_override_on_suppress,
                            condition: m,
                            force_suppress: b,
                            done_vars: p.tmp.group_context.tip.done_vars.slice()
                        };
                        if (this.non_parallel) {
                            var v = p.tmp.group_context.tip.non_parallel;
                            v || (v = {}), Object.assign(v, this.non_parallel), g.non_parallel = v;
                        }
                        if (this.parallel_first) {
                            var y = p.tmp.group_context.tip.parallel_first;
                            y || (y = {}), Object.assign(y, this.parallel_first), g.parallel_first = y;
                        }
                        if (this.parallel_last) {
                            var _ = p.tmp.group_context.tip.parallel_last;
                            _ || (_ = {}), Object.assign(_, this.parallel_last), g.parallel_last = _;
                        }
                        if (p.tmp.abbrev_trimmer && p.tmp.abbrev_trimmer.LAST_TO_FIRST && g.parallel_last) {
                            g.parallel_first || (g.parallel_first = {});
                            for(var E in p.tmp.abbrev_trimmer.LAST_TO_FIRST)g.parallel_last[E] && (g.parallel_first[E] = !0, delete g.parallel_last[E]);
                        }
                        if (p.tmp.group_context.push(g), p.tmp.abbrev_trimmer && this.parallel_last_to_first) {
                            p.tmp.abbrev_trimmer.LAST_TO_FIRST || (p.tmp.abbrev_trimmer.LAST_TO_FIRST = {});
                            for(var E in this.parallel_last_to_first)p.tmp.abbrev_trimmer.LAST_TO_FIRST[E] = !0;
                        }
                    }
                }, n = [], n.push(s), this.execs = n.concat(this.execs), this.strings["has-publisher-and-publisher-place"] && (t.build["publisher-special"] = !0, this.strings["subgroup-delimiter"] && (s = function(p, m) {
                    if (m.publisher && m["publisher-place"]) {
                        var b = m.publisher.split(/;\s*/), c = m["publisher-place"].split(/;\s*/);
                        b.length > 1 && b.length === c.length && (p.publisherOutput = new r.PublisherOutput(p, this), p.publisherOutput["publisher-list"] = b, p.publisherOutput["publisher-place-list"] = c);
                    }
                }, this.execs.push(s))), this.juris)) {
                    var a = new r.Token("choose", r.START);
                    r.Node.choose.build.call(a, t, e);
                    var o = new r.Token("if", r.START);
                    s = function(p) {
                        return function(m, b) {
                            return r.INIT_JURISDICTION_MACROS(t, m, b, p);
                        };
                    }(this.juris), o.tests || (o.tests = []), o.tests.push(s), o.test = t.fun.match.any(o, t, o.tests), e.push(o);
                    var l = new r.Token("text", r.SINGLETON);
                    s = function(p, m, b) {
                        var c = m;
                        b && b["best-jurisdiction"] && this.juris === "juris-locator" && (c = b);
                        var S = 0;
                        if (p.juris[c["best-jurisdiction"]][this.juris]) for(; S < p.juris[c["best-jurisdiction"]][this.juris].length;)S = r.tokenExec.call(p, p.juris[c["best-jurisdiction"]][this.juris][S], m, b);
                    }, l.juris = this.juris, l.execs.push(s), e.push(l);
                    var u = new r.Token("if", r.END);
                    r.Node.if.build.call(u, t, e);
                    var f = new r.Token("else", r.START);
                    r.Node.else.build.call(f, t, e);
                }
                if (this.tokentype === r.END && (t.build["publisher-special"] && (t.build["publisher-special"] = !1, s = function(p) {
                    p.publisherOutput && (p.publisherOutput.render(), p.publisherOutput = !1);
                }, this.execs.push(s)), s = function(p, m, b) {
                    if (p.tmp.group_context.tip.condition || p.output.current.tip.strings.suffix && (p.tmp.just_did_number = !1), p.output.endTag(), this.realGroup) {
                        var c = p.tmp.group_context.pop();
                        if (c.parallel_delimiter_override && (p.tmp.group_context.tip.parallel_delimiter_override = c.parallel_delimiter_override, !p.tmp.just_looking && p.registry.registry[m.id].master && (p.registry.registry[m.id].parallel_delimiter_override = c.parallel_delimiter_override)), c.parallel_delimiter_override_on_suppress && (p.tmp.group_context.tip.parallel_delimiter_override_on_suppress = c.parallel_delimiter_override_on_suppress), p.tmp.area === "bibliography_sort") {
                            var S = c.done_vars.indexOf("citation-number");
                            this.strings.sort_direction && S > -1 && p.tmp.group_context.length() == 1 && (this.strings.sort_direction === r.DESCENDING ? p.bibliography_sort.opt.citation_number_sort_direction = r.DESCENDING : p.bibliography_sort.opt.citation_number_sort_direction = r.ASCENDING, c.done_vars = c.done_vars.slice(0, S).concat(c.done_vars.slice(S + 1)));
                        }
                        if (c.condition && (c.force_suppress = r.EVALUATE_GROUP_CONDITION(p, c)), p.tmp.group_context.tip.condition && (p.tmp.group_context.tip.force_suppress = c.force_suppress), !c.force_suppress && (c.variable_success || c.term_intended && !c.variable_attempt)) {
                            this.isJurisLocatorLabel || (p.tmp.group_context.tip.variable_success = !0);
                            var g = p.output.current.value().blobs, v = p.output.current.value().blobs.length - 1;
                            if (!p.tmp.just_looking && (c.non_parallel || c.parallel_last || c.parallel_first || c.parallel_delimiter_override || c.parallel_delimiter_override_on_suppress)) {
                                var y = p.parallel.checkRepeats(c);
                                if (y && g && g.pop(), p.tmp.cite_index > 0 && (y || !c.parallel_first && !c.parallel_last && !c.non_parallel)) {
                                    var _ = p.tmp.suppress_repeats[p.tmp.cite_index - 1];
                                    y && c.parallel_delimiter_override_on_suppress && (_.SIBLING || _.ORPHAN) ? p.output.queue.slice(-1)[0].parallel_delimiter = c.parallel_delimiter_override_on_suppress : c.parallel_delimiter_override && _.SIBLING && (p.output.queue.slice(-1)[0].parallel_delimiter = c.parallel_delimiter_override);
                                }
                            }
                        } else {
                            if (p.tmp.term_predecessor = c.old_term_predecessor, p.tmp.group_context.tip.variable_attempt = c.variable_attempt, c.force_suppress && !p.tmp.group_context.tip.condition && (p.tmp.group_context.tip.variable_attempt = !0, p.tmp.group_context.tip.variable_success = c.variable_success_parent), c.force_suppress) for(var E = 0, x = c.done_vars.length; E < x; E++)for(var k = c.done_vars[E], O = 0, A = p.tmp.done_vars.length; O < A; O++)p.tmp.done_vars[O] === k && (p.tmp.done_vars = p.tmp.done_vars.slice(0, O).concat(p.tmp.done_vars.slice(O + 1)));
                            p.output.current.value().blobs && p.output.current.value().blobs.pop();
                        }
                    }
                }, this.execs.push(s), this.juris)) {
                    var h = new r.Token("else", r.END);
                    r.Node.else.build.call(h, t, e);
                    var d = new r.Token("choose", r.END);
                    r.Node.choose.build.call(d, t, e);
                }
                this.tokentype === r.END && (this.juris || e.push(this), t.build.substitute_level.value() && t.build.substitute_level.replace(t.build.substitute_level.value() - 1), r.Util.substituteEnd.call(this, t, e));
            }
        };
        r.Node.if = {
            build: function(t, e) {
                r.Conditions.TopNode.call(this, t, e), e.push(this);
            },
            configure: function(t, e) {
                r.Conditions.Configure.call(this, t, e);
            }
        };
        r.Node.conditions = {
            build: function(t) {
                this.tokentype === r.START && t.tmp.conditions.addMatch(this.match), this.tokentype === r.END && t.tmp.conditions.matchCombine();
            }
        };
        r.Node.condition = {
            build: function(t) {
                if (this.tokentype === r.SINGLETON) {
                    var e = t.fun.match[this.match](this, t, this.tests);
                    t.tmp.conditions.addTest(e);
                }
            }
        };
        r.Conditions = {};
        r.Conditions.TopNode = function(t) {
            var e;
            (this.tokentype === r.START || this.tokentype === r.SINGLETON) && (this.locale && (t.opt.lang = this.locale), !this.tests || !this.tests.length ? t.tmp.conditions = new r.Conditions.Engine(t, this) : this.test = t.fun.match[this.match](this, t, this.tests), t.build.substitute_level.value() === 0 && (e = function(i) {
                i.tmp.condition_counter++;
            }, this.execs.push(e))), (this.tokentype === r.END || this.tokentype === r.SINGLETON) && (t.build.substitute_level.value() === 0 && (e = function(i) {
                if (i.tmp.condition_counter--, i.tmp.condition_lang_counter_arr.length > 0) {
                    var s = i.tmp.condition_lang_counter_arr.slice(-1)[0];
                    s === i.tmp.condition_counter && (i.opt.lang = i.tmp.condition_lang_val_arr.pop(), i.tmp.condition_lang_counter_arr.pop());
                }
                this.locale_default && (i.output.current.value().old_locale = this.locale_default, i.output.closeLevel("empty"), i.opt.lang = this.locale_default);
            }, this.execs.push(e)), e = function(i) {
                var s = this[i.tmp.jump.value()];
                return s;
            }, this.execs.push(e), this.locale_default && (t.opt.lang = this.locale_default));
        };
        r.Conditions.Configure = function(t, e) {
            this.tokentype === r.START ? (this.fail = t.configure.fail.slice(-1)[0], this.succeed = this.next, t.configure.fail[t.configure.fail.length - 1] = e) : this.tokentype === r.SINGLETON ? (this.fail = this.next, this.succeed = t.configure.succeed.slice(-1)[0], t.configure.fail[t.configure.fail.length - 1] = e) : (this.succeed = t.configure.succeed.slice(-1)[0], this.fail = this.next);
        };
        r.Conditions.Engine = function(t, e) {
            this.token = e, this.state = t;
        };
        r.Conditions.Engine.prototype.addTest = function(t) {
            this.token.tests || (this.token.tests = []), this.token.tests.push(t);
        };
        r.Conditions.Engine.prototype.addMatch = function(t) {
            this.token.match = t;
        };
        r.Conditions.Engine.prototype.matchCombine = function() {
            this.token.test = this.state.fun.match[this.token.match](this.token, this.state, this.token.tests);
        };
        r.Node.info = {
            build: function(t) {
                this.tokentype === r.START ? t.build.skip = "info" : t.build.skip = !1;
            }
        };
        r.Node.institution = {
            build: function(t, e) {
                if ([
                    r.SINGLETON,
                    r.START
                ].indexOf(this.tokentype) > -1) {
                    var i = function(s) {
                        typeof this.strings.delimiter == "string" ? s.tmp.institution_delimiter = this.strings.delimiter : s.tmp.institution_delimiter = s.tmp.name_delimiter, s.inheritOpt(this, "and") === "text" ? this.and_term = s.getTerm("and", "long", 0) : s.inheritOpt(this, "and") === "symbol" ? s.opt.development_extensions.expect_and_symbol_form ? this.and_term = s.getTerm("and", "symbol", 0) : this.and_term = "&" : s.inheritOpt(this, "and") === "none" && (this.and_term = s.tmp.institution_delimiter), typeof this.and_term > "u" && s.tmp.and_term && (this.and_term = s.tmp.and_term), r.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term) ? (this.and_prefix_single = " ", this.and_prefix_multiple = ", ", typeof s.tmp.institution_delimiter == "string" && (this.and_prefix_multiple = s.tmp.institution_delimiter), this.and_suffix = " ") : (this.and_prefix_single = "", this.and_prefix_multiple = "", this.and_suffix = ""), s.inheritOpt(this, "delimiter-precedes-last") === "always" ? this.and_prefix_single = s.tmp.institution_delimiter : s.inheritOpt(this, "delimiter-precedes-last") === "never" && this.and_prefix_multiple && (this.and_prefix_multiple = " "), this.and = {}, typeof this.and_term < "u" ? (s.output.append(this.and_term, "empty", !0), this.and.single = s.output.pop(), this.and.single.strings.prefix = this.and_prefix_single, this.and.single.strings.suffix = this.and_suffix, s.output.append(this.and_term, "empty", !0), this.and.multiple = s.output.pop(), this.and.multiple.strings.prefix = this.and_prefix_multiple, this.and.multiple.strings.suffix = this.and_suffix) : this.strings.delimiter !== "undefined" && (this.and.single = new r.Blob(s.tmp.institution_delimiter), this.and.single.strings.prefix = "", this.and.single.strings.suffix = "", this.and.multiple = new r.Blob(s.tmp.institution_delimiter), this.and.multiple.strings.prefix = "", this.and.multiple.strings.suffix = ""), s.nameOutput.institution = this;
                    };
                    this.execs.push(i);
                }
                e.push(this);
            },
            configure: function(t) {
                [
                    r.SINGLETON,
                    r.START
                ].indexOf(this.tokentype) > -1 && (t.build.has_institution = !0);
            }
        };
        r.Node["institution-part"] = {
            build: function(t, e) {
                var i;
                this.strings.name === "long" ? this.strings["if-short"] ? i = function(s) {
                    s.nameOutput.institutionpart["long-with-short"] = this;
                } : i = function(s) {
                    s.nameOutput.institutionpart.long = this;
                } : this.strings.name === "short" && (i = function(s) {
                    s.nameOutput.institutionpart.short = this;
                }), this.execs.push(i), e.push(this);
            }
        };
        r.Node.key = {
            build: function(t, e) {
                e = t[t.build.root + "_sort"].tokens;
                var i, s = !1, n = new r.Token("key", r.START);
                t.tmp.root = t.build.root, n.strings["et-al-min"] = t.inheritOpt(this, "et-al-min"), n.strings["et-al-use-first"] = t.inheritOpt(this, "et-al-use-first"), n.strings["et-al-use-last"] = t.inheritOpt(this, "et-al-use-last"), i = function(v) {
                    v.tmp.done_vars = [];
                }, n.execs.push(i), i = function(v) {
                    v.output.openLevel("empty");
                }, n.execs.push(i);
                var a = [];
                if (this.strings.sort_direction === r.DESCENDING ? (a.push(1), a.push(-1)) : (a.push(-1), a.push(1)), t[t.build.area].opt.sort_directions.push(a), r.DATE_VARIABLES.indexOf(this.variables[0]) > -1 && (t.build.date_key = !0), i = function(v) {
                    v.tmp.sort_key_flag = !0, v.inheritOpt(this, "et-al-min") && (v.tmp["et-al-min"] = v.inheritOpt(this, "et-al-min")), v.inheritOpt(this, "et-al-use-first") && (v.tmp["et-al-use-first"] = v.inheritOpt(this, "et-al-use-first")), typeof v.inheritOpt(this, "et-al-use-last") == "boolean" && (v.tmp["et-al-use-last"] = v.inheritOpt(this, "et-al-use-last"));
                }, n.execs.push(i), e.push(n), this.variables.length) {
                    var o = this.variables[0];
                    if (r.NAME_VARIABLES.indexOf(o) > -1) {
                        var l = new r.Token("names", r.START);
                        l.tokentype = r.START, l.variables = this.variables, r.Node.names.build.call(l, t, e);
                        var u = new r.Token("name", r.SINGLETON);
                        u.tokentype = r.SINGLETON, u.strings["name-as-sort-order"] = "all", u.strings["sort-separator"] = " ", u.strings["et-al-use-last"] = t.inheritOpt(this, "et-al-use-last"), u.strings["et-al-min"] = t.inheritOpt(this, "et-al-min"), u.strings["et-al-use-first"] = t.inheritOpt(this, "et-al-use-first"), r.Node.name.build.call(u, t, e);
                        var f = new r.Token("institution", r.SINGLETON);
                        f.tokentype = r.SINGLETON, r.Node.institution.build.call(f, t, e);
                        var h = new r.Token("names", r.END);
                        h.tokentype = r.END, r.Node.names.build.call(h, t, e);
                    } else {
                        var d = new r.Token("text", r.SINGLETON);
                        if (d.strings.sort_direction = this.strings.sort_direction, d.dateparts = this.dateparts, r.NUMERIC_VARIABLES.indexOf(o) > -1) o === "citation-number" ? i = function(v, y) {
                            if (v.tmp.area === "bibliography_sort" && (this.strings.sort_direction === r.DESCENDING ? v.bibliography_sort.opt.citation_number_sort_direction = r.DESCENDING : v.bibliography_sort.opt.citation_number_sort_direction = r.ASCENDING), v.tmp.area === "citation_sort" && v.bibliography_sort.tmp.citation_number_map) var _ = v.bibliography_sort.tmp.citation_number_map[v.registry.registry[y.id].seq];
                            else var _ = v.registry.registry[y.id].seq;
                            _ && (_ = r.Util.padding("" + _)), v.output.append(_, this);
                        } : i = function(v, y) {
                            var _ = !1;
                            _ = y[o], _ && (_ = r.Util.padding(_)), v.output.append(_, this);
                        };
                        else if (o === "citation-label") i = function(v, y) {
                            var _ = v.getCitationLabel(y);
                            v.output.append(_, this);
                        };
                        else if (r.DATE_VARIABLES.indexOf(o) > -1) i = r.dateAsSortKey, d.variables = this.variables;
                        else if (o === "title") {
                            var p = "title", m = !1, b = !1, c = !0;
                            i = t.transform.getOutputFunction(this.variables, p, m, b, c);
                        } else o === "court-class" ? i = function(v, y, _) {
                            r.INIT_JURISDICTION_MACROS(v, y, _, "juris-main");
                            var E = r.GET_COURT_CLASS(v, y, !0);
                            v.output.append(E, "empty");
                        } : i = function(v, y) {
                            var _ = y[o];
                            v.output.append(_, "empty");
                        };
                        d.execs.push(i), e.push(d);
                    }
                } else {
                    var S = new r.Token("text", r.SINGLETON);
                    S.strings.sort_direction = this.strings.sort_direction, S.postponed_macro = this.postponed_macro, r.expandMacro.call(t, S, e);
                }
                var g = new r.Token("key", r.END);
                i = function(v) {
                    var y = v.output.string(v, v.output.queue);
                    v.sys.normalizeUnicode && (y = v.sys.normalizeUnicode(y)), y = y ? y.split(" ").join(v.opt.sort_sep) + v.opt.sort_sep : "", s && r.debug("keystring: " + y + " " + typeof y), y === "" && (y = void 0), typeof y != "string" && (y = void 0), v[v[v.tmp.area].root + "_sort"].keys.push(y), v.tmp.value = [];
                }, g.execs.push(i), t.build.date_key && (t.build.area === "citation" && t.build.extension === "_sort" && (t[t.build.area].opt.sort_directions.push([
                    -1,
                    1
                ]), i = function(v, y) {
                    var _ = v.registry.registry[y.id].disambig.year_suffix;
                    _ || (_ = 0);
                    var E = r.Util.padding("" + _);
                    v[v.tmp.area].keys.push(E);
                }, g.execs.push(i)), t.build.date_key = !1), i = function(v) {
                    v.tmp["et-al-min"] = void 0, v.tmp["et-al-use-first"] = void 0, v.tmp["et-al-use-last"] = void 0, v.tmp.sort_key_flag = !1;
                }, g.execs.push(i), e.push(g);
            }
        };
        r.Node.label = {
            build: function(t, e) {
                if (this.strings.term) {
                    var i = function(l, u, f) {
                        var h = r.evaluateLabel(this, l, u, f);
                        f && this.strings.term === "locator" && (f.section_form_override = this.strings.form), h && (l.tmp.group_context.tip.term_intended = !0), r.UPDATE_GROUP_CONTEXT_CONDITION(l, h, null, this), h.indexOf("%s") === -1 && (this.strings.capitalize_if_first && !l.tmp.term_predecessor && !(l.opt.class === "in-text" && l.tmp.area === "citation") && (h = r.Output.Formatters["capitalize-first"](l, h)), l.output.append(h, this));
                    };
                    this.execs.push(i);
                } else {
                    this.strings.form || (this.strings.form = "long");
                    for(var s = t.build.names_variables[t.build.names_variables.length - 1], n = t.build.name_label[t.build.name_label.length - 1], a = 0, o = s.length; a < o; a += 1)n[s[a]] || (n[s[a]] = {});
                    if (t.build.name_flag) for(var a = 0, o = s.length; a < o; a += 1)n[s[a]].after = this;
                    else for(var a = 0, o = s.length; a < o; a += 1)n[s[a]].before = this;
                }
                e.push(this);
            }
        };
        r.Node.layout = {
            build: function(t, e) {
                var i, s, n, a;
                function o() {
                    t.build.area === "bibliography" && (n = new r.Token("text", r.SINGLETON), i = function(f) {
                        if (!f.tmp.parallel_and_not_last) {
                            var h;
                            f.tmp.cite_affixes[f.tmp.area][f.tmp.last_cite_locale] ? h = f.tmp.cite_affixes[f.tmp.area][f.tmp.last_cite_locale].suffix : h = f.bibliography.opt.layout_suffix;
                            var d = f.output.current.value();
                            f.opt.using_display ? d.blobs[d.blobs.length - 1].strings.suffix = h : d.strings.suffix = h;
                        }
                        f.bibliography.opt["second-field-align"] && f.output.endTag("bib_other");
                    }, n.execs.push(i), e.push(n));
                }
                this.tokentype === r.START && (this.locale_raw ? t.build.current_default_locale = this.locale_raw : t.build.current_default_locale = t.opt["default-locale"], i = function(f, h, d) {
                    if (f.opt.development_extensions.apply_citation_wrapper && f.sys.wrapCitationEntry && !f.tmp.just_looking && h.system_id && f.tmp.area === "citation") {
                        var p = new r.Token("group", r.START);
                        p.decorations = [
                            [
                                "@cite",
                                "entry"
                            ]
                        ], f.output.startTag("cite_entry", p), f.output.current.value().item_id = h.system_id, d && (f.output.current.value().locator_txt = d.locator_txt, f.output.current.value().suffix_txt = d.suffix_txt);
                    }
                }, this.execs.push(i)), this.tokentype === r.START && !t.tmp.cite_affixes[t.build.area] && (i = function(f, h, d) {
                    if (f.tmp.done_vars = [], d && d["author-only"] && f.tmp.done_vars.push("locator"), f.opt.suppressedJurisdictions[h.country] && h.country && [
                        "treaty",
                        "patent"
                    ].indexOf(h.type) === -1 && f.tmp.done_vars.push("country"), !f.tmp.just_looking && f.registry.registry[h.id] && f.registry.registry[h.id].parallel && f.tmp.done_vars.push("first-reference-note-number"), !f.tmp.just_looking && f.tmp.abbrev_trimmer && h.jurisdiction) for(var p in f.tmp.abbrev_trimmer.QUASHES[h.jurisdiction])f.tmp.done_vars.push(p);
                    f.tmp.rendered_name = !1;
                }, this.execs.push(i), i = function(f) {
                    f.tmp.sort_key_flag = !1;
                }, this.execs.push(i), i = function(f) {
                    f.tmp.nameset_counter = 0;
                }, this.execs.push(i), i = function(f, h) {
                    var d = new r.Token;
                    f.output.openLevel(d);
                }, this.execs.push(i), e.push(this), t.build.area === "citation" && (s = new r.Token("text", r.SINGLETON), i = function(f, h, d) {
                    if (d && d.prefix) {
                        var p = r.checkPrefixSpaceAppend(f, d.prefix);
                        f.tmp.just_looking || (p = f.output.checkNestedBrace.update(p));
                        var m = r.checkIgnorePredecessor(f, p);
                        f.output.append(p, this, !1, m);
                    }
                }, s.execs.push(i), e.push(s)));
                var l;
                if (this.locale_raw && (l = new r.Token("dummy", r.START), l.locale = this.locale_raw, l.strings.delimiter = this.strings.delimiter, l.strings.suffix = this.strings.suffix, t.tmp.cite_affixes[t.build.area] || (t.tmp.cite_affixes[t.build.area] = {})), this.tokentype === r.START && (t.build.layout_flag = !0, this.locale_raw || (t[t.tmp.area].opt.topdecor = [
                    this.decorations
                ], t[t.tmp.area + "_sort"].opt.topdecor = [
                    this.decorations
                ], t[t.build.area].opt.layout_prefix = this.strings.prefix, t[t.build.area].opt.layout_suffix = this.strings.suffix, t[t.build.area].opt.layout_delimiter = this.strings.delimiter, t[t.build.area].opt.layout_decorations = this.decorations, t.tmp.cite_affixes[t.build.area] && (a = new r.Token("else", r.START), r.Node.else.build.call(a, t, e))), this.locale_raw)) {
                    if (t.build.layout_locale_flag) l.name = "else-if", r.Attributes["@locale-internal"].call(l, t, this.locale_raw), r.Node["else-if"].build.call(l, t, e);
                    else {
                        var u = new r.Token("choose", r.START);
                        r.Node.choose.build.call(u, t, e), l.name = "if", r.Attributes["@locale-internal"].call(l, t, this.locale_raw), r.Node.if.build.call(l, t, e);
                    }
                    t.tmp.cite_affixes[t.build.area][l.locale] = {}, t.tmp.cite_affixes[t.build.area][l.locale].delimiter = this.strings.delimiter, t.tmp.cite_affixes[t.build.area][l.locale].suffix = this.strings.suffix;
                }
                this.tokentype === r.END && (this.locale_raw && (o(), t.build.layout_locale_flag ? (l.name = "else-if", l.tokentype = r.END, r.Attributes["@locale-internal"].call(l, t, this.locale_raw), r.Node["else-if"].build.call(l, t, e)) : (l.name = "if", l.tokentype = r.END, r.Attributes["@locale-internal"].call(l, t, this.locale_raw), r.Node.if.build.call(l, t, e), t.build.layout_locale_flag = !0)), this.locale_raw || (o(), t.tmp.cite_affixes[t.build.area] && t.build.layout_locale_flag && (a = new r.Token("else", r.END), r.Node.else.build.call(a, t, e), a = new r.Token("choose", r.END), r.Node.choose.build.call(a, t, e)), t.build_layout_locale_flag = !0, t.build.area === "citation" && (n = new r.Token("text", r.SINGLETON), i = function(f, h, d) {
                    if (d && d.suffix) {
                        var m = r.checkSuffixSpacePrepend(f, d.suffix);
                        f.tmp.just_looking || (m = f.output.checkNestedBrace.update(m)), f.output.append(m, this);
                    }
                }, n.execs.push(i), e.push(n)), i = function(f) {
                    f.output.closeLevel();
                }, this.execs.push(i), i = function(f, h) {
                    f.opt.development_extensions.apply_citation_wrapper && f.sys.wrapCitationEntry && !f.tmp.just_looking && h.system_id && f.tmp.area === "citation" && f.output.endTag();
                }, this.execs.push(i), e.push(this), t.build.layout_flag = !1, t.build.layout_locale_flag = !1));
            }
        };
        r.Node.macro = {
            build: function() {}
        };
        r.Node.alternative = {
            build: function(t, e) {
                if (this.tokentype === r.START) {
                    var i = new r.Token("choose", r.START);
                    r.Node.choose.build.call(i, t, e);
                    var s = new r.Token("if", r.START);
                    r.Attributes["@alternative-node-internal"].call(s, t), r.Node.if.build.call(s, t, e);
                    var n = function(a, o) {
                        if (a.tmp.oldItem = o, a.tmp.oldLang = a.opt.lang, a.tmp.abort_alternative = !0, o["language-name"] && o["language-name-original"]) {
                            var l = JSON.parse(JSON.stringify(o));
                            l.language = l["language-name"];
                            var u = r.localeResolve(l.language, a.opt["default-locale"][0]);
                            if (a.opt.multi_layout) for(var f in a.opt.multi_layout){
                                var h = a.opt.multi_layout[f], d = !1;
                                for(var p in h){
                                    var m = h[p];
                                    if (u.best === m.best || u.base === m.base || u.bare === m.bare) {
                                        d = h[0].best;
                                        break;
                                    }
                                }
                                d || (d = a.opt["default-locale"][0]), a.opt.lang = d;
                            }
                            for(var b in l)if ([
                                "id",
                                "type",
                                "language",
                                "multi"
                            ].indexOf(b) === -1 && b.slice(0, 4) !== "alt-") if (l.multi && l.multi._keys[b]) {
                                var c = !0;
                                for(var S in l.multi._keys[b])if (u.bare === S.replace(/^([a-zA-Z]+).*/, "$1")) {
                                    c = !1;
                                    break;
                                }
                                c && delete l[b];
                            } else delete l[b];
                            for(var b in l)b.slice(0, 4) === "alt-" ? (l[b.slice(4)] = l[b], a.tmp.abort_alternative = !1) : l.multi && l.multi._keys && !l["alt-" + b] && l.multi._keys[b] && (l.multi._keys[b][u.best] ? (l[b] = l.multi._keys[b][u.best], a.tmp.abort_alternative = !1) : l.multi._keys[b][u.base] ? (l[b] = l.multi._keys[b][u.base], a.tmp.abort_alternative = !1) : l.multi._keys[b][u.bare] && (l[b] = l.multi._keys[b][u.bare], a.tmp.abort_alternative = !1));
                        }
                        a.output.openLevel(this), a.registry.refhash[o.id] = l, a.nameOutput = new r.NameOutput(a, l);
                    };
                    this.execs.push(n), e.push(this);
                    var i = new r.Token("choose", r.START);
                    r.Node.choose.build.call(i, t, e);
                    var s = new r.Token("if", r.START);
                    r.Attributes["@alternative-node-internal"].call(s, t);
                    var n = function(a) {
                        a.tmp.abort_alternative = !0;
                    };
                    s.execs.push(n), r.Node.if.build.call(s, t, e);
                } else if (this.tokentype === r.END) {
                    var s = new r.Token("if", r.END);
                    r.Node.if.build.call(s, t, e);
                    var i = new r.Token("choose", r.END);
                    r.Node.choose.build.call(i, t, e);
                    var n = function(u, f) {
                        u.output.closeLevel(), u.registry.refhash[f.id] = u.tmp.oldItem, u.opt.lang = u.tmp.oldLang, u.nameOutput = new r.NameOutput(u, u.tmp.oldItem), u.tmp.abort_alternative = !1;
                    };
                    this.execs.push(n), e.push(this);
                    var s = new r.Token("if", r.END);
                    r.Node.if.build.call(s, t, e);
                    var i = new r.Token("choose", r.END);
                    r.Node.choose.build.call(i, t, e);
                }
            }
        };
        r.Node["alternative-text"] = {
            build: function(t, e) {
                if (this.tokentype === r.SINGLETON) {
                    var i = function(s, a) {
                        var a = s.refetchItem(a.id);
                        r.getCite.call(s, a);
                    };
                    this.execs.push(i);
                }
                e.push(this);
            }
        };
        r.NameOutput = function(t, e, i) {
            this.debug = !1, this.state = t, this.debug && this.state.sys.print("(1)"), this.Item = e, this.item = i, this.nameset_base = 0, this.etal_spec = {}, this._first_creator_variable = !1, this._please_chop = !1;
        };
        r.NameOutput.prototype.init = function(t) {
            this.requireMatch = t.requireMatch, this.state.tmp.term_predecessor && (this.state.tmp.subsequent_author_substitute_ok = !1), this.nameset_offset && (this.nameset_base = this.nameset_base + this.nameset_offset), this.nameset_offset = 0, this.names = t, this.variables = t.variables, this.state.tmp.value = [], this.state.tmp.rendered_name = [], this.state.tmp.label_blob = !1, this.state.tmp.etal_node = !1, this.state.tmp.etal_term = !1;
            for(var e = 0, i = this.variables.length; e < i; e += 1)this.Item[this.variables[e]] && this.Item[this.variables[e]].length && (this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[e]]));
            if (this["et-al"] = void 0, this.with = void 0, this.name = void 0, this.institutionpart = {}, this.state.tmp.group_context.tip.variable_attempt = !0, this.labelVariable = this.variables[0], !!this.state.tmp.value.length) {
                var s = this.checkCommonAuthor(this.requireMatch);
                if (s) {
                    this.state.tmp.can_substitute.pop(), this.state.tmp.can_substitute.push(!0);
                    for(var e in this.variables){
                        var n = this.state.tmp.done_vars.indexOf(this.variables[e]);
                        n > -1 && (this.state.tmp.done_vars = this.state.tmp.done_vars.slice(0, n).concat(this.state.tmp.done_vars.slice(e + 1)));
                    }
                    this.state.tmp.common_term_match_fail = !0, this.variables = [];
                }
            }
        };
        r.NameOutput.prototype.reinit = function(t, e) {
            if (this.requireMatch = t.requireMatch, this.labelVariable = e, this.state.tmp.can_substitute.value()) {
                this.nameset_offset = 0, this.variables = t.variables;
                var i = this.state.tmp.value.slice();
                this.state.tmp.value = [];
                for(var s = 0, n = this.variables.length; s < n; s += 1)this.Item[this.variables[s]] && this.Item[this.variables[s]].length && (this.state.tmp.value = this.state.tmp.value.concat(this.Item[this.variables[s]]));
                this.state.tmp.value.length && this.state.tmp.can_substitute.replace(!1, r.LITERAL), this.state.tmp.value = i;
            }
            var a = this.checkCommonAuthor(this.requireMatch);
            if (a) {
                this.state.tmp.can_substitute.pop(), this.state.tmp.can_substitute.push(!0);
                for(var s in this.variables){
                    var o = this.state.tmp.done_vars.indexOf(this.variables[s]);
                    o > -1 && (this.state.tmp.done_vars = this.state.tmp.done_vars.slice(0, o).concat(this.state.tmp.done_vars.slice(s + 1)));
                }
                this.variables = [];
            }
        };
        r.NameOutput.prototype.outputNames = function() {
            var t, e, i = this.variables;
            if (this.institution.and && ((!this.institution.and.single.blobs || !this.institution.and.single.blobs.length) && (this.institution.and.single.blobs = this.name.and.single.blobs), (!this.institution.and.multiple.blobs || !this.institution.and.multiple.blobs.length) && (this.institution.and.multiple.blobs = this.name.and.multiple.blobs)), this.variable_offset = {}, this.family) for(this.family_decor = r.Util.cloneToken(this.family), this.family_decor.strings.prefix = "", this.family_decor.strings.suffix = "", t = 0, e = this.family.execs.length; t < e; t += 1)this.family.execs[t].call(this.family_decor, this.state, this.Item);
            else this.family_decor = !1;
            if (this.given) for(this.given_decor = r.Util.cloneToken(this.given), this.given_decor.strings.prefix = "", this.given_decor.strings.suffix = "", t = 0, e = this.given.execs.length; t < e; t += 1)this.given.execs[t].call(this.given_decor, this.state, this.Item);
            else this.given_decor = !1;
            if (this.debug && this.state.sys.print("(2)"), this.getEtAlConfig(), this.debug && this.state.sys.print("(3)"), this.divideAndTransliterateNames(), this.debug && this.state.sys.print("(4)"), this.truncatePersonalNameLists(), this.debug && this.state.sys.print("(5)"), this.debug && this.state.sys.print("(6)"), this.disambigNames(), this.constrainNames(), this.debug && this.state.sys.print("(7)"), this.name.strings.form === "count") {
                (this.state.tmp.extension || this.names_count != 0) && (this.state.output.append(this.names_count, "empty"), this.state.tmp.group_context.tip.variable_success = !0);
                return;
            }
            this.debug && this.state.sys.print("(8)"), this.setEtAlParameters(), this.debug && this.state.sys.print("(9)"), this.setCommonTerm(this.requireMatch), this.debug && this.state.sys.print("(10)"), this.renderAllNames(), this.debug && this.state.sys.print("(11)");
            var s = [];
            for(t = 0, e = i.length; t < e; t += 1){
                var n = i[t], a = [], o = !1, l = null;
                if (!this.state.opt.development_extensions.spoof_institutional_affiliations) l = this._join([
                    this.freeters[n]
                ], "");
                else {
                    this.debug && this.state.sys.print("(11a)");
                    for(var u = 0, f = this.institutions[n].length; u < f; u += 1)a.push(this.joinPersonsAndInstitutions([
                        this.persons[n][u],
                        this.institutions[n][u]
                    ]));
                    if (this.debug && this.state.sys.print("(11b)"), this.institutions[n].length) {
                        var h = this.nameset_base + this.variable_offset[n];
                        this.freeters[n].length && (h += 1), o = this.joinInstitutionSets(a, h);
                    }
                    this.debug && this.state.sys.print("(11c)");
                    var l = this.joinFreetersAndInstitutionSets([
                        this.freeters[n],
                        o
                    ]);
                    this.debug && this.state.sys.print("(11d)");
                }
                if (l && (this.state.tmp.extension || (l = this._applyLabels(l, n)), s.push(l)), this.debug && this.state.sys.print("(11e)"), this.common_term) break;
            }
            for(this.debug && this.state.sys.print("(12)"), this.state.output.openLevel("empty"), this.state.output.current.value().strings.delimiter = this.state.inheritOpt(this.names, "delimiter", "names-delimiter"), this.debug && this.state.sys.print("(13)"), t = 0, e = s.length; t < e; t += 1)this.state.output.append(s[t], "literal", !0);
            !this.state.tmp.just_looking && s.length > 0 && (this.state.tmp.probably_rendered_something = !0), this.debug && this.state.sys.print("(14)"), this.state.output.closeLevel("empty"), this.debug && this.state.sys.print("(15)");
            var d = this.state.output.pop();
            this.state.tmp.name_node.top = d, this.debug && this.state.sys.print("(16)");
            var p = r.Util.cloneToken(this.names);
            if (this.state.tmp.group_context.tip.condition && r.UPDATE_GROUP_CONTEXT_CONDITION(this.state, this.names.strings.prefix, null, this.names), this.state.output.append(d, p), this.state.tmp.term_predecessor_name && (this.state.tmp.term_predecessor = !0), this.debug && this.state.sys.print("(17)"), this.debug && this.state.sys.print("(18)"), i[0] !== "authority") {
                var m = [], b = this.Item[i[0]];
                if (b) for(var t = 0, e = b.length; t < e; t += 1){
                    var c = r.Util.Names.getRawName(b[t]);
                    c && m.push(c);
                }
                m = m.join(", "), m && (this.state.tmp.name_node.string = m);
            }
            if (this.state.tmp.name_node.string && !this.state.tmp.first_name_string && (this.state.tmp.first_name_string = this.state.tmp.name_node.string), this.Item.type === "classic" && this.state.tmp.first_name_string) {
                var S = [];
                S.push(this.state.tmp.first_name_string), this.Item.title && S.push(this.Item.title), S = S.join(", "), S && this.state.sys.getAbbreviation && (this.state.sys.normalizeAbbrevsKey && (S = this.state.sys.normalizeAbbrevsKey("classic", S)), this.state.transform.loadAbbreviation("default", "classic", S, this.Item.language), this.state.transform.abbrevs.default.classic[S] && (this.state.tmp.done_vars.push("title"), this.state.output.append(this.state.transform.abbrevs.default.classic[S], "empty", !0), d = this.state.output.pop(), this.state.tmp.name_node.top.blobs.pop(), this.state.tmp.name_node.top.blobs.push(d)));
            }
            this._collapseAuthor(), this.variables = [], this.state.tmp.authority_stop_last = 0, this.debug && this.state.sys.print("(19)");
        };
        r.NameOutput.prototype._applyLabels = function(t, e) {
            var i;
            if (!this.label || !this.label[this.labelVariable]) return t;
            var s = 0, n = this.freeters_count[e] + this.institutions_count[e];
            if (n > 1) s = 1;
            else {
                for(var a = 0, o = this.persons[e].length; a < o; a += 1)n += this.persons_count[e][a];
                n > 1 && (s = 1);
            }
            return this.label[this.labelVariable].before ? (typeof this.label[this.labelVariable].before.strings.plural == "number" && (s = this.label[this.labelVariable].before.strings.plural), i = this._buildLabel(e, s, "before", this.labelVariable), this.state.output.openLevel("empty"), this.state.output.append(i, this.label[this.labelVariable].before, !0), this.state.output.append(t, "literal", !0), this.state.output.closeLevel("empty"), t = this.state.output.pop()) : this.label[this.labelVariable].after && (typeof this.label[this.labelVariable].after.strings.plural == "number" && (s = this.label[this.labelVariable].after.strings.plural), i = this._buildLabel(e, s, "after", this.labelVariable), this.state.output.openLevel("empty"), this.state.output.append(t, "literal", !0), this.state.output.append(i, this.label[this.labelVariable].after, !0), this.state.tmp.label_blob = this.state.output.pop(), this.state.output.append(this.state.tmp.label_blob, "literal", !0), this.state.output.closeLevel("empty"), t = this.state.output.pop()), t;
        };
        r.NameOutput.prototype._buildLabel = function(t, e, i, s) {
            this.common_term && (t = this.common_term);
            var n = !1, a = this.label[s][i];
            return a && (n = r.castLabel(this.state, a, t, e, r.TOLERANT)), n;
        };
        r.NameOutput.prototype._collapseAuthor = function() {
            var t, e, i;
            this.state.tmp.name_node.top.blobs.length !== 0 && (this.nameset_base === 0 && this.Item[this.variables[0]] && !this._first_creator_variable && (this._first_creator_variable = this.variables[0]), (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length || this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter.length) && (this.state.tmp.authorstring_request ? (e = "", t = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs, i = this.state.tmp.offset_characters, t && (e = this.state.output.string(this.state, t, !1)), this.state.tmp.offset_characters = i, this.state.registry.authorstrings[this.Item.id] = e) : !this.state.tmp.just_looking && !this.state.tmp.suppress_decorations && (this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length || this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter) && (e = "", t = this.state.tmp.name_node.top.blobs.slice(-1)[0].blobs, i = this.state.tmp.offset_characters, t && (e = this.state.output.string(this.state, t, !1)), e === this.state.tmp.last_primary_names_string ? ((this.item["suppress-author"] || this.state[this.state.tmp.area].opt.collapse && this.state[this.state.tmp.area].opt.collapse.length) && (this.state.tmp.name_node.top.blobs.pop(), this.state.tmp.name_node.children = [], this.state.tmp.offset_characters = i), this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter && (this.state.tmp.use_cite_group_delimiter = !0)) : (this.state.tmp.last_primary_names_string = e, this.variables.indexOf(this._first_creator_variable) > -1 && this.item && this.item["suppress-author"] && this.Item.type !== "legal_case" && (this.state.tmp.name_node.top.blobs.pop(), this.state.tmp.name_node.children = [], this.state.tmp.offset_characters = i, this.state.tmp.term_predecessor = !1), this.state.tmp.have_collapsed = !1, this.state[this.state.tmp.area].opt.cite_group_delimiter && this.state[this.state.tmp.area].opt.cite_group_delimiter && (this.state.tmp.use_cite_group_delimiter = !1)))));
        };
        r.NameOutput.prototype.isPerson = function(t) {
            return !(t.literal || !t.given && t.family && t.isInstitution);
        };
        r.NameOutput.prototype.truncatePersonalNameLists = function() {
            var t, e, i, s, n, a;
            this.freeters_count = {}, this.persons_count = {}, this.institutions_count = {};
            for(t in this.freeters)this.freeters.hasOwnProperty(t) && (this.freeters_count[t] = this.freeters[t].length, this.freeters[t] = this._truncateNameList(this.freeters, t));
            for(t in this.persons)if (this.persons.hasOwnProperty(t)) for(this.institutions_count[t] = this.institutions[t].length, this._truncateNameList(this.institutions, t), this.persons[t] = this.persons[t].slice(0, this.institutions[t].length), this.persons_count[t] = [], s = 0, n = this.persons[t].length; s < n; s += 1)this.persons_count[t][s] = this.persons[t][s].length, this.persons[t][s] = this._truncateNameList(this.persons, t, s);
            if (this.state.opt.development_extensions.etal_min_etal_usefirst_hack && this.etal_min === 1 && this.etal_use_first === 1 && !(this.state.tmp.extension || this.state.tmp.just_looking) ? a = t : a = !1, a || this._please_chop) for(e = 0, i = this.variables.length; e < i; e += 1){
                t = this.variables[e], this.freeters[t].length && (this._please_chop === t ? (this.freeters[t] = this.freeters[t].slice(1), this.freeters_count[t] += -1, this._please_chop = !1) : a && !this._please_chop && (this.freeters[t] = this.freeters[t].slice(0, 1), this.freeters_count[t] = 1, this.institutions[t] = [], this.persons[t] = [], this._please_chop = a));
                for(var s = 0, n = this.persons[t].length; s < n; s++)if (this.persons[t][s].length) {
                    if (this._please_chop === t) {
                        this.persons[t][s] = this.persons[t][s].slice(1), this.persons_count[t][s] += -1, this._please_chop = !1;
                        break;
                    } else if (a && !this._please_chop) {
                        this.freeters[t] = this.persons[t][s].slice(0, 1), this.freeters_count[t] = 1, this.institutions[t] = [], this.persons[t] = [], [], this._please_chop = a;
                        break;
                    }
                }
                this.institutions[t].length && (this._please_chop === t ? (this.institutions[t] = this.institutions[t].slice(1), this.institutions_count[t] += -1, this._please_chop = !1) : a && !this._please_chop && (this.institutions[t] = this.institutions[t].slice(0, 1), this.institutions_count[t] = 1, [], this._please_chop = a));
            }
            for(e = 0, i = this.variables.length; e < i; e += 1){
                this.institutions[t].length && (this.nameset_offset += 1);
                for(var s = 0, n = this.persons[t].length; s < n; s++)this.persons[t][s].length && (this.nameset_offset += 1);
            }
        };
        r.NameOutput.prototype._truncateNameList = function(t, e, i) {
            var s;
            if (typeof i > "u" ? s = t[e] : s = t[e][i], this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names && s.length > 50 && s.length > this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names + 2) {
                var n = this.state[this.state[this.state.tmp.area].root].opt.max_number_of_names;
                s = s.slice(0, n + 1).concat(s.slice(-1));
            }
            return s;
        };
        r.NameOutput.prototype.divideAndTransliterateNames = function() {
            var t, e, i, s, n = this.Item, a = this.variables;
            for(this.varnames = a.slice(), this.freeters = {}, this.persons = {}, this.institutions = {}, t = 0, e = a.length; t < e; t += 1){
                var o = a[t];
                this.variable_offset[o] = this.nameset_offset;
                var l = this._normalizeVariableValue(n, o);
                if (this.name.strings["suppress-min"] && l.length >= this.name.strings["suppress-min"] && (l = []), this.name.strings["suppress-max"] && l.length <= this.name.strings["suppress-max"] && (l = []), this._getFreeters(o, l), this._getPersonsAndInstitutions(o, l), this.state.opt.development_extensions.spoof_institutional_affiliations) {
                    if (this.name.strings["suppress-min"] === 0) for(this.freeters[o] = [], i = 0, s = this.persons[o].length; i < s; i += 1)this.persons[o][i] = [];
                    else if (this.institution.strings["suppress-min"] === 0) {
                        for(this.institutions[o] = [], this.freeters[o] = this.freeters[o].concat(this.persons[o]), i = 0, s = this.persons[o].length; i < s; i += 1)for(var u = 0, f = this.persons[o][i].length; u < f; u += 1)this.freeters[o].push(this.persons[o][i][u]);
                        this.persons[o] = [];
                    }
                }
            }
        };
        r.NameOutput.prototype._normalizeVariableValue = function(t, e) {
            var i;
            return typeof t[e] == "string" || typeof t[e] == "number" ? (r.debug('name variable "' + e + '" is string or number, not array. Attempting to fix.'), i = [
                {
                    literal: t[e] + ""
                }
            ]) : t[e] ? (typeof t[e].length != "number" && (r.debug('name variable "' + e + '" is object, not array. Attempting to fix.'), t[e] = [
                t[e]
            ]), i = t[e].slice()) : i = [], i;
        };
        r.NameOutput.prototype._getFreeters = function(t, e) {
            if (this.freeters[t] = [], this.state.opt.development_extensions.spoof_institutional_affiliations) for(var i = e.length - 1; i > -1 && this.isPerson(e[i]); i--){
                var s = this._checkNickname(e.pop());
                s && this.freeters[t].push(s);
            }
            else for(var i = e.length - 1; i > -1; i--){
                var s = e.pop();
                if (this.isPerson(s)) var s = this._checkNickname(s);
                this.freeters[t].push(s);
            }
            this.freeters[t].reverse(), this.freeters[t].length && (this.nameset_offset += 1);
        };
        r.NameOutput.prototype._getPersonsAndInstitutions = function(t, e) {
            if (this.persons[t] = [], this.institutions[t] = [], !!this.state.opt.development_extensions.spoof_institutional_affiliations) {
                for(var i = [], s = !1, n = !0, a = e.length - 1; a > -1; a += -1)if (this.isPerson(e[a])) {
                    var o = this._checkNickname(e[a]);
                    o && i.push(o);
                } else s = !0, this.institutions[t].push(e[a]), n || (i.reverse(), this.persons[t].push(i), i = []), n = !1;
                s && (i.reverse(), this.persons[t].push(i), this.persons[t].reverse(), this.institutions[t].reverse());
            }
        };
        r.NameOutput.prototype._clearValues = function(t) {
            for(var e = t.length - 1; e > -1; e += -1)t.pop();
        };
        r.NameOutput.prototype._checkNickname = function(t) {
            if ([
                "interview",
                "personal_communication"
            ].indexOf(this.Item.type) > -1) {
                var e = "";
                if (e = r.Util.Names.getRawName(t), e && this.state.sys.getAbbreviation && !(this.item && this.item["suppress-author"])) {
                    var i = e;
                    this.state.sys.normalizeAbbrevsKey && (i = this.state.sys.normalizeAbbrevsKey("author", e)), this.state.transform.loadAbbreviation("default", "nickname", i, this.Item.language);
                    var s = this.state.transform.abbrevs.default.nickname[i];
                    s && (s === "!here>>>" ? t = !1 : t = {
                        family: s,
                        given: ""
                    });
                }
            }
            return t;
        };
        r.NameOutput.prototype._purgeEmptyBlobs = function(t) {
            for(var e = t.length - 1; e > -1; e += -1)(!t[e] || t[e].length === 0 || !t[e].blobs.length) && (t = t.slice(0, e).concat(t.slice(e + 1)));
            return t;
        };
        r.NameOutput.prototype.joinPersons = function(t, e, i, s) {
            var n;
            return t = this._purgeEmptyBlobs(t), s || (s = "name"), typeof i > "u" ? this.etal_spec[e].freeters === 1 ? n = this._joinEtAl(t) : this.etal_spec[e].freeters === 2 ? n = this._joinEllipsis(t) : this.state.tmp.sort_key_flag ? n = this._join(t, this.state.inheritOpt(this.name, "delimiter", "name-delimiter", ", ")) : n = this._joinAnd(t) : this.etal_spec[e].persons[i] === 1 ? n = this._joinEtAl(t) : this.etal_spec[e].persons[i] === 2 ? n = this._joinEllipsis(t) : this.state.tmp.sort_key_flag ? n = this._join(t, this.state.inheritOpt(this.name, "delimiter", "name-delimiter", ", ")) : n = this._joinAnd(t), n;
        };
        r.NameOutput.prototype.joinInstitutionSets = function(t, e) {
            var i;
            return t = this._purgeEmptyBlobs(t), this.etal_spec[e].institutions === 1 ? i = this._joinEtAl(t, "institution") : this.etal_spec[e].institutions === 2 ? i = this._joinEllipsis(t, "institution") : i = this._joinAnd(t), i;
        };
        r.NameOutput.prototype.joinPersonsAndInstitutions = function(t) {
            t = this._purgeEmptyBlobs(t);
            var e = this._join(t, this.state.tmp.name_delimiter);
            return e.isInstitution = !0, e;
        };
        r.NameOutput.prototype.joinFreetersAndInstitutionSets = function(t) {
            t = this._purgeEmptyBlobs(t);
            var e = this._join(t, "[never here]", this.with.single, this.with.multiple);
            return e;
        };
        r.NameOutput.prototype._getAfterInvertedName = function(t, e, i) {
            if (i && t.length > 1 && this.state.inheritOpt(this.name, "delimiter-precedes-last") === "after-inverted-name") {
                var s = t[t.length - 2];
                s.blobs.length > 0 && s.blobs[0].isInverted && (i.strings.prefix = e);
            }
            return i;
        };
        r.NameOutput.prototype._getAndJoin = function(t, e) {
            var i = !1;
            if (t.length > 1) {
                var s = "single";
                t.length > 2 && (s = "multiple"), t[t.length - 1].isInstitution ? i = this.institution.and[s] : i = this.name.and[s], i = JSON.parse(JSON.stringify(i)), i = this._getAfterInvertedName(t, e, i);
            }
            return i;
        };
        r.NameOutput.prototype._joinEtAl = function(t) {
            var e = this.state.inheritOpt(this.name, "delimiter", "name-delimiter", ", "), i = this._join(t, e);
            return this.state.output.openLevel(this._getToken("name")), this.state.output.current.value().strings.delimiter = "", this.state.output.append(i, "literal", !0), t.length > 1 ? this.state.output.append(this["et-al"].multiple, "literal", !0) : t.length === 1 && this.state.output.append(this["et-al"].single, "literal", !0), this.state.output.closeLevel(), this.state.output.pop();
        };
        r.NameOutput.prototype._joinEllipsis = function(t) {
            var e = this.state.inheritOpt(this.name, "delimiter", "name-delimiter", ", "), i = !1;
            if (t.length > 1) {
                var s = "single";
                t.length > 2 && (s = "multiple"), i = JSON.parse(JSON.stringify(this.name.ellipsis[s])), i = this._getAfterInvertedName(t, e, i);
            }
            return this._join(t, e, i);
        };
        r.NameOutput.prototype._joinAnd = function(t) {
            var e = this.state.inheritOpt(this.name, "delimiter", "name-delimiter", ", "), i = this._getAndJoin(t, e);
            return this._join(t, e, i);
        };
        r.NameOutput.prototype._join = function(t, e, i) {
            var s, n;
            if (!t || (t = this._purgeEmptyBlobs(t), !t.length)) return !1;
            if (t.length > 1) if (t.length === 2) i ? t = [
                t[0],
                i,
                t[1]
            ] : t[0].strings.suffix += e;
            else {
                var a;
                i ? a = 1 : a = 0;
                for(var o = t.pop(), s = 0, n = t.length - a; s < n; s++)t[s].strings.suffix += e;
                t.push(i), t.push(o);
            }
            for(this.state.output.openLevel(), s = 0, n = t.length; s < n; s += 1)this.state.output.append(t[s], !1, !0);
            return this.state.output.closeLevel(), this.state.output.pop();
        };
        r.NameOutput.prototype._getToken = function(t) {
            var e = this[t];
            if (t === "institution") {
                var i = new r.Token;
                return i;
            }
            return e;
        };
        r.NameOutput.prototype.checkCommonAuthor = function(t) {
            if (!t) return !1;
            var e = !1;
            if (this.variables.length === 2) {
                var i = this.variables, s = i.slice();
                s.sort(), e = s.join("");
            }
            if (!e) return !1;
            var n = !1;
            if (this.state.locale[this.state.opt.lang].terms[e] && (n = !0), !n) return this.state.tmp.done_vars.push(this.variables[0]), this.state.tmp.done_vars.push(this.variables[1]), !1;
            var a = this.Item[this.variables[0]], o = this.Item[this.variables[1]], l = this._compareNamesets(a, o);
            return l === !0 && (this.state.tmp.done_vars.push(this.variables[0]), this.state.tmp.done_vars.push(this.variables[1])), !l;
        };
        r.NameOutput.prototype.setCommonTerm = function() {
            var t = this.variables, e = t.slice();
            if (e.sort(), this.common_term = e.join(""), !!this.common_term) {
                var i = !1;
                if (this.label && this.label[this.variables[0]] && (this.label[this.variables[0]].before ? i = this.state.getTerm(this.common_term, this.label[this.variables[0]].before.strings.form, 0) : this.label[this.variables[0]].after && (i = this.state.getTerm(this.common_term, this.label[this.variables[0]].after.strings.form, 0))), !this.state.locale[this.state.opt.lang].terms[this.common_term] || !i || this.variables.length < 2) {
                    this.common_term = !1;
                    return;
                }
                for(var s = 0, n = 0, a = this.variables.length - 1; n < a; n += 1){
                    var o = this.variables[n], l = this.variables[n + 1];
                    if (this.freeters[o].length || this.freeters[l].length) {
                        if (this.etal_spec[o].freeters !== this.etal_spec[l].freeters || !this._compareNamesets(this.freeters[o], this.freeters[l])) {
                            this.common_term = !1;
                            return;
                        }
                        s += 1;
                    }
                    if (this.persons[o].length !== this.persons[l].length) {
                        this.common_term = !1;
                        return;
                    }
                    for(var u = 0, f = this.persons[o].length; u < f; u += 1)if (this.etal_spec[o].persons[u] !== this.etal_spec[l].persons[u] || !this._compareNamesets(this.persons[o][u], this.persons[l][u])) {
                        this.common_term = !1;
                        return;
                    }
                }
            }
        };
        r.NameOutput.prototype._compareNamesets = function(t, e) {
            if (!t || !e || t.length !== e.length) return !1;
            for(var i = 0, s = e.length; i < s; i += 1)for(var n = 0, a = r.NAME_PARTS.length; n < a; n += 1){
                var o = r.NAME_PARTS[n];
                if (!t[i] || t[i][o] != e[i][o]) return !1;
            }
            return !0;
        };
        r.NameOutput.prototype.constrainNames = function() {
            this.names_count = 0;
            for(var t, e = 0, i = this.variables.length; e < i; e += 1){
                var s = this.variables[e];
                t = this.nameset_base + e, this.freeters[s].length && (this.state.tmp.names_max.push(this.freeters[s].length, "literal"), this._imposeNameConstraints(this.freeters, this.freeters_count, s, t), this.names_count += this.freeters[s].length), this.institutions[s].length && (this.state.tmp.names_max.push(this.institutions[s].length, "literal"), this._imposeNameConstraints(this.institutions, this.institutions_count, s, t), this.persons[s] = this.persons[s].slice(0, this.institutions[s].length), this.names_count += this.institutions[s].length);
                for(var n = 0, a = this.persons[s].length; n < a; n += 1)this.persons[s][n].length && (this.state.tmp.names_max.push(this.persons[s][n].length, "literal"), this._imposeNameConstraints(this.persons[s], this.persons_count[s], n, t), this.names_count += this.persons[s][n].length);
            }
        };
        r.NameOutput.prototype._imposeNameConstraints = function(t, e, i, s) {
            var n = t[i], a = this.state.tmp["et-al-min"];
            this.state.tmp.suppress_decorations ? this.state.tmp.disambig_request && this.state.tmp.disambig_request.names[s] ? a = this.state.tmp.disambig_request.names[s] : e[i] >= this.etal_min && (a = this.etal_use_first) : (this.state.tmp.disambig_request && this.state.tmp.disambig_request.names[s] > this.etal_use_first ? e[i] < this.etal_min ? a = e[i] : a = this.state.tmp.disambig_request.names[s] : e[i] >= this.etal_min && (a = this.etal_use_first), this.etal_use_last && a > this.etal_min - 2 && (a = this.etal_min - 2));
            var o = this.etal_min >= this.etal_use_first, l = e[i] > a;
            a > e[i] && (a = n.length), o && l && (this.etal_use_last ? t[i] = n.slice(0, a).concat(n.slice(-1)) : t[i] = n.slice(0, a)), this.state.tmp.disambig_settings.names[s] = t[i].length, this.state.disambiguate.padBase(this.state.tmp.disambig_settings);
        };
        r.NameOutput.prototype.disambigNames = function() {
            for(var t, e = 0, i = this.variables.length; e < i; e += 1){
                var s = this.variables[e];
                if (t = this.nameset_base + e, this.freeters[s].length && this._runDisambigNames(this.freeters[s], t), this.institutions[s].length) {
                    typeof this.state.tmp.disambig_settings.givens[t] > "u" && (this.state.tmp.disambig_settings.givens[t] = []);
                    for(var n = 0, a = this.institutions[s].length; n < a; n += 1)typeof this.state.tmp.disambig_settings.givens[t][n] > "u" && this.state.tmp.disambig_settings.givens[t].push(2);
                }
                for(var n = 0, a = this.persons[s].length; n < a; n += 1)this.persons[s][n].length && this._runDisambigNames(this.persons[s][n], t);
            }
        };
        r.NameOutput.prototype._runDisambigNames = function(t, e) {
            var i, s, n, a, o, l, u;
            for(o = 0, l = t.length; o < l; o += 1)if (!(!t[o].given && !t[o].family)) {
                if (n = this.state.inheritOpt(this.name, "initialize-with"), this.state.registry.namereg.addname("" + this.Item.id, t[o], o), i = this.state.tmp.disambig_settings.givens[e], typeof i > "u") for(var f = 0, h = e + 1; f < h; f += 1)this.state.tmp.disambig_settings.givens[f] || (this.state.tmp.disambig_settings.givens[f] = []);
                if (i = this.state.tmp.disambig_settings.givens[e][o], typeof i > "u" && (s = this.state.inheritOpt(this.name, "form", "name-form", "long"), a = this.state.registry.namereg.evalname("" + this.Item.id, t[o], o, 0, s, n), this.state.tmp.disambig_settings.givens[e].push(a)), s = this.state.inheritOpt(this.name, "form", "name-form", "long"), u = this.state.registry.namereg.evalname("" + this.Item.id, t[o], o, 0, s, n), this.state.tmp.disambig_request) {
                    var d = this.state.tmp.disambig_settings.givens[e][o];
                    d === 1 && this.state.citation.opt["givenname-disambiguation-rule"] === "by-cite" && (typeof this.state.inheritOpt(this.name, "initialize-with") > "u" || typeof t[o].given > "u") && (d = 2), a = d, this.state.opt["disambiguate-add-givenname"] && t[o].given && (a = this.state.registry.namereg.evalname("" + this.Item.id, t[o], o, a, this.state.inheritOpt(this.name, "form", "name-form", "long"), this.state.inheritOpt(this.name, "initialize-with")));
                } else a = u;
                !this.state.tmp.just_looking && this.item && this.item.position === r.POSITION_FIRST && u > a && (a = u), this.state.tmp.sort_key_flag || (this.state.tmp.disambig_settings.givens[e][o] = a, typeof n == "string" && (typeof this.name.strings.initialize > "u" || this.name.strings.initialize === !0) && (this.state.tmp.disambig_settings.use_initials = !0));
            }
        };
        r.NameOutput.prototype.getEtAlConfig = function() {
            var t = this.item;
            this["et-al"] = {}, this.state.output.append(this.etal_term, this.etal_style, !0), this["et-al"].single = this.state.output.pop(), this["et-al"].single.strings.suffix = this.etal_suffix, this["et-al"].single.strings.prefix = this.etal_prefix_single, this.state.output.append(this.etal_term, this.etal_style, !0), this["et-al"].multiple = this.state.output.pop(), this["et-al"].multiple.strings.suffix = this.etal_suffix, this["et-al"].multiple.strings.prefix = this.etal_prefix_multiple, typeof t > "u" && (t = {}), t.position ? (this.state.inheritOpt(this.name, "et-al-subsequent-min") ? this.etal_min = this.state.inheritOpt(this.name, "et-al-subsequent-min") : this.etal_min = this.state.inheritOpt(this.name, "et-al-min"), this.state.inheritOpt(this.name, "et-al-subsequent-use-first") ? this.etal_use_first = this.state.inheritOpt(this.name, "et-al-subsequent-use-first") : this.etal_use_first = this.state.inheritOpt(this.name, "et-al-use-first")) : (this.state.tmp["et-al-min"] ? this.etal_min = this.state.tmp["et-al-min"] : this.etal_min = this.state.inheritOpt(this.name, "et-al-min"), this.state.tmp["et-al-use-first"] ? this.etal_use_first = this.state.tmp["et-al-use-first"] : this.etal_use_first = this.state.inheritOpt(this.name, "et-al-use-first"), typeof this.state.tmp["et-al-use-last"] == "boolean" ? this.etal_use_last = this.state.tmp["et-al-use-last"] : this.etal_use_last = this.state.inheritOpt(this.name, "et-al-use-last")), this.state.tmp["et-al-min"] || (this.state.tmp["et-al-min"] = this.etal_min);
        };
        r.NameOutput.prototype.setEtAlParameters = function() {
            var t, e, i, s;
            for(t = 0, e = this.variables.length; t < e; t += 1){
                var n = this.variables[t];
                for(typeof this.etal_spec[n] > "u" && (this.etal_spec[n] = {
                    freeters: 0,
                    institutions: 0,
                    persons: []
                }), this.etal_spec[this.nameset_base + t] = this.etal_spec[n], this.freeters[n].length && this._setEtAlParameter("freeters", n), i = 0, s = this.persons[n].length; i < s; i += 1)typeof this.etal_spec[n][i] > "u" && (this.etal_spec[n].persons[i] = 0), this._setEtAlParameter("persons", n, i);
                this.institutions[n].length && this._setEtAlParameter("institutions", n);
            }
        };
        r.NameOutput.prototype._setEtAlParameter = function(t, e, i) {
            var s, n;
            t === "persons" ? (s = this.persons[e][i], n = this.persons_count[e][i]) : (s = this[t][e], n = this[t + "_count"][e]), s.length < n && !this.state.tmp.sort_key_flag ? this.etal_use_last ? t === "persons" ? this.etal_spec[e].persons[i] = 2 : this.etal_spec[e][t] = 2 : t === "persons" ? this.etal_spec[e].persons[i] = 1 : this.etal_spec[e][t] = 1 : t === "persons" ? this.etal_spec[e].persons[i] = 0 : this.etal_spec[e][t] = 0;
        };
        r.NameOutput.prototype.renderAllNames = function() {
            for(var t, e = 0, i = this.variables.length; e < i; e += 1){
                var s = this.variables[e];
                (this.freeters[s].length || this.institutions[s].length) && (this.state.tmp.group_context.tip.condition || (this.state.tmp.just_did_number = !1)), t = this.nameset_base + e, this.freeters[s].length && (this.freeters[s] = this._renderNames(s, this.freeters[s], t));
                for(var n = 0, a = this.institutions[s].length; n < a; n += 1)this.persons[s][n] = this._renderNames(s, this.persons[s][n], t, n);
            }
            this.renderInstitutionNames();
        };
        r.NameOutput.prototype.renderInstitutionNames = function() {
            for(var t = 0, e = this.variables.length; t < e; t += 1)for(var i = this.variables[t], s = 0, n = this.institutions[i].length; s < n; s += 1){
                var d, a = this.institutions[i][s], s, n, o;
                this.state.tmp.extension ? o = [
                    "sort"
                ] : a.isInstitution || a.literal ? o = this.state.opt["cite-lang-prefs"].institutions : o = this.state.opt["cite-lang-prefs"].persons;
                var l = {
                    primary: "locale-orig",
                    secondary: !1,
                    tertiary: !1
                };
                if (o) for(var u = [
                    "primary",
                    "secondary",
                    "tertiary"
                ], f = 0, h = u.length; f < h && !(o.length - 1 < f); f += 1)o[f] && (l[u[f]] = "locale-" + o[f]);
                else l.primary = "locale-translat";
                this.state.tmp.area !== "bibliography" && !(this.state.tmp.area === "citation" && this.state.opt.xclass === "note" && this.item && !this.item.position) && (l.secondary = !1, l.tertiary = !1), this.setRenderedName(a);
                var d = this._renderInstitutionName(i, a, l, s);
                this.institutions[i][s] = d;
            }
        };
        r.NameOutput.prototype._renderInstitutionName = function(t, e, i, s) {
            var n, a, o, l, u, f, h, d = this.getName(e, i.primary, !0), p = d.name, m = d.usedOrig;
            if (p && (p = this.fixupInstitution(p, t, s)), n = !1, i.secondary) {
                d = this.getName(e, i.secondary, !1, m);
                var n = d.name;
                m = d.usedOrig, n && (n = this.fixupInstitution(n, t, s));
            }
            a = !1, i.tertiary && (d = this.getName(e, i.tertiary, !1, m), a = d.name, a && (a = this.fixupInstitution(a, t, s)));
            var b = {
                l: {
                    pri: !1,
                    sec: !1,
                    ter: !1
                },
                s: {
                    pri: !1,
                    sec: !1,
                    ter: !1
                }
            };
            switch(p && (b.l.pri = p.long, b.s.pri = p.short.length ? p.short : p.long), n && (b.l.sec = n.long, b.s.sec = n.short.length ? n.short : n.long), a && (b.l.ter = a.long, b.s.ter = a.short.length ? a.short : a.long), this.institution.strings["institution-parts"]){
                case "short":
                    p.short.length ? (l = this._getShortStyle(), u = [
                        this._composeOneInstitutionPart([
                            b.s.pri,
                            b.s.sec,
                            b.s.ter
                        ], i, l, t)
                    ]) : (o = this._getLongStyle(p, t, s), u = [
                        this._composeOneInstitutionPart([
                            b.l.pri,
                            b.l.sec,
                            b.l.ter
                        ], i, o, t)
                    ]);
                    break;
                case "short-long":
                    o = this._getLongStyle(p, t, s), l = this._getShortStyle(), f = this._renderOneInstitutionPart(p.short, l), h = this._composeOneInstitutionPart([
                        b.l.pri,
                        b.l.sec,
                        b.l.ter
                    ], i, o, t), u = [
                        f,
                        h
                    ];
                    break;
                case "long-short":
                    o = this._getLongStyle(p, t, s), l = this._getShortStyle(), f = this._renderOneInstitutionPart(p.short, l), h = this._composeOneInstitutionPart([
                        b.l.pri,
                        b.l.sec,
                        b.l.ter
                    ], i, o, t), u = [
                        h,
                        f
                    ];
                    break;
                default:
                    o = this._getLongStyle(p, t, s), u = [
                        this._composeOneInstitutionPart([
                            b.l.pri,
                            b.l.sec,
                            b.l.ter
                        ], i, o, t)
                    ];
                    break;
            }
            var c = this._join(u, " ");
            return c && (c.isInstitution = !0), this.state.tmp.name_node.children.push(c), c;
        };
        r.NameOutput.prototype._composeOneInstitutionPart = function(t, e, i) {
            var s = !1, n = !1, a = !1, o, l, u;
            if (t[0]) {
                if (o = r.Util.cloneToken(i), this.state.opt.citeAffixes[e.primary] && this.state.opt.citeAffixes.institutions[e.primary].prefix === "<i>") {
                    for(var f = !1, h = 0, d = o.decorations.length; h < d; h += 1)i.decorations[h][0] === "@font-style" && o.decorations[h][1] === "italic" && (f = !0);
                    f || o.decorations.push([
                        "@font-style",
                        "italic"
                    ]);
                }
                s = this._renderOneInstitutionPart(t[0], o);
            }
            t[1] && (n = this._renderOneInstitutionPart(t[1], i)), t[2] && (a = this._renderOneInstitutionPart(t[2], i));
            var p;
            if (n || a) {
                this.state.output.openLevel("empty"), this.state.output.append(s), l = r.Util.cloneToken(i), e.secondary && (l.strings.prefix = this.state.opt.citeAffixes.institutions[e.secondary].prefix, l.strings.suffix = this.state.opt.citeAffixes.institutions[e.secondary].suffix, l.strings.prefix || (l.strings.prefix = " "));
                var m = new r.Token;
                m.decorations.push([
                    "@font-style",
                    "normal"
                ]), m.decorations.push([
                    "@font-weight",
                    "normal"
                ]), this.state.output.openLevel(m), this.state.output.append(n, l), this.state.output.closeLevel(), u = r.Util.cloneToken(i), e.tertiary && (u.strings.prefix = this.state.opt.citeAffixes.institutions[e.tertiary].prefix, u.strings.suffix = this.state.opt.citeAffixes.institutions[e.tertiary].suffix, u.strings.prefix || (u.strings.prefix = " "));
                var b = new r.Token;
                b.decorations.push([
                    "@font-style",
                    "normal"
                ]), b.decorations.push([
                    "@font-weight",
                    "normal"
                ]), this.state.output.openLevel(b), this.state.output.append(a, u), this.state.output.closeLevel(), this.state.output.closeLevel(), p = this.state.output.pop();
            } else p = s;
            return p;
        };
        r.NameOutput.prototype._renderOneInstitutionPart = function(t, e) {
            for(var i = 0, s = t.length; i < s; i += 1)if (t[i]) {
                var n = t[i];
                if (this.state.tmp.strip_periods) n = n.replace(/\./g, "");
                else for(var a = 0, o = e.decorations.length; a < o; a += 1)if (e.decorations[a][0] === "@strip-periods" && e.decorations[a][1] === "true") {
                    n = n.replace(/\./g, "");
                    break;
                }
                this.state.tmp.group_context.tip.variable_success = !0, this.state.tmp.can_substitute.replace(!1, r.LITERAL), n === "!here>>>" ? t[i] = !1 : (this.state.output.append(n, e, !0), t[i] = this.state.output.pop());
            }
            return typeof this.institution.strings["part-separator"] > "u" && (this.institution.strings["part-separator"] = this.state.tmp.name_delimiter), this._join(t, this.institution.strings["part-separator"]);
        };
        r.NameOutput.prototype._renderNames = function(t, e, i, s) {
            var n = !1;
            if (e.length) {
                for(var a = [], o = 0, l = e.length; o < l; o += 1){
                    var u = e[o], n, f;
                    this.state.tmp.extension ? f = [
                        "sort"
                    ] : u.isInstitution || u.literal ? f = this.state.opt["cite-lang-prefs"].institutions : f = this.state.opt["cite-lang-prefs"].persons;
                    var h = {
                        primary: "locale-orig",
                        secondary: !1,
                        tertiary: !1
                    };
                    if (f) for(var d = [
                        "primary",
                        "secondary",
                        "tertiary"
                    ], p = 0, m = d.length; p < m && !(f.length - 1 < p); p += 1)h[d[p]] = "locale-" + f[p];
                    else h.primary = "locale-translat";
                    if ((this.state.tmp.sort_key_flag || this.state.tmp.area !== "bibliography" && !(this.state.tmp.area === "citation" && this.state.opt.xclass === "note" && this.item && !this.item.position)) && (h.secondary = !1, h.tertiary = !1), this.setRenderedName(u), !u.literal && !u.isInstitution) {
                        var b = this._renderPersonalName(t, u, h, i, o, s), c = r.Util.cloneToken(this.name);
                        this.state.output.append(b, c, !0), a.push(this.state.output.pop());
                    } else a.push(this._renderInstitutionName(t, u, h, s));
                }
                n = this.joinPersons(a, i, s);
            }
            return n;
        };
        r.NameOutput.prototype._renderPersonalName = function(t, e, i, s, n, a) {
            var o = this.getName(e, i.primary, !0), l = this._renderOnePersonalName(o.name, s, n, a), u = !1;
            i.secondary && (o = this.getName(e, i.secondary, !1, o.usedOrig), o.name && (u = this._renderOnePersonalName(o.name, s, n, a)));
            var f = !1;
            i.tertiary && (o = this.getName(e, i.tertiary, !1, o.usedOrig), o.name && (f = this._renderOnePersonalName(o.name, s, n, a)));
            var h;
            if (u || f) {
                this.state.output.openLevel("empty"), this.state.output.append(l);
                var d = new r.Token;
                i.secondary && (d.strings.prefix = this.state.opt.citeAffixes.persons[i.secondary].prefix, d.strings.suffix = this.state.opt.citeAffixes.persons[i.secondary].suffix, d.strings.prefix || (d.strings.prefix = " ")), this.state.output.append(u, d);
                var p = new r.Token;
                i.tertiary && (p.strings.prefix = this.state.opt.citeAffixes.persons[i.tertiary].prefix, p.strings.suffix = this.state.opt.citeAffixes.persons[i.tertiary].suffix, p.strings.prefix || (p.strings.prefix = " ")), this.state.output.append(f, p), this.state.output.closeLevel(), h = this.state.output.pop();
            } else h = l;
            return h;
        };
        r.NameOutput.prototype._isRomanesque = function(t) {
            var e = 2;
            t.family.replace(/\"/g, "").match(r.ROMANESQUE_REGEXP) || (e = 0), !e && t.given && t.given.match(r.STARTSWITH_ROMANESQUE_REGEXP) && (e = 1);
            var i;
            return e == 2 && (t.multi && t.multi.main ? i = t.multi.main.slice(0, 2) : this.Item.language && (i = this.Item.language.slice(0, 2)), [
                "ja",
                "zh"
            ].indexOf(i) > -1 && (e = 1)), e;
        };
        r.NameOutput.prototype._renderOnePersonalName = function(t, e, i, s) {
            var n = t, a = this._droppingParticle(n, e, s), o = this._familyName(n), l = this._nonDroppingParticle(n), u = this._givenName(n, e, i), f = u.blob, h = this._nameSuffix(n);
            f === !1 && (a = !1, h = !1);
            var d = this.state.inheritOpt(this.name, "sort-separator");
            d || (d = "");
            var p;
            n["comma-suffix"] ? p = ", " : p = " ";
            var m = this._isRomanesque(n);
            function b(O) {
                return O ? typeof O.blobs == "string" ? [
                    "\u2019",
                    "'",
                    "-",
                    " "
                ].indexOf(O.blobs.slice(-1)) > -1 : b(O.blobs[O.blobs.length - 1]) : !1;
            }
            var c = b(l), S;
            [
                "fr",
                "ru",
                "cs"
            ].indexOf(this.state.opt["default-locale"][0].slice(0, 2)) > -1 ? S = "\xA0" : S = " ";
            var g, v, y, _;
            if (m === 0) g = this._join([
                l,
                o,
                f
            ], "");
            else if (m === 1 || n["static-ordering"]) v = this._join([
                l,
                o
            ], S), g = this._join([
                v,
                f
            ], " ");
            else if (n["reverse-ordering"]) v = this._join([
                l,
                o
            ], S), g = this._join([
                f,
                v
            ], " ");
            else if (this.state.tmp.sort_key_flag) this.state.opt["demote-non-dropping-particle"] === "never" ? (v = this._join([
                l,
                o
            ], S), v = this._join([
                v,
                a
            ], " "), v = this._join([
                v,
                f
            ], this.state.opt.sort_sep), g = this._join([
                v,
                h
            ], " ")) : (_ = this._join([
                f,
                a,
                l
            ], " "), v = this._join([
                o,
                _
            ], this.state.opt.sort_sep), g = this._join([
                v,
                h
            ], " "));
            else if (this.state.inheritOpt(this.name, "name-as-sort-order") === "all" || this.state.inheritOpt(this.name, "name-as-sort-order") === "first" && i === 0 && (s === 0 || typeof s > "u")) [
                "Lord",
                "Lady"
            ].indexOf(n.given) > -1 && (d = ", "), [
                "always",
                "display-and-sort"
            ].indexOf(this.state.opt["demote-non-dropping-particle"]) > -1 ? (_ = this._join([
                f,
                a
            ], n["comma-dropping-particle"] + " "), _ = this._join([
                _,
                l
            ], " "), _ && this.given && (_.strings.prefix = this.given.strings.prefix, _.strings.suffix = this.given.strings.suffix), o && this.family && (o.strings.prefix = this.family.strings.prefix, o.strings.suffix = this.family.strings.suffix), v = this._join([
                o,
                _
            ], d), g = this._join([
                v,
                h
            ], d)) : (c ? y = this._join([
                l,
                o
            ], "") : y = this._join([
                l,
                o
            ], S), y && this.family && (y.strings.prefix = this.family.strings.prefix, y.strings.suffix = this.family.strings.suffix), _ = this._join([
                f,
                a
            ], n["comma-dropping-particle"] + " "), _ && this.given && (_.strings.prefix = this.given.strings.prefix, _.strings.suffix = this.given.strings.suffix), v = this._join([
                y,
                _
            ], d), g = this._join([
                v,
                h
            ], d)), g.isInverted = !0;
            else {
                if (n["dropping-particle"] && n.family && !n["non-dropping-particle"]) {
                    var E = n["dropping-particle"], x = [
                        "'",
                        "\u02BC",
                        "\u2019",
                        "-"
                    ];
                    x.indexOf(E.slice(-1)) > -1 && E.slice(0, -1) !== "de" && (o = this._join([
                        a,
                        o
                    ], ""), a = !1);
                }
                c ? (_ = this._join([
                    l,
                    o
                ], ""), _ = this._join([
                    a,
                    _
                ], S)) : _ = this._join([
                    a,
                    l,
                    o
                ], S), _ = this._join([
                    _,
                    h
                ], p), _ && this.family && (_.strings.prefix = this.family.strings.prefix, _.strings.suffix = this.family.strings.suffix), f && this.given && (f.strings.prefix = this.given.strings.prefix, f.strings.suffix = this.given.strings.suffix), _.strings.prefix && (n["comma-dropping-particle"] = "");
                var k;
                this.state.inheritOpt(this.name, "initialize-with") && this.state.inheritOpt(this.name, "initialize-with").match(/[\u00a0\ufeff]/) && u.initializationLevel === 1 ? k = S : k = " ", g = this._join([
                    f,
                    _
                ], n["comma-dropping-particle"] + k);
            }
            return this.state.tmp.group_context.tip.variable_success = !0, this.state.tmp.can_substitute.replace(!1, r.LITERAL), this.state.tmp.term_predecessor = !0, this.state.tmp.name_node.children.push(g), g;
        };
        r.NameOutput.prototype._normalizeNameInput = function(t) {
            var e = {
                literal: t.literal,
                family: t.family,
                isInstitution: t.isInstitution,
                given: t.given,
                suffix: t.suffix,
                "comma-suffix": t["comma-suffix"],
                "non-dropping-particle": t["non-dropping-particle"],
                "dropping-particle": t["dropping-particle"],
                "static-ordering": t["static-ordering"],
                "static-particles": t["static-particles"],
                "reverse-ordering": t["reverse-ordering"],
                "full-form-always": t["full-form-always"],
                "parse-names": t["parse-names"],
                "comma-dropping-particle": "",
                block_initialize: t.block_initialize,
                multi: t.multi
            };
            return this._parseName(e), e;
        };
        r.NameOutput.prototype._stripPeriods = function(t, e) {
            var i = this[t + "_decor"];
            if (e) {
                if (this.state.tmp.strip_periods) e = e.replace(/\./g, "");
                else if (i) {
                    for(var s = 0, n = i.decorations.length; s < n; s += 1)if (i.decorations[s][0] === "@strip-periods" && i.decorations[s][1] === "true") {
                        e = e.replace(/\./g, "");
                        break;
                    }
                }
            }
            return e;
        };
        r.NameOutput.prototype._nonDroppingParticle = function(t) {
            var e = t["non-dropping-particle"];
            e && this.state.tmp.sort_key_flag && (e = e.replace(/[\'\u2019]/, ""));
            var i = this._stripPeriods("family", e);
            return this.state.output.append(i, this.family_decor, !0) ? this.state.output.pop() : !1;
        };
        r.NameOutput.prototype._droppingParticle = function(t, e, i) {
            var s = t["dropping-particle"];
            s && this.state.tmp.sort_key_flag && (s = s.replace(/[\'\u2019]/, ""));
            var n = this._stripPeriods("given", s);
            if (t["dropping-particle"] && t["dropping-particle"].match(/^et.?al[^a-z]$/)) this.state.inheritOpt(this.name, "et-al-use-last") ? typeof i > "u" ? this.etal_spec[e].freeters = 2 : this.etal_spec[e].persons = 2 : typeof i > "u" ? this.etal_spec[e].freeters = 1 : this.etal_spec[e].persons = 1, t["comma-dropping-particle"] = "";
            else if (this.state.output.append(n, this.given_decor, !0)) return this.state.output.pop();
            return !1;
        };
        r.NameOutput.prototype._familyName = function(t) {
            var e = this._stripPeriods("family", t.family);
            return this.state.output.append(e, this.family_decor, !0) ? this.state.output.pop() : !1;
        };
        r.NameOutput.prototype._givenName = function(t, e, i) {
            var s, n = this.state.inheritOpt(this.name, "form", "name-form", "long") !== "long", a = this.state.inheritOpt(this.name, "initialize") !== !1, o = typeof this.state.inheritOpt(this.name, "initialize-with") == "string" && !t.block_initialize, l, u;
            if (t["full-form-always"]) u = 2;
            else {
                n ? l = 0 : o ? l = 1 : l = 2;
                var f = this.state.tmp.disambig_settings.givens[e][i];
                f > l ? u = f : u = l;
            }
            var h = this.state.citation.opt["givenname-disambiguation-rule"];
            if (h && h.slice(-14) === "-with-initials" && (o = !0), t.family && u === 1) if (o) {
                var d = this.state.inheritOpt(this.name, "initialize-with", !1, "");
                t.given = r.Util.Names.initializeWith(this.state, t.given, d, !a);
            } else t.given = r.Util.Names.unInitialize(this.state, t.given);
            else {
                if (u === 0) return {
                    blob: !1
                };
                u === 2 && (t.given = r.Util.Names.unInitialize(this.state, t.given));
            }
            var p = this._stripPeriods("given", t.given), m = this.state.output.append(p, this.given_decor, !0);
            return m ? (s = this.state.output.pop(), {
                blob: s,
                initializationLevel: u
            }) : {
                blob: !1
            };
        };
        r.NameOutput.prototype._nameSuffix = function(t) {
            var e = t.suffix, i;
            e && typeof this.state.inheritOpt(this.name, "initialize-with") == "string" && (e = r.Util.Names.initializeWith(this.state, e, this.state.inheritOpt(this.name, "initialize-with"), !0)), e = this._stripPeriods("family", e);
            var s = "";
            e && e.slice(-1) === "." && (e = e.slice(0, -1), s = ".");
            var n = this.state.output.append(e, "empty", !0);
            return n ? (i = this.state.output.pop(), i.strings.suffix = s + i.strings.suffix, i) : !1;
        };
        r.NameOutput.prototype._getLongStyle = function(t) {
            var e;
            return t.short.length ? this.institutionpart["long-with-short"] ? e = this.institutionpart["long-with-short"] : e = this.institutionpart.long : e = this.institutionpart.long, e || (e = new r.Token), e;
        };
        r.NameOutput.prototype._getShortStyle = function() {
            var t;
            return this.institutionpart.short ? t = this.institutionpart.short : t = new r.Token, t;
        };
        r.NameOutput.prototype._parseName = function(t) {
            if (!t["parse-names"] && typeof t["parse-names"] < "u") return t;
            t.family && !t.given && t.isInstitution && (t.literal = t.family, t.family = void 0, t.isInstitution = void 0);
            var e;
            t.family && t.family.slice(0, 1) === '"' && t.family.slice(-1) === '"' || !t["parse-names"] && typeof t["parse-names"] < "u" ? (t.family = t.family.slice(1, -1), e = !0, t["parse-names"] = 0) : e = !1, this.state.opt.development_extensions.parse_names && !t["non-dropping-particle"] && t.family && !e && t.given && (t["static-particles"] || r.parseParticles(t, !0));
        };
        r.NameOutput.prototype.getName = function(t, e, i, s) {
            if (s && e === "locale-orig") return {
                name: !1,
                usedOrig: s
            };
            t.family || (t.family = ""), t.given || (t.given = "");
            var n = {};
            n["static-ordering"] = this.getStaticOrder(t);
            var a = !0, o;
            if (e !== "locale-orig" && (a = !1, t.multi)) {
                for(var l = this.state.opt[e], u = 0, f = l.length; u < f; u += 1)if (o = l[u], t.multi._key[o]) {
                    a = !0;
                    var h = t.isInstitution;
                    t = t.multi._key[o], t.isInstitution = h, n = this.getNameParams(o), n.transliterated = !0;
                    break;
                }
            }
            if (a || (o = !1, t.multi && t.multi.main ? o = t.multi.main : this.Item.language && (o = this.Item.language), o && (n = this.getNameParams(o))), !i && !a) return {
                name: !1,
                usedOrig: s
            };
            t.family || (t.family = ""), t.given || (t.given = ""), t.literal && (delete t.family, delete t.given), t = {
                family: t.family,
                given: t.given,
                "non-dropping-particle": t["non-dropping-particle"],
                "dropping-particle": t["dropping-particle"],
                suffix: t.suffix,
                "static-ordering": n["static-ordering"],
                "static-particles": t["static-particles"],
                "reverse-ordering": n["reverse-ordering"],
                "full-form-always": n["full-form-always"],
                "parse-names": t["parse-names"],
                "comma-suffix": t["comma-suffix"],
                "comma-dropping-particle": t["comma-dropping-particle"],
                transliterated: n.transliterated,
                block_initialize: n["block-initialize"],
                literal: t.literal,
                isInstitution: t.isInstitution,
                multi: t.multi
            }, !t.literal && !t.given && t.family && t.isInstitution && (t.literal = t.family), t.literal && (delete t.family, delete t.given), t = this._normalizeNameInput(t);
            var d;
            return s ? d = s : d = !a, {
                name: t,
                usedOrig: d
            };
        };
        r.NameOutput.prototype.getNameParams = function(t) {
            var e = {}, i = r.localeResolve(this.Item.language, this.state.opt["default-locale"][0]), s = this.state.locale[i.best] ? i.best : this.state.opt["default-locale"][0], n = this.state.locale[s].opts["name-as-sort-order"], a = this.state.locale[s].opts["name-as-reverse-order"], o = this.state.locale[s].opts["name-never-short"], l = t.split("-")[0];
            return n && n[l] && (e["static-ordering"] = !0, e["reverse-ordering"] = !1), a && a[l] && (e["reverse-ordering"] = !0, e["static-ordering"] = !1), o && o[l] && (e["full-form-always"] = !0), e["static-ordering"] && (e["block-initialize"] = !0), e;
        };
        r.NameOutput.prototype.setRenderedName = function(t) {
            if (this.state.tmp.area === "bibliography") {
                for(var e = "", i = 0, s = r.NAME_PARTS.length; i < s; i += 1)t[r.NAME_PARTS[i]] && (e += t[r.NAME_PARTS[i]]);
                this.state.tmp.rendered_name.push(e);
            }
        };
        r.NameOutput.prototype.fixupInstitution = function(t, e, i) {
            !t.literal && t.family && (t.literal = t.family, delete t.family);
            var s = t.literal, n = s, a = {
                long: s.split(/\s*\|\s*/),
                short: n.split(/\s*\|\s*/)
            };
            if (this.state.sys.getAbbreviation) {
                if (this.institution.strings.form === "short") {
                    let p = this.Item.jurisdiction;
                    p = this.state.transform.loadAbbreviation(p, "institution-entire", s, this.Item.language), this.state.transform.abbrevs[p]["institution-entire"][s] ? s = this.state.transform.abbrevs[p]["institution-entire"][s] : (p = this.Item.jurisdiction, p = this.state.transform.loadAbbreviation(p, "institution-part", s, this.Item.language), this.state.transform.abbrevs[p]["institution-part"][s] && (s = this.state.transform.abbrevs[p]["institution-part"][s])), s = this._quashChecks(p, s);
                }
                if ([
                    "short",
                    "short-long",
                    "long-short"
                ].indexOf(this.institution.strings["institution-parts"]) > -1) {
                    let p = this.Item.jurisdiction;
                    p = this.state.transform.loadAbbreviation(p, "institution-part", n, this.Item.language), this.state.transform.abbrevs[p]["institution-part"][n] && (n = this.state.transform.abbrevs[p]["institution-part"][n]), n = this._quashChecks(p, n), [
                        "short-long",
                        "long-short"
                    ].indexOf(this.institution.strings["institution-parts"]) > -1 && n === s && (n = "");
                }
                if (a.long = s.split(/\s*\|\s*/), a.short = n.split(/\s*\|\s*/), [
                    "short",
                    "short-long",
                    "long-short"
                ].indexOf(this.institution.strings["institution-parts"]) > -1) for(var o = a.short.length - 1; o > -1; o--){
                    let p = this.Item.jurisdiction;
                    var l = a.short[o];
                    if (p = this.state.transform.loadAbbreviation(p, "institution-part", l, this.Item.language), this.state.transform.abbrevs[p]["institution-part"][l] && (a.short[o] = this.state.transform.abbrevs[p]["institution-part"][l]), a.short[o].indexOf("|") > -1) {
                        let m = a.short, b = m[o].split(/\s*\|\s*/);
                        a.short = m.slice(0, o).concat(b).concat(m.slice(o + 1));
                    }
                }
                if (this.state.opt.development_extensions.legacy_institution_name_ordering && a.short.reverse(), a.short = this._trimInstitution(a.short), this.institution.strings["reverse-order"] && a.short.reverse(), !this.state.tmp.just_looking && this.Item.jurisdiction) {
                    let p = this.Item.jurisdiction;
                    var u = this.state.tmp.abbrev_trimmer;
                    if (u && u[p] && u[p][e]) for(var f = 0, h = a.short.length; f < h; f++){
                        var d = a.short[f];
                        a.short[f] = d.replace(u[p][e], "").trim();
                    }
                }
            }
            return this.state.opt.development_extensions.legacy_institution_name_ordering && a.long.reverse(), a.long = this._trimInstitution(a.long), this.institution.strings["reverse-order"] && a.long.reverse(), a;
        };
        r.NameOutput.prototype.getStaticOrder = function(t, e) {
            var i = !1;
            return (!e && t["static-ordering"] || this._isRomanesque(t) === 0 || (!t.multi || !t.multi.main) && this.Item.language && [
                "vi",
                "hu"
            ].indexOf(this.Item.language) > -1 || t.multi && t.multi.main && [
                "vi",
                "hu"
            ].indexOf(t.multi.main.slice(0, 2)) > -1 || this.state.opt["auto-vietnamese-names"] && r.VIETNAMESE_NAMES.exec(t.family + " " + t.given) && r.VIETNAMESE_SPECIALS.exec(t.family + t.given)) && (i = !0), i;
        };
        r.NameOutput.prototype._quashChecks = function(t, i) {
            var i = this.state.transform.quashCheck(t, i), s = i.split(/>>[0-9]{4}>>/), n = i.match(/>>([0-9]{4})>>/);
            i = s.pop();
            var a = this.Item["original-date"] ? this.Item["original-date"] : this.Item.issued;
            if (a && (a = parseInt(a.year, 10), a = isNaN(a) ? !1 : a), a) {
                if (s.length > 0) for(var o = n.length - 1; o > 0 && !(a >= parseInt(n[o], 10)); o--)i = s.pop();
                i = i.replace(/\s*\|\s*/g, "|");
            }
            return i;
        };
        r.NameOutput.prototype._trimInstitution = function(t) {
            var e = !1, i = !1, s = !1, n = !1, a = t.slice();
            if (this.institution) {
                if (typeof this.institution.strings["use-first"] < "u" && (e = this.institution.strings["use-first"]), typeof this.institution.strings["use-last"] < "u" && (s = this.institution.strings["use-last"]), typeof this.institution.strings["stop-first"] < "u" && (n = this.institution.strings["stop-first"]), typeof this.institution.strings["stop-last"] < "u" && (i = this.institution.strings["stop-last"]), e && (i && (a = a.slice(0, i * -1)), a = a.slice(0, e)), s) {
                    var o = t.slice();
                    e ? n = e : a = [], n && (o = o.slice(n)), o = o.slice(s * -1), a = a.concat(o);
                }
                t = a;
            }
            return t;
        };
        r.PublisherOutput = function(t, e) {
            this.state = t, this.group_tok = e, this.varlist = [];
        };
        r.PublisherOutput.prototype.render = function() {
            this.clearVars(), this.composeAndBlob(), this.composeElements(), this.composePublishers(), this.joinPublishers();
        };
        r.PublisherOutput.prototype.composeAndBlob = function() {
            this.and_blob = {};
            var t = !1;
            this.group_tok.strings.and === "text" ? t = this.state.getTerm("and") : this.group_tok.strings.and === "symbol" && (t = "&");
            var e = new r.Token;
            e.strings.suffix = " ", e.strings.prefix = " ", this.state.output.append(t, e, !0);
            var i = this.state.output.pop();
            e.strings.prefix = this.group_tok.strings["subgroup-delimiter"], this.state.output.append(t, e, !0);
            var s = this.state.output.pop();
            this.and_blob.single = !1, this.and_blob.multiple = !1, t && (this.group_tok.strings["subgroup-delimiter-precedes-last"] === "always" ? this.and_blob.single = s : this.group_tok.strings["subgroup-delimiter-precedes-last"] === "never" ? (this.and_blob.single = i, this.and_blob.multiple = i) : (this.and_blob.single = i, this.and_blob.multiple = s));
        };
        r.PublisherOutput.prototype.composeElements = function() {
            for(var t = 0, e = 2; t < e; t += 1)for(var i = [
                "publisher",
                "publisher-place"
            ][t], s = 0, n = this["publisher-list"].length; s < n; s += 1){
                var a = this[i + "-list"][s], o = this[i + "-token"];
                this.state.output.append(a, o, !0), this[i + "-list"][s] = this.state.output.pop();
            }
        };
        r.PublisherOutput.prototype.composePublishers = function() {
            for(var t, e = 0, i = this["publisher-list"].length; e < i; e += 1)t = [
                this[this.varlist[0] + "-list"][e],
                this[this.varlist[1] + "-list"][e]
            ], this["publisher-list"][e] = this._join(t, this.group_tok.strings.delimiter);
        };
        r.PublisherOutput.prototype.joinPublishers = function() {
            var t = this["publisher-list"], e = this._join(t, this.group_tok.strings["subgroup-delimiter"], this.and_blob.single, this.and_blob.multiple, this.group_tok);
            this.state.output.append(e, "literal");
        };
        r.PublisherOutput.prototype._join = r.NameOutput.prototype._join;
        r.PublisherOutput.prototype._getToken = r.NameOutput.prototype._getToken;
        r.PublisherOutput.prototype.clearVars = function() {
            this.state.tmp["publisher-list"] = !1, this.state.tmp["publisher-place-list"] = !1, this.state.tmp["publisher-group-token"] = !1, this.state.tmp["publisher-token"] = !1, this.state.tmp["publisher-place-token"] = !1;
        };
        r.evaluateLabel = function(t, e, i, s) {
            var n;
            t.strings.term === "locator" ? (s && s.label && (s.label === "sub verbo" ? n = "sub-verbo" : n = s.label), n || (n = "page")) : n = t.strings.term;
            var a = t.strings.plural;
            if (typeof a != "number") {
                var o = s && t.strings.term === "locator" ? s : i;
                o[t.strings.term] && (e.processNumber(!1, o, t.strings.term, i.type), a = e.tmp.shadow_numbers[t.strings.term].plural, !e.tmp.shadow_numbers[t.strings.term].labelForm && !e.tmp.shadow_numbers[t.strings.term].labelDecorations && (t.strings.form ? e.tmp.shadow_numbers[t.strings.term].labelForm = t.strings.form : e.tmp.group_context.tip.label_form && (e.tmp.shadow_numbers[t.strings.term].labelForm = e.tmp.group_context.tip.label_form), e.tmp.shadow_numbers[t.strings.term].labelCapitalizeIfFirst = t.strings.capitalize_if_first, e.tmp.shadow_numbers[t.strings.term].labelDecorations = t.decorations.slice()), [
                    "locator",
                    "number",
                    "page"
                ].indexOf(t.strings.term) > -1 && e.tmp.shadow_numbers[t.strings.term].label && (n = e.tmp.shadow_numbers[t.strings.term].label), t.decorations && e.opt.development_extensions.csl_reverse_lookup_support && (t.decorations.reverse(), t.decorations.push([
                    "@showid",
                    "true",
                    t.cslid
                ]), t.decorations.reverse()));
            }
            return r.castLabel(e, t, n, a, r.TOLERANT);
        };
        r.castLabel = function(t, e, i, s, n) {
            var a = e.strings.form, o = e.strings.capitalize_if_first;
            t.tmp.group_context.tip.label_form && (a === "static" ? t.tmp.group_context.tip.label_static = !0 : a = t.tmp.group_context.tip.label_form), t.tmp.group_context.tip.label_capitalize_if_first && (o = t.tmp.group_context.tip.label_capitalize_if_first);
            var l = t.getTerm(i, a, s, !1, n, e.default_locale);
            if (o && (l = r.Output.Formatters["capitalize-first"](t, l)), t.tmp.strip_periods) l = l.replace(/\./g, "");
            else for(var u = 0, f = e.decorations.length; u < f; u += 1)if (e.decorations[u][0] === "@strip-periods" && e.decorations[u][1] === "true") {
                l = l.replace(/\./g, "");
                break;
            }
            return l;
        };
        r.Node.name = {
            build: function(t, e) {
                var i;
                if ([
                    r.SINGLETON,
                    r.START
                ].indexOf(this.tokentype) > -1) {
                    var s;
                    typeof t.tmp.root > "u" ? (s = void 0, t.tmp.root = "citation") : s = t.tmp.root, t.inheritOpt(this, "et-al-subsequent-min") && t.inheritOpt(this, "et-al-subsequent-min") !== t.inheritOpt(this, "et-al-min") && (t.opt.update_mode = r.POSITION), t.inheritOpt(this, "et-al-subsequent-use-first") && t.inheritOpt(this, "et-al-subsequent-use-first") !== t.inheritOpt(this, "et-al-use-first") && (t.opt.update_mode = r.POSITION), t.tmp.root = s, i = function(n) {
                        n.tmp.etal_term = "et-al", n.tmp.name_delimiter = n.inheritOpt(this, "delimiter", "name-delimiter", ", "), n.tmp["delimiter-precedes-et-al"] = n.inheritOpt(this, "delimiter-precedes-et-al"), n.inheritOpt(this, "and") === "text" ? this.and_term = n.getTerm("and", "long", 0) : n.inheritOpt(this, "and") === "symbol" && (n.opt.development_extensions.expect_and_symbol_form ? this.and_term = n.getTerm("and", "symbol", 0) : this.and_term = "&"), n.tmp.and_term = this.and_term, r.STARTSWITH_ROMANESQUE_REGEXP.test(this.and_term) ? (this.and_prefix_single = " ", this.and_prefix_multiple = ", ", typeof n.tmp.name_delimiter == "string" && (this.and_prefix_multiple = n.tmp.name_delimiter), this.and_suffix = " ") : (this.and_prefix_single = "", this.and_prefix_multiple = "", this.and_suffix = ""), n.inheritOpt(this, "delimiter-precedes-last") === "always" ? this.and_prefix_single = n.tmp.name_delimiter : n.inheritOpt(this, "delimiter-precedes-last") === "never" ? this.and_prefix_multiple && (this.and_prefix_multiple = " ") : n.inheritOpt(this, "delimiter-precedes-last") === "after-inverted-name" && (this.and_prefix_single && (this.and_prefix_single = n.tmp.name_delimiter), this.and_prefix_multiple && (this.and_prefix_multiple = " ")), this.and = {}, n.inheritOpt(this, "and") ? (n.output.append(this.and_term, "empty", !0), this.and.single = n.output.pop(), this.and.single.strings.prefix = this.and_prefix_single, this.and.single.strings.suffix = this.and_suffix, n.output.append(this.and_term, "empty", !0), this.and.multiple = n.output.pop(), this.and.multiple.strings.prefix = this.and_prefix_multiple, this.and.multiple.strings.suffix = this.and_suffix) : n.tmp.name_delimiter && (this.and.single = new r.Blob(n.tmp.name_delimiter), this.and.single.strings.prefix = "", this.and.single.strings.suffix = "", this.and.multiple = new r.Blob(n.tmp.name_delimiter), this.and.multiple.strings.prefix = "", this.and.multiple.strings.suffix = ""), this.ellipsis = {}, n.inheritOpt(this, "et-al-use-last") && (this.ellipsis_term = "\u2026", this.ellipsis_prefix_single = " ", this.ellipsis_prefix_multiple = n.inheritOpt(this, "delimiter", "name-delimiter", ", "), this.ellipsis_suffix = " ", this.ellipsis.single = new r.Blob(this.ellipsis_term), this.ellipsis.single.strings.prefix = this.ellipsis_prefix_single, this.ellipsis.single.strings.suffix = this.ellipsis_suffix, this.ellipsis.multiple = new r.Blob(this.ellipsis_term), this.ellipsis.multiple.strings.prefix = this.ellipsis_prefix_multiple, this.ellipsis.multiple.strings.suffix = this.ellipsis_suffix), typeof n.tmp["et-al-min"] > "u" && (n.tmp["et-al-min"] = n.inheritOpt(this, "et-al-min")), typeof n.tmp["et-al-use-first"] > "u" && (n.tmp["et-al-use-first"] = n.inheritOpt(this, "et-al-use-first")), typeof n.tmp["et-al-use-last"] > "u" && (n.tmp["et-al-use-last"] = n.inheritOpt(this, "et-al-use-last")), n.nameOutput.name = this;
                    }, t.build.name_flag = !0, this.execs.push(i);
                }
                e.push(this);
            }
        };
        r.Node["name-part"] = {
            build: function(t) {
                t.build[this.strings.name] = this;
            }
        };
        r.Node.names = {
            build: function(t, e) {
                var i;
                if ((this.tokentype === r.START || this.tokentype === r.SINGLETON) && (r.Util.substituteStart.call(this, t, e), t.build.substitute_level.push(1)), this.tokentype === r.SINGLETON) {
                    t.build.names_variables[t.build.names_variables.length - 1].concat(this.variables);
                    for(var s in this.variables){
                        var n = this.variables[s], a = t.build.name_label[t.build.name_label.length - 1];
                        Object.keys(a).length && (a[n] = a[Object.keys(a)[0]]);
                    }
                    i = function(u) {
                        u.nameOutput.reinit(this, this.variables_real[0]);
                    }, this.execs.push(i);
                }
                if (this.tokentype === r.START && (t.build.names_flag = !0, t.build.name_flag = !1, t.build.names_level += 1, t.build.names_variables.push(this.variables), t.build.name_label.push({}), i = function(u) {
                    u.tmp.can_substitute.push(!0), u.tmp.name_node = {}, u.tmp.name_node.children = [], u.nameOutput.init(this);
                }, this.execs.push(i)), this.tokentype === r.END) {
                    for(var s = 0, o = 3; s < o; s += 1){
                        var l = [
                            "family",
                            "given",
                            "et-al"
                        ][s];
                        this[l] = t.build[l], t.build.names_level === 1 && (t.build[l] = void 0);
                    }
                    this.label = t.build.name_label[t.build.name_label.length - 1], t.build.names_level += -1, t.build.names_variables.pop(), t.build.name_label.pop(), i = function(u) {
                        u.tmp.etal_node ? this.etal_style = u.tmp.etal_node : this.etal_style = "empty", this.etal_term = u.getTerm(u.tmp.etal_term, "long", 0), this.etal_prefix_single = " ", this.etal_prefix_multiple = u.tmp.name_delimiter, u.tmp["delimiter-precedes-et-al"] === "always" ? this.etal_prefix_single = u.tmp.name_delimiter : u.tmp["delimiter-precedes-et-al"] === "never" ? this.etal_prefix_multiple = " " : u.tmp["delimiter-precedes-et-al"] === "after-inverted-name" && (this.etal_prefix_single = u.tmp.name_delimiter, this.etal_prefix_multiple = " "), this.etal_suffix = "", r.STARTSWITH_ROMANESQUE_REGEXP.test(this.etal_term) || (this.etal_prefix_single === " " && (this.etal_prefix_single = ""), this.etal_prefix_multiple === " " && (this.etal_prefix_multiple = ""), this.etal_suffix === " " && (this.etal_suffix = ""));
                        for(var f = 0, h = 3; f < h; f += 1){
                            var d = [
                                "family",
                                "given"
                            ][f];
                            u.nameOutput[d] = this[d];
                        }
                        u.nameOutput.with = this.with;
                        var p = "with", m = "", b = "";
                        r.STARTSWITH_ROMANESQUE_REGEXP.test(p) && (m = " ", b = " ");
                        var c = {};
                        c.single = new r.Blob(p), c.single.strings.suffix = b, c.multiple = new r.Blob(p), c.multiple.strings.suffix = b, u.inheritOpt(u.nameOutput.name, "delimiter-precedes-last") === "always" ? (c.single.strings.prefix = u.inheritOpt(this, "delimiter", "names-delimiter"), c.multiple.strings.prefix = u.inheritOpt(this, "delimiter", "names-delimiter")) : u.inheritOpt(u.nameOutput.name, "delimiter-precedes-last") === "contextual" ? (c.single.strings.prefix = m, c.multiple.strings.prefix = u.inheritOpt(this, "delimiter", "names-delimiter")) : u.inheritOpt(u.nameOutput.name, "delimiter-precedes-last") === "after-inverted-name" ? (c.single.strings.prefix = u.inheritOpt(this, "delimiter", "names-delimiter"), c.multiple.strings.prefix = m) : (c.single.strings.prefix = m, c.multiple.strings.prefix = m), u.nameOutput.with = c, u.nameOutput.label = this.label, u.nameOutput.etal_style = this.etal_style, u.nameOutput.etal_term = this.etal_term, u.nameOutput.etal_prefix_single = this.etal_prefix_single, u.nameOutput.etal_prefix_multiple = this.etal_prefix_multiple, u.nameOutput.etal_suffix = this.etal_suffix, u.nameOutput.outputNames(), u.tmp["et-al-use-first"] = void 0, u.tmp["et-al-min"] = void 0, u.tmp["et-al-use-last"] = void 0;
                    }, this.execs.push(i), i = function(u) {
                        u.tmp.can_substitute.pop() || u.tmp.can_substitute.replace(!1, r.LITERAL), u.tmp.can_substitute.mystack.length === 1 && (u.tmp.can_block_substitute = !1);
                    }, this.execs.push(i), t.build.name_flag = !1;
                }
                e.push(this), (this.tokentype === r.END || this.tokentype === r.SINGLETON) && (t.build.substitute_level.pop(), r.Util.substituteEnd.call(this, t, e));
            }
        };
        r.Node.number = {
            build: function(t, e) {
                var i;
                r.Util.substituteStart.call(this, t, e), this.strings.form === "roman" ? this.formatter = t.fun.romanizer : this.strings.form === "ordinal" ? this.formatter = t.fun.ordinalizer : this.strings.form === "long-ordinal" && (this.formatter = t.fun.long_ordinalizer), typeof this.successor_prefix > "u" && (this.successor_prefix = t[t.build.area].opt.layout_delimiter), typeof this.splice_prefix > "u" && (this.splice_prefix = t[t.build.area].opt.layout_delimiter), i = function(s, n, a) {
                    if (this.variables.length !== 0) {
                        var o;
                        if (o = this.variables[0], typeof a > "u") var a = {};
                        if ([
                            "locator",
                            "locator-extra"
                        ].indexOf(o) > -1) {
                            if (s.tmp.just_looking || !a[o]) return;
                        } else if (!n[o]) return;
                        o === "collection-number" && n.type === "legal_case" && (s.tmp.renders_collection_number = !0);
                        var l = this;
                        if (s.tmp.group_context.tip.force_suppress) return !1;
                        if ([
                            "locator",
                            "locator-extra"
                        ].indexOf(o) > -1 ? s.processNumber.call(s, l, a, o, n.type) : (!s.tmp.group_context.tip.condition && n[o] && (s.tmp.just_did_number = ("" + n[o]).match(/[0-9]$/)), s.processNumber.call(s, l, n, o, n.type)), this.substring) {
                            var u = n[o].slice(this.substring);
                            s.output.append(u, l);
                        } else r.Util.outputNumericField(s, o, n.id);
                        [
                            "locator",
                            "locator-extra"
                        ].indexOf(this.variables_real[0]) > -1 && !s.tmp.just_looking && (s.tmp.done_vars.push(this.variables_real[0]), s.tmp.group_context.tip.done_vars.push(this.variables_real[0]));
                    }
                }, this.execs.push(i), e.push(this), r.Util.substituteEnd.call(this, t, e);
            }
        };
        r.Node.sort = {
            build: function(t, e) {
                if (e = t[t.build.root + "_sort"].tokens, this.tokentype === r.START) {
                    t.build.area === "citation" && (t.opt.sort_citations = !0), t.build.area = t.build.root + "_sort", t.build.extension = "_sort";
                    var i = function(s, n) {
                        if (s.opt.has_layout_locale) {
                            for(var a = r.localeResolve(n.language, s.opt["default-locale"][0]), o = s[s.tmp.area.slice(0, -5)].opt.sort_locales, l, u = 0, f = o.length; u < f && (l = o[u][a.bare], l || (l = o[u][a.best]), !l); u += 1);
                            l || (l = s.opt["default-locale"][0]), s.tmp.lang_sort_hold = s.opt.lang, s.opt.lang = l;
                        }
                    };
                    this.execs.push(i);
                }
                if (this.tokentype === r.END) {
                    t.build.area = t.build.root, t.build.extension = "";
                    var i = function(n) {
                        n.opt.has_layout_locale && (n.opt.lang = n.tmp.lang_sort_hold, delete n.tmp.lang_sort_hold);
                    };
                    this.execs.push(i);
                }
                e.push(this);
            }
        };
        r.Node.substitute = {
            build: function(t, e) {
                var i;
                if (this.tokentype === r.START) {
                    var s = new r.Token("choose", r.START);
                    r.Node.choose.build.call(s, t, e);
                    var n = new r.Token("if", r.SINGLETON);
                    i = function() {
                        return !!(t.tmp.value.length && !t.tmp.common_term_match_fail);
                    }, n.tests = [
                        i
                    ], n.test = t.fun.match.any(n, t, n.tests), e.push(n), i = function(o) {
                        o.tmp.can_block_substitute = !0, o.tmp.value.length && !o.tmp.common_term_match_fail && o.tmp.can_substitute.replace(!1, r.LITERAL), o.tmp.common_term_match_fail = !1;
                    }, this.execs.push(i), e.push(this);
                }
                if (this.tokentype === r.END) {
                    e.push(this);
                    var a = new r.Token("choose", r.END);
                    r.Node.choose.build.call(a, t, e);
                }
            }
        };
        r.Node.text = {
            build: function(t, e) {
                var i, s, n, a, o, l, u, f, h, d, p;
                if (this.postponed_macro) {
                    var b = r.Util.cloneToken(this);
                    b.name = "group", b.tokentype = r.START, r.Node.group.build.call(b, t, e), r.expandMacro.call(t, this, e);
                    var c = r.Util.cloneToken(this);
                    c.name = "group", c.tokentype = r.END, this.postponed_macro === "juris-locator-label" && (c.isJurisLocatorLabel = !0), r.Node.group.build.call(c, t, e);
                } else {
                    if (r.Util.substituteStart.call(this, t, e), this.variables_real || (this.variables_real = []), this.variables || (this.variables = []), s = "long", n = 0, this.strings.form && (s = this.strings.form), this.strings.plural && (n = this.strings.plural), this.variables_real[0] === "citation-number" || this.variables_real[0] === "year-suffix" || this.variables_real[0] === "citation-label") this.variables_real[0] === "citation-number" ? (t.build.root === "citation" && (t.opt.update_mode = r.NUMERIC), t.build.root === "bibliography" && (t.opt.bib_mode = r.NUMERIC), t[t.tmp.area].opt.collapse === "citation-number" && (this.range_prefix = t.getTerm("citation-range-delimiter")), this.successor_prefix = t[t.build.area].opt.layout_delimiter, this.splice_prefix = t[t.build.area].opt.layout_delimiter, i = function(_, E, x) {
                        if (a = "" + E.id, !_.tmp.just_looking) {
                            if (_.tmp.area.slice(-5) === "_sort" && this.variables[0] === "citation-number") {
                                if (_.tmp.area === "bibliography_sort" && _.tmp.group_context.tip.done_vars.push("citation-number"), _.tmp.area === "citation_sort" && _.bibliography_sort.tmp.citation_number_map) var k = _.bibliography_sort.tmp.citation_number_map[_.registry.registry[E.id].seq];
                                else var k = _.registry.registry[E.id].seq;
                                k && (k = r.Util.padding("" + k)), _.output.append(k, this);
                                return;
                            }
                            x && x["author-only"] && _.tmp.element_trace.replace("suppress-me"), _.tmp.area !== "bibliography_sort" && _.bibliography_sort.tmp.citation_number_map && _.bibliography_sort.opt.citation_number_sort_direction === r.DESCENDING ? k = _.bibliography_sort.tmp.citation_number_map[_.registry.registry[a].seq] : k = _.registry.registry[a].seq, _.opt.citation_number_slug ? _.output.append(_.opt.citation_number_slug, this) : (l = new r.NumericBlob(_, !1, k, this, E.id), _.tmp.in_cite_predecessor && (l.suppress_splice_prefix = !0), _.output.append(l, "literal"));
                        }
                    }, this.execs.push(i)) : this.variables_real[0] === "year-suffix" ? (t.opt.has_year_suffix = !0, t[t.tmp.area].opt.collapse === "year-suffix-ranged" && (this.range_prefix = t.getTerm("citation-range-delimiter")), this.successor_prefix = t[t.build.area].opt.layout_delimiter, t[t.tmp.area].opt["year-suffix-delimiter"] && (this.successor_prefix = t[t.build.area].opt["year-suffix-delimiter"]), i = function(_, E) {
                        if (_.registry.registry[E.id] && _.registry.registry[E.id].disambig.year_suffix !== !1 && !_.tmp.just_looking) {
                            o = parseInt(_.registry.registry[E.id].disambig.year_suffix, 10), _[_.tmp.area].opt.cite_group_delimiter && (this.successor_prefix = _[_.tmp.area].opt.cite_group_delimiter), l = new r.NumericBlob(_, !1, o, this, E.id), u = new r.Util.Suffixator(r.SUFFIX_CHARS), l.setFormatter(u), _.output.append(l, "literal"), f = !1;
                            for(var x = 0, k = _.tmp.group_context.mystack.length; x < k; x++){
                                var O = _.tmp.group_context.mystack[x];
                                if (!O.variable_success && (O.variable_attempt || !O.variable_attempt && !O.term_intended)) {
                                    f = !0;
                                    break;
                                }
                            }
                            h = _[_.tmp.area].opt["year-suffix-delimiter"], f && h && !_.tmp.sort_key_flag && (_.tmp.splice_delimiter = _[_.tmp.area].opt["year-suffix-delimiter"]);
                        }
                    }, this.execs.push(i)) : this.variables_real[0] === "citation-label" && (t.build.root === "bibliography" && (t.opt.bib_mode = r.TRIGRAPH), t.opt.has_year_suffix = !0, i = function(_, E) {
                        d = E["citation-label"], d || (d = _.getCitationLabel(E)), _.tmp.just_looking || (p = "", _.registry.registry[E.id] && _.registry.registry[E.id].disambig.year_suffix !== !1 && (o = parseInt(_.registry.registry[E.id].disambig.year_suffix, 10), p = _.fun.suffixator.format(o)), d += p), _.output.append(d, this);
                    }, this.execs.push(i));
                    else if (this.strings.term) i = function(_, E) {
                        var x = _.opt.gender[E.type], k = this.strings.term;
                        k = _.getTerm(k, s, n, x, r.TOLERANT, this.default_locale);
                        var O;
                        if (k !== "" && (_.tmp.group_context.tip.term_intended = !0), r.UPDATE_GROUP_CONTEXT_CONDITION(_, k, null, this), !_.tmp.term_predecessor && !(_.opt.class === "in-text" && _.tmp.area === "citation") ? O = r.Output.Formatters["capitalize-first"](_, k) : O = k, _.tmp.strip_periods) O = O.replace(/\./g, "");
                        else for(var A = 0, N = this.decorations.length; A < N; A += 1)if (this.decorations[A][0] === "@strip-periods" && this.decorations[A][1] === "true") {
                            O = O.replace(/\./g, "");
                            break;
                        }
                        _.output.append(O, this), _.tmp.can_block_substitute && _.tmp.can_substitute.replace(!1, r.LITERAL);
                    }, this.execs.push(i), t.build.term = !1, t.build.form = !1, t.build.plural = !1;
                    else if (this.variables_real.length) {
                        if (i = function(_, E) {
                            this.variables_real[0] !== "locator" && (_.tmp.have_collapsed = !1), !_.tmp.group_context.tip.condition && E[this.variables[0]] && (_.tmp.just_did_number = !1);
                            var x = E[this.variables[0]];
                            x && !_.tmp.group_context.tip.condition && (("" + x).slice(-1).match(/[0-9]/) ? _.tmp.just_did_number = !0 : _.tmp.just_did_number = !1);
                        }, this.execs.push(i), r.MULTI_FIELDS.indexOf(this.variables_real[0]) > -1 || this.variables_real[0].indexOf("-main") > -1 || this.variables_real[0].indexOf("-sub") > -1 || [
                            "language-name",
                            "language-name-original"
                        ].indexOf(this.variables_real[0]) > -1) {
                            var S = this.variables[0], g = !1, v = !1, y = !1;
                            s === "short" ? this.variables_real[0].slice(-6) !== "-short" && (v = this.variables_real[0] + "-short") : S = !1, t.build.extension ? y = !0 : (y = !0, g = !0), i = t.transform.getOutputFunction(this.variables, S, g, v, y);
                        } else r.CITE_FIELDS.indexOf(this.variables_real[0]) > -1 ? i = function(_, E, x) {
                            x && x[this.variables[0]] && (_.processNumber(this, x, this.variables[0], E.type), r.Util.outputNumericField(_, this.variables[0], E.id), [
                                "locator",
                                "locator-extra"
                            ].indexOf(this.variables_real[0]) > -1 && !_.tmp.just_looking && _.tmp.done_vars.push(this.variables_real[0]));
                        } : [
                            "page",
                            "page-first",
                            "chapter-number",
                            "collection-number",
                            "edition",
                            "issue",
                            "number",
                            "number-of-pages",
                            "number-of-volumes",
                            "volume"
                        ].indexOf(this.variables_real[0]) > -1 ? i = function(_, E) {
                            _.processNumber(this, E, this.variables[0], E.type), r.Util.outputNumericField(_, this.variables[0], E.id);
                        } : [
                            "URL",
                            "DOI"
                        ].indexOf(this.variables_real[0]) > -1 ? i = function(_, E) {
                            var x;
                            if (this.variables[0] && (x = _.getVariable(E, this.variables[0], s), x)) if (this.variables[0] === "URL" && s === "short" && (x = x.replace(/(.*\.[^\/]+)\/.*/, "$1"), x.match(/\/\/www\./) && (x = x.replace(/https?:\/\//, ""))), _.opt.development_extensions.wrap_url_and_doi) if (!this.decorations.length || this.decorations[0][0] !== "@" + this.variables[0]) {
                                var k = r.Util.cloneToken(this), O = new r.Blob(null, null, "url-wrapper");
                                if (O.decorations.push([
                                    "@DOI",
                                    "true"
                                ]), this.variables_real[0] === "DOI") {
                                    var A;
                                    this.strings.prefix && this.strings.prefix.match(/^.*https:\/\/doi\.org\/$/) && (x = x.replace(/^https?:\/\/doi\.org\//, ""), x.match(/^https?:\/\//) ? A = "" : A = "https://doi.org/", k.strings.prefix = this.strings.prefix.slice(0, k.strings.prefix.length - 16));
                                    var N = new r.Blob(A), T = new r.Blob(x);
                                    O.push(N), O.push(T), _.output.append(O, k, !1, !1, !0);
                                } else {
                                    var T = new r.Blob(x);
                                    O.push(T), _.output.append(O, k, !1, !1, !0);
                                }
                            } else _.output.append(x, this, !1, !1, !0);
                            else {
                                if (this.decorations.length) for(var D = this.decorations.length - 1; D > -1; D--)this.decorations[D][0] === "@" + this.variables[0] && (this.decorations = this.decorations.slice(0, D).concat(this.decorations.slice(D + 1)));
                                _.output.append(x, this, !1, !1, !0);
                            }
                        } : this.variables_real[0] === "section" ? i = function(_, E) {
                            var x;
                            x = _.getVariable(E, this.variables[0], s), x && _.output.append(x, this);
                        } : this.variables_real[0] === "hereinafter" ? i = function(_, E) {
                            var x = _.transform.abbrevs.default.hereinafter[E.id];
                            x && (_.output.append(x, this), _.tmp.group_context.tip.variable_success = !0);
                        } : i = function(_, E) {
                            var x;
                            this.variables[0] && (x = _.getVariable(E, this.variables[0], s), x && (x = "" + x, x = x.split("\\").join(""), _.output.append(x, this)));
                        };
                        this.execs.push(i);
                    } else this.strings.value && (i = function(_) {
                        _.tmp.group_context.tip.term_intended = !0, r.UPDATE_GROUP_CONTEXT_CONDITION(_, this.strings.value, !0, this), _.output.append(this.strings.value, this), _.tmp.can_block_substitute && _.tmp.can_substitute.replace(!1, r.LITERAL);
                    }, this.execs.push(i));
                    e.push(this), r.Util.substituteEnd.call(this, t, e);
                }
            }
        };
        r.Node.intext = {
            build: function(t, e) {
                if (this.tokentype === r.START) {
                    t.build.area = "intext", t.build.root = "intext", t.build.extension = "";
                    var i = function(s, n) {
                        s.tmp.area = "intext", s.tmp.root = "intext", s.tmp.extension = "";
                    };
                    this.execs.push(i);
                }
                this.tokentype === r.END && (t.intext_sort = {
                    opt: {
                        sort_directions: t.citation_sort.opt.sort_directions
                    }
                }, t.intext.srt = t.citation.srt), e.push(this);
            }
        };
        r.Attributes = {};
        r.Attributes["@disambiguate"] = function(t, e) {
            if (this.tests || (this.tests = []), e === "true") {
                t.opt.has_disambiguate = !0;
                var i = function(s) {
                    if (t.tmp.area === "bibliography") {
                        if (t.tmp.disambiguate_count < t.registry.registry[s.id].disambig.disambiguate) return t.tmp.disambiguate_count += 1, !0;
                    } else if (t.tmp.disambiguate_maxMax += 1, t.tmp.disambig_settings.disambiguate && t.tmp.disambiguate_count < t.tmp.disambig_settings.disambiguate) return t.tmp.disambiguate_count += 1, !0;
                    return !1;
                };
                this.tests.push(i);
            } else if (e === "check-ambiguity-and-backreference") {
                var i = function(n) {
                    return !!(t.registry.registry[n.id].disambig.disambiguate && t.registry.registry[n.id]["citation-count"] > 1);
                };
                this.tests.push(i);
            }
        };
        r.Attributes["@is-numeric"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(a) {
                return function(o, l) {
                    var u = o;
                    if (l && [
                        "locator",
                        "locator-extra"
                    ].indexOf(a) > -1 && (u = l), !u[a]) return !1;
                    if (r.NUMERIC_VARIABLES.indexOf(a) > -1) {
                        if (t.tmp.shadow_numbers[a] || t.processNumber(!1, u, a, o.type), t.tmp.shadow_numbers[a].numeric) return !0;
                    } else if ([
                        "title",
                        "version"
                    ].indexOf(a) > -1 && u[a].slice(-1) === "" + parseInt(u[a].slice(-1), 10)) return !0;
                    return !1;
                };
            }, n = 0; n < i.length; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@is-uncertain-date"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    return !!(l[o] && l[o].circa);
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@locator"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e.replace("sub verbo", "sub-verbo");
            i = i.split(/\s+/);
            for(var s = function(o) {
                return function(l, u) {
                    var f;
                    return t.processNumber(!1, u, "locator"), f = t.tmp.shadow_numbers.locator.label, !!(f && o === f);
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@position"] = function(t, e) {
            this.tests || (this.tests = []);
            var i;
            t.opt.update_mode = r.POSITION;
            for(var s = e.split(/\s+/), n = function(f, h) {
                return !!(h && r.POSITION_MAP[h.position] >= r.POSITION_MAP[r.POSITION_SUBSEQUENT] && h["near-note"]);
            }, a = function(f, h) {
                return !!(h && r.POSITION_MAP[h.position] == r.POSITION_MAP[r.POSITION_SUBSEQUENT] && !h["near-note"]);
            }, o = function(f) {
                return function(h, d) {
                    if (t.tmp.area === "bibliography") return !1;
                    if (d && typeof d.position > "u" && (d.position = 0), d && typeof d.position == "number") {
                        if (d.position === 0 && f === 0) return !0;
                        if (f > 0 && r.POSITION_MAP[d.position] >= r.POSITION_MAP[f]) return !0;
                    } else if (f === 0) return !0;
                    return !1;
                };
            }, l = 0, u = s.length; l < u; l += 1){
                var i = s[l];
                i === "first" ? i = r.POSITION_FIRST : i === "container-subsequent" ? i = r.POSITION_CONTAINER_SUBSEQUENT : i === "subsequent" ? i = r.POSITION_SUBSEQUENT : i === "ibid" ? i = r.POSITION_IBID : i === "ibid-with-locator" && (i = r.POSITION_IBID_WITH_LOCATOR), i === "near-note" ? this.tests.push(n) : i === "far-note" ? this.tests.push(a) : this.tests.push(o(i));
            }
        };
        r.Attributes["@type"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(l) {
                return function(u) {
                    var f = u.type === l;
                    return !!f;
                };
            }, n = [], a = 0, o = i.length; a < o; a += 1)n.push(s(i[a]));
            this.tests.push(t.fun.match.any(this, t, n));
        };
        r.Attributes["@variable"] = function(t, e) {
            this.tests || (this.tests = []);
            var i;
            if (this.variables = e.split(/\s+/), this.variables_real = this.variables.slice(), this.name === "label" && this.variables[0]) this.strings.term = this.variables[0];
            else if ([
                "names",
                "date",
                "text",
                "number"
            ].indexOf(this.name) > -1) i = function(o, l, u) {
                for(var f = this.variables.length - 1; f > -1; f += -1)this.variables.pop();
                for(var f = 0, h = this.variables_real.length; f < h; f++)o.tmp.done_vars.indexOf(this.variables_real[f]) === -1 && this.variables.push(this.variables_real[f]), o.tmp.can_block_substitute && o.tmp.done_vars.push(this.variables_real[f]);
            }, this.execs.push(i), i = function(o, l, u) {
                for(var f = !1, h = 0, d = this.variables.length; h < d; h++){
                    var p = this.variables[h];
                    if ([
                        "authority",
                        "committee"
                    ].indexOf(p) > -1 && typeof l[p] == "string" && this.name === "names") {
                        var m = !0, b = l[p].split(/\s*;\s*/), c = {};
                        if (l.multi && l.multi._keys[p]) {
                            for(var S in l.multi._keys[p])if (c[S] = l.multi._keys[p][S].split(/\s*;\s*/), c[S].length !== b.length) {
                                m = !1;
                                break;
                            }
                        }
                        m || (b = [
                            l[p]
                        ], c = l.multi._keys[p]);
                        for(var g = 0, v = b.length; g < v; g++){
                            var y = {
                                literal: b[g],
                                multi: {
                                    _key: {}
                                }
                            };
                            for(var S in c){
                                var _ = {
                                    literal: c[S][g]
                                };
                                y.multi._key[S] = _;
                            }
                            b[g] = y;
                        }
                        l[p] = b;
                    }
                    if (this.strings.form === "short" && !l[p] && (p === "title" ? p = "title-short" : p === "container-title" && (p = "container-title-short")), p === "year-suffix") {
                        f = !0;
                        break;
                    } else if (r.DATE_VARIABLES.indexOf(p) > -1) {
                        if (o.opt.development_extensions.locator_date_and_revision && p === "locator-date") {
                            f = !0;
                            break;
                        }
                        if (l[p]) {
                            for(var E in l[p])if (!(this.dateparts.indexOf(E) === -1 && E !== "literal") && l[p][E]) {
                                f = !0;
                                break;
                            }
                            if (f) break;
                        }
                    } else if (p === "locator") {
                        u && u.locator && (f = !0);
                        break;
                    } else if (p === "locator-extra") {
                        u && u["locator-extra"] && (f = !0);
                        break;
                    } else if ([
                        "citation-number",
                        "citation-label"
                    ].indexOf(p) > -1) {
                        f = !0;
                        break;
                    } else if (p === "first-reference-note-number") {
                        u && u["first-reference-note-number"] && (f = !0);
                        break;
                    } else if (p === "first-container-reference-note-number") {
                        u && u["first-container-reference-note-number"] && (f = !0);
                        break;
                    } else if (p === "hereinafter") {
                        o.transform.abbrevs.default.hereinafter[l.id] && o.sys.getAbbreviation && l.id && (f = !0);
                        break;
                    } else {
                        if (typeof l[p] == "object") break;
                        if (typeof l[p] == "string" && l[p]) {
                            f = !0;
                            break;
                        } else if (typeof l[p] == "number") {
                            f = !0;
                            break;
                        }
                    }
                    if (f) break;
                }
                if (f) {
                    for(var h = 0, d = this.variables_real.length; h < d; h++){
                        var p = this.variables_real[h];
                        (p !== "citation-number" || o.tmp.area !== "bibliography") && (o.tmp.cite_renders_content = !0), o.tmp.group_context.tip.variable_success = !0, o.tmp.can_substitute.value() && o.tmp.area === "bibliography" && typeof l[p] == "string" && (o.tmp.name_node.top = o.output.current.value(), o.tmp.rendered_name.push(l[p]));
                    }
                    o.tmp.can_substitute.replace(!1, r.LITERAL);
                } else o.tmp.group_context.tip.variable_attempt = !0;
            }, this.execs.push(i);
            else if ([
                "if",
                "else-if",
                "condition"
            ].indexOf(this.name) > -1) for(var s = function(o) {
                return function(l, u) {
                    var f = l;
                    if (u && [
                        "locator",
                        "locator-extra",
                        "first-reference-note-number",
                        "first-container-reference-note-number",
                        "locator-date"
                    ].indexOf(o) > -1 && (f = u), o === "hereinafter" && t.sys.getAbbreviation && f.id) {
                        if (t.transform.abbrevs.default.hereinafter[f.id]) return !0;
                    } else if (f[o]) {
                        if (typeof f[o] == "number" || typeof f[o] == "string") return !0;
                        if (typeof f[o] == "object") {
                            for(var h in f[o])if (f[o][h]) return !0;
                        }
                    }
                    return !1;
                };
            }, n = 0, a = this.variables.length; n < a; n += 1)this.tests.push(s(this.variables[n]));
        };
        r.Attributes["@page"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e.replace("sub verbo", "sub-verbo");
            i = i.split(/\s+/);
            for(var s = function(o) {
                return function(l) {
                    var u;
                    return t.processNumber(!1, l, "page", l.type), t.tmp.shadow_numbers.page.label ? t.tmp.shadow_numbers.page.label === "sub verbo" ? u = "sub-verbo" : u = t.tmp.shadow_numbers.page.label : u = "page", t.tmp.shadow_numbers.page.values.length > 0 && t.tmp.shadow_numbers.page.values[0].gotosleepability && (t.tmp.shadow_numbers.page.values[0].labelVisibility = !1), o === u;
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@number"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    var u;
                    return t.processNumber(!1, l, "number", l.type), t.tmp.shadow_numbers.number.label ? u = t.tmp.shadow_numbers.number.label : u = "number", o === u;
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@jurisdiction"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e.split(/\s+/), s = function(n) {
                return function(a) {
                    if (!a.jurisdiction) return !1;
                    for(var o = a.jurisdiction, l = 0, u = n.length; l < u; l++)if (o === n[l]) return !0;
                    return !1;
                };
            };
            this.tests.push(s(i));
        };
        r.Attributes["@country"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e.split(/\s+/), s = function(n) {
                return function(a) {
                    if (!a.country) return !1;
                    for(var o = a.country, l = 0, u = n.length; l < u; l++)if (o === n[l]) return !0;
                    return !1;
                };
            };
            this.tests.push(s(i));
        };
        r.Attributes["@context"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = function() {
                if ([
                    "bibliography",
                    "citation"
                ].indexOf(e) > -1) {
                    var s = t.tmp.area.slice(0, e.length);
                    return s === e;
                } else if (e === "alternative") return !!t.tmp.abort_alternative;
            };
            this.tests.push(i);
        };
        r.Attributes["@has-year-only"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    var u = l[o];
                    return !(!u || u.month || u.season);
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@has-to-month-or-season"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    var u = l[o];
                    return !(!u || !u.month && !u.season || u.day);
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@has-day"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    var u = l[o];
                    return !(!u || !u.day);
                };
            }, n = 0, a = i.length; n < a; n += 1)this.tests.push(s(i[n]));
        };
        r.Attributes["@is-plural"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = function(s) {
                var n = s[e];
                if (n && n.length) {
                    for(var a = 0, o = 0, l = !1, u = 0, f = n.length; u < f; u += 1)t.opt.development_extensions.spoof_institutional_affiliations && (n[u].literal || n[u].isInstitution && n[u].family && !n[u].given) ? (o += 1, l = !1) : (a += 1, l = !0);
                    if (a > 1) return !0;
                    if (o > 1) return !0;
                    if (o && l) return !0;
                }
                return !1;
            };
            this.tests.push(i);
        };
        r.Attributes["@is-multiple"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = function(s) {
                var n = "" + s[e], a = n.split(/(?:,\s|\s(?:tot\sen\smet|līdz|oraz|and|bis|έως|και|och|až|do|en|et|in|ir|ja|og|sa|to|un|und|és|și|i|u|y|à|e|a|и|-|–)\s|—|\&)/);
                return a.length > 1;
            };
            this.tests.push(i);
        };
        r.Attributes["@locale"] = function(t, e) {
            this.tests || (this.tests = []);
            var s, n, a, o, l, u = t.opt["default-locale"][0];
            if (this.name === "layout") {
                if (this.locale_raw = e, this.tokentype === r.START) {
                    t.opt.multi_layout || (t.opt.multi_layout = []);
                    var f = [], h = e.split(/\s+/), d = {}, p = r.localeResolve(h[0], u);
                    f.push(p), p.generic ? d[p.generic] = p.best : d[p.best] = p.best;
                    for(var o = 1, l = h.length; o < l; o += 1){
                        var m = r.localeResolve(h[o], u);
                        f.push(m), m.generic ? d[m.generic] = p.best : d[m.best] = p.best;
                    }
                    t[t.build.area].opt.sort_locales.push(d), t.opt.multi_layout.push(f);
                }
                t.opt.has_layout_locale = !0;
            } else {
                a = e.split(/\s+/);
                var b = [];
                for(o = 0, l = a.length; o < l; o += 1)n = a[o], s = r.localeResolve(n, u), a[o].length === 2 && b.push(s.bare), t.localeConfigure(s, !0), a[o] = s;
                var c = a.slice(), S = function(g, v, y) {
                    return function(_) {
                        var E;
                        [], E = !1;
                        var x = !1, k;
                        for(_.language ? k = _.language : k = v, x = r.localeResolve(k, v), o = 0, l = g.length; o < l; o += 1)if (x.best === g[o].best) {
                            t.tmp.condition_lang_counter_arr.push(t.tmp.condition_counter), t.tmp.condition_lang_val_arr.push(t.opt.lang), t.opt.lang = g[0].best, E = !0;
                            break;
                        }
                        return !E && y.indexOf(x.bare) > -1 && (t.tmp.condition_lang_counter_arr.push(t.tmp.condition_counter), t.tmp.condition_lang_val_arr.push(t.opt.lang), t.opt.lang = g[0].best, E = !0), E;
                    };
                };
                this.tests.push(S(c, u, b));
            }
        };
        r.Attributes["@alternative-node-internal"] = function(t) {
            this.tests || (this.tests = []);
            var e = function() {
                return function() {
                    return !t.tmp.abort_alternative;
                };
            }, i = this;
            this.tests.push(e(i));
        };
        r.Attributes["@locale-internal"] = function(t, e) {
            this.tests || (this.tests = []);
            var i, s, n, a, o;
            for(n = e.split(/\s+/), this.locale_bares = [], a = 0, o = n.length; a < o; a += 1)s = n[a], i = r.localeResolve(s, t.opt["default-locale"][0]), n[a].length === 2 && this.locale_bares.push(i.bare), t.localeConfigure(i), n[a] = i;
            this.locale_default = t.opt["default-locale"][0], this.locale = n[0].best, this.locale_list = n.slice();
            var l = function(f) {
                return function(h) {
                    var p;
                    [], p = !1;
                    var m = !1;
                    if (h.language && (s = h.language, m = r.localeResolve(s, t.opt["default-locale"][0]), m.best === t.opt["default-locale"][0] && (m = !1)), m) {
                        for(a = 0, o = f.locale_list.length; a < o; a += 1)if (m.best === f.locale_list[a].best) {
                            t.opt.lang = f.locale, t.tmp.last_cite_locale = f.locale, t.output.openLevel("empty"), t.output.current.value().new_locale = f.locale, p = !0;
                            break;
                        }
                        !p && f.locale_bares.indexOf(m.bare) > -1 && (t.opt.lang = f.locale, t.tmp.last_cite_locale = f.locale, t.output.openLevel("empty"), t.output.current.value().new_locale = f.locale, p = !0);
                    }
                    return p;
                };
            }, u = this;
            this.tests.push(l(u));
        };
        r.Attributes["@court-class"] = function(t, e) {
            this.tests || (this.tests = []);
            for(var i = e.split(/\s+/), s = function(o) {
                return function(l) {
                    var u = r.GET_COURT_CLASS(t, l);
                    return u === o;
                };
            }, n = 0, a = i.length; n < a; n++)this.tests.push(s(i[n]));
        };
        r.Attributes["@container-multiple"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e === "true", s = function(n) {
                return function(a) {
                    if (t.tmp.container_item_count[a.container_id]) {
                        if (t.tmp.container_item_count[a.container_id] > 1) return n;
                    } else return !n;
                    return !n;
                };
            };
            this.tests.push(s(i));
        };
        r.Attributes["@container-subsequent"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = e === "true", s = function(n) {
                return function(a) {
                    return t.tmp.container_item_pos[a.container_id] > 1 ? n : !n;
                };
            };
            this.tests.push(s(i));
        };
        r.Attributes["@has-subunit"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = function(s) {
                return function(n) {
                    var a = 0;
                    for(var o in n[s]){
                        var l = n[s][o];
                        if (!l.given) {
                            var u = l.literal ? l.literal : l.family, f = u.split("|").length;
                            (a === 0 || f < a) && (a = f);
                        }
                    }
                    return a > 1;
                };
            };
            this.tests.push(i(e));
        };
        r.Attributes["@cite-form"] = function(t, e) {
            this.tests || (this.tests = []);
            var i = function(s) {
                return function(n) {
                    return n["cite-form"] === s;
                };
            };
            this.tests.push(i(e));
        };
        r.Attributes["@disable-duplicate-year-suppression"] = function(t, e) {
            t.opt.disable_duplicate_year_suppression = e.split(/\s+/);
        };
        r.Attributes["@consolidate-containers"] = function(t, e) {
            r.Attributes["@track-containers"](t, e);
            var i = e.split(/\s+/);
            t.bibliography.opt.consolidate_containers = i;
        };
        r.Attributes["@track-containers"] = function(t, e) {
            var i = e.split(/\s+/);
            t.bibliography.opt.track_container_items || (t.bibliography.opt.track_container_items = []), t.bibliography.opt.consolidate_containers || (t.bibliography.opt.consolidate_containers = []), t.bibliography.opt.track_container_items = t.bibliography.opt.track_container_items.concat(i);
        };
        r.Attributes["@parallel-first"] = function(t, e) {
            t.opt.parallel.enable = !0;
            var i = e.split(/\s+/);
            t.opt.track_repeat || (t.opt.track_repeat = {}), this.parallel_first = {};
            for(var s in i){
                var n = i[s];
                this.parallel_first[n] = !0, t.opt.track_repeat[n] = !0;
            }
        };
        r.Attributes["@parallel-last"] = function(t, e) {
            t.opt.parallel.enable = !0;
            var i = e.split(/\s+/);
            t.opt.track_repeat || (t.opt.track_repeat = {}), this.parallel_last = {};
            for(var s in i){
                var n = i[s];
                this.parallel_last[n] = !0, t.opt.track_repeat[n] = !0;
            }
        };
        r.Attributes["@parallel-last-to-first"] = function(t, e) {
            t.opt.parallel.enable = !0;
            var i = e.split(/\s+/);
            this.parallel_last_to_first = {};
            for(var s = 0, n = i.length; s < n; s++)this.parallel_last_to_first[i[s]] = !0;
        };
        r.Attributes["@parallel-delimiter-override"] = function(t, e) {
            t.opt.parallel.enable = !0, this.strings.set_parallel_delimiter_override = e;
        };
        r.Attributes["@parallel-delimiter-override-on-suppress"] = function(t, e) {
            t.opt.parallel.enable = !0, this.strings.set_parallel_delimiter_override_on_suppress = e;
        };
        r.Attributes["@no-repeat"] = function(t, e) {
            t.opt.parallel.enable = !0;
            var i = e.split(/\s+/);
            t.opt.track_repeat || (t.opt.track_repeat = {}), this.non_parallel = {};
            for(var s in i){
                var n = i[s];
                this.non_parallel[n] = !0, t.opt.track_repeat[n] = !0;
            }
        };
        r.Attributes["@require"] = function(t, e) {
            t.opt.use_context_condition = !0, this.strings.require = e;
        };
        r.Attributes["@reject"] = function(t, e) {
            t.opt.use_context_condition = !0, this.strings.reject = e;
        };
        r.Attributes["@require-comma-on-symbol"] = function(t, e) {
            t.opt.require_comma_on_symbol = e;
        };
        r.Attributes["@gender"] = function(t, e) {
            this.gender = e;
        };
        r.Attributes["@cslid"] = function(t, e) {
            this.cslid = parseInt(e, 10);
        };
        r.Attributes["@capitalize-if-first"] = function(t, e) {
            this.strings.capitalize_if_first_override = e;
        };
        r.Attributes["@label-capitalize-if-first"] = function(t, e) {
            this.strings.label_capitalize_if_first_override = e;
        };
        r.Attributes["@label-form"] = function(t, e) {
            this.strings.label_form_override = e;
        };
        r.Attributes["@part-separator"] = function(t, e) {
            this.strings["part-separator"] = e;
        };
        r.Attributes["@leading-noise-words"] = function(t, e) {
            this["leading-noise-words"] = e;
        };
        r.Attributes["@name-never-short"] = function(t, e) {
            this["name-never-short"] = e;
        };
        r.Attributes["@class"] = function(t, e) {
            t.opt.class = e;
        };
        r.Attributes["@version"] = function(t, e) {
            t.opt.version = e;
        };
        r.Attributes["@value"] = function(t, e) {
            this.strings.value = e;
        };
        r.Attributes["@name"] = function(t, e) {
            this.strings.name = e;
        };
        r.Attributes["@form"] = function(t, e) {
            this.strings.form = e;
        };
        r.Attributes["@date-parts"] = function(t, e) {
            this.strings["date-parts"] = e;
        };
        r.Attributes["@range-delimiter"] = function(t, e) {
            this.strings["range-delimiter"] = e;
        };
        r.Attributes["@macro"] = function(t, e) {
            this.postponed_macro = e;
        };
        r.Attributes["@term"] = function(t, e) {
            e === "sub verbo" ? this.strings.term = "sub-verbo" : this.strings.term = e;
        };
        r.Attributes["@xmlns"] = function() {};
        r.Attributes["@lang"] = function(t, e) {
            e && (t.build.lang = e);
        };
        r.Attributes["@lingo"] = function() {};
        r.Attributes["@macro-has-date"] = function() {
            this["macro-has-date"] = !0;
        };
        r.Attributes["@suffix"] = function(t, e) {
            this.strings.suffix = e;
        };
        r.Attributes["@prefix"] = function(t, e) {
            this.strings.prefix = e;
        };
        r.Attributes["@delimiter"] = function(t, e) {
            this.strings.delimiter = e;
        };
        r.Attributes["@match"] = function(t, e) {
            this.match = e;
        };
        r.Attributes["@names-min"] = function(t, e) {
            var i = parseInt(e, 10);
            t[t.build.area].opt.max_number_of_names < i && (t[t.build.area].opt.max_number_of_names = i), this.strings["et-al-min"] = i;
        };
        r.Attributes["@names-use-first"] = function(t, e) {
            this.strings["et-al-use-first"] = parseInt(e, 10);
        };
        r.Attributes["@names-use-last"] = function(t, e) {
            e === "true" ? this.strings["et-al-use-last"] = !0 : this.strings["et-al-use-last"] = !1;
        };
        r.Attributes["@sort"] = function(t, e) {
            e === "descending" && (this.strings.sort_direction = r.DESCENDING);
        };
        r.Attributes["@plural"] = function(t, e) {
            e === "always" || e === "true" ? this.strings.plural = 1 : e === "never" || e === "false" ? this.strings.plural = 0 : e === "contextual" && (this.strings.plural = !1);
        };
        r.Attributes["@has-publisher-and-publisher-place"] = function() {
            this.strings["has-publisher-and-publisher-place"] = !0;
        };
        r.Attributes["@publisher-delimiter-precedes-last"] = function(t, e) {
            this.strings["publisher-delimiter-precedes-last"] = e;
        };
        r.Attributes["@publisher-delimiter"] = function(t, e) {
            this.strings["publisher-delimiter"] = e;
        };
        r.Attributes["@publisher-and"] = function(t, e) {
            this.strings["publisher-and"] = e;
        };
        r.Attributes["@givenname-disambiguation-rule"] = function(t, e) {
            r.GIVENNAME_DISAMBIGUATION_RULES.indexOf(e) > -1 && (t.citation.opt["givenname-disambiguation-rule"] = e);
        };
        r.Attributes["@collapse"] = function(t, e) {
            e && (t[this.name].opt.collapse = e);
        };
        r.Attributes["@cite-group-delimiter"] = function(t, e) {
            e && (t[t.tmp.area].opt.cite_group_delimiter = e);
        };
        r.Attributes["@names-delimiter"] = function(t, e) {
            t.setOpt(this, "names-delimiter", e);
        };
        r.Attributes["@name-form"] = function(t, e) {
            t.setOpt(this, "name-form", e);
        };
        r.Attributes["@subgroup-delimiter"] = function(t, e) {
            this.strings["subgroup-delimiter"] = e;
        };
        r.Attributes["@subgroup-delimiter-precedes-last"] = function(t, e) {
            this.strings["subgroup-delimiter-precedes-last"] = e;
        };
        r.Attributes["@name-delimiter"] = function(t, e) {
            t.setOpt(this, "name-delimiter", e);
        };
        r.Attributes["@et-al-min"] = function(t, e) {
            var i = parseInt(e, 10);
            t[t.build.area].opt.max_number_of_names < i && (t[t.build.area].opt.max_number_of_names = i), t.setOpt(this, "et-al-min", i);
        };
        r.Attributes["@et-al-use-first"] = function(t, e) {
            t.setOpt(this, "et-al-use-first", parseInt(e, 10));
        };
        r.Attributes["@et-al-use-last"] = function(t, e) {
            e === "true" ? t.setOpt(this, "et-al-use-last", !0) : t.setOpt(this, "et-al-use-last", !1);
        };
        r.Attributes["@et-al-subsequent-min"] = function(t, e) {
            var i = parseInt(e, 10);
            t[t.build.area].opt.max_number_of_names < i && (t[t.build.area].opt.max_number_of_names = i), t.setOpt(this, "et-al-subsequent-min", i);
        };
        r.Attributes["@et-al-subsequent-use-first"] = function(t, e) {
            t.setOpt(this, "et-al-subsequent-use-first", parseInt(e, 10));
        };
        r.Attributes["@suppress-min"] = function(t, e) {
            this.strings["suppress-min"] = parseInt(e, 10);
        };
        r.Attributes["@suppress-max"] = function(t, e) {
            this.strings["suppress-max"] = parseInt(e, 10);
        };
        r.Attributes["@and"] = function(t, e) {
            t.setOpt(this, "and", e);
        };
        r.Attributes["@delimiter-precedes-last"] = function(t, e) {
            t.setOpt(this, "delimiter-precedes-last", e);
        };
        r.Attributes["@delimiter-precedes-et-al"] = function(t, e) {
            t.setOpt(this, "delimiter-precedes-et-al", e);
        };
        r.Attributes["@initialize-with"] = function(t, e) {
            t.setOpt(this, "initialize-with", e);
        };
        r.Attributes["@initialize"] = function(t, e) {
            e === "false" && t.setOpt(this, "initialize", !1);
        };
        r.Attributes["@name-as-reverse-order"] = function(t, e) {
            this["name-as-reverse-order"] = e;
        };
        r.Attributes["@name-as-sort-order"] = function(t, e) {
            this.name === "style-options" ? this["name-as-sort-order"] = e : t.setOpt(this, "name-as-sort-order", e);
        };
        r.Attributes["@sort-separator"] = function(t, e) {
            t.setOpt(this, "sort-separator", e);
        };
        r.Attributes["@require-match"] = function(t, e) {
            e === "true" && (this.requireMatch = !0);
        };
        r.Attributes["@exclude-types"] = function(t, e) {
            t.bibliography.opt.exclude_types = e.split(/\s+/);
        };
        r.Attributes["@exclude-with-fields"] = function(t, e) {
            t.bibliography.opt.exclude_with_fields = e.split(/\s+/);
        };
        r.Attributes["@year-suffix-delimiter"] = function(t, e) {
            t[this.name].opt["year-suffix-delimiter"] = e;
        };
        r.Attributes["@after-collapse-delimiter"] = function(t, e) {
            t[this.name].opt["after-collapse-delimiter"] = e;
        };
        r.Attributes["@subsequent-author-substitute"] = function(t, e) {
            t[this.name].opt["subsequent-author-substitute"] = e;
        };
        r.Attributes["@subsequent-author-substitute-rule"] = function(t, e) {
            t[this.name].opt["subsequent-author-substitute-rule"] = e;
        };
        r.Attributes["@disambiguate-add-names"] = function(t, e) {
            e === "true" && (t.opt["disambiguate-add-names"] = !0);
        };
        r.Attributes["@disambiguate-add-givenname"] = function(t, e) {
            e === "true" && (t.opt["disambiguate-add-givenname"] = !0);
        };
        r.Attributes["@disambiguate-add-year-suffix"] = function(t, e) {
            e === "true" && t.opt.xclass !== "numeric" && (t.opt["disambiguate-add-year-suffix"] = !0);
        };
        r.Attributes["@second-field-align"] = function(t, e) {
            (e === "flush" || e === "margin") && (t[this.name].opt["second-field-align"] = e);
        };
        r.Attributes["@hanging-indent"] = function(t, e) {
            e === "true" && (t.opt.development_extensions.hanging_indent_legacy_number ? t[this.name].opt.hangingindent = 2 : t[this.name].opt.hangingindent = !0);
        };
        r.Attributes["@line-spacing"] = function(t, e) {
            e && e.match(/^[.0-9]+$/) && (t[this.name].opt["line-spacing"] = parseFloat(e, 10));
        };
        r.Attributes["@entry-spacing"] = function(t, e) {
            e && e.match(/^[.0-9]+$/) && (t[this.name].opt["entry-spacing"] = parseFloat(e, 10));
        };
        r.Attributes["@near-note-distance"] = function(t, e) {
            t[this.name].opt["near-note-distance"] = parseInt(e, 10);
        };
        r.Attributes["@substring"] = function(t, e) {
            this.substring = parseInt(e, 10);
        };
        r.Attributes["@text-case"] = function(t, e) {
            var i = function(s, n) {
                e === "normal" ? this.text_case_normal = !0 : (this.strings["text-case"] = e, e === "title" && n.jurisdiction && (this.strings["text-case"] = "passthrough"));
            };
            this.execs.push(i);
        };
        r.Attributes["@page-range-format"] = function(t, e) {
            t.opt["page-range-format"] = e;
        };
        r.Attributes["@year-range-format"] = function(t, e) {
            t.opt["year-range-format"] = e;
        };
        r.Attributes["@default-locale"] = function(t, e) {
            if (this.name === "style") {
                var i, s, n, o, a, o = e.match(/-x-(sort|translit|translat)-/g);
                if (o) for(n = 0, s = o.length; n < s; n += 1)o[n] = o[n].replace(/^-x-/, "").replace(/-$/, "");
                for(i = e.split(/-x-(?:sort|translit|translat)-/), a = [
                    i[0]
                ], n = 1, s = i.length; n < s; n += 1)a.push(o[n - 1]), a.push(i[n]);
                for(i = a.slice(), s = i.length, n = 1; n < s; n += 2)t.opt["locale-" + i[n]].push(i[n + 1].replace(/^\s*/g, "").replace(/\s*$/g, ""));
                i.length ? t.opt["default-locale"] = i.slice(0, 1) : t.opt["default-locale"] = [
                    "en"
                ];
            } else e === "true" && (this.default_locale = !0);
        };
        r.Attributes["@default-locale-sort"] = function(t, e) {
            t.opt["default-locale-sort"] = e;
        };
        r.Attributes["@demote-non-dropping-particle"] = function(t, e) {
            t.opt["demote-non-dropping-particle"] = e;
        };
        r.Attributes["@initialize-with-hyphen"] = function(t, e) {
            e === "false" && (t.opt["initialize-with-hyphen"] = !1);
        };
        r.Attributes["@institution-parts"] = function(t, e) {
            this.strings["institution-parts"] = e;
        };
        r.Attributes["@if-short"] = function(t, e) {
            e === "true" && (this.strings["if-short"] = !0);
        };
        r.Attributes["@substitute-use-first"] = function(t, e) {
            this.strings["substitute-use-first"] = parseInt(e, 10);
        };
        r.Attributes["@use-first"] = function(t, e) {
            this.strings["use-first"] = parseInt(e, 10);
        };
        r.Attributes["@use-last"] = function(t, e) {
            this.strings["use-last"] = parseInt(e, 10);
        };
        r.Attributes["@stop-first"] = function(t, e) {
            this.strings["stop-first"] = parseInt(e, 10);
        };
        r.Attributes["@stop-last"] = function(t, e) {
            this.strings["stop-last"] = parseInt(e, 10) * -1;
        };
        r.Attributes["@reverse-order"] = function(t, e) {
            e === "true" && (this.strings["reverse-order"] = !0);
        };
        r.Attributes["@display"] = function(t, e) {
            t.bibliography.tokens.length === 2 && (t.opt.using_display = !0), this.strings.cls = e;
        };
        r.Stack = function(t, e) {
            this.mystack = [], (e || t) && this.mystack.push(t), this.tip = this.mystack[0];
        };
        r.Stack.prototype.push = function(t, e) {
            e || t ? this.mystack.push(t) : this.mystack.push(""), this.tip = this.mystack[this.mystack.length - 1];
        };
        r.Stack.prototype.clear = function() {
            this.mystack = [], this.tip = {};
        };
        r.Stack.prototype.replace = function(t, e) {
            this.mystack.length === 0 && r.error("Internal CSL processor error: attempt to replace nonexistent stack item with " + t), e || t ? this.mystack[this.mystack.length - 1] = t : this.mystack[this.mystack.length - 1] = "", this.tip = this.mystack[this.mystack.length - 1];
        };
        r.Stack.prototype.pop = function() {
            var t = this.mystack.pop();
            return this.mystack.length ? this.tip = this.mystack[this.mystack.length - 1] : this.tip = {}, t;
        };
        r.Stack.prototype.value = function() {
            return this.mystack.slice(-1)[0];
        };
        r.Stack.prototype.length = function() {
            return this.mystack.length;
        };
        r.Parallel = function(t) {
            this.state = t;
        };
        r.Parallel.prototype.StartCitation = function(t, e) {
            if (this.state.tmp.suppress_repeats = [], !(t.length < 2)) {
                for(var i = 0, s = !1, n = [], a = 0, o = t.length - 1; a < o; a++){
                    var l = t[a][0], u = t[a + 1][0], f = !1, h = {};
                    if (t[a][0].seeAlso && t[a][0].seeAlso.length > 0 && !s) {
                        f = !0, s = [
                            t[a][0].id
                        ].concat(t[a][0].seeAlso);
                        var d = s.slice(), p = t.slice(a);
                        p[0][1].parallel = "first";
                        for(var m = 0, b = p.length; m < b; m++){
                            var c = p[m][0].id, S = d.indexOf(c);
                            if (i = !1, S === -1 ? i = a + m - 1 : a + m === t.length - 1 && (i = a + m), i) {
                                n.push([
                                    a,
                                    i
                                ]);
                                break;
                            } else d = d.slice(0, S).concat(d.slice(S + 1));
                        }
                    }
                    a > 0 && f && (this.state.tmp.suppress_repeats[a - 1].START = !0, f = !1);
                    for(var g in this.state.opt.track_repeat)if (!l[g] || !u[g]) h[g] = !1;
                    else if (typeof u[g] == "string" || typeof u[g] == "number") {
                        if (g === "title" && l["title-short"] && u["title-short"]) var v = l["title-short"], y = u["title-short"];
                        else var v = l[g], y = u[g];
                        v == y ? h[g] = !0 : h[g] = !1;
                    } else if (typeof l[g].length > "u") {
                        h[g] = !1;
                        var _ = l[g].year, E = u[g].year;
                        _ && E && _ == E && (h[g] = !0);
                    } else {
                        var v = JSON.stringify(l[g]), y = JSON.stringify(u[g]);
                        v === y ? h[g] = !0 : h[g] = !1;
                    }
                    s || (h.ORPHAN = !0), i === a && (h.END = !0, s = !1), this.state.tmp.suppress_repeats.push(h);
                }
                for(var m = 0, b = n.length; m < b; m++){
                    var x = t[n[m][0]][0].id;
                    this.state.registry.registry[x].master = !0, this.state.registry.registry[x].siblings = [];
                    for(var k = n[m][0], O = n[m][1], A = k; A < O; A++){
                        this.state.tmp.suppress_repeats[A].SIBLING = !0;
                        var N = t[A + 1][0].id;
                        t[A + 1][1].parallel = "other", this.state.registry.registry[x].siblings.push(N);
                    }
                }
            }
        };
        r.Parallel.prototype.checkRepeats = function(t) {
            var e = this.state.tmp.cite_index;
            if (this.state.tmp.suppress_repeats) {
                if (t.parallel_first && Object.keys(t.parallel_first).length > 0) {
                    var i = [
                        {}
                    ].concat(this.state.tmp.suppress_repeats), s = !0;
                    for(var n in t.parallel_first)(!i[e][n] || i[e].START) && (s = !1);
                    return s;
                }
                if (t.parallel_last && Object.keys(t.parallel_last).length > 0) {
                    var i = this.state.tmp.suppress_repeats.concat([
                        {}
                    ]), s = Object.keys(t.parallel_last).length > 0;
                    for(var n in t.parallel_last)(!i[e][n] || i[e].END) && (s = !1);
                    return s;
                }
                if (t.non_parallel && Object.keys(t.non_parallel).length > 0) {
                    var i = [
                        {}
                    ].concat(this.state.tmp.suppress_repeats), s = !0;
                    for(var n in t.non_parallel)i[e][n] || (s = !1);
                    return s;
                }
            }
            return !1;
        };
        r.Util = {};
        r.Util.Match = function() {
            this.any = function(t, e, i) {
                return function(s, n) {
                    for(var a = 0, o = i.length; a < o; a += 1){
                        var l = i[a](s, n);
                        if (l) return !0;
                    }
                    return !1;
                };
            }, this.none = function(t, e, i) {
                return function(s, n) {
                    for(var a = 0, o = i.length; a < o; a += 1){
                        var l = i[a](s, n);
                        if (l) return !1;
                    }
                    return !0;
                };
            }, this.all = function(t, e, i) {
                return function(s, n) {
                    for(var a = 0, o = i.length; a < o; a += 1){
                        var l = i[a](s, n);
                        if (!l) return !1;
                    }
                    return !0;
                };
            }, this[void 0] = this.all, this.nand = function(t, e, i) {
                return function(s, n) {
                    for(var a = 0, o = i.length; a < o; a += 1){
                        var l = i[a](s, n);
                        if (!l) return !0;
                    }
                    return !1;
                };
            };
        };
        r.Transform = function(t) {
            this.abbrevs = {}, this.abbrevs.default = new t.sys.AbbreviationSegments;
            function e(h, d, p) {
                var m = "";
                return t.sys.getHumanForm && (h === "country" ? (m = t.sys.getHumanForm(d.toLowerCase(), !1, !0), m = m.split("|")[0]) : h === "jurisdiction" && (m = t.sys.getHumanForm(d.toLowerCase(), !1, !0), p ? m = "" : m = m.split("|").slice(1).join(", "))), m;
            }
            function i(h, d, p, m, b, c, S) {
                var g = "", v = r.FIELD_CATEGORY_REMAP[c], y;
                if (!v) return b;
                var _ = c, E = b;
                h.sys.normalizeAbbrevsKey && (E = h.sys.normalizeAbbrevsKey(c, b));
                var x = !1;
                if (_ === "jurisdiction" && E && (x = E.indexOf(":") === -1), [
                    "jurisdiction",
                    "country"
                ].indexOf(c) > -1 && b === b.toLowerCase() && (E = b.toUpperCase()), h.sys.getAbbreviation) {
                    [
                        "jurisdiction",
                        "country",
                        "language-name",
                        "language-name-original"
                    ].indexOf(_) > -1 ? y = "default" : p.jurisdiction ? y = p.jurisdiction : y = "default";
                    var k = h.transform.loadAbbreviation(y, v, E, p.language);
                    if (h.transform.abbrevs[k][v] && E) {
                        var O = h.transform.abbrevs[k][v][E];
                        d.strings.form === "short" && O ? x ? g = "" : g = O : g = e(_, E, x);
                    }
                }
                return !g && (!h.opt.development_extensions.require_explicit_legal_case_title_short || p.type !== "legal_case") && m && p[m] && S && (g = p[m]), !g && !h.sys.getAbbreviation && h.sys.getHumanForm && (g = e(_, E, x)), !g && !x && (!h.sys.getHumanForm || _ !== "jurisdiction") && (g = b), h.opt.development_extensions.force_title_abbrev_fallback && _ === "title" && g === b && p["title-short"] && (g = p["title-short"]), g;
            }
            function s(h, d) {
                var p = t.opt["default-locale"][0].slice(0, 2), m;
                if (t.opt.development_extensions.strict_text_case_locales ? m = new RegExp("^([a-zA-Z]{2})(?:$|-.*| .*)") : m = new RegExp("^([a-zA-Z]{2})(?:$|-.*|.*)"), h.language) {
                    var b = ("" + h.language).match(m);
                    b ? p = b[1] : p = "tlh";
                }
                return h.multi && h.multi && h.multi.main && h.multi.main[d] && (p = h.multi.main[d]), (!t.opt.development_extensions.strict_text_case_locales || t.opt.development_extensions.normalize_lang_keys_to_lowercase) && (p = p.toLowerCase()), p;
            }
            function n(h, d, p, m, b, c) {
                var S, g, v, y, _ = b, E = !1;
                if (!h[d]) return {
                    name: "",
                    usedOrig: b,
                    token: r.Util.cloneToken(this)
                };
                var x = !1;
                r.VARIABLES_WITH_SHORT_FORM.indexOf(d) > -1 && c && (d = d + "-short", x = !0);
                var k = !1, O = null, A = [];
                d.slice(-6) === "-short" ? (A.push(d), A.push(d.slice(0, -6))) : A.push(d);
                for(var N = 0, T = A.length; N < T; N++){
                    var D = !1, d = A[N];
                    v = {
                        name: "",
                        usedOrig: b,
                        locale: s(h, d)
                    }, y = t.opt[p] ? t.opt[p].slice() : [];
                    var C = !1;
                    if (p === "locale-orig" ? (b || (v.name = h[d], v.usedOrig = !1), C = !0, E = !0) : m && (typeof y > "u" || y.length === 0) && (v.name = h[d], v.usedOrig = !0, C = !0, E = !0), !C) {
                        for(var I = 0, P = y.length; I < P; I += 1)if (S = y[I], g = S.split(/[\-_]/)[0], S && h.multi && h.multi._keys[d] && h.multi._keys[d][S]) {
                            v.name = h.multi._keys[d][S], v.locale = S, C = !0, D = !0, E = !1;
                            break;
                        } else if (g && h.multi && h.multi._keys[d] && h.multi._keys[d][g]) {
                            v.name = h.multi._keys[d][g], v.locale = g, C = !0, D = !0, E = !1;
                            break;
                        }
                        !v.name && m && (v = {
                            name: h[d],
                            usedOrig: !0,
                            locale: s(h, d)
                        }, E = !0);
                    }
                    if (v.token = r.Util.cloneToken(this), N === 0 ? (D && (v.found_variant_ok = !0), O = v, !x && (typeof y > "u" || y.length === 0) && (k = !0), D && (k = !0)) : !x && !D && O ? (v = O, d = A[0]) : D && (v.found_variant_ok = !0), [
                        "title",
                        "container-title"
                    ].indexOf(d) > -1 && !_ && (!v.token.strings["text-case"] || v.token.strings["text-case"] === "sentence" || v.token.strings["text-case"] === "normal")) {
                        var M = t.opt.lang, F;
                        E ? F = !1 : F = v.locale;
                        var U = d.slice(0, -5), j = v.token.strings["text-case"] === "sentence";
                        v.name = r.titlecaseSentenceOrNormal(t, h, U, F, j), delete v.token.strings["text-case"];
                    }
                    if (k) break;
                }
                return v;
            }
            this.getTextSubField = n;
            function a(h, d, p, m) {
                h || (h = "default");
                var b = h.split(":")[0], c = r.getAbbrevsDomain(t, b, m);
                return c && (h += "@" + c), p ? (t.sys.getAbbreviation && (h = t.sys.getAbbreviation(t.opt.styleID, t.transform.abbrevs, h, d, p), h || (h = "default", c && (h += "@" + c))), h) : (t.transform.abbrevs[h] || (t.transform.abbrevs[h] = new t.sys.AbbreviationSegments), t.transform.abbrevs[h][d] || (t.transform.abbrevs[h][d] = {}), h);
            }
            this.loadAbbreviation = a;
            function o(h, d, p, m) {
                var b = h.variables[0];
                if (t.publisherOutput && p) {
                    if ([
                        "publisher",
                        "publisher-place"
                    ].indexOf(b) === -1) return !1;
                    t.publisherOutput[b + "-token"] = h, t.publisherOutput.varlist.push(b);
                    var c = p.split(/;\s*/);
                    c.length === t.publisherOutput[b + "-list"].length && (t.publisherOutput[b + "-list"] = c);
                    for(var S = 0, g = c.length; S < g; S += 1)c[S] = i(t, h, d, !1, c[S], m, !0);
                    return t.tmp[b + "-token"] = h, !0;
                }
                return !1;
            }
            function l(h, d) {
                var p = d.match(/^#([0-9]+).*>>>/);
                p && p[1] && (h["cite-form"] = p[1]);
            }
            function u(h, d) {
                var p = d.match(/^(?:#[0-9]+)*(?:!((?:[-_a-z]+(?:(?:.*)))(?:,(?:[-_a-z]+(?:(?:.*))))*))*>>>/);
                if (p && (d = d.slice(p[0].length), p[1])) for(var m = p[1].split(","), b = 0, c = m.length; b < c; b += 1){
                    var S = m[b], g = S.match(/^([-_a-z]+)(?:\:(.*))*$/), v = g[1], y = t.tmp.abbrev_trimmer;
                    g[2] ? y && h && (y[h] || (y[h] = {}), y[h][v] = g[2]) : t.tmp.done_vars.indexOf(v) === -1 && (y && h && (y.QUASHES[h] || (y.QUASHES[h] = {}), y.QUASHES[h][v] = !0), t.tmp.done_vars.push(v));
                }
                return d;
            }
            this.quashCheck = u;
            function f(h, d, p, m) {
                var b, c = r.LangPrefsMap[h[0]];
                return c ? b = t.opt["cite-lang-prefs"][c] : b = !1, function(S, g, v) {
                    var y, _, E, x, k, O, P;
                    if (!h[0] || !g[h[0]] && !g[m] || !S.tmp.just_looking && v && v["suppress-author"] && !S.tmp.probably_rendered_something && S.tmp.can_substitute.length() > 1) return null;
                    var A = {
                        primary: !1,
                        secondary: !1,
                        tertiary: !1
                    };
                    if (S.tmp.area.slice(-5) === "_sort") A.primary = "locale-sort";
                    else if (b && b.length === 1 && b[0] === "locale-orig") A.primary = "locale-orig", b = !1;
                    else if (b && !S.tmp.multi_layout) for(var N = [
                        "primary",
                        "secondary",
                        "tertiary"
                    ], T = 0, D = N.length; T < D && !(b.length - 1 < T); T += 1)b[T] && (A[N[T]] = "locale-" + b[T]);
                    else A.primary = "locale-orig";
                    if ((h[0] === "title-short" || S.tmp.area !== "bibliography" && !(S.tmp.area === "citation" && S.opt.xclass === "note" && v && !v.position)) && (A.secondary = !1, A.tertiary = !1), S.tmp.multi_layout && (A.secondary = !1, A.tertiary = !1), S.tmp["publisher-list"]) return h[0] === "publisher" ? S.tmp["publisher-token"] = this : h[0] === "publisher-place" && (S.tmp["publisher-place-token"] = this), null;
                    var C = S.tmp.lang_array.slice(), I = n.call(this, g, h[0], A.primary, !0, null, d);
                    y = I.name, _ = I.locale;
                    var P = I.token, M = I.usedOrig;
                    if (d && !I.found_variant_ok && (y = i(S, P, g, m, y, d, !0), y && (l(g, y), S.tmp.just_looking || (y = u(g.jurisdiction, y)))), o(this, g, y, d)) return S.tmp.lang_array = C, null;
                    E = !1, k = !1;
                    var F, U;
                    A.secondary && (I = n.call(this, g, h[0], A.secondary, !1, I.usedOrig, null, d), E = I.name, x = I.locale, F = I.token, d && !I.found_variant_ok && E && (E = i(S, F, g, !1, E, d, !0))), A.tertiary && (I = n.call(this, g, h[0], A.tertiary, !1, I.usedOrig, null, d), k = I.name, O = I.locale, U = I.token, d && !I.found_variant_ok && k && (k = i(S, U, g, !1, k, d, !0)));
                    var j;
                    if (A.primary === "locale-translit" && (j = S.opt.citeAffixes[c][A.primary].prefix), j === "<i>" && h[0] === "title" && !M) {
                        for(var X = !1, T = 0, D = P.decorations.length; T < D; T += 1)P.decorations[T][0] === "@font-style" && P.decorations[T][1] === "italic" && (X = !0);
                        X || P.decorations.push([
                            "@font-style",
                            "italic"
                        ]);
                    }
                    if (_ !== "en" && P.strings["text-case"] === "title" && (P.strings["text-case"] = "passthrough"), h[0] === "title" && (y = r.demoteNoiseWords(S, y, this["leading-noise-words"])), E || k) {
                        if (S.output.openLevel("empty"), P.strings.suffix = P.strings.suffix.replace(/[ .,]+$/, ""), _ && (S.tmp.lang_array = [
                            _
                        ].concat(C)), r.UPDATE_GROUP_CONTEXT_CONDITION(S, null, null, P, P.strings.prefix + y), S.output.append(y, P), S.tmp.probably_rendered_something = !0, y === E && (E = !1), E) {
                            F.strings.prefix = S.opt.citeAffixes[c][A.secondary].prefix, F.strings.suffix = S.opt.citeAffixes[c][A.secondary].suffix, F.strings.prefix || (F.strings.prefix = " ");
                            for(var T = F.decorations.length - 1; T > -1; T += -1)[
                                "@quotes/true",
                                "@font-style/italic",
                                "@font-style/oblique",
                                "@font-weight/bold"
                            ].indexOf(F.decorations[T].join("/")) > -1 && (F.decorations = F.decorations.slice(0, T).concat(F.decorations.slice(T + 1)));
                            x !== "en" && F.strings["text-case"] === "title" && (F.strings["text-case"] = "passthrough"), x && (S.tmp.lang_array = [
                                x
                            ].concat(C));
                            var R = new r.Token;
                            R.decorations.push([
                                "@font-style",
                                "normal"
                            ]), R.decorations.push([
                                "@font-weight",
                                "normal"
                            ]), S.output.openLevel(R), S.output.append(E, F), S.output.closeLevel();
                            S.output.current.value(), S.output.current.value().blobs.length - 1;
                        }
                        if (y === k && (k = !1), k) {
                            U.strings.prefix = S.opt.citeAffixes[c][A.tertiary].prefix, U.strings.suffix = S.opt.citeAffixes[c][A.tertiary].suffix, U.strings.prefix || (U.strings.prefix = " ");
                            for(var T = U.decorations.length - 1; T > -1; T += -1)[
                                "@quotes/true",
                                "@font-style/italic",
                                "@font-style/oblique",
                                "@font-weight/bold"
                            ].indexOf(U.decorations[T].join("/")) > -1 && (U.decorations = U.decorations.slice(0, T).concat(U.decorations.slice(T + 1)));
                            O !== "en" && U.strings["text-case"] === "title" && (U.strings["text-case"] = "passthrough"), O && (S.tmp.lang_array = [
                                O
                            ].concat(C));
                            var z = new r.Token;
                            z.decorations.push([
                                "@font-style",
                                "normal"
                            ]), z.decorations.push([
                                "@font-weight",
                                "normal"
                            ]), S.output.openLevel(z), S.output.append(k, U), S.output.closeLevel();
                            S.output.current.value(), S.output.current.value().blobs.length - 1;
                        }
                        S.output.closeLevel();
                    } else _ && (S.tmp.lang_array = [
                        _
                    ].concat(C)), r.UPDATE_GROUP_CONTEXT_CONDITION(S, null, null, P, P.strings.prefix + y), S.output.append(y, P), S.tmp.probably_rendered_something = !0;
                    return S.tmp.lang_array = C, S.tmp.can_block_substitute && S.tmp.name_node.children.push(S.output.current.value()), null;
                };
            }
            this.getOutputFunction = f;
        };
        r.Token = function(t, e, i) {
            this.name = t, this.strings = {}, this.strings.delimiter = void 0, this.strings.prefix = "", this.strings.suffix = "", this.decorations = [], this.variables = [], this.execs = [], this.tokentype = e;
        };
        r.Util.cloneToken = function(t) {
            var e, i, s, n;
            if (typeof t == "string") return t;
            e = new r.Token(t.name, t.tokentype);
            for(var i in t.strings)t.strings.hasOwnProperty(i) && (e.strings[i] = t.strings[i]);
            if (t.decorations) for(e.decorations = [], s = 0, n = t.decorations.length; s < n; s += 1)e.decorations.push(t.decorations[s].slice());
            return t.variables && (e.variables = t.variables.slice()), t.execs && (e.execs = t.execs.slice(), t.tests && (e.tests = t.tests.slice())), e;
        };
        r.AmbigConfig = function() {
            this.maxvals = [], this.minval = 1, this.names = [], this.givens = [], this.year_suffix = !1, this.disambiguate = 0;
        };
        r.Blob = function(t, e, i) {
            var s, n, a;
            if (this.levelname = i, e) {
                this.strings = {
                    prefix: "",
                    suffix: ""
                };
                for(var a in e.strings)e.strings.hasOwnProperty(a) && (this.strings[a] = e.strings[a]);
                for(this.decorations = [], e.decorations === void 0 ? s = 0 : s = e.decorations.length, n = 0; n < s; n += 1)this.decorations.push(e.decorations[n].slice());
            } else this.strings = {}, this.strings.prefix = "", this.strings.suffix = "", this.strings.delimiter = "", this.decorations = [];
            typeof t == "string" ? this.blobs = t : t ? this.blobs = [
                t
            ] : this.blobs = [], this.alldecor = [
                this.decorations
            ];
        };
        r.Blob.prototype.push = function(t) {
            typeof this.blobs == "string" ? r.error("Attempt to push blob onto string object") : t !== !1 && (t.alldecor = t.alldecor.concat(this.alldecor), this.blobs.push(t));
        };
        r.NumericBlob = function(t, e, i, s, n) {
            if (this.id = n, this.alldecor = [], this.num = i, this.particle = e, this.blobs = i.toString(), this.status = r.START, this.strings = {}, s) {
                if (s.strings["text-case"]) {
                    var a = s.strings["text-case"];
                    this.particle = r.Output.Formatters[a](t, this.particle), this.blobs = r.Output.Formatters[a](t, this.blobs);
                }
                this.gender = s.gender, this.decorations = s.decorations, this.strings.prefix = s.strings.prefix, this.strings.suffix = s.strings.suffix, this.strings["text-case"] = s.strings["text-case"], this.successor_prefix = s.successor_prefix, this.range_prefix = s.range_prefix, this.splice_prefix = s.splice_prefix, this.formatter = s.formatter, this.formatter || (this.formatter = new r.Output.DefaultFormatter), this.formatter && (this.type = this.formatter.format(1));
            } else this.decorations = [], this.strings.prefix = "", this.strings.suffix = "", this.successor_prefix = "", this.range_prefix = "", this.splice_prefix = "", this.formatter = new r.Output.DefaultFormatter;
        };
        r.NumericBlob.prototype.setFormatter = function(t) {
            this.formatter = t, this.type = this.formatter.format(1);
        };
        r.Output.DefaultFormatter = function() {};
        r.Output.DefaultFormatter.prototype.format = function(t) {
            return t.toString();
        };
        r.NumericBlob.prototype.checkNext = function(t, e) {
            e ? (this.status = r.START, typeof t == "object" && (t.num === this.num + 1 ? t.status = r.SUCCESSOR : t.status = r.SEEN)) : !t || !t.num || this.type !== t.type || t.num !== this.num + 1 ? (this.status === r.SUCCESSOR_OF_SUCCESSOR && (this.status = r.END), typeof t == "object" && (t.status = r.SEEN)) : this.status === r.START || this.status === r.SEEN ? t.status = r.SUCCESSOR : (this.status === r.SUCCESSOR || this.status === r.SUCCESSOR_OF_SUCCESSOR) && (this.range_prefix ? (t.status = r.SUCCESSOR_OF_SUCCESSOR, this.status = r.SUPPRESS) : t.status = r.SUCCESSOR);
        };
        r.NumericBlob.prototype.checkLast = function(t) {
            return this.status === r.SEEN || t.num !== this.num - 1 && this.status === r.SUCCESSOR ? (this.status = r.SUCCESSOR, !0) : !1;
        };
        r.Util.fixDateNode = function(t, e, i) {
            var s, n, a, o, l, u, f, h, d, p, m, b, c, g = this.cslXml.getAttributeValue(i, "lingo"), S = this.cslXml.getAttributeValue(i, "default-locale");
            this.build.date_key = !0, s = this.cslXml.getAttributeValue(i, "form");
            var g;
            if (S ? g = this.opt["default-locale"][0] : g = this.cslXml.getAttributeValue(i, "lingo"), !this.getDate(s, S)) return t;
            var v = this.cslXml.getAttributeValue(i, "date-parts");
            n = this.cslXml.getAttributeValue(i, "variable"), h = this.cslXml.getAttributeValue(i, "prefix"), d = this.cslXml.getAttributeValue(i, "suffix"), b = this.cslXml.getAttributeValue(i, "display"), c = this.cslXml.getAttributeValue(i, "cslid"), a = this.cslXml.nodeCopy(this.getDate(s, S)), this.cslXml.setAttribute(a, "lingo", this.opt.lang), this.cslXml.setAttribute(a, "form", s), this.cslXml.setAttribute(a, "date-parts", v), this.cslXml.setAttribute(a, "cslid", c), this.cslXml.setAttribute(a, "variable", n), this.cslXml.setAttribute(a, "default-locale", S), h && this.cslXml.setAttribute(a, "prefix", h), d && this.cslXml.setAttribute(a, "suffix", d), b && this.cslXml.setAttribute(a, "display", b), p = this.cslXml.children(a);
            for(var y in p)o = p[y], this.cslXml.nodename(o) === "date-part" && (l = this.cslXml.getAttributeValue(o, "name"), S && this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(a, "date-part", l, "@default-locale", "true"));
            p = this.cslXml.children(i);
            for(var y in p)if (o = p[y], this.cslXml.nodename(o) === "date-part") {
                l = this.cslXml.getAttributeValue(o, "name"), m = this.cslXml.attributes(o);
                for(u in m)u !== "@name" && (g && g !== this.opt.lang && [
                    "@suffix",
                    "@prefix",
                    "@form"
                ].indexOf(u) > -1 || (f = m[u], this.cslXml.setAttributeOnNodeIdentifiedByNameAttribute(a, "date-part", l, u, f)));
            }
            if (this.cslXml.getAttributeValue(i, "date-parts") === "year") this.cslXml.deleteNodeByNameAttribute(a, "month"), this.cslXml.deleteNodeByNameAttribute(a, "day");
            else if (this.cslXml.getAttributeValue(i, "date-parts") === "year-month") this.cslXml.deleteNodeByNameAttribute(a, "day");
            else if (this.cslXml.getAttributeValue(i, "date-parts") === "month-day") {
                for(var _ = this.cslXml.children(a), E = 1, x = this.cslXml.numberofnodes(_); E < x; E++)if (this.cslXml.getAttributeValue(_[E], "name") === "year") {
                    this.cslXml.setAttribute(_[E - 1], "suffix", "");
                    break;
                }
                this.cslXml.deleteNodeByNameAttribute(a, "year");
            }
            return this.cslXml.insertChildNodeAfter(t, i, e, a);
        };
        r.dateMacroAsSortKey = function(t, e) {
            r.dateAsSortKey.call(this, t, e, !0);
        };
        r.dateAsSortKey = function(t, e, i) {
            var s, n, a, o, l, u, f, h, d = this.variables[0], p = "empty";
            if (i && t.tmp.extension && (p = "macro-with-date"), s = e[d], typeof s > "u" && (s = {
                "date-parts": [
                    [
                        0
                    ]
                ]
            }), typeof this.dateparts > "u" && (this.dateparts = [
                "year",
                "month",
                "day"
            ]), s.raw ? s = t.fun.dateparser.parseDateToArray(s.raw) : s["date-parts"] && (s = t.dateParseArray(s)), typeof s > "u" && (s = {}), s.year) for(f = 0, h = r.DATE_PARTS_INTERNAL.length; f < h; f += 1)if (n = r.DATE_PARTS_INTERNAL[f], a = 0, o = n, o.slice(-4) === "_end" && (o = o.slice(0, -4)), s[n] && this.dateparts.indexOf(o) > -1 && (a = s[n]), n.slice(0, 4) === "year") {
                l = r.Util.Dates[o].numeric(t, a);
                var u = "1";
                l[0] === "-" && (u = "0", l = l.slice(1), l = 9999 - parseInt(l, 10)), t.output.append(r.Util.Dates[n.slice(0, 4)].numeric(t, u + l), p);
            } else a = r.Util.Dates[o]["numeric-leading-zeros"](t, a), a || (a = "00"), t.output.append(a, p);
        };
        r.Engine.prototype.dateParseArray = function(t) {
            var e, i, s, n;
            e = {};
            for(i in t)if (i === "date-parts") {
                s = t["date-parts"], s.length > 1 && s[0].length !== s[1].length && r.error("CSL data error: element mismatch in date range input."), n = [
                    "",
                    "_end"
                ];
                for(var a = 0, o = s.length; a < o; a += 1)for(var l = 0, u = r.DATE_PARTS.length; l < u; l += 1)isNaN(parseInt(s[a][l], 10)) ? e[r.DATE_PARTS[l] + n[a]] = void 0 : e[r.DATE_PARTS[l] + n[a]] = parseInt(s[a][l], 10);
            } else t.hasOwnProperty(i) && (i === "literal" && typeof t.literal == "object" && typeof t.literal.part == "string" ? (r.debug("Warning: fixing up weird literal date value"), e.literal = t.literal.part) : e[i] = t[i]);
            return e;
        };
        r.Util.Names = {};
        r.Util.Names.compareNamesets = r.NameOutput.prototype._compareNamesets;
        r.Util.Names.unInitialize = function(t, e) {
            var i, s, n, a, o;
            if (!e) return "";
            for(n = e.split(/(?:\-|\s+)/), a = e.match(/(\-|\s+)/g), o = "", i = 0, s = n.length; i < s; i += 1)o += n[i], i < s - 1 && (o += a[i]);
            return o;
        };
        r.Util.Names.initializeWith = function(t, e, i, s) {
            var n, a, u;
            if (!e) return "";
            if (i || (i = ""), [
                "Lord",
                "Lady"
            ].indexOf(e) > -1 || !e.replace(/^(?:<[^>]+>)*/, "").match(r.STARTSWITH_ROMANESQUE_REGEXP) && !i.match("%s")) return e;
            t.opt["initialize-with-hyphen"] === !1 && (e = e.replace(/\-/g, " ")), e = e.replace(/\s*\-\s*/g, "-").replace(/\s+/g, " "), e = e.replace(/-([a-z])/g, "\u2013$1");
            for(var n = e.length - 2; n > -1; n += -1)e.slice(n, n + 1) === "." && e.slice(n + 1, n + 2) !== " " && (e = e.slice(0, n) + ". " + e.slice(n + 1));
            var f = r.Output.Formatters.nameDoppel.split(e), h = [];
            if (h = [
                f.strings[0]
            ], f.tags.length === 0) {
                var d = h[0].match(/[^\.]+$/);
                d && d[0].length === 1 && d[0] !== d[0].toLowerCase() && (h[0] += ".");
            }
            for(n = 1, a = f.strings.length; n < a; n += 1)h.push(f.tags[n - 1]), h.push(f.strings[n]);
            return s ? u = this.doNormalize(t, h, i) : u = this.doInitialize(t, h, i), u = u.replace(/\u2013([a-z])/g, "-$1"), u;
        };
        r.Util.Names.notag = function(t) {
            return t.replace(/^(?:<[^>]+>)*/, "");
        };
        r.Util.Names.mergetag = function(t, e, i) {
            var s = e.match(/(?:-*<[^>]+>-*)/g);
            if (s) e = s.join("");
            else return i;
            return s = i.match(/^(.*[^\s])*(\s+)$/), s ? (s[1] = s[1] ? s[1] : "", i = s[1] + e + s[2]) : i = i + e, i;
        };
        r.Util.Names.tagonly = function(t, e) {
            var i = e.match(/(?:<[^>]+>)+/);
            return i ? i.join("") : e;
        };
        r.Util.Names.doNormalize = function(t, e, i) {
            var s, n;
            i = i || "";
            var a = [];
            for(s = 0, n = e.length; s < n; s += 1)this.notag(e[s]).length > 1 && this.notag(e[s]).slice(-1) === "." ? (e[s] = e[s].replace(/^(.*)\.(.*)$/, "$1$2"), a.push(!0)) : e[s].length === 1 && e[s].toUpperCase() === e[s] ? a.push(!0) : a.push(!1);
            for(s = 0, n = e.length; s < n; s += 2)a[s] && (s < e.length - 2 && (e[s + 1] = this.tagonly(t, e[s + 1]), a[s + 2] || (e[s + 1] = this.tagonly(t, e[s + 1]) + " "), e[s + 2].length > 1 ? e[s + 1] = i.replace(/\ufeff$/, "") + e[s + 1] : e[s + 1] = this.mergetag(t, e[s + 1], i)), s === e.length - 1 && (e[s] = e[s] + i));
            return e.join("").replace(/[\u0009\u000a\u000b\u000c\u000d\u0020\ufeff\u00a0]+$/, "").replace(/\s*\-\s*/g, "-").replace(/[\u0009\u000a\u000b\u000c\u000d\u0020]+/g, " ");
        };
        r.Util.Names.doInitialize = function(t, e, i) {
            var s, n, a, o, l, u, f;
            for(s = 0, n = e.length; s < n; s += 2)if (f = e[s], !!f) if (a = f.match(r.NAME_INITIAL_REGEXP), !a && !f.match(r.STARTSWITH_ROMANESQUE_REGEXP) && f.length > 1 && i.match("%s") && (a = f.match(/(.)(.*)/)), a && a[2] && a[3] && (a[1] = a[1] + a[2], a[2] = ""), a && a[1].slice(0, 1) === a[1].slice(0, 1).toUpperCase()) {
                var h = "";
                if (a[2]) {
                    var d = "";
                    for(u = a[2].split(""), o = 0, l = u.length; o < l; o += 1){
                        var p = u[o];
                        if (p === p.toUpperCase()) d += p;
                        else break;
                    }
                    d.length < a[2].length && (h = r.toLocaleLowerCase.call(t, d));
                }
                e[s] = a[1] + h, s < n - 1 ? i.match("%s") ? e[s] = i.replace("%s", e[s]) : e[s + 1].indexOf("-") > -1 ? e[s + 1] = this.mergetag(t, e[s + 1].replace("-", ""), i) + "-" : e[s + 1] = this.mergetag(t, e[s + 1], i) : i.match("%s") ? e[s] = i.replace("%s", e[s]) : e.push(i);
            } else f.match(r.ROMANESQUE_REGEXP) && (!a || !a[3]) && (e[s] = " " + f);
            var m = e.join("");
            return m = m.replace(/[\u0009\u000a\u000b\u000c\u000d\u0020\ufeff\u00a0]+$/, "").replace(/\s*\-\s*/g, "-").replace(/[\u0009\u000a\u000b\u000c\u000d\u0020]+/g, " "), m;
        };
        r.Util.Names.getRawName = function(t) {
            var e = [];
            return t.literal ? e.push(t.literal) : (t.given && e.push(t.given), t.family && e.push(t.family)), e.join(" ");
        };
        r.Util.Dates = {};
        r.Util.Dates.year = {};
        r.Util.Dates.year.long = function(t, e) {
            return e || (typeof e == "boolean" ? e = "" : e = 0), e.toString();
        };
        r.Util.Dates.year.imperial = function(t, e, i) {
            var s = "";
            e || (typeof e == "boolean" ? e = "" : e = 0), i = i ? "_end" : "";
            var n = t.tmp.date_object["month" + i];
            for(n = n ? "" + n : "1"; n.length < 2;)n = "0" + n;
            var a = t.tmp.date_object["day" + i];
            for(a = a ? "" + a : "1"; a.length < 2;)a = "0" + a;
            var o = parseInt(e + n + a, 10), l, u;
            if (o >= 18680908 && o < 19120730 ? (l = "\u660E\u6CBB", u = 1867) : o >= 19120730 && o < 19261225 ? (l = "\u5927\u6B63", u = 1911) : o >= 19261225 && o < 19890108 ? (l = "\u662D\u548C", u = 1925) : o >= 19890108 && (l = "\u5E73\u6210", u = 1988), l && u) {
                var f = l;
                t.sys.normalizeAbbrevsKey && (f = t.sys.normalizeAbbrevsKey("number", l)), t.transform.abbrevs.default.number[f] || t.transform.loadAbbreviation("default", "number", f, null), t.transform.abbrevs.default.number[f] && (l = t.transform.abbrevs.default.number[f]), s = l + (e - u);
            }
            return s;
        };
        r.Util.Dates.year.short = function(t, e) {
            if (e = e.toString(), e && e.length === 4) return e.substr(2);
        };
        r.Util.Dates.year.numeric = function(t, e) {
            var s, i;
            e = "" + e;
            var s = e.match(/([0-9]*)$/);
            for(s ? (i = e.slice(0, s[1].length * -1), e = s[1]) : (i = e, e = ""); e.length < 4;)e = "0" + e;
            return i + e;
        };
        r.Util.Dates.normalizeMonth = function(t, e) {
            var i;
            if (t || (t = 0), t = "" + t, t.match(/^[0-9]+$/) || (t = 0), t = parseInt(t, 10), e) {
                var s = {
                    stub: "month-",
                    num: t
                };
                if (s.num < 1 || s.num > 24) s.num = 0;
                else {
                    for(; s.num > 16;)s.num = s.num - 4;
                    s.num > 12 && (s.stub = "season-", s.num = s.num - 12);
                }
                i = s;
            } else (t < 1 || t > 12) && (t = 0), i = t;
            return i;
        };
        r.Util.Dates.month = {};
        r.Util.Dates.month.numeric = function(t, i) {
            var i = r.Util.Dates.normalizeMonth(i);
            return i || (i = ""), i;
        };
        r.Util.Dates.month["numeric-leading-zeros"] = function(t, i) {
            var i = r.Util.Dates.normalizeMonth(i);
            if (!i) i = "";
            else for(i = "" + i; i.length < 2;)i = "0" + i;
            return i;
        };
        r.Util.Dates.month.long = function(t, a, i, s) {
            var n = r.Util.Dates.normalizeMonth(a, !0), a = n.num;
            if (!a) a = "";
            else {
                for(a = "" + a; a.length < 2;)a = "0" + a;
                a = t.getTerm(n.stub + a, "long", 0, 0, !1, s);
            }
            return a;
        };
        r.Util.Dates.month.short = function(t, a, i, s) {
            var n = r.Util.Dates.normalizeMonth(a, !0), a = n.num;
            if (!a) a = "";
            else {
                for(a = "" + a; a.length < 2;)a = "0" + a;
                a = t.getTerm(n.stub + a, "short", 0, 0, !1, s);
            }
            return a;
        };
        r.Util.Dates.day = {};
        r.Util.Dates.day.numeric = function(t, e) {
            return e.toString();
        };
        r.Util.Dates.day.long = r.Util.Dates.day.numeric;
        r.Util.Dates.day["numeric-leading-zeros"] = function(t, e) {
            for(e || (e = 0), e = e.toString(); e.length < 2;)e = "0" + e;
            return e.toString();
        };
        r.Util.Dates.day.ordinal = function(t, e, i) {
            return t.fun.ordinalizer.format(e, i);
        };
        r.Util.Sort = {};
        r.Util.Sort.strip_prepositions = function(t) {
            var e;
            return typeof t == "string" && (e = t.match(/^(([aA]|[aA][nN]|[tT][hH][eE])\s+)/)), e && (t = t.substr(e[1].length)), t;
        };
        r.Util.substituteStart = function(t, e) {
            var i, s, n, a, o, l, u;
            a = function(f, h, d) {
                for(var p = 0, m = this.decorations.length; p < m; p += 1)if (this.decorations[p][0] === "@strip-periods" && this.decorations[p][1] === "true") {
                    f.tmp.strip_periods += 1;
                    break;
                }
            }, this.execs.push(a), this.decorations && t.opt.development_extensions.csl_reverse_lookup_support && (this.decorations.reverse(), this.decorations.push([
                "@showid",
                "true",
                this.cslid
            ]), this.decorations.reverse()), u = [
                "number",
                "date",
                "names"
            ], (this.name === "text" && !this.postponed_macro || u.indexOf(this.name) > -1) && (i = function(f, h, d) {
                f.tmp.element_trace.value() === "author" || this.name === "names" ? (!f.tmp.just_looking && d && d["author-only"] && f.tmp.area !== "intext" && f.tmp.probably_rendered_something && f.tmp.element_trace.push("suppress-me"), !f.tmp.just_looking && d && d["suppress-author"] && (f.tmp.probably_rendered_something || f.tmp.element_trace.push("suppress-me"))) : this.name === "date" ? !f.tmp.just_looking && d && d["author-only"] && f.tmp.area !== "intext" && f.tmp.probably_rendered_something && f.tmp.element_trace.push("suppress-me") : !f.tmp.just_looking && d && d["author-only"] && f.tmp.area !== "intext" ? !f.tmp.probably_rendered_something && f.tmp.can_block_substitute || f.tmp.element_trace.push("suppress-me") : d && d["suppress-author"] && f.tmp.element_trace.push("do-not-suppress-me");
            }, this.execs.push(i)), s = this.strings.cls, this.strings.cls = !1, t.build.render_nesting_level === 0 && (t.build.area === "bibliography" && t.bibliography.opt["second-field-align"] ? (n = new r.Token("group", r.START), n.decorations = [
                [
                    "@display",
                    "left-margin"
                ]
            ], a = function(f, h) {
                f.tmp.render_seen || (n.strings.first_blob = h.id, f.output.startTag("bib_first", n));
            }, n.execs.push(a), e.push(n)) : r.DISPLAY_CLASSES.indexOf(s) > -1 && (n = new r.Token("group", r.START), n.decorations = [
                [
                    "@display",
                    s
                ]
            ], a = function(f, h) {
                n.strings.first_blob = h.id, f.output.startTag("bib_first", n);
            }, n.execs.push(a), e.push(n)), t.build.cls = s), t.build.render_nesting_level += 1, t.build.substitute_level.value() === 1 && (o = new r.Token("choose", r.START), r.Node.choose.build.call(o, t, e), l = new r.Token("if", r.START), a = function() {
                return !!t.tmp.can_substitute.value();
            }, l.tests || (l.tests = []), l.tests.push(a), l.test = t.fun.match.any(this, t, l.tests), e.push(l)), t.sys.variableWrapper && this.variables_real && this.variables_real.length && (a = function(f, h, d) {
                if (!f.tmp.just_looking && !f.tmp.suppress_decorations) {
                    var p = new r.Token("text", r.START);
                    p.decorations = [
                        [
                            "@showid",
                            "true"
                        ]
                    ], f.output.startTag("variable_entry", p);
                    var m = null;
                    d && (m = d.position), m || (m = 0);
                    var b = [
                        "first",
                        "container-subsequent",
                        "subsequent",
                        "ibid",
                        "ibid-with-locator"
                    ], c = 0;
                    d && d.noteIndex && (c = d.noteIndex);
                    var S = 0;
                    d && d["first-reference-note-number"] && (S = d["first-reference-note-number"]);
                    var g = 0;
                    d && d["first-container-reference-note-number"] && (g = d["first-container-reference-note-number"]);
                    var v = 0;
                    d && d["citation-number"] && (v = d["citation-number"]);
                    var y = 0;
                    d && d.index && (y = d.index);
                    var _ = {
                        itemData: h,
                        variableNames: this.variables,
                        context: f.tmp.area,
                        xclass: f.opt.xclass,
                        position: b[m],
                        "note-number": c,
                        "first-reference-note-number": S,
                        "first-container-reference-note-number": g,
                        "citation-number": v,
                        index: y,
                        mode: f.opt.mode
                    };
                    f.output.current.value().params = _;
                }
            }, this.execs.push(a));
        };
        r.Util.substituteEnd = function(t, e) {
            var i, s, n, a, o, l, u;
            if (t.sys.variableWrapper && (this.hasVariable || this.variables_real && this.variables_real.length) && (i = function(h) {
                !h.tmp.just_looking && !h.tmp.suppress_decorations && h.output.endTag("variable_entry");
            }, this.execs.push(i)), i = function(h) {
                for(var d = 0, p = this.decorations.length; d < p; d += 1)if (this.decorations[d][0] === "@strip-periods" && this.decorations[d][1] === "true") {
                    h.tmp.strip_periods += -1;
                    break;
                }
            }, this.execs.push(i), t.build.render_nesting_level += -1, t.build.render_nesting_level === 0 && (t.build.cls ? (i = function(h) {
                h.output.endTag("bib_first");
            }, this.execs.push(i), t.build.cls = !1) : t.build.area === "bibliography" && t.bibliography.opt["second-field-align"] && (s = new r.Token("group", r.END), i = function(h) {
                h.tmp.render_seen || h.output.endTag("bib_first");
            }, s.execs.push(i), e.push(s), n = new r.Token("group", r.START), n.decorations = [
                [
                    "@display",
                    "right-inline"
                ]
            ], i = function(h) {
                h.tmp.render_seen || (h.tmp.render_seen = !0, h.output.startTag("bib_other", n));
            }, n.execs.push(i), e.push(n))), t.build.substitute_level.value() === 1 && (a = new r.Token("if", r.END), e.push(a), o = new r.Token("choose", r.END), r.Node.choose.build.call(o, t, e)), this.name === "names" || this.name === "text" && this.variables_real !== "title") {
                l = new r.Token("text", r.SINGLETON);
                var f = this.name;
                i = function(h, d) {
                    if (h.tmp.area === "bibliography" && typeof h.bibliography.opt["subsequent-author-substitute"] == "string" && !(this.variables_real && !d[this.variables_real]) && !(this.variables_real && f === "names")) {
                        var p = h.bibliography.opt["subsequent-author-substitute-rule"], m, b, c = !h.tmp.suppress_decorations;
                        if (c && h.tmp.subsequent_author_substitute_ok && h.tmp.rendered_name) {
                            if (p === "partial-each" || p === "partial-first") {
                                var S = !0, g = [];
                                for(m = 0, b = h.tmp.name_node.children.length; m < b; m += 1){
                                    var v = h.tmp.rendered_name[m];
                                    S && h.tmp.last_rendered_name && h.tmp.last_rendered_name.length > m - 1 && v && !v.localeCompare(h.tmp.last_rendered_name[m]) ? (u = new r.Blob(h[h.tmp.area].opt["subsequent-author-substitute"]), h.tmp.name_node.children[m].blobs = [
                                        u
                                    ], p === "partial-first" && (S = !1)) : S = !1, g.push(v);
                                }
                                h.tmp.last_rendered_name = g;
                            } else if (p === "complete-each") {
                                var g = h.tmp.rendered_name.join(",");
                                if (g) {
                                    if (h.tmp.last_rendered_name && !g.localeCompare(h.tmp.last_rendered_name)) for(m = 0, b = h.tmp.name_node.children.length; m < b; m += 1)u = new r.Blob(h[h.tmp.area].opt["subsequent-author-substitute"]), h.tmp.name_node.children[m].blobs = [
                                        u
                                    ];
                                    h.tmp.last_rendered_name = g;
                                }
                            } else {
                                var g = h.tmp.rendered_name.join(",");
                                g && (h.tmp.last_rendered_name && !g.localeCompare(h.tmp.last_rendered_name) && (u = new r.Blob(h[h.tmp.area].opt["subsequent-author-substitute"]), h.tmp.label_blob ? h.tmp.name_node.top.blobs = [
                                    u,
                                    h.tmp.label_blob
                                ] : h.tmp.name_node.top.blobs.length ? h.tmp.name_node.top.blobs[0].blobs = [
                                    u
                                ] : h.tmp.name_node.top.blobs = [
                                    u
                                ], h.tmp.substituted_variable = f), h.tmp.last_rendered_name = g);
                            }
                            h.tmp.subsequent_author_substitute_ok = !1;
                        }
                    }
                }, this.execs.push(i);
            }
            (this.name === "text" && !this.postponed_macro || [
                "number",
                "date",
                "names"
            ].indexOf(this.name) > -1) && (i = function(h, d) {
                h.tmp.element_trace.mystack.length > 1 && h.tmp.element_trace.pop();
            }, this.execs.push(i));
        };
        r.Util.padding = function(t) {
            var e = t.match(/\s*(-{0,1}[0-9]+)/);
            if (e) for(t = parseInt(e[1], 10), t < 0 && (t = 1e20 + t), t = "" + t; t.length < 20;)t = "0" + t;
            return t;
        };
        r.Util.LongOrdinalizer = function() {};
        r.Util.LongOrdinalizer.prototype.init = function(t) {
            this.state = t;
        };
        r.Util.LongOrdinalizer.prototype.format = function(t, e) {
            t < 10 && (t = "0" + t);
            var i = r.Engine.getField(r.LOOSE, this.state.locale[this.state.opt.lang].terms, "long-ordinal-" + t, "long", 0, e);
            return i || (i = this.state.fun.ordinalizer.format(t, e)), this.state.tmp.cite_renders_content = !0, i;
        };
        r.Util.Ordinalizer = function(t) {
            this.state = t, this.suffixes = {};
        };
        r.Util.Ordinalizer.prototype.init = function() {
            if (!this.suffixes[this.state.opt.lang]) {
                this.suffixes[this.state.opt.lang] = {};
                for(var t = 0, e = 3; t < e; t += 1){
                    var i = [
                        void 0,
                        "masculine",
                        "feminine"
                    ][t];
                    this.suffixes[this.state.opt.lang][i] = [];
                    for(var s = 1; s < 5; s += 1){
                        var n = this.state.getTerm("ordinal-0" + s, "long", !1, i);
                        if (typeof n > "u") {
                            delete this.suffixes[this.state.opt.lang][i];
                            break;
                        }
                        this.suffixes[this.state.opt.lang][i].push(n);
                    }
                }
            }
        };
        r.Util.Ordinalizer.prototype.format = function(t, e) {
            var i;
            t = parseInt(t, 10), i = "" + t;
            var s = "", n = [];
            if (e && n.push(e), n.push("neuter"), this.state.locale[this.state.opt.lang].ord["1.0.1"]) {
                s = this.state.getTerm("ordinal", !1, 0, e);
                for(var a, o = 0, l = n.length; o < l; o += 1){
                    a = n[o];
                    var u = this.state.locale[this.state.opt.lang].ord["1.0.1"];
                    if (u["whole-number"][i] && u["whole-number"][i][a] ? s = this.state.getTerm(this.state.locale[this.state.opt.lang].ord["1.0.1"]["whole-number"][i][a], !1, 0, e) : u["last-two-digits"][i.slice(i.length - 2)] && u["last-two-digits"][i.slice(i.length - 2)][a] ? s = this.state.getTerm(this.state.locale[this.state.opt.lang].ord["1.0.1"]["last-two-digits"][i.slice(i.length - 2)][a], !1, 0, e) : u["last-digit"][i.slice(i.length - 1)] && u["last-digit"][i.slice(i.length - 1)][a] && (s = this.state.getTerm(this.state.locale[this.state.opt.lang].ord["1.0.1"]["last-digit"][i.slice(i.length - 1)][a], !1, 0, e)), s) break;
                }
            } else e || (e = void 0), this.state.fun.ordinalizer.init(), t / 10 % 10 === 1 || t > 10 && t < 20 ? s = this.suffixes[this.state.opt.lang][e][3] : t % 10 === 1 && t % 100 !== 11 ? s = this.suffixes[this.state.opt.lang][e][0] : t % 10 === 2 && t % 100 !== 12 ? s = this.suffixes[this.state.opt.lang][e][1] : t % 10 === 3 && t % 100 !== 13 ? s = this.suffixes[this.state.opt.lang][e][2] : s = this.suffixes[this.state.opt.lang][e][3];
            return i = i += s, i;
        };
        r.Util.Romanizer = function() {};
        r.Util.Romanizer.prototype.format = function(t) {
            var e, i, s, n, a;
            if (e = "", t < 6e3) for(n = t.toString().split(""), n.reverse(), i = 0, s = 0, a = n.length, i = 0; i < a; i += 1)s = parseInt(n[i], 10), e = r.ROMAN_NUMERALS[i][s] + e;
            return e;
        };
        r.Util.Suffixator = function(t) {
            t || (t = r.SUFFIX_CHARS), this.slist = t.split(",");
        };
        r.Util.Suffixator.prototype.format = function(t) {
            var e;
            t += 1;
            var i = "";
            do {
                e = t % 26 === 0 ? 26 : t % 26;
                var i = this.slist[e - 1] + i;
                t = (t - e) / 26;
            }while (t !== 0)
            return i;
        };
        r.Engine.prototype.processNumber = function(t, e, i) {
            var s, n = this, a = i;
            i = i === "page-first" ? "page" : i;
            var o = ",\\s+and\\s+|\\s+and\\s+";
            this.opt.lang.slice(0, 2) !== "en" && (o += "|,\\s+" + this.getTerm("and") + "\\s+|\\s+" + this.getTerm("and") + "\\s+");
            var l = "\\s*&\\s*", u = new RegExp("^" + l + "$"), f = new RegExp("(" + l + "|" + o + "|;\\s+|,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*)", "g"), h = new RegExp("(?:" + l + "|" + o + "|;\\s+|,\\s+|\\s*\\\\*[\\-\\u2013]+\\s*)"), d = this.getTerm("and"), p = this.getTerm("and", "symbol");
            d === p && (p = "&");
            function m(R) {
                R = R.trim();
                var w = R.match(/^([^ ]+)/);
                if (w && !r.STATUTE_SUBDIV_STRINGS[w[1]]) {
                    var L = null;
                    [
                        "locator",
                        "locator-extra",
                        "page"
                    ].indexOf(i) > -1 ? e.label ? L = r.STATUTE_SUBDIV_STRINGS_REVERSE[e.label] : L = "p." : L = r.STATUTE_SUBDIV_STRINGS_REVERSE[i], L && (R = L + " " + R);
                }
                return R;
            }
            function b(R, w, L, z, B) {
                z = z || "";
                var q = {};
                if (!w && !r.STATUTE_SUBDIV_STRINGS_REVERSE[i] && (w = "var:" + i), w) {
                    var G = w.match(/(\s*)([^\s]+)(\s*)/);
                    a === "page" && B === 0 && [
                        "p.",
                        "pp."
                    ].indexOf(G[2]) === -1 ? (q.gotosleepability = !0, q.labelVisibility = !0) : q.labelVisibility = !1, q.label = G[2], q.origLabel = R, q.labelSuffix = G[3] ? G[3] : "", q.plural = 0;
                }
                var G = L.match(/^([0-9]*[a-zA-Z]+0*)?([0-9]+(?:[a-zA-Z]*|[-,a-zA-Z]+))$/);
                return G ? (q.particle = G[1] ? G[1] : "", q.value = G[2]) : (q.particle = "", q.value = L), q.joiningSuffix = z.replace(/\s*-\s*/, "-"), q;
            }
            function c(R) {
                for(var w = R.length - 2; w > -1; w -= 2)R[w] === "-" && R[w - 1].match(/^(?:(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z])\.  *)*[0-9]+[,a-zA-Z]+$/) && R[w + 1].match(/^[,a-zA-Z]+$/) && (R[w - 1] = R.slice(w - 1, w + 2).join(""), R = R.slice(0, w).concat(R.slice(w + 2)));
                return R;
            }
            function S(R, w) {
                w = w || "", R = m(R, w);
                var L, z, B;
                if (i === "page" && R.indexOf("\u2013") > -1 && (R = R.replace(/\u2013/g, "-")), R.indexOf("\\-") > -1) {
                    L = new RegExp(f.source.replace("\\-", "")), z = new RegExp(h.source.replace("\\-", ""));
                    for(var q = R.split("\\-"), G = 0, V = q.length; G < V; G++)q[G] = q[G].replace(/\-/g, "\u2013");
                    B = q.join("\\-"), B = B.replace(/\\/g, "");
                } else L = f, z = h, B = R;
                var $ = [], J = B.match(L);
                if (J) {
                    for(var q = B.split(z), G = 0, V = J.length; G < V; G++)J[G].match(u) && (q[G].match(/[a-zA-Z]$/) && q[G].match(/^[a-zA-Z]/) ? J[G] = p : J[G] = " " + p + " ");
                    var Y = !1;
                    for(var G in q)if (("" + q[G]).replace(/^[a-z]\.\s+/, "").match(/[^\s0-9ivxlcmIVXLCM]/)) break;
                    if (Y) $ = [
                        B
                    ];
                    else {
                        for(var G = 0, V = q.length - 1; G < V; G++)$.push(q[G]), $.push(J[G]);
                        $.push(q[q.length - 1]), $ = c($);
                    }
                } else var $ = [
                    B
                ];
                for(var Q = [], W = w, tt = "", G = 0, V = $.length; G < V; G += 2){
                    var J = $[G].match(/((?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z]|subpara|subch|amend|bibliog|annot|illus|princ|intro|sched|subdiv|subsec)(?:\.| ) *)/g);
                    if (J) {
                        for(var q = $[G].split(/(?:(?:^| )(?:[a-z]|[a-z][a-z]|[a-z][a-z][a-z]|[a-z][a-z][a-z][a-z]|subpara|subch|amend|bibliog|annot|illus|princ|intro|sched|subdiv|subsec)(?:\.| ) *)/), H = q.length - 1; H > 0; H--)q[H - 1] && (!q[H].match(/^[0-9]+([-;,:a-zA-Z]*)$/) || !q[H - 1].match(/^[0-9]+([-;,:a-zA-Z]*)$/)) && (q[H - 1] = q[H - 1] + J[H - 1] + q[H], q = q.slice(0, H).concat(q.slice(H + 1)), J = J.slice(0, H - 1).concat(J.slice(H)));
                        if (J.length > 0) {
                            var et = J[0].trim(), rt = !r.STATUTE_SUBDIV_STRINGS[et] || typeof n.getTerm(r.STATUTE_SUBDIV_STRINGS[et]) > "u" || [
                                "locator",
                                "number",
                                "locator-extra",
                                "page"
                            ].indexOf(i) === -1 && r.STATUTE_SUBDIV_STRINGS[et] !== i;
                            rt ? G === 0 && (J = J.slice(1), q[0] = q[0] + " " + et + " " + q[1], q = q.slice(0, 1).concat(q.slice(2))) : tt = et;
                        }
                        for(var H = 0, K = q.length; H < K; H++)if (q[H] || H === q.length - 1) {
                            var it;
                            W = J[H - 1] ? J[H - 1] : W, tt === W.trim() ? it = "" : it = tt, B = q[H] ? q[H].trim() : "", H === q.length - 1 ? Q.push(b(it, W, B, $[G + 1], G)) : Q.push(b(it, W, B, null, G));
                        }
                    } else {
                        var it;
                        tt === W.trim() ? it = "" : it = tt, Q.push(b(it, W, $[G], $[G + 1]));
                    }
                }
                return Q;
            }
            function g(R) {
                for(var w = 0, L = R.length - 1; w < L; w++)!R[w].joiningSuffix && R[w + 1].label && (R[w].joiningSuffix = " ");
            }
            function v(R, w, L) {
                var z = R[L.pos], B = R[w].value, q = z.joiningSuffix === "\\-";
                B.particle && B.particle !== z.particle && (L.collapsible = !1);
                var G = B.match(/^[0-9]+([-,:a-zA-Z]*)$/), V = z.value.match(/^(?:[0-9]+|[ixv]+)([-,:a-zA-Z]*|\-[\-0-9]+)$/);
                if ((!B || !G || !V || q) && (L.collapsible = !1, (!B || !V) && (L.numeric = !1), q && L.count--), (G && G[1] || V && V[1]) && (L.collapsible = !1), R[w].collapsible === void 0) {
                    for(var $ = w, J = w + L.count; $ < J; $++)isNaN(parseInt(R[$].value)) && !R[$].value.match(/^[ivxlcmIVXLCM]+$/) ? R[$].collapsible = !1 : R[$].collapsible = !0;
                    L.collapsible = R[w].collapsible;
                }
                for(var Y = L.collapsible, $ = L.pos, J = L.pos + L.count; $ < J; $++)L.count > 1 && Y && (R[$].plural = 1), R[$].numeric = L.numeric, R[$].collapsible = L.collapsible;
            }
            function y(R, w, L) {
                L.label.slice(0, 4) !== "var:" && (L.pos === 0 ? ([
                    "locator",
                    "number",
                    "locator-extra",
                    "page"
                ].indexOf(i) > -1 && typeof n.getTerm(r.STATUTE_SUBDIV_STRINGS[L.label]) > "u" && (R[L.pos].labelVisibility = !0), [
                    "locator",
                    "number",
                    "locator-extra",
                    "page"
                ].indexOf(i) === -1 && r.STATUTE_SUBDIV_STRINGS[L.label] !== i && (R[0].labelVisibility = !0)) : R[L.pos].labelVisibility = !0);
            }
            function _(R) {
                if (R.length !== 0) {
                    for(var w = 0, L = 1, z = 1, B = R.length; z < B; z++){
                        var q = R[z - 1], G = R[z];
                        if (q.label === G.label && q.particle === q.particle) L++;
                        else {
                            var V = JSON.parse(JSON.stringify(R[w]));
                            V.pos = w, V.count = L, V.numeric = !0, v(R, w, V), q.label !== G.label && y(R, w, V), w = z, L = 1;
                        }
                    }
                    var V = JSON.parse(JSON.stringify(R[w]));
                    V.pos = w, V.count = L, V.numeric = !0, v(R, w, V), y(R, w, V), R.length && R[0].numeric && i.slice(0, 10) === "number-of-" && parseInt(e[a], 10) > 1 && (R[0].plural = 1);
                }
            }
            function E(R) {
                return R.replace("\\-", "-");
            }
            function x(R) {
                var w = r.Util.cloneToken(t), L = new r.Token;
                n.tmp.just_looking || (L.decorations = w.decorations, w.decorations = [], L.strings.prefix = w.strings.prefix, w.strings.prefix = "", L.strings.suffix = w.strings.suffix, w.strings.suffix = "");
                var z = R.length ? R[0].label : null;
                if (R.length) {
                    for(var B = 0, q = R.length; B < q; B++){
                        var G = R[B], V = r.Util.cloneToken(w);
                        V.gender = t.gender, z === G.label && (V.formatter = t.formatter), G.numeric && (V.successor_prefix = G.successor_prefix), V.strings.suffix = V.strings.suffix + E(G.joiningSuffix), G.styling = V;
                    }
                    n.tmp.just_looking || R[0].value.slice(0, 1) === '"' && R[R.length - 1].value.slice(-1) === '"' && (R[0].value = R[0].value.slice(1), R[R.length - 1].value = R[R.length - 1].value.slice(0, -1), L.decorations.push([
                        "@quotes",
                        !0
                    ]));
                }
                return L;
            }
            function k(R, w) {
                var L = !0;
                if ([
                    "locator",
                    "locator-extra",
                    "page"
                ].indexOf(R) > -1) {
                    var z;
                    w.origLabel ? z = w.origLabel : z = w.label, L = !!n.getTerm(r.STATUTE_SUBDIV_STRINGS[z]);
                }
                return L;
            }
            function O(R, w) {
                return R === "page" || [
                    "locator",
                    "locator-extra"
                ].indexOf(R) > -1 && ([
                    "p."
                ].indexOf(w.label) > -1 || [
                    "p."
                ].indexOf(w.origLabel) > -1);
            }
            function A(R, w, L, z) {
                var B = O(R, w), q = k(R, w);
                return q && L === "-" && z && ((B || [
                    "locator",
                    "locator-extra",
                    "issue",
                    "volume",
                    "edition",
                    "number"
                ].indexOf(R) > -1) && (L = n.getTerm("page-range-delimiter"), L || (L = "\u2013")), R === "collection-number" && (L = n.getTerm("year-range-delimiter"), L || (L = "\u2013"))), L;
            }
            function N(R, w, L) {
                if (!(w < 1) && L.count === 2 && R[w - 1].particle === R[w].particle) {
                    if (R[w - 1].joiningSuffix !== "-") {
                        L.count = 1;
                        return;
                    }
                    if (!n.opt["page-range-format"] && parseInt(R[w - 1].value, 10) > parseInt(R[w].value, 10)) {
                        R[w - 1].joiningSuffix = A(i, R[w], R[w - 1].joiningSuffix, !0);
                        return;
                    }
                    var z = R[w], B = O(i, z), q;
                    B && !isNaN(parseInt(R[w - 1].value)) && !isNaN(parseInt(R[w].value)) ? (q = R[w - 1].particle + R[w - 1].value + " - " + R[w].particle + R[w].value, q = n.fun.page_mangler(q)) : (("" + R[w - 1].value).match(/^([0-9]+|[ivxlcmIVXLCM]+)$/) && ("" + R[w].value).match(/^([0-9]+|[ivxlcmIVXLCM]+)$/) && (R[w - 1].joiningSuffix = n.getTerm("page-range-delimiter")), q = R[w - 1].value + E(R[w - 1].joiningSuffix) + R[w].value);
                    var G = q.match(/^((?:[0-9]*[a-zA-Z]+0*))?([0-9]+[a-z]*)(\s*[^0-9]+\s*)([-,a-zA-Z]?0*)([0-9]+[a-z]*)$/);
                    if (G) {
                        var V = G[3];
                        V = A(i, z, V, R[w].numeric), R[w - 1].particle = G[1], R[w - 1].value = G[2], R[w - 1].joiningSuffix = V, R[w].particle = G[4], R[w].value = G[5];
                    }
                    L.count = 0;
                }
            }
            function T(R) {
                if (t && [
                    "page",
                    "chapter-number",
                    "collection-number",
                    "edition",
                    "issue",
                    "number",
                    "number-of-pages",
                    "number-of-volumes",
                    "volume",
                    "locator",
                    "locator-extra"
                ].indexOf(i) !== -1) {
                    for(var w = {
                        count: 0,
                        label: null,
                        lastHadRangeDelimiter: !1
                    }, L = 0, z = R.length; L < z; L++){
                        var B = R[L];
                        if (B.collapsible) w.label === B.label && B.joiningSuffix === "-" ? w.count = 1 : w.label === B.label && B.joiningSuffix !== "-" ? (w.count++, w.count === 2 && N(R, L, w)) : w.label !== B.label ? (w.label = B.label, w.count = 1) : (w.count = 1, w.label = B.label);
                        else {
                            w.count = 0, w.label = null;
                            var q = B.numeric;
                            B.joiningSuffix = A(i, B, B.joiningSuffix, q);
                        }
                    }
                    w.count === 2 && N(R, R.length - 1, w);
                }
            }
            function D(R, w, L) {
                var z = R[w];
                L.length && (z.numeric = L[0].numeric, z.collapsible = L[0].collapsible, z.plural = L[0].plural, z.label = r.STATUTE_SUBDIV_STRINGS[L[0].label], i === "number" && z.label === "issue" && n.getTerm("number") && (z.label = "number"));
            }
            if (t && this.tmp.shadow_numbers[a] && this.tmp.shadow_numbers[a].values.length) {
                var C = this.tmp.shadow_numbers[a].values;
                T(C), this.tmp.shadow_numbers[a].masterStyling = x(C);
                return;
            }
            if (this.tmp.shadow_numbers[a] || (this.tmp.shadow_numbers[a] = {
                values: []
            }), !!e) {
                var I = r.LangPrefsMap[i];
                if (I) {
                    var P = this.opt["cite-lang-prefs"][I][0];
                    s = this.transform.getTextSubField(e, a, "locale-" + P, !0), s = s.name;
                } else s = e[a];
                if (s && a === "number" && e.type === "legal_case" && (s = s.replace(/[\\]*-/g, "\\-")), s && this.sys.getAbbreviation) {
                    if (this.sys.normalizeAbbrevsKey) var M = this.sys.normalizeAbbrevsKey(a, s);
                    else var M = s;
                    var F = this.transform.loadAbbreviation(e.jurisdiction, "number", M, e.language);
                    this.transform.abbrevs[F].number && (this.transform.abbrevs[F].number[M] ? s = this.transform.abbrevs[F].number[M] : typeof this.transform.abbrevs[F].number[M] < "u" && delete this.transform.abbrevs[F].number[M]);
                }
                if (typeof s < "u" && (typeof s == "string" || typeof s == "number")) {
                    typeof s == "number" && (s = "" + s);
                    var U = r.STATUTE_SUBDIV_STRINGS_REVERSE[i];
                    if (this.tmp.shadow_numbers[a].values.length === 0) {
                        var C = S(s, U);
                        g(C), _(C);
                        for (var j of C)j.numeric || (j.plural = 0);
                        this.tmp.shadow_numbers[a].values = C, t && (T(C), this.tmp.shadow_numbers[a].masterStyling = x(C)), D(this.tmp.shadow_numbers, a, C);
                    }
                    var X = this.tmp.shadow_numbers[a];
                    i === "number" && X.values.length === 1 && X.values[0].value.indexOf("|") > -1 && (X.values[0].value = X.values[0].value.replace(/\|/g, ", "), X.values[0].numeric = !0, X.values[0].plural = 1, X.values[0].collapsible = !1, X.numeric = !0, X.plural = 1, X.collapsible = !1), X.values.length === 1 && X.values[0].value.match(/^[0-9]+(?:\/[0-9]+)+$/) && (X.values[0].numeric = !0, X.values[0].plural = 0, X.values[0].collapsible = !1, X.numeric = !0, X.plural = 0, X.collapsible = !1), i === "page" && X.values.length > 0 && X.values[0].gotosleepability && (X.labelForm = "short");
                }
            }
        };
        r.Util.outputNumericField = function(t, e, i) {
            t.output.openLevel(t.tmp.shadow_numbers[e].masterStyling);
            var s = t.tmp.shadow_numbers[e].masterStyling, n = t.tmp.shadow_numbers[e].values, a = n.length ? n[0].label : null, o = t.tmp.shadow_numbers[e].labelForm, l = t.tmp.group_context.tip.label_static, u;
            o ? u = o : u = "short";
            for(var f = t.tmp.shadow_numbers[e].labelCapitalizeIfFirst, h = t.tmp.shadow_numbers[e].labelDecorations, d = null, p = 0, m = n.length; p < m; p++){
                var b = n[p], c = "", S;
                b.label && (b.label.slice(0, 4) === "var:" ? S = b.label.slice(4) : S = r.STATUTE_SUBDIV_STRINGS[b.label], S && (b.label === a ? (l && (c = t.getTerm(S, "static", b.plural), c.indexOf("%s") === -1 && (c = "")), c || (c = t.getTerm(S, o, b.plural))) : (l && (c = t.getTerm(S, "static", b.plural), c.indexOf("%s") === -1 && (c = "")), c || (c = t.getTerm(S, u, b.plural))), f && (c = r.Output.Formatters["capitalize-first"](t, c))));
                var g = -1;
                c && (g = c.indexOf("%s"));
                var v = r.Util.cloneToken(b.styling);
                if (v.formatter = b.styling.formatter, v.type = b.styling.type, v.num = b.styling.num, v.gender = b.styling.gender, g > 0 && g < c.length - 2) v.strings.prefix += c.slice(0, g), v.strings.suffix = c.slice(g + 2) + v.strings.suffix;
                else if (b.labelVisibility) if (c || (c = b.label, S = b.label), g > 0) {
                    var y = new r.Token;
                    y.decorations = h, t.output.append(c.slice(0, g), y);
                } else (g === c.length - 2 || g === -1) && t.output.append(c + b.labelSuffix, "empty");
                if (r.UPDATE_GROUP_CONTEXT_CONDITION(t, s.strings.prefix, null, s, `${b.particle}${b.value}`), b.collapsible) {
                    var _;
                    b.value.match(/^[1-9][0-9]*$/) && Number.isSafeInteger(parseInt(b.value, 10)) ? _ = new r.NumericBlob(t, b.particle, parseInt(b.value, 10), v, i) : _ = new r.NumericBlob(t, b.particle, b.value, v, i), typeof _.gender > "u" && (_.gender = t.locale[t.opt.lang]["noun-genders"][e]), t.output.append(_, "literal");
                } else t.output.append(b.particle + b.value, v);
                if (g === 0 && g < c.length - 2 && (d === null && (d = S), S !== d || p === n.length - 1)) {
                    var E = new r.Token;
                    E.decorations = h, t.output.append(c.slice(g + 2), E);
                }
                d = S, t.tmp.term_predecessor = !0;
            }
            t.output.closeLevel();
        };
        r.Util.PageRangeMangler = {};
        r.Util.PageRangeMangler.getFunction = function(t, e) {
            var i, s, n, a, o, l, u, f, h, d, p, m, b, c, S, g, v, y, _ = t.getTerm(e + "-range-delimiter");
            i = /([0-9]*[a-zA-Z]+0*)?([0-9]+[a-z]*)\s*(?:\u2013|-)\s*([0-9]*[a-zA-Z]+0*)?([0-9]+[a-z]*)/, a = function(x) {
                for(n = x.length, s = 1; s < n; s += 2)typeof x[s] == "object" && (x[s] = x[s].join(""));
                var k = x.join("");
                return k = k.replace(/([^\\])\-/g, "$1" + t.getTerm(e + "-range-delimiter")), k;
            }, o = function(x) {
                var k, O, A, N = "\\s+\\-\\s+", T = _ === "-" ? "" : _, D = new RegExp("([^\\\\])[-" + T + "\\u2013]", "g");
                x = x.replace(D, "$1 - ").replace(/\s+-\s+/g, " - ");
                var C = new RegExp("((?:[0-9]*[a-zA-Z]+0*)?[0-9]+[a-z]*" + N + "(?:[0-9]*[a-zA-Z]+0*)?[0-9]+[a-z]*)", "g"), I = new RegExp("(?:[0-9]*[a-zA-Z]+0*)?[0-9]+[a-z]*" + N + "(?:[0-9]*[a-zA-Z]+0*)?[0-9]+[a-z]*");
                if (k = x.match(C), O = x.split(I), O.length === 0) A = k;
                else for(A = [
                    O[0]
                ], s = 1, n = O.length; s < n; s += 1)A.push(k[s - 1].replace(/\s*\-\s*/g, "-")), A.push(O[s]);
                return A;
            }, l = function(x) {
                for(x = "" + x, p = o(x), n = p.length, s = 1; s < n; s += 2)m = p[s].match(i), m && (!m[3] || m[1] === m[3]) && (m[4].length < m[2].length && (m[4] = m[2].slice(0, m[2].length - m[4].length) + m[4]), parseInt(m[2], 10) < parseInt(m[4], 10) && (m[3] = _ + (m[1] ? m[1] : ""), p[s] = m.slice(1))), typeof p[s] == "string" && (p[s] = p[s].replace(/\-/g, _));
                return p;
            }, u = function(x, k, O) {
                n = x.length;
                for(var A = 1, N = x.length; A < N; A += 2)typeof x[A] == "object" && (x[A][3] = f(x[A][1], x[A][3], k, O), x[A][2].slice(1) === x[A][0] && (x[A][2] = _));
                return a(x);
            }, f = function(x, k, O, A) {
                if (O || (O = 0), b = ("" + x).split(""), c = ("" + k).split(""), S = c.slice(), S.reverse(), b.length === c.length) for(var N = 0, T = b.length; N < T; N += 1)if (b[N] === c[N] && S.length > O) S.pop();
                else {
                    if (O && A && S.length === 3) {
                        var D = b.slice(0, N);
                        D.reverse(), S = S.concat(D);
                    }
                    break;
                }
                return S.reverse(), S.join("");
            }, h = function(x) {
                for(n = x.length, s = 1; s < n; s += 2)typeof x[s] == "object" && (m = x[s], g = parseInt(m[1], 10), v = parseInt(m[3], 10), g > 100 && g % 100 && parseInt(g / 100, 10) === parseInt(v / 100, 10) ? m[3] = "" + v % 100 : g >= 1e4 && (m[3] = "" + v % 1e3)), m[2].slice(1) === m[0] && (m[2] = _);
                return a(x);
            }, d = function(x) {
                for(n = x.length, s = 1; s < n; s += 2){
                    if (typeof x[s] == "object" && (m = x[s], g = parseInt(m[1], 10), v = parseInt(m[3], 10), c = "" + v, g > 100 && g % 100)) for(var k = 2; k < c.length; k++){
                        var O = Math.pow(10, k);
                        if (Math.floor(g / O) === Math.floor(v / O)) {
                            m[3] = "" + v % O;
                            break;
                        }
                    }
                    m[2].slice(1) === m[0] && (m[2] = _);
                }
                return a(x);
            };
            var E = function(x, k, O, A) {
                var T;
                x = "" + x;
                var N = l(x), T = k(N, O, A);
                return T;
            };
            return t.opt[e + "-range-format"] ? t.opt[e + "-range-format"] === "expanded" ? y = function(x) {
                return E(x, a);
            } : t.opt[e + "-range-format"] === "minimal" ? y = function(x) {
                return E(x, u);
            } : t.opt[e + "-range-format"] === "minimal-two" ? y = function(x, k) {
                return E(x, u, 2, k);
            } : t.opt[e + "-range-format"] === "chicago" ? y = function(x) {
                return E(x, h);
            } : t.opt[e + "-range-format"] === "chicago-15" ? y = function(x) {
                return E(x, h);
            } : t.opt[e + "-range-format"] === "chicago-16" && (y = function(x) {
                return E(x, d);
            }) : y = function(x) {
                return E(x, a);
            }, y;
        };
        r.Util.FlipFlopper = function(t) {
            var e = [], i = {
                '<span class="nocase">': {
                    type: "nocase",
                    opener: '<span class="nocase">',
                    closer: "</span>",
                    attr: null,
                    outer: null,
                    flipflop: null
                },
                '<span class="nodecor">': {
                    type: "nodecor",
                    opener: '<span class="nodecor">',
                    closer: "</span>",
                    attr: "@class",
                    outer: "nodecor",
                    flipflop: {
                        nodecor: "nodecor"
                    }
                },
                '<span style="font-variant:small-caps;">': {
                    type: "tag",
                    opener: '<span style="font-variant:small-caps;">',
                    closer: "</span>",
                    attr: "@font-variant",
                    outer: "small-caps",
                    flipflop: {
                        "small-caps": "normal",
                        normal: "small-caps"
                    }
                },
                "<sc>": {
                    type: "tag",
                    opener: "<sc>",
                    closer: "</sc>",
                    attr: "@font-variant",
                    outer: "small-caps",
                    flipflop: {
                        "small-caps": "normal",
                        normal: "small-caps"
                    }
                },
                "<i>": {
                    type: "tag",
                    opener: "<i>",
                    closer: "</i>",
                    attr: "@font-style",
                    outer: "italic",
                    flipflop: {
                        italic: "normal",
                        normal: "italic"
                    }
                },
                "<b>": {
                    type: "tag",
                    opener: "<b>",
                    closer: "</b>",
                    attr: "@font-weight",
                    outer: "bold",
                    flipflop: {
                        bold: "normal",
                        normal: "bold"
                    }
                },
                "<sup>": {
                    type: "tag",
                    opener: "<sup>",
                    closer: "</sup>",
                    attr: "@vertical-align",
                    outer: "sup",
                    flipflop: {
                        sub: "sup",
                        sup: "sup"
                    }
                },
                "<sub>": {
                    type: "tag",
                    opener: "<sub>",
                    closer: "</sub>",
                    attr: "@vertical-align",
                    outer: "sub",
                    flipflop: {
                        sup: "sub",
                        sub: "sub"
                    }
                },
                ' "': {
                    type: "quote",
                    opener: ' "',
                    closer: '"',
                    attr: "@quotes",
                    outer: "true",
                    flipflop: {
                        true: "inner",
                        inner: "true",
                        false: "true"
                    }
                },
                " '": {
                    type: "quote",
                    opener: " '",
                    closer: "'",
                    attr: "@quotes",
                    outer: "inner",
                    flipflop: {
                        true: "inner",
                        inner: "true",
                        false: "true"
                    }
                }
            };
            i['("'] = i[' "'], i["('"] = i[" '"];
            var s = t.getTerm("open-quote"), n = t.getTerm("close-quote"), a = t.getTerm("open-inner-quote"), o = t.getTerm("close-inner-quote");
            s && n && [
                ' "',
                " '",
                '"',
                "'"
            ].indexOf(s) === -1 && (i[s] = JSON.parse(JSON.stringify(i[' "'])), i[s].opener = s, i[s].closer = n), a && o && [
                ' "',
                " '",
                '"',
                "'"
            ].indexOf(a) === -1 && (i[a] = JSON.parse(JSON.stringify(i[" '"])), i[a].opener = a, i[a].closer = o);
            function l(v) {
                var y = {
                    " '": ' "',
                    ' "': " '",
                    '("': "('",
                    "('": '("'
                };
                i[v].outer = "true", i[y[v]].outer = "inner";
            }
            function u(v) {
                for(var y = [], _ = Object.keys(i), E = 0, x = _.length; E < x; E++){
                    var k = _[E];
                    (i[v].type !== "quote" || !i[v]) && y.push(k);
                }
                var O = i[v];
                return O.opener = new RegExp("^(?:" + y.map(function(A) {
                    return A.replace("(", "\\(");
                }).join("|") + ")"), O;
            }
            var f = function() {
                for(var v = {}, y = Object.keys(i), _ = 0, E = y.length; _ < E; _++){
                    var x = y[_];
                    v[x] = u(x);
                }
                return v;
            }(), h = function() {
                var v = [], y = [], _ = {};
                for(var E in f)v.push(E), _[f[E].closer] = !0;
                for(var x = Object.keys(_), k = 0, O = x.length; k < O; k++){
                    var A = x[k];
                    y.push(A);
                }
                var N = v.concat(y).map(function(T) {
                    return T.replace("(", "\\(");
                }).join("|");
                return {
                    matchAll: new RegExp("((?:" + N + "))", "g"),
                    splitAll: new RegExp("(?:" + N + ")", "g"),
                    open: new RegExp("(^(?:" + v.map(function(T) {
                        return T.replace("(", "\\(");
                    }).join("|") + ")$)"),
                    close: new RegExp("(^(?:" + y.join("|") + ")$)")
                };
            }();
            function d(v, y) {
                var _ = e[e.length - 1];
                return !_ || v.match(_.opener) ? (e.push({
                    type: f[v].type,
                    opener: f[v].opener,
                    closer: f[v].closer,
                    pos: y
                }), !1) : (e.pop(), e.push({
                    type: f[v].type,
                    opener: f[v].opener,
                    closer: f[v].closer,
                    pos: y
                }), {
                    fixtag: _.pos
                });
            }
            function p(v, y) {
                var _ = e[e.length - 1];
                return _ && v === _.closer ? (e.pop(), _.type === "nocase" ? {
                    nocase: {
                        open: _.pos,
                        close: y
                    }
                } : !1) : _ ? {
                    fixtag: _.pos
                } : {
                    fixtag: y
                };
            }
            function m(v, y) {
                return v.match(h.open) ? d(v, y) : p(v, y);
            }
            function b(v) {
                var y = [];
                v = v.replace(/(<span)\s+(style=\"font-variant:)\s*(small-caps);?\"[^>]*(>)/g, '$1 $2$3;"$4'), v = v.replace(/(<span)\s+(class=\"no(?:case|decor)\")[^>]*(>)/g, "$1 $2$3");
                var _ = v.match(h.matchAll);
                if (!_) return {
                    tags: [],
                    strings: [
                        v
                    ],
                    forcedSpaces: []
                };
                for(var E = v.split(h.splitAll), x = 0, k = _.length - 1; x < k; x++)i[_[x]] && (E[x + 1] === "" && [
                    '"',
                    "'"
                ].indexOf(_[x + 1]) > -1 ? (_[x + 1] = " " + _[x + 1], y.push(!0)) : y.push(!1));
                return {
                    tags: _,
                    strings: E,
                    forcedSpaces: y
                };
            }
            var c = function(v) {
                var y = [];
                this.set = function(_) {
                    for(var E = i[_].attr, x = null, k = y.length - 1; k > -1; k--){
                        var O = y[k];
                        if (O[0] === E) {
                            x = O;
                            break;
                        }
                    }
                    if (!x) {
                        var A = [
                            t[t.tmp.area].opt.layout_decorations
                        ].concat(v.alldecor);
                        t: for(var k = A.length - 1; k > -1; k--){
                            var N = A[k];
                            if (N) for(var T = N.length - 1; T > -1; T--){
                                var O = N[T];
                                if (O[0] === E) {
                                    x = O;
                                    break t;
                                }
                            }
                        }
                    }
                    x ? x = [
                        E,
                        i[_].flipflop[x[1]]
                    ] : x = [
                        E,
                        i[_].outer
                    ], y.push(x);
                }, this.pair = function() {
                    return y[y.length - 1];
                }, this.pop = function() {
                    y.pop();
                };
            };
            function S(v, y) {
                if (v === "'") {
                    if (y && y.match(/^[^\,\.\?\:\;\ ]/)) return "\u2019";
                } else if (v === " '" && y && y.match(/^[\ ]/)) return " \u2019";
                return !1;
            }
            function g(v, y, _) {
                var E = !0, x = new c(v);
                v.blobs = [];
                function k(C) {
                    this.stack = [
                        C
                    ], this.latest = C, this.addStyling = function(I, P) {
                        if (E && (I.slice(0, 1) === " " && (I = I.slice(1)), I.slice(0, 1) === " " && (I = I.slice(1)), E = !1), this.latest = this.stack[this.stack.length - 1], P) {
                            if (typeof this.latest.blobs == "string") {
                                var M = new r.Blob;
                                M.blobs = this.latest.blobs, M.alldecor = this.latest.alldecor.slice(), this.latest.blobs = [
                                    M
                                ];
                            }
                            var F = new r.Token, U = new r.Blob(null, F);
                            if (U.alldecor = this.latest.alldecor.slice(), P[0] === "@class" && P[1] === "nodecor") {
                                for(var j = [], X = {}, R = [
                                    t[t.tmp.area].opt.layout_decorations
                                ].concat(U.alldecor), w = R.length - 1; w > -1; w--){
                                    var L = R[w];
                                    if (L) for(var z = L.length - 1; z > -1; z--){
                                        var B = L[z];
                                        [
                                            "@font-weight",
                                            "@font-style",
                                            "@font-variant"
                                        ].indexOf(B[0]) > -1 && !X[B[0]] && (P[1] !== "normal" && (U.decorations.push([
                                            B[0],
                                            "normal"
                                        ]), j.push([
                                            B[0],
                                            "normal"
                                        ])), X[B[0]] = !0);
                                    }
                                }
                                U.alldecor.push(j);
                            } else U.decorations.push(P), U.alldecor.push([
                                P
                            ]);
                            if (this.latest.blobs.push(U), this.stack.push(U), this.latest = U, I) {
                                var F = new r.Token, U = new r.Blob(null, F);
                                U.blobs = I, U.alldecor = this.latest.alldecor.slice(), this.latest.blobs.push(U);
                            }
                        } else if (I) {
                            var M = new r.Blob;
                            M.blobs = I, M.alldecor = this.latest.alldecor.slice(), this.latest.blobs.push(M);
                        }
                    }, this.popStyling = function() {
                        this.stack.pop();
                    };
                }
                var O = new k(v);
                if (y.strings.length) {
                    var A = y.strings[0];
                    _ && (A = " " + A), O.addStyling(A);
                }
                for(var N = 0, T = y.tags.length; N < T; N++){
                    var D = y.tags[N], A = y.strings[N + 1];
                    D.match(h.open) ? (x.set(D), O.addStyling(A, x.pair())) : (x.pop(), O.popStyling(), O.addStyling(A));
                }
            }
            this.processTags = function(v) {
                var E = v.blobs, y = !1;
                E.slice(0, 1) === " " && !E.match(/^\s+[\'\"]/) && (y = !0);
                var _ = new RegExp("(" + r.ROMANESQUE_REGEXP.source + ")\u2019(" + r.ROMANESQUE_REGEXP.source + ")", "g"), E = " " + E.replace(_, "$1'$2"), x = b(E);
                if (x.tags.length !== 0) {
                    for(var k = !1, O = 0, A = x.tags.length; O < A; O++){
                        var N = x.tags[O], E = x.strings[O + 1], T = S(N, E);
                        if (T) x.strings[O + 1] = T + x.strings[O + 1], x.tags[O] = "";
                        else {
                            for(var D; D = m(N, O), D;)if (Object.keys(D).indexOf("fixtag") > -1) {
                                if (N.match(h.close) && N === "'") x.strings[O + 1] = "\u2019" + x.strings[O + 1], x.tags[O] = "";
                                else {
                                    var C = x.tags[D.fixtag];
                                    x.forcedSpaces[D.fixtag - 1] && (C = C.slice(1)), x.strings[D.fixtag + 1] = C + x.strings[D.fixtag + 1], x.tags[D.fixtag] = "";
                                }
                                if (e.length > 0) if (N !== "'") e.pop();
                                else break;
                                else break;
                            } else if (D.nocase) {
                                x.tags[D.nocase.open] = "", x.tags[D.nocase.close] = "";
                                break;
                            } else break;
                            D && (D.fixtag || D.fixtag === 0) && (x.strings[O + 1] = x.tags[O] + x.strings[O + 1], x.tags[O] = "");
                        }
                    }
                    for(var O = e.length - 1; O > -1; O--){
                        var I = e[O].pos, N = x.tags[I];
                        N === " '" || N === "'" ? x.strings[I + 1] = " \u2019" + x.strings[I + 1] : x.strings[I + 1] = x.tags[I] + x.strings[I + 1], x.tags[I] = "", e.pop();
                    }
                    for(var O = x.tags.length - 1; O > -1; O--)x.tags[O] || (x.tags = x.tags.slice(0, O).concat(x.tags.slice(O + 1)), x.strings[O] = x.strings[O] + x.strings[O + 1], x.strings = x.strings.slice(0, O + 1).concat(x.strings.slice(O + 2)));
                    for(var O = 0, A = x.tags.length; O < A; O++){
                        var N = x.tags[O], P = x.forcedSpaces[O - 1];
                        [
                            ' "',
                            " '",
                            '("',
                            "('"
                        ].indexOf(N) > -1 && (k || (l(N), k = !0), P || (x.strings[O] += N.slice(0, 1)));
                    }
                    g(v, x, y);
                }
            };
        };
        r.Output.Formatters = function() {
            var t = `(?:\u2018|\u2019|\u201C|\u201D| "| '|"|'|[-\u2013\u2014/.,;?!:]|\\[|\\]|\\(|\\)|<span style="font-variant: small-caps;">|<span class="no(?:case|decor)">|</span>|</?(?:i|sc|b|sub|sup)>)`, e = new r.Doppeler(t, function(c) {
                return c.replace(/(<span)\s+(class=\"no(?:case|decor)\")[^>]*(>)/g, "$1 $2$3").replace(/(<span)\s+(style=\"font-variant:)\s*(small-caps);?(\")[^>]*(>)/g, "$1 $2 $3;$4$5");
            }), i = '(?:[-\\s]*<\\/*(?:spans+class="no(?:case|decor)"|i|sc|b|sub|sup)>[-\\s]*|[-\\s]+)', s = new r.Doppeler(i), n = new r.Doppeler("(?:[\xA0 \xA0\u2000-\u200B\u205F\u3000]+)"), a = {
                '<span style="font-variant: small-caps;">': "</span>",
                '<span class="nocase">': "</span>",
                '<span class="nodecor">': "</span>",
                "<sc>": "</sc>",
                "<sub>": "</sub>",
                "<sup>": "</sup>"
            };
            function o(c) {
                var S = c.match(/(^\s*)((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]))(.*)/);
                return S && !(S[2].match(/^[\u0370-\u03FF]$/) && !S[3]) ? S[1] + r.toLocaleUpperCase.call(this, S[2]) + S[3] : c;
            }
            function l(c, S) {
                if (!S) return "";
                c.doppel = e.split(S);
                var g = {
                    ' "': {
                        opener: " '",
                        closer: '"'
                    },
                    " '": {
                        opener: ' "',
                        closer: "'"
                    },
                    "\u2018": {
                        opener: "\u2018",
                        closer: "\u2019"
                    },
                    "\u201C": {
                        opener: "\u201C",
                        closer: "\u201D"
                    }
                };
                function v(I, P) {
                    if (c.quoteState.length === 0 || I === c.quoteState[c.quoteState.length - 1].opener) return c.quoteState.push({
                        opener: g[I].opener,
                        closer: g[I].closer,
                        pos: P
                    }), !1;
                    var M = c.quoteState[c.quoteState.length - 1].pos;
                    return c.quoteState.pop(), c.quoteState.push({
                        opener: g[I].opener,
                        closer: g[I].closer,
                        positions: P
                    }), M;
                }
                function y(I, P) {
                    if (c.quoteState.length > 0 && I === c.quoteState[c.quoteState.length - 1].closer) c.quoteState.pop();
                    else return P;
                }
                function _(I, P) {
                    var M = [
                        "\u201C",
                        "\u2018",
                        ' "',
                        " '"
                    ].indexOf(I) > -1;
                    return M ? v(I, P) : y(I, P);
                }
                function E(I, P) {
                    var M = I.match(/(^(?:\u2018|\u2019|\u201C|\u201D|\"|\')|(?: \"| \')$)/);
                    if (M) return _(M[1], P);
                }
                c.doppel.strings.length && c.doppel.strings[0].trim() && (c.doppel.strings[0] = c.capitaliseWords(c.doppel.strings[0], 0, c.doppel.tags[0]));
                for(var x = 0, k = c.doppel.tags.length; x < k; x++){
                    var O = c.doppel.tags[x], A = c.doppel.strings[x + 1];
                    if (c.tagState !== null && (a[O] ? c.tagState.push(a[O]) : c.tagState.length && O === c.tagState[c.tagState.length - 1] && c.tagState.pop()), c.afterPunct !== null && O.match(/[\!\?\:]$/) && (c.afterPunct = !0), c.tagState.length === 0 ? c.doppel.strings[x + 1] = c.capitaliseWords(A, x + 1, c.doppel, c.doppel.tags[x + 1]) : c.doppel.strings[x + 1].trim() && (c.lastWordPos = null), c.quoteState !== null) {
                        var N = E(O, x);
                        if (N || N === 0) {
                            var T = c.doppel.origStrings[N + 1].slice(0, 1);
                            c.doppel.strings[N + 1] = T + c.doppel.strings[N + 1].slice(1), c.lastWordPos = null;
                        }
                    }
                    c.isFirst && A.trim() && (c.isFirst = !1), c.afterPunct && A.trim() && (c.afterPunct = !1);
                }
                if (c.quoteState) for(var x = 0, k = c.quoteState.length; x < k; x++){
                    var N = c.quoteState[x].pos;
                    if (typeof N < "u") {
                        var T = c.doppel.origStrings[N + 1].slice(0, 1);
                        c.doppel.strings[N + 1] = T + c.doppel.strings[N + 1].slice(1);
                    }
                }
                if (c.lastWordPos) {
                    var D = n.split(c.doppel.strings[c.lastWordPos.strings]), C = D.strings[c.lastWordPos.words];
                    C.length > 1 && r.toLocaleLowerCase.call(this, C).match(c.skipWordsRex) && (C = o.call(this, C), D.strings[c.lastWordPos.words] = C), c.doppel.strings[c.lastWordPos.strings] = n.join(D);
                }
                return e.join(c.doppel);
            }
            function u(c, S) {
                return S;
            }
            function f(c, S) {
                var g = {
                    quoteState: null,
                    capitaliseWords: function(v) {
                        for(var y = v.split(" "), _ = 0, E = y.length; _ < E; _++){
                            var x = y[_];
                            x && (y[_] = r.toLocaleLowerCase.call(c, x));
                        }
                        return y.join(" ");
                    },
                    skipWordsRex: null,
                    tagState: [],
                    afterPunct: null,
                    isFirst: null
                };
                return l.call(c, g, S);
            }
            function h(c, S) {
                var g = {
                    quoteState: null,
                    capitaliseWords: function(v) {
                        for(var y = v.split(" "), _ = 0, E = y.length; _ < E; _++){
                            var x = y[_];
                            x && (y[_] = r.toLocaleUpperCase.call(c, x));
                        }
                        return y.join(" ");
                    },
                    skipWordsRex: null,
                    tagState: [],
                    afterPunct: null,
                    isFirst: null
                };
                return l.call(c, g, S);
            }
            function d(c, S) {
                var g = {
                    quoteState: [],
                    capitaliseWords: function(v) {
                        for(var y = v.split(" "), _ = 0, E = y.length; _ < E; _++){
                            var x = y[_];
                            x && (g.isFirst ? (y[_] = o.call(c, x), g.isFirst = !1) : y[_] = r.toLocaleLowerCase.call(c, x));
                        }
                        return y.join(" ");
                    },
                    skipWordsRex: null,
                    tagState: [],
                    afterPunct: null,
                    isFirst: !0
                };
                return l.call(c, g, S);
            }
            function p(c, S) {
                var g = {
                    quoteState: [],
                    capitaliseWords: function(v, y, _) {
                        if (v.trim()) {
                            for(var E = n.split(v), x = E.strings, k = 0, O = x.length; k < O; k++){
                                var A = x[k];
                                if (!A) continue;
                                let N = r.toLocaleLowerCase.call(c, A), T = !1;
                                (A.length > 1 && !N.match(g.skipWordsRex) || k === x.length - 1 && _ === "-" || g.isFirst || g.afterPunct) && (T = !0), T && A === N && (x[k] = o.call(c, A)), g.afterPunct = !1, g.isFirst = !1, g.lastWordPos = {
                                    strings: y,
                                    words: k
                                };
                            }
                            v = n.join(E);
                        }
                        return v;
                    },
                    skipWordsRex: c.locale[c.opt.lang].opts["skip-words-regexp"],
                    tagState: [],
                    afterPunct: !1,
                    isFirst: !0
                };
                return l.call(c, g, S);
            }
            function m(c, S) {
                var g = {
                    quoteState: [],
                    capitaliseWords: function(v) {
                        for(var y = n.split(v), _ = y.strings, E = 0, x = _.length; E < x; E++){
                            var k = _[E];
                            if (k && g.isFirst) {
                                k === r.toLocaleLowerCase.call(c, k) && (_[E] = o.call(c, k)), g.isFirst = !1;
                                break;
                            }
                        }
                        return n.join(y);
                    },
                    skipWordsRex: null,
                    tagState: [],
                    afterPunct: null,
                    isFirst: !0
                };
                return l.call(c, g, S);
            }
            function b(c, S) {
                var g = {
                    quoteState: [],
                    capitaliseWords: function(v) {
                        for(var y = n.split(v), _ = y.strings, E = 0, x = _.length; E < x; E++){
                            var k = _[E];
                            k && k === r.toLocaleLowerCase.call(c, k) && (_[E] = o.call(c, k));
                        }
                        return n.join(y);
                    },
                    skipWordsRex: null,
                    tagState: [],
                    afterPunct: null,
                    isFirst: null
                };
                return l.call(c, g, S);
            }
            return {
                nameDoppel: s,
                passthrough: u,
                lowercase: f,
                uppercase: h,
                sentence: d,
                title: p,
                "capitalize-first": m,
                "capitalize-all": b
            };
        }();
        r.Output.Formats = function() {};
        r.Output.Formats.prototype.html = {
            text_escape: function(t) {
                return t || (t = ""), t.replace(/&/g, "&#38;").replace(/</g, "&#60;").replace(/>/g, "&#62;").replace(/\s\s/g, "\xA0 ").replace(r.SUPERSCRIPTS_REGEXP, function(e) {
                    return "<sup>" + r.SUPERSCRIPTS[e] + "</sup>";
                });
            },
            bibstart: `<div class="csl-bib-body">
`,
            bibend: "</div>",
            "@font-style/italic": "<i>%%STRING%%</i>",
            "@font-style/oblique": "<em>%%STRING%%</em>",
            "@font-style/normal": '<span style="font-style:normal;">%%STRING%%</span>',
            "@font-variant/small-caps": '<span style="font-variant:small-caps;">%%STRING%%</span>',
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-variant/normal": '<span style="font-variant:normal;">%%STRING%%</span>',
            "@font-weight/bold": "<b>%%STRING%%</b>",
            "@font-weight/normal": '<span style="font-weight:normal;">%%STRING%%</span>',
            "@font-weight/light": !1,
            "@text-decoration/none": '<span style="text-decoration:none;">%%STRING%%</span>',
            "@text-decoration/underline": '<span style="text-decoration:underline;">%%STRING%%</span>',
            "@vertical-align/sup": "<sup>%%STRING%%</sup>",
            "@vertical-align/sub": "<sub>%%STRING%%</sub>",
            "@vertical-align/baseline": '<span style="baseline">%%STRING%%</span>',
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? t.getTerm("open-quote") : t.getTerm("open-quote") + e + t.getTerm("close-quote");
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? "\u2019" : t.getTerm("open-inner-quote") + e + t.getTerm("close-inner-quote");
            },
            "@quotes/false": !1,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                var i = "";
                return t.sys.embedBibliographyEntry && (i = t.sys.embedBibliographyEntry(this.item_id) + `
`), '  <div class="csl-entry">' + e + `</div>
` + i;
            },
            "@display/block": function(t, e) {
                return `

    <div class="csl-block">` + e + `</div>
`;
            },
            "@display/left-margin": function(t, e) {
                return `
    <div class="csl-left-margin">` + e + "</div>";
            },
            "@display/right-inline": function(t, e) {
                return '<div class="csl-right-inline">' + e + `</div>
  `;
            },
            "@display/indent": function(t, e) {
                return '<div class="csl-indent">' + e + `</div>
  `;
            },
            "@showid/true": function(t, e, i) {
                if (!t.tmp.just_looking && !t.tmp.suppress_decorations) {
                    if (i) return '<span class="' + t.opt.nodenames[i] + '" cslid="' + i + '">' + e + "</span>";
                    if (this.params && typeof e == "string") {
                        var s = "";
                        if (e) {
                            var n = e.match(r.VARIABLE_WRAPPER_PREPUNCT_REX);
                            s = n[1], e = n[2];
                        }
                        var a = "";
                        return e && r.SWAPPING_PUNCTUATION.indexOf(e.slice(-1)) > -1 && (a = e.slice(-1), e = e.slice(0, -1)), t.sys.variableWrapper(this.params, s, e, a);
                    } else return e;
                } else return e;
            },
            "@URL/true": function(t, e) {
                return '<a href="' + e + '">' + e + "</a>";
            },
            "@DOI/true": function(t, e) {
                var i = e;
                return e.match(/^https?:\/\//) || (i = "https://doi.org/" + e), '<a href="' + i + '">' + e + "</a>";
            }
        };
        r.Output.Formats.prototype.text = {
            text_escape: function(t) {
                return t || (t = ""), t;
            },
            bibstart: "",
            bibend: "",
            "@font-style/italic": !1,
            "@font-style/oblique": !1,
            "@font-style/normal": !1,
            "@font-variant/small-caps": !1,
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-variant/normal": !1,
            "@font-weight/bold": !1,
            "@font-weight/normal": !1,
            "@font-weight/light": !1,
            "@text-decoration/none": !1,
            "@text-decoration/underline": !1,
            "@vertical-align/baseline": !1,
            "@vertical-align/sup": !1,
            "@vertical-align/sub": !1,
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? t.getTerm("open-quote") : t.getTerm("open-quote") + e + t.getTerm("close-quote");
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? "\u2019" : t.getTerm("open-inner-quote") + e + t.getTerm("close-inner-quote");
            },
            "@quotes/false": !1,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                return e + `
`;
            },
            "@display/block": function(t, e) {
                return `
` + e;
            },
            "@display/left-margin": function(t, e) {
                return e + " ";
            },
            "@display/right-inline": function(t, e) {
                return e;
            },
            "@display/indent": function(t, e) {
                return `
    ` + e;
            },
            "@showid/true": function(t, e) {
                return e;
            },
            "@URL/true": function(t, e) {
                return e;
            },
            "@DOI/true": function(t, e) {
                return e;
            }
        };
        r.Output.Formats.prototype.rtf = {
            text_escape: function(t) {
                return t || (t = ""), t.replace(/([\\{}])/g, "\\$1").replace(r.SUPERSCRIPTS_REGEXP, function(e) {
                    return "\\super " + r.SUPERSCRIPTS[e] + "\\nosupersub{}";
                }).replace(/[\u007F-\uFFFF]/g, function(e) {
                    return "\\uc0\\u" + e.charCodeAt(0).toString() + "{}";
                }).split("	").join("\\tab{}");
            },
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-style/italic": "{\\i{}%%STRING%%}",
            "@font-style/normal": "{\\i0{}%%STRING%%}",
            "@font-style/oblique": "{\\i{}%%STRING%%}",
            "@font-variant/small-caps": "{\\scaps %%STRING%%}",
            "@font-variant/normal": "{\\scaps0{}%%STRING%%}",
            "@font-weight/bold": "{\\b{}%%STRING%%}",
            "@font-weight/normal": "{\\b0{}%%STRING%%}",
            "@font-weight/light": !1,
            "@text-decoration/none": !1,
            "@text-decoration/underline": "{\\ul{}%%STRING%%}",
            "@vertical-align/baseline": !1,
            "@vertical-align/sup": "\\super %%STRING%%\\nosupersub{}",
            "@vertical-align/sub": "\\sub %%STRING%%\\nosupersub{}",
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? r.Output.Formats.rtf.text_escape(t.getTerm("open-quote")) : r.Output.Formats.rtf.text_escape(t.getTerm("open-quote")) + e + r.Output.Formats.rtf.text_escape(t.getTerm("close-quote"));
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? r.Output.Formats.rtf.text_escape("\u2019") : r.Output.Formats.rtf.text_escape(t.getTerm("open-inner-quote")) + e + r.Output.Formats.rtf.text_escape(t.getTerm("close-inner-quote"));
            },
            "@quotes/false": !1,
            bibstart: "{\\rtf ",
            bibend: "}",
            "@display/block": `\\line{}%%STRING%%\\line\r
`,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                return e;
            },
            "@display/left-margin": function(t, e) {
                return e + "\\tab ";
            },
            "@display/right-inline": function(t, e) {
                return e + `\r
`;
            },
            "@display/indent": function(t, e) {
                return `
\\tab ` + e + `\\line\r
`;
            },
            "@showid/true": function(t, e) {
                if (!t.tmp.just_looking && !t.tmp.suppress_decorations) {
                    var i = "";
                    if (e) {
                        var s = e.match(r.VARIABLE_WRAPPER_PREPUNCT_REX);
                        i = s[1], e = s[2];
                    }
                    var n = "";
                    return e && r.SWAPPING_PUNCTUATION.indexOf(e.slice(-1)) > -1 && (n = e.slice(-1), e = e.slice(0, -1)), t.sys.variableWrapper(this.params, i, e, n);
                } else return e;
            },
            "@URL/true": function(t, e) {
                return e;
            },
            "@DOI/true": function(t, e) {
                return e;
            }
        };
        r.Output.Formats.prototype.asciidoc = {
            text_escape: function(t) {
                return t || (t = ""), t.replace("*", "pass:[*]", "g").replace("_", "pass:[_]", "g").replace("#", "pass:[#]", "g").replace("^", "pass:[^]", "g").replace("~", "pass:[~]", "g").replace("[[", "pass:[[[]", "g").replace("  ", "&#160; ", "g").replace(r.SUPERSCRIPTS_REGEXP, function(e) {
                    return "^" + r.SUPERSCRIPTS[e] + "^";
                });
            },
            bibstart: "",
            bibend: "",
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-style/italic": "__%%STRING%%__",
            "@font-style/oblique": "__%%STRING%%__",
            "@font-style/normal": !1,
            "@font-variant/small-caps": "[small-caps]#%%STRING%%#",
            "@font-variant/normal": !1,
            "@font-weight/bold": "**%%STRING%%**",
            "@font-weight/normal": !1,
            "@font-weight/light": !1,
            "@text-decoration/none": !1,
            "@text-decoration/underline": "[underline]##%%STRING%%##",
            "@vertical-align/sup": "^^%%STRING%%^^",
            "@vertical-align/sub": "~~%%STRING%%~~",
            "@vertical-align/baseline": !1,
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? "``" : "``" + e + "''";
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? "`" : "`" + e + "'";
            },
            "@quotes/false": !1,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                return e + `
`;
            },
            "@display/block": function(t, e) {
                return e;
            },
            "@display/left-margin": function(t, e) {
                return e;
            },
            "@display/right-inline": function(t, e) {
                return " " + e;
            },
            "@display/indent": function(t, e) {
                return " " + e;
            },
            "@showid/true": function(t, e) {
                if (!t.tmp.just_looking && !t.tmp.suppress_decorations && this.params && typeof e == "string") {
                    var i = "";
                    if (e) {
                        var s = e.match(r.VARIABLE_WRAPPER_PREPUNCT_REX);
                        i = s[1], e = s[2];
                    }
                    var n = "";
                    return e && r.SWAPPING_PUNCTUATION.indexOf(e.slice(-1)) > -1 && (n = e.slice(-1), e = e.slice(0, -1)), t.sys.variableWrapper(this.params, i, e, n);
                } else return e;
            },
            "@URL/true": function(t, e) {
                return e;
            },
            "@DOI/true": function(t, e) {
                var i = e;
                return e.match(/^https?:\/\//) || (i = "https://doi.org/" + e), i + "[" + e + "]";
            }
        };
        r.Output.Formats.prototype.fo = {
            text_escape: function(t) {
                return t || (t = ""), t.replace(/&/g, "&#38;").replace(/</g, "&#60;").replace(/>/g, "&#62;").replace("  ", "&#160; ", "g").replace(r.SUPERSCRIPTS_REGEXP, function(e) {
                    return '<fo:inline vertical-align="super">' + r.SUPERSCRIPTS[e] + "</fo:inline>";
                });
            },
            bibstart: "",
            bibend: "",
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-style/italic": '<fo:inline font-style="italic">%%STRING%%</fo:inline>',
            "@font-style/oblique": '<fo:inline font-style="oblique">%%STRING%%</fo:inline>',
            "@font-style/normal": '<fo:inline font-style="normal">%%STRING%%</fo:inline>',
            "@font-variant/small-caps": '<fo:inline font-variant="small-caps">%%STRING%%</fo:inline>',
            "@font-variant/normal": '<fo:inline font-variant="normal">%%STRING%%</fo:inline>',
            "@font-weight/bold": '<fo:inline font-weight="bold">%%STRING%%</fo:inline>',
            "@font-weight/normal": '<fo:inline font-weight="normal">%%STRING%%</fo:inline>',
            "@font-weight/light": '<fo:inline font-weight="lighter">%%STRING%%</fo:inline>',
            "@text-decoration/none": '<fo:inline text-decoration="none">%%STRING%%</fo:inline>',
            "@text-decoration/underline": '<fo:inline text-decoration="underline">%%STRING%%</fo:inline>',
            "@vertical-align/sup": '<fo:inline vertical-align="super">%%STRING%%</fo:inline>',
            "@vertical-align/sub": '<fo:inline vertical-align="sub">%%STRING%%</fo:inline>',
            "@vertical-align/baseline": '<fo:inline vertical-align="baseline">%%STRING%%</fo:inline>',
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? t.getTerm("open-quote") : t.getTerm("open-quote") + e + t.getTerm("close-quote");
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? "\u2019" : t.getTerm("open-inner-quote") + e + t.getTerm("close-inner-quote");
            },
            "@quotes/false": !1,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                var i = "";
                if (t.bibliography && t.bibliography.opt && t.bibliography.opt.hangingindent) {
                    var s = t.bibliography.opt.hangingindent;
                    i = ' start-indent="' + s + 'em" text-indent="-' + s + 'em"';
                }
                var n = "";
                return t.sys.embedBibliographyEntry && (n = t.sys.embedBibliographyEntry(this.item_id) + `
`), '<fo:block id="' + this.system_id + '"' + i + ">" + e + `</fo:block>
` + n;
            },
            "@display/block": function(t, e) {
                return `
  <fo:block>` + e + `</fo:block>
`;
            },
            "@display/left-margin": function(t, e) {
                return `
  <fo:table table-layout="fixed" width="100%">
    <fo:table-column column-number="1" column-width="$$$__COLUMN_WIDTH_1__$$$"/>
    <fo:table-column column-number="2" column-width="proportional-column-width(1)"/>
    <fo:table-body>
      <fo:table-row>
        <fo:table-cell>
          <fo:block>` + e + `</fo:block>
        </fo:table-cell>
        `;
            },
            "@display/right-inline": function(t, e) {
                return `<fo:table-cell>
          <fo:block>` + e + `</fo:block>
        </fo:table-cell>
      </fo:table-row>
    </fo:table-body>
  </fo:table>
`;
            },
            "@display/indent": function(t, e) {
                return '<fo:block margin-left="2em">' + e + `</fo:block>
`;
            },
            "@showid/true": function(t, e) {
                if (!t.tmp.just_looking && !t.tmp.suppress_decorations && this.params && typeof e == "string") {
                    var i = "";
                    if (e) {
                        var s = e.match(r.VARIABLE_WRAPPER_PREPUNCT_REX);
                        i = s[1], e = s[2];
                    }
                    var n = "";
                    return e && r.SWAPPING_PUNCTUATION.indexOf(e.slice(-1)) > -1 && (n = e.slice(-1), e = e.slice(0, -1)), t.sys.variableWrapper(this.params, i, e, n);
                } else return e;
            },
            "@URL/true": function(t, e) {
                return `<fo:basic-link external-destination="url('` + e + `')">` + e + "</fo:basic-link>";
            },
            "@DOI/true": function(t, e) {
                var i = e;
                return e.match(/^https?:\/\//) || (i = "https://doi.org/" + e), `<fo:basic-link external-destination="url('` + i + `')">` + e + "</fo:basic-link>";
            }
        };
        r.Output.Formats.prototype.latex = {
            text_escape: function(t) {
                return t || (t = ""), t;
            },
            bibstart: "\\begin{thebibliography}{4}",
            bibend: "\\end{thebibliography}",
            "@font-style/italic": "{\\em %%STRING%%}",
            "@font-style/oblique": !1,
            "@font-style/normal": !1,
            "@font-variant/small-caps": !1,
            "@passthrough/true": r.Output.Formatters.passthrough,
            "@font-variant/normal": !1,
            "@font-weight/bold": "{\\bf %%STRING%%}",
            "@font-weight/normal": !1,
            "@font-weight/light": !1,
            "@text-decoration/none": !1,
            "@text-decoration/underline": !1,
            "@vertical-align/baseline": !1,
            "@vertical-align/sup": !1,
            "@vertical-align/sub": !1,
            "@strip-periods/true": r.Output.Formatters.passthrough,
            "@strip-periods/false": r.Output.Formatters.passthrough,
            "@quotes/true": function(t, e) {
                return typeof e > "u" ? t.getTerm("open-quote") : t.getTerm("open-quote") + e + t.getTerm("close-quote");
            },
            "@quotes/inner": function(t, e) {
                return typeof e > "u" ? "\u2019" : t.getTerm("open-inner-quote") + e + t.getTerm("close-inner-quote");
            },
            "@quotes/false": !1,
            "@cite/entry": function(t, e) {
                return t.sys.wrapCitationEntry(e, this.item_id, this.locator_txt, this.suffix_txt);
            },
            "@bibliography/entry": function(t, e) {
                return "\\bibitem{" + t.sys.embedBibliographyEntry(this.item_id) + `}
`;
            },
            "@display/block": function(t, e) {
                return `
` + e;
            },
            "@display/left-margin": function(t, e) {
                return e;
            },
            "@display/right-inline": function(t, e) {
                return e;
            },
            "@display/indent": function(t, e) {
                return `
    ` + e;
            },
            "@showid/true": function(t, e, i) {
                return e;
            },
            "@URL/true": function(t, e) {
                return e;
            },
            "@DOI/true": function(t, e) {
                return e;
            }
        };
        r.Output.Formats = new r.Output.Formats;
        r.Registry = function(t) {
            this.debug = !1, this.state = t, this.registry = {}, this.reflist = [], this.refhash = {}, this.namereg = new r.Registry.NameReg(t), this.citationreg = new r.Registry.CitationReg(t), this.authorstrings = {}, this.masterMap = {}, this.mylist = [], this.myhash = {}, this.deletes = [], this.inserts = [], this.uncited = {}, this.refreshes = {}, this.akeys = {}, this.oldseq = {}, this.return_data = {}, this.ambigcites = {}, this.ambigresets = {}, this.sorter = new r.Registry.Comparifier(t, "bibliography_sort"), this.getSortedIds = function() {
                for(var e = [], i = 0, s = this.reflist.length; i < s; i += 1)e.push("" + this.reflist[i].id);
                return e;
            }, this.getSortedRegistryItems = function() {
                for(var e = [], i = 0, s = this.reflist.length; i < s; i += 1)e.push(this.reflist[i]);
                return e;
            };
        };
        r.Registry.prototype.init = function(t, e) {
            var i, s;
            if (this.oldseq = {}, e) {
                this.uncited = {};
                for(var i = 0, s = t.length; i < s; i += 1)this.myhash[t[i]] || this.mylist.push("" + t[i]), this.uncited[t[i]] = !0, this.myhash[t[i]] = !0;
            } else {
                for(var n in this.uncited)t.push(n);
                var a = {};
                for(i = t.length - 1; i > -1; i += -1)a[t[i]] ? t = t.slice(0, i).concat(t.slice(i + 1)) : a[t[i]] = !0;
                this.mylist = t, this.myhash = a;
            }
            this.refreshes = {}, this.touched = {}, this.ambigsTouched = {}, this.ambigresets = {};
        };
        r.Registry.prototype.dopurge = function(t) {
            for(var e = this.mylist.length - 1; e > -1; e += -1)this.citationreg.citationsByItemId && (!this.citationreg.citationsByItemId || !this.citationreg.citationsByItemId[this.mylist[e]]) && !t[this.mylist[e]] && (delete this.myhash[this.mylist[e]], delete this.uncited[this.mylist[e]], this.mylist = this.mylist.slice(0, e).concat(this.mylist.slice(e + 1)));
            this.dodeletes(this.myhash);
        };
        r.Registry.prototype.dodeletes = function(t) {
            var e, i, s, n, a, o, l, u, f;
            if (typeof t == "string") {
                var i = t;
                t = {}, t[i] = !0;
            }
            for(var i in this.registry)if (!t[i]) {
                if (this.uncited[i]) continue;
                e = this.namereg.delitems(i);
                for(l in e)this.refreshes[l] = !0;
                for(s = this.registry[i].ambig, u = this.ambigcites[s].indexOf(i), u > -1 && (o = this.ambigcites[s].slice(), this.ambigcites[s] = o.slice(0, u).concat(o.slice(u + 1, o.length)), this.ambigresets[s] = this.ambigcites[s].length), a = this.ambigcites[s].length, n = 0; n < a; n += 1)f = "" + this.ambigcites[s][n], this.refreshes[f] = !0;
                if (this.registry[i].siblings) {
                    if (this.registry[i].siblings.length == 1) {
                        var h = this.registry[i].siblings[0];
                        this.registry[h].siblings && (this.registry[h].siblings.pop(), this.registry[h].master = !0);
                    } else if (this.registry[i].siblings.length > 1) {
                        var d = [
                            i
                        ];
                        if (this.registry[i].master) {
                            var p = this.registry[i].siblings[0], m = this.registry[p];
                            m.master = !0, d.push(p);
                        }
                        for(var b = [], c = this.registry[i].siblings.length - 1; c > -1; c += -1){
                            var S = this.registry[i].siblings.pop();
                            d.indexOf(S) === -1 && b.push(S);
                        }
                        for(var c = b.length - 1; c > -1; c += -1)this.registry[i].siblings.push(b[c]);
                    }
                }
                for(var g = this.reflist.length - 1; g > -1; g--)this.reflist[g].id === i && (this.reflist = this.reflist.slice(0, g).concat(this.reflist.slice(g + 1)));
                delete this.registry[i], delete this.refhash[i], this.return_data.bibchange = !0;
            }
        };
        r.Registry.prototype.doinserts = function(t) {
            var e, i, s, n, a, o, l;
            typeof t == "string" && (t = [
                t
            ]);
            for(var o = 0, l = t.length; o < l; o += 1)e = t[o], this.registry[e] || (i = this.state.retrieveItem(e), s = r.getAmbiguousCite.call(this.state, i), this.ambigsTouched[s] = !0, i.legislation_id || (this.akeys[s] = !0), n = {
                id: "" + e,
                seq: 0,
                offset: 0,
                sortkeys: !1,
                ambig: !1,
                rendered: !1,
                disambig: !1,
                ref: i,
                newItem: !0
            }, this.registry[e] = n, this.citationreg.citationsByItemId && this.citationreg.citationsByItemId[e] && (this.registry[e]["first-reference-note-number"] = this.citationreg.citationsByItemId[e][0].properties.noteIndex), a = r.getAmbigConfig.call(this.state), this.registerAmbigToken(s, e, a), this.touched[e] = !0, this.return_data.bibchange = !0);
        };
        r.Registry.prototype.rebuildlist = function(t) {
            var e, i, s, n;
            if (t) for(this.reflist = [], e = this.mylist.length, i = 0; i < e; i += 1)s = this.mylist[i], n = this.registry[s], this.reflist.push(n), this.oldseq[s] = this.registry[s].seq, this.registry[s].seq = i + 1;
            else for(this.reflist_inserts = [], e = this.mylist.length, i = 0; i < e; i += 1)s = this.mylist[i], n = this.registry[s], n.newItem && this.reflist_inserts.push(n), this.oldseq[s] = this.registry[s].seq, this.registry[s].seq = i + 1;
        };
        r.Registry.prototype.dorefreshes = function() {
            var t, e, i, s, n;
            for(var t in this.refreshes)if (e = this.registry[t], !!e) {
                e.sortkeys = void 0, i = this.state.refetchItem(t);
                var s = e.ambig;
                typeof s > "u" && (this.state.tmp.disambig_settings = !1, s = r.getAmbiguousCite.call(this.state, i), n = r.getAmbigConfig.call(this.state), this.registerAmbigToken(s, t, n));
                for(var a in this.ambigresets)if (this.ambigresets[a] === 1) {
                    var o = this.ambigcites[s][0], i = this.state.refetchItem(o);
                    this.registry[o].disambig = new r.AmbigConfig, this.state.tmp.disambig_settings = !1;
                    var s = r.getAmbiguousCite.call(this.state, i), n = r.getAmbigConfig.call(this.state);
                    this.registerAmbigToken(s, o, n);
                }
                this.state.tmp.taintedItemIDs[t] = !0, this.ambigsTouched[s] = !0, i.legislation_id || (this.akeys[s] = !0), this.touched[t] = !0;
            }
        };
        r.Registry.prototype.setdisambigs = function() {
            for(var t in this.ambigsTouched)this.state.disambiguate.run(t);
            this.ambigsTouched = {}, this.akeys = {};
        };
        r.Registry.prototype.renumber = function() {
            var t, e, i;
            for(this.state.bibliography_sort.opt.citation_number_sort_direction === r.DESCENDING && (this.state.bibliography_sort.tmp.citation_number_map = {}), t = this.reflist.length, e = 0; e < t; e += 1)i = this.reflist[e], i.seq = e + 1, this.state.bibliography_sort.opt.citation_number_sort_direction === r.DESCENDING && (this.state.bibliography_sort.tmp.citation_number_map[i.seq] = this.reflist.length - i.seq + 1), this.state.opt.update_mode === r.NUMERIC && i.seq != this.oldseq[i.id] && (this.state.tmp.taintedItemIDs[i.id] = !0), i.seq != this.oldseq[i.id] && (this.return_data.bibchange = !0);
        };
        r.Registry.prototype.setsortkeys = function() {
            for(var t, e = 0, i = this.mylist.length; e < i; e += 1){
                var t = this.mylist[e];
                (this.touched[t] || this.state.tmp.taintedItemIDs[t] || !this.registry[t].sortkeys) && (this.registry[t].sortkeys = r.getSortKeys.call(this.state, this.state.retrieveItem(t), "bibliography_sort"));
            }
        };
        r.Registry.prototype._insertItem = function(t, e) {
            return e.splice(this._locationOf(t, e) + 1, 0, t), e;
        };
        r.Registry.prototype._locationOf = function(t, e, i, s) {
            if (e.length === 0) return -1;
            i = i || 0, s = s || e.length;
            var n = i + s >> 1, a = this.sorter.compareKeys(t, e[n]);
            if (s - i <= 1) return a == -1 ? n - 1 : n;
            switch(a){
                case -1:
                    return this._locationOf(t, e, i, n);
                case 0:
                    return n;
                case 1:
                    return this._locationOf(t, e, n, s);
            }
        };
        r.Registry.prototype.sorttokens = function(t) {
            var e, i, s, n;
            if (!t) {
                for(this.reflist_inserts = [], e = this.mylist.length, n = 0; n < e; n += 1)i = this.mylist[n], s = this.registry[i], s.newItem && this.reflist_inserts.push(s);
                for(var a in this.state.tmp.taintedItemIDs)if (this.registry[a] && !this.registry[a].newItem) for(var o = this.reflist.length - 1; o > -1; o--)this.reflist[o].id === a && (this.reflist_inserts.push(this.reflist[o]), this.reflist = this.reflist.slice(0, o).concat(this.reflist.slice(o + 1)));
                for(var o = 0, l = this.reflist_inserts.length; o < l; o++){
                    var s = this.reflist_inserts[o];
                    delete s.newItem, this.reflist = this._insertItem(s, this.reflist);
                }
                for(n = 0; n < e; n += 1)i = this.mylist[n], s = this.registry[i], this.registry[i].seq = n + 1;
            }
        };
        r.Registry.Comparifier = function(t, e) {
            var i, s, n, a, o = r.getSortCompare.call(t, t.opt["default-locale-sort"]);
            i = t[e].opt.sort_directions, this.compareKeys = function(l, u) {
                for(s = l.sortkeys ? l.sortkeys.length : 0, n = 0; n < s; n += 1){
                    var f = 0;
                    if (l.sortkeys[n] === u.sortkeys[n] ? f = 0 : typeof l.sortkeys[n] > "u" ? f = i[n][1] : typeof u.sortkeys[n] > "u" ? f = i[n][0] : f = o(l.sortkeys[n], u.sortkeys[n]), 0 < f) return i[n][1];
                    if (0 > f) return i[n][0];
                }
                return l.seq > u.seq ? 1 : l.seq < u.seq ? -1 : 0;
            }, a = this.compareKeys, this.compareCompositeKeys = function(l, u) {
                return a(l[1], u[1]);
            };
        };
        r.Registry.prototype.compareRegistryTokens = function(t, e) {
            return t.seq > e.seq ? 1 : t.seq < e.seq ? -1 : 0;
        };
        r.Registry.prototype.registerAmbigToken = function(t, e, i) {
            if (this.registry[e] || r.debug("Warning: unregistered item: itemID=(" + e + "), akey=(" + t + ")"), this.registry[e] && this.registry[e].disambig && this.registry[e].disambig.names) for(var s = 0, n = i.names.length; s < n; s += 1){
                var a = i.names[s], o = this.registry[e].disambig.names[s];
                if (a !== o) this.state.tmp.taintedItemIDs[e] = !0;
                else if (i.givens[s]) for(var l = 0, u = i.givens[s].length; l < u; l += 1){
                    var f = i.givens[s][l], h = this.registry[e].disambig.givens[s][l];
                    f !== h && (this.state.tmp.taintedItemIDs[e] = !0);
                }
            }
            this.ambigcites[t] || (this.ambigcites[t] = []), this.ambigcites[t].indexOf("" + e) === -1 && this.ambigcites[t].push("" + e), this.registry[e].ambig = t, this.registry[e].disambig = r.cloneAmbigConfig(i);
        };
        r.getSortKeys = function(t, e) {
            var i, s, n, a, o, l;
            for(i = this.tmp.area, s = this.tmp.root, n = this.tmp.extension, a = r.Util.Sort.strip_prepositions, this.tmp.area = e, this.tmp.root = e.indexOf("_") > -1 ? e.slice(0, -5) : e, this.tmp.extension = "_sort", this.tmp.disambig_override = !0, this.tmp.disambig_request = !1, this.tmp.suppress_decorations = !0, r.getCite.call(this, t), this.tmp.suppress_decorations = !1, this.tmp.disambig_override = !1, o = this[e].keys.length, l = 0; l < o; l += 1)this[e].keys[l] = a(this[e].keys[l]);
            return this.tmp.area = i, this.tmp.root = s, this.tmp.extension = n, this[e].keys;
        };
        r.Registry.NameReg = function(t) {
            var e, i, s, n, a, o, l, u, f, h, d, p;
            this.state = t, this.namereg = {}, this.nameind = {}, this.nameindpkeys = {}, this.itemkeyreg = {}, l = function(m) {
                return m || (m = ""), m.replace(/\./g, " ").replace(/\s+/g, " ").replace(/\s+$/, "");
            }, u = function(m, b, c) {
                e = l(c.family), m.opt["demote-non-dropping-particle"] === "never" && c["non-dropping-particle"] && c.family && (e = `${e} ${c["non-dropping-particle"]}`), s = l(c.given);
                var S = s.match(/[,\!]* ([^,]+)$/);
                S && S[1] === S[1].toLowerCase() && (s = s.replace(/[,\!]* [^,]+$/, "")), i = r.Util.Names.initializeWith(m, s, "%s"), m.citation.opt["givenname-disambiguation-rule"] === "by-cite" && (e = "" + b + e);
            }, f = function(m, b, c, S, g, v) {
                var y;
                if (t.tmp.area.slice(0, 12) === "bibliography" && !g) return typeof v == "string" ? 1 : 2;
                var _ = t.nameOutput.getName(b, "locale-translit", !0);
                b = _.name, u(this.state, "" + m, b), y = 2, n = t.opt["disambiguate-add-givenname"], a = t.citation.opt["givenname-disambiguation-rule"];
                var E = a;
                if (a === "by-cite" && (a = "all-names"), g === "short" ? y = 0 : typeof v == "string" && (y = 1), typeof this.namereg[e] > "u" || typeof this.namereg[e].ikey[i] > "u") return y;
                if (E === "by-cite" && y <= S) return S;
                if (!n || typeof a == "string" && a.slice(0, 12) === "primary-name" && c > 0 || (!a || a === "all-names" || a === "primary-name" ? (this.namereg[e].count > 1 && (y = 1), (this.namereg[e].ikey && this.namereg[e].ikey[i].count > 1 || this.namereg[e].count > 1 && typeof v != "string") && (y = 2)) : (a === "all-names-with-initials" || a === "primary-name-with-initials") && (this.namereg[e].count > 1 ? y = 1 : y = 0), t.registry.registry[m])) return y;
                if (g == "short") return 0;
                if (typeof v == "string") return 1;
            }, h = function(m) {
                var b, c, S, g, v;
                (typeof m == "string" || typeof m == "number") && (m = [
                    "" + m
                ]);
                var y = {};
                for(c = m.length, b = 0; b < c; b += 1)if (g = "" + m[b], !!this.nameind[g]) {
                    for(v in this.nameind[g])if (this.nameind[g].hasOwnProperty(v)) {
                        var _ = v.split("::");
                        if (e = _[0], i = _[1], s = _[2], typeof this.namereg[e] > "u") continue;
                        if (o = this.namereg[e].items, s && this.namereg[e].ikey[i] && this.namereg[e].ikey[i].skey[s] && (p = this.namereg[e].ikey[i].skey[s].items, S = p.indexOf("" + g), S > -1 && (this.namereg[e].ikey[i].skey[s].items = p.slice(0, S).concat(p.slice([
                            S + 1
                        ]))), this.namereg[e].ikey[i].skey[s].items.length === 0 && (delete this.namereg[e].ikey[i].skey[s], this.namereg[e].ikey[i].count += -1, this.namereg[e].ikey[i].count < 2))) for(var E = 0, x = this.namereg[e].ikey[i].items.length; E < x; E += 1)t.tmp.taintedItemIDs[this.namereg[e].ikey[i].items[E]] = !0;
                        if (i && this.namereg[e].ikey[i] && (S = this.namereg[e].ikey[i].items.indexOf("" + g), S > -1 && (o = this.namereg[e].ikey[i].items.slice(), this.namereg[e].ikey[i].items = o.slice(0, S).concat(o.slice([
                            S + 1
                        ]))), this.namereg[e].ikey[i].items.length === 0 && (delete this.namereg[e].ikey[i], this.namereg[e].count += -1, this.namereg[e].count < 2))) for(var E = 0, x = this.namereg[e].items.length; E < x; E += 1)t.tmp.taintedItemIDs[this.namereg[e].items[E]] = !0;
                        e && (S = this.namereg[e].items.indexOf("" + g), S > -1 && (o = this.namereg[e].items.slice(), this.namereg[e].items = o.slice(0, S).concat(o.slice([
                            S + 1
                        ], o.length))), this.namereg[e].items.length < 2 && delete this.namereg[e]), delete this.nameind[g][v];
                    }
                    delete this.nameind[g], delete this.nameindpkeys[g];
                }
                return y;
            }, d = function(m, b, c) {
                var S, g, v = t.nameOutput.getName(b, "locale-translit", !0);
                if (b = v.name, !(t.citation.opt["givenname-disambiguation-rule"] && t.citation.opt["givenname-disambiguation-rule"].slice(0, 8) === "primary-" && c !== 0)) {
                    if (u(this.state, "" + m, b), e && (typeof this.namereg[e] > "u" ? (this.namereg[e] = {}, this.namereg[e].count = 0, this.namereg[e].ikey = {}, this.namereg[e].items = [
                        m
                    ]) : this.namereg[e].items.indexOf(m) === -1 && this.namereg[e].items.push(m)), e && i) if (typeof this.namereg[e].ikey[i] > "u") {
                        if (this.namereg[e].ikey[i] = {}, this.namereg[e].ikey[i].count = 0, this.namereg[e].ikey[i].skey = {}, this.namereg[e].ikey[i].items = [
                            m
                        ], this.namereg[e].count += 1, this.namereg[e].count === 2) for(var S = 0, g = this.namereg[e].items.length; S < g; S += 1)t.tmp.taintedItemIDs[this.namereg[e].items[S]] = !0;
                    } else this.namereg[e].ikey[i].items.indexOf(m) === -1 && this.namereg[e].ikey[i].items.push(m);
                    if (e && i && s) if (typeof this.namereg[e].ikey[i].skey[s] > "u") {
                        if (this.namereg[e].ikey[i].skey[s] = {}, this.namereg[e].ikey[i].skey[s].items = [
                            m
                        ], this.namereg[e].ikey[i].count += 1, this.namereg[e].ikey[i].count === 2) for(var S = 0, g = this.namereg[e].ikey[i].items.length; S < g; S += 1)t.tmp.taintedItemIDs[this.namereg[e].ikey[i].items[S]] = !0;
                    } else this.namereg[e].ikey[i].skey[s].items.indexOf(m) === -1 && this.namereg[e].ikey[i].skey[s].items.push(m);
                    typeof this.nameind[m] > "u" && (this.nameind[m] = {}, this.nameindpkeys[m] = {}), e && (this.nameind[m][e + "::" + i + "::" + s] = !0, this.nameindpkeys[m][e] = this.namereg[e]);
                }
            }, this.addname = d, this.delitems = h, this.evalname = f;
        };
        r.Registry.CitationReg = function() {
            this.citationById = {}, this.citationByIndex = [];
        };
        r.Disambiguation = function(t) {
            this.state = t, this.sys = this.state.sys, this.registry = t.registry.registry, this.ambigcites = t.registry.ambigcites, this.configModes(), this.debug = !1;
        };
        r.Disambiguation.prototype.run = function(t) {
            this.modes.length && (this.debug && this.state.sys.print("[A] === RUN ==="), this.akey = t, this.initVars(t) && this.runDisambig());
        };
        r.Disambiguation.prototype.runDisambig = function() {
            var t;
            for(this.debug && this.state.sys.print("[C] === runDisambig() ==="), this.initGivens = !0; this.lists.length;){
                for(this.gnameset = 0, this.gname = 0, this.clashes = [
                    1,
                    0
                ]; this.lists[0][1].length;)this.listpos = 0, this.base || (this.base = this.lists[0][0]), t = this.incrementDisambig(), this.scanItems(this.lists[0]), this.evalScan(t);
                this.lists = this.lists.slice(1);
            }
        };
        r.Disambiguation.prototype.scanItems = function(t) {
            var e, i, s;
            this.debug && this.state.sys.print("[2] === scanItems() ==="), this.Item = t[1][0], this.ItemCite = r.getAmbiguousCite.call(this.state, this.Item, this.base, !0), this.scanlist = t[1], this.partners = [], this.partners.push(this.Item), this.nonpartners = [];
            for(var n = 0, e = 1, i = t[1].length; e < i; e += 1){
                s = t[1][e];
                var a = r.getAmbiguousCite.call(this.state, s, this.base, !0);
                this.debug && e > 1 && this.state.sys.print("  -----------"), this.ItemCite === a ? (this.debug && (this.state.sys.print("  [CLASH]--> " + this.Item.id + ": " + this.ItemCite), this.state.sys.print("             " + s.id + ": " + a)), n += 1, this.partners.push(s)) : (this.debug && (this.state.sys.print("  [clear]--> " + this.Item.id + ": " + this.ItemCite), this.state.sys.print("             " + s.id + ": " + a)), this.nonpartners.push(s));
            }
            this.clashes[0] = this.clashes[1], this.clashes[1] = n;
        };
        r.Disambiguation.prototype.evalScan = function(t) {
            this[this.modes[this.modeindex]](t), t && (this.modeindex < this.modes.length - 1 ? this.modeindex += 1 : this.lists[this.listpos + 1] = [
                this.base,
                []
            ]);
        };
        r.Disambiguation.prototype.disNames = function(t) {
            var e, i;
            if (this.debug && this.state.sys.print("[3] == disNames() =="), this.clashes[1] === 0 && this.nonpartners.length === 1) this.captureStepToBase(), this.debug && (this.state.sys.print("  ** RESOLUTION [a]: lone partner, one nonpartner"), this.state.sys.print("  registering " + this.partners[0].id + " and " + this.nonpartners[0].id)), this.state.registry.registerAmbigToken(this.akey, "" + this.nonpartners[0].id, this.betterbase), this.state.registry.registerAmbigToken(this.akey, "" + this.partners[0].id, this.betterbase), this.lists[this.listpos] = [
                this.betterbase,
                []
            ];
            else if (this.clashes[1] === 0) this.captureStepToBase(), this.debug && (this.state.sys.print("  ** RESOLUTION [b]: lone partner, unknown number of remaining nonpartners"), this.state.sys.print("  registering " + this.partners[0].id)), this.state.registry.registerAmbigToken(this.akey, "" + this.partners[0].id, this.betterbase), this.lists[this.listpos] = [
                this.betterbase,
                this.nonpartners
            ], this.nonpartners.length && (this.initGivens = !0);
            else if (this.nonpartners.length === 1) this.captureStepToBase(), this.debug && (this.state.sys.print("  ** RESOLUTION [c]: lone nonpartner, unknown number of partners remaining"), this.state.sys.print("  registering " + this.nonpartners[0].id)), this.state.registry.registerAmbigToken(this.akey, "" + this.nonpartners[0].id, this.betterbase), this.lists[this.listpos] = [
                this.betterbase,
                this.partners
            ];
            else if (this.clashes[1] < this.clashes[0]) this.captureStepToBase(), this.debug && this.state.sys.print("  ** RESOLUTION [d]: better result, but no entries safe to register"), this.lists[this.listpos] = [
                this.betterbase,
                this.partners
            ], this.lists.push([
                this.betterbase,
                this.nonpartners
            ]);
            else if (this.debug && this.state.sys.print("  ** RESOLUTION [e]: no improvement, and clashes remain"), t && (this.lists[this.listpos] = [
                this.betterbase,
                this.nonpartners
            ], this.lists.push([
                this.betterbase,
                this.partners
            ]), this.modeindex === this.modes.length - 1)) {
                this.debug && this.state.sys.print("     (registering clashing entries because we've run out of options)");
                for(var e = 0, i = this.partners.length; e < i; e += 1)this.state.registry.registerAmbigToken(this.akey, "" + this.partners[e].id, this.betterbase);
                this.lists[this.listpos] = [
                    this.betterbase,
                    []
                ];
            }
        };
        r.Disambiguation.prototype.disExtraText = function() {
            this.debug && this.state.sys.print("[3] === disExtraText ==");
            var t = !1;
            if (this.clashes[1] === 0 && this.nonpartners.length < 2 && (t = !0), !t && (!this.base.disambiguate || this.state.tmp.disambiguate_count !== this.state.tmp.disambiguate_maxMax)) if (this.modeindex = 0, this.base.disambiguate = this.state.tmp.disambiguate_count, this.betterbase.disambiguate = this.state.tmp.disambiguate_count, this.base.disambiguate) this.disNames();
            else {
                this.initGivens = !0, this.base.disambiguate = 1;
                for(var e = 0, i = this.lists[this.listpos][1].length; e < i; e += 1)this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][e].id] = !0;
            }
            else if (t || this.state.tmp.disambiguate_count === this.state.tmp.disambiguate_maxMax) if (t || this.modeindex === this.modes.length - 1) {
                for(var s = this.lists[this.listpos][0], e = 0, i = this.lists[this.listpos][1].length; e < i; e += 1)this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][e].id] = !0, this.state.registry.registerAmbigToken(this.akey, "" + this.lists[this.listpos][1][e].id, s);
                this.lists[this.listpos] = [
                    this.betterbase,
                    []
                ];
            } else {
                this.modeindex = this.modes.length - 1;
                var s = this.lists[this.listpos][0];
                s.disambiguate = !0;
                for(var e = 0, i = this.lists[this.listpos][1].length; e < i; e += 1)this.state.tmp.taintedItemIDs[this.lists[this.listpos][1][e].id] = !0, this.state.registry.registerAmbigToken(this.akey, "" + this.lists[this.listpos][1][e].id, s);
            }
        };
        r.Disambiguation.prototype.disYears = function() {
            var t, e, i, s;
            this.debug && this.state.sys.print("[3] === disYears =="), i = [];
            var n = this.lists[this.listpos][0];
            if (this.clashes[1]) for(var a = 0, o = this.state.registry.mylist.length; a < o; a += 1)for(var l = this.state.registry.mylist[a], u = 0, f = this.lists[this.listpos][1].length; u < f; u += 1){
                var s = this.lists[this.listpos][1][u];
                if (s.id == l) {
                    i.push(this.registry[s.id]);
                    break;
                }
            }
            i.sort(this.state.registry.sorter.compareKeys);
            for(var t = 0, e = i.length; t < e; t += 1){
                n.year_suffix = "" + t;
                var h = this.state.registry.registry[i[t].id].disambig;
                this.state.registry.registerAmbigToken(this.akey, "" + i[t].id, n), r.ambigConfigDiff(h, n) && (this.state.tmp.taintedItemIDs[i[t].id] = !0);
            }
            this.lists[this.listpos] = [
                this.betterbase,
                []
            ];
        };
        r.Disambiguation.prototype.incrementDisambig = function() {
            if (this.debug && this.state.sys.print(`
[1] === incrementDisambig() ===`), this.initGivens) return this.initGivens = !1, !1;
            var t = !1, e = !0;
            if (this.modes[this.modeindex] === "disNames") {
                e = !1, typeof this.givensMax != "number" && (e = !0);
                var i = !1;
                typeof this.namesMax != "number" && (i = !0), typeof this.givensMax == "number" && (this.base.givens.length && this.base.givens[this.gnameset][this.gname] < this.givensMax ? this.base.givens[this.gnameset][this.gname] += 1 : e = !0), typeof this.namesMax == "number" && e && (this.state.opt["disambiguate-add-names"] ? (i = !1, this.gname < this.namesMax ? (this.base.names[this.gnameset] += 1, this.gname += 1) : i = !0) : i = !0), typeof this.namesetsMax == "number" && i && this.gnameset < this.namesetsMax && (this.gnameset += 1, this.base.names[this.gnameset] = 1, this.gname = 0), this.debug && (this.state.sys.print("    ------------------"), this.state.sys.print("    incremented values"), this.state.sys.print("    ------------------"), this.state.sys.print("    | gnameset: " + this.gnameset), this.state.sys.print("    | gname: " + this.gname), this.state.sys.print("    | names value: " + this.base.names[this.gnameset]), this.base.givens.length ? this.state.sys.print("    | givens value: " + this.base.givens[this.gnameset][this.gname]) : this.state.sys.print("    | givens value: nil"), this.state.sys.print("    | namesetsMax: " + this.namesetsMax), this.state.sys.print("    | namesMax: " + this.namesMax), this.state.sys.print("    | givensMax: " + this.givensMax)), (typeof this.namesetsMax != "number" || this.namesetsMax === -1 || this.gnameset === this.namesetsMax) && (!this.state.opt["disambiguate-add-names"] || typeof this.namesMax != "number" || this.gname === this.namesMax) && (typeof this.givensMax != "number" || typeof this.base.givens[this.gnameset] > "u" || typeof this.base.givens[this.gnameset][this.gname] > "u" || this.base.givens[this.gnameset][this.gname] === this.givensMax) && (t = !0, this.debug && this.state.sys.print("    MAXED"));
            } else this.modes[this.modeindex] === "disExtraText" && (this.base.disambiguate += 1, this.betterbase.disambiguate += 1);
            return t;
        };
        r.Disambiguation.prototype.initVars = function(t) {
            var e, i, s, n, a;
            if (this.debug && this.state.sys.print("[B] === initVars() ==="), this.lists = [], this.base = !1, this.betterbase = !1, this.akey = t, this.maxNamesByItemId = {}, n = [], s = this.ambigcites[t], !s || !s.length) return !1;
            var o = this.state.refetchItem("" + s[0]);
            if (this.getCiteData(o), this.base = r.getAmbigConfig.call(this.state), s && s.length > 1) {
                n.push([
                    this.maxNamesByItemId[o.id],
                    o
                ]);
                for(var e = 1, i = s.length; e < i; e += 1)o = this.state.refetchItem("" + s[e]), this.getCiteData(o, this.base), n.push([
                    this.maxNamesByItemId[o.id],
                    o
                ]);
                n.sort(function(u, f) {
                    return u[0] > f[0] ? 1 : u[0] < f[0] ? -1 : u[1].id > f[1].id ? 1 : u[1].id < f[1].id ? -1 : 0;
                }), a = [];
                for(var e = 0, i = n.length; e < i; e += 1)a.push(n[e][1]);
                this.lists.push([
                    this.base,
                    a
                ]), this.Item = this.lists[0][1][0];
            } else this.Item = this.state.refetchItem("" + s[0]);
            if (this.modeindex = 0, this.state.citation.opt["disambiguate-add-names"] || !0) this.namesMax = this.maxNamesByItemId[this.Item.id][0];
            else {
                for(var e, i; e < i; e += 1);
            }
            return this.padBase(this.base), this.padBase(this.betterbase), this.base.year_suffix = !1, this.base.disambiguate = !1, this.betterbase.year_suffix = !1, this.betterbase.disambiguate = !1, this.state.citation.opt["givenname-disambiguation-rule"] === "by-cite" && this.state.opt["disambiguate-add-givenname"] && (this.givensMax = 2), !0;
        };
        r.Disambiguation.prototype.padBase = function(t) {
            for(var e = 0, i = t.names.length; e < i; e += 1){
                t.givens[e] || (t.givens[e] = []);
                for(var s = 0, n = t.names[e]; s < n; s += 1)t.givens[e][s] || (t.givens[e][s] = 0);
            }
        };
        r.Disambiguation.prototype.configModes = function() {
            var t, e;
            this.modes = [], t = this.state.opt["disambiguate-add-givenname"], e = this.state.citation.opt["givenname-disambiguation-rule"], (this.state.opt["disambiguate-add-names"] || t && e === "by-cite") && this.modes.push("disNames"), this.state.opt.development_extensions.prioritize_disambiguate_condition ? (this.state.opt.has_disambiguate && this.modes.push("disExtraText"), this.state.opt["disambiguate-add-year-suffix"] && this.modes.push("disYears")) : (this.state.opt["disambiguate-add-year-suffix"] && this.modes.push("disYears"), this.state.opt.has_disambiguate && this.modes.push("disExtraText"));
        };
        r.Disambiguation.prototype.getCiteData = function(t, e) {
            if (!this.maxNamesByItemId[t.id]) {
                r.getAmbiguousCite.call(this.state, t, e), e = r.getAmbigConfig.call(this.state), this.maxNamesByItemId[t.id] = r.getMaxVals.call(this.state), this.state.registry.registry[t.id].disambig.givens = this.state.tmp.disambig_settings.givens.slice();
                for(var i = 0, s = this.state.registry.registry[t.id].disambig.givens.length; i < s; i += 1)this.state.registry.registry[t.id].disambig.givens[i] = this.state.tmp.disambig_settings.givens[i].slice();
                this.namesetsMax = this.state.registry.registry[t.id].disambig.names.length - 1, this.base || (this.base = e, this.betterbase = r.cloneAmbigConfig(e)), e.names.length < this.base.names.length && (this.base = e);
                for(var i = 0, s = e.names.length; i < s; i += 1)e.names[i] > this.base.names[i] && (this.base.givens[i] = e.givens[i].slice(), this.base.names[i] = e.names[i], this.betterbase.names = this.base.names.slice(), this.betterbase.givens = this.base.givens.slice(), this.padBase(this.base), this.padBase(this.betterbase));
                this.betterbase.givens = this.base.givens.slice();
                for(var n = 0, a = this.base.givens.length; n < a; n += 1)this.betterbase.givens[n] = this.base.givens[n].slice();
            }
        };
        r.Disambiguation.prototype.captureStepToBase = function() {
            this.state.citation.opt["givenname-disambiguation-rule"] === "by-cite" && this.base.givens && this.base.givens.length && typeof this.base.givens[this.gnameset][this.gname] < "u" && (this.betterbase.givens.length < this.base.givens.length && (this.betterbase.givens = JSON.parse(JSON.stringify(this.base.givens))), this.betterbase.givens[this.gnameset][this.gname] = this.base.givens[this.gnameset][this.gname]), this.betterbase.names[this.gnameset] = this.base.names[this.gnameset];
        };
        r.Engine.prototype.getJurisdictionList = function(t) {
            for(var e = [], i = t.split(":"), s = i.length; s > 0; s--){
                var n = i.slice(0, s).join(":");
                if (e.push(n), this.opt.jurisdiction_fallbacks[n]) {
                    var a = this.opt.jurisdiction_fallbacks[n];
                    e.push(a);
                }
            }
            return e.indexOf("us") === -1 && e.push("us"), e;
        };
        r.Engine.prototype.loadStyleModule = function(t, e, i) {
            var s = null, n = 0;
            this.juris[t] = {};
            var a = r.setupXml(e);
            a.addMissingNameNodes(a.dataObj), a.addInstitutionNodes(a.dataObj), a.insertPublisherAndPlace(a.dataObj), a.flagDateMacros(a.dataObj);
            for(var p = a.getNodesByName(a.dataObj, "law-module"), o = 0, l = p.length; o < l; o++){
                var u = a.getAttributeValue(p[o], "types");
                if (u) {
                    this.juris[t].types = {}, u = u.split(/\s+/);
                    for(var f = 0, h = u.length; f < h; f++)this.juris[t].types[u[f]] = !0;
                }
                i || (s = a.getAttributeValue(p[o], "fallback"), s && t !== "us" && (this.opt.jurisdiction_fallbacks[t] = s));
            }
            var d = this.opt.lang ? this.opt.lang : this.opt["default-locale"][0];
            r.SET_COURT_CLASSES(this, d, a, a.dataObj), this.juris[t].types || (this.juris[t].types = r.MODULE_TYPES);
            for(var p = a.getNodesByName(a.dataObj, "macro"), o = 0, l = p.length; o < l; o++){
                var m = a.getAttributeValue(p[o], "name");
                if (!r.MODULE_MACROS[m]) {
                    r.debug('CSL: skipping non-modular macro name "' + m + '" in module context');
                    continue;
                }
                n++, this.juris[t][m] = [], this.buildTokenLists(p[o], this.juris[t][m]), this.configureTokenList(this.juris[t][m]);
            }
            return s;
        };
        r.Engine.prototype.retrieveAllStyleModules = function(t) {
            var e = {}, i = this.locale[this.opt.lang].opts["jurisdiction-preference"];
            i = i || [], i = [
                ""
            ].concat(i);
            for(var s = i.length - 1; s > -1; s--)for(var n = i[s], a = 0, o = t.length; a < o; a++){
                var l = t[a];
                if (!this.opt.jurisdictions_seen[l]) {
                    var u = this.sys.retrieveStyleModule(l, n);
                    (!u && !n || u) && (this.opt.jurisdictions_seen[l] = !0), u && (e[l] = u);
                }
            }
            return e;
        };
        r.ParticleList = function() {
            var t = [
                [
                    [
                        0,
                        1
                    ],
                    null
                ]
            ], e = [
                [
                    [
                        0,
                        3
                    ],
                    null
                ]
            ], i = [
                [
                    null,
                    [
                        0,
                        1
                    ]
                ]
            ], s = [
                [
                    null,
                    [
                        0,
                        2
                    ]
                ]
            ], n = [
                [
                    null,
                    [
                        0,
                        3
                    ]
                ]
            ], a = [
                [
                    null,
                    [
                        0,
                        1
                    ]
                ],
                [
                    [
                        0,
                        1
                    ],
                    null
                ]
            ], o = [
                [
                    null,
                    [
                        0,
                        2
                    ]
                ],
                [
                    [
                        0,
                        2
                    ],
                    null
                ]
            ], l = [
                [
                    [
                        0,
                        1
                    ],
                    null
                ],
                [
                    null,
                    [
                        0,
                        1
                    ]
                ]
            ], u = [
                [
                    [
                        0,
                        2
                    ],
                    null
                ],
                [
                    null,
                    [
                        0,
                        2
                    ]
                ]
            ], f = [
                [
                    [
                        0,
                        3
                    ],
                    null
                ],
                [
                    null,
                    [
                        0,
                        3
                    ]
                ]
            ], h = [
                [
                    null,
                    [
                        0,
                        2
                    ]
                ],
                [
                    [
                        0,
                        1
                    ],
                    [
                        1,
                        2
                    ]
                ]
            ], d = [
                [
                    "'s",
                    i
                ],
                [
                    "'s-",
                    i
                ],
                [
                    "'t",
                    i
                ],
                [
                    "a",
                    i
                ],
                [
                    "aan 't",
                    s
                ],
                [
                    "aan de",
                    s
                ],
                [
                    "aan den",
                    s
                ],
                [
                    "aan der",
                    s
                ],
                [
                    "aan het",
                    s
                ],
                [
                    "aan t",
                    s
                ],
                [
                    "aan",
                    i
                ],
                [
                    "ad-",
                    a
                ],
                [
                    "adh-",
                    a
                ],
                [
                    "af",
                    a
                ],
                [
                    "al",
                    a
                ],
                [
                    "al-",
                    a
                ],
                [
                    "am de",
                    s
                ],
                [
                    "am",
                    i
                ],
                [
                    "an-",
                    a
                ],
                [
                    "ar-",
                    a
                ],
                [
                    "as-",
                    a
                ],
                [
                    "ash-",
                    a
                ],
                [
                    "at-",
                    a
                ],
                [
                    "ath-",
                    a
                ],
                [
                    "auf dem",
                    u
                ],
                [
                    "auf den",
                    u
                ],
                [
                    "auf der",
                    u
                ],
                [
                    "auf ter",
                    s
                ],
                [
                    "auf",
                    l
                ],
                [
                    "aus 'm",
                    u
                ],
                [
                    "aus dem",
                    u
                ],
                [
                    "aus den",
                    u
                ],
                [
                    "aus der",
                    u
                ],
                [
                    "aus m",
                    u
                ],
                [
                    "aus",
                    l
                ],
                [
                    "aus'm",
                    u
                ],
                [
                    "az-",
                    a
                ],
                [
                    "a\u0161-",
                    a
                ],
                [
                    "a\u1E0D-",
                    a
                ],
                [
                    "a\u1E0F-",
                    a
                ],
                [
                    "a\u1E63-",
                    a
                ],
                [
                    "a\u1E6D-",
                    a
                ],
                [
                    "a\u1E6F-",
                    a
                ],
                [
                    "a\u1E93-",
                    a
                ],
                [
                    "ben",
                    i
                ],
                [
                    "bij 't",
                    s
                ],
                [
                    "bij de",
                    s
                ],
                [
                    "bij den",
                    s
                ],
                [
                    "bij het",
                    s
                ],
                [
                    "bij t",
                    s
                ],
                [
                    "bij",
                    i
                ],
                [
                    "bin",
                    i
                ],
                [
                    "boven d",
                    s
                ],
                [
                    "boven d'",
                    s
                ],
                [
                    "d",
                    i
                ],
                [
                    "d'",
                    a
                ],
                [
                    "da",
                    a
                ],
                [
                    "dal",
                    i
                ],
                [
                    "dal'",
                    i
                ],
                [
                    "dall'",
                    i
                ],
                [
                    "dalla",
                    i
                ],
                [
                    "das",
                    a
                ],
                [
                    "de die le",
                    n
                ],
                [
                    "de die",
                    s
                ],
                [
                    "de l",
                    s
                ],
                [
                    "de l'",
                    s
                ],
                [
                    "de la",
                    h
                ],
                [
                    "de las",
                    h
                ],
                [
                    "de le",
                    s
                ],
                [
                    "de li",
                    o
                ],
                [
                    "de van der",
                    n
                ],
                [
                    "de",
                    a
                ],
                [
                    "de'",
                    a
                ],
                [
                    "deca",
                    i
                ],
                [
                    "degli",
                    a
                ],
                [
                    "dei",
                    a
                ],
                [
                    "del",
                    a
                ],
                [
                    "dela",
                    t
                ],
                [
                    "dell'",
                    a
                ],
                [
                    "della",
                    a
                ],
                [
                    "delle",
                    a
                ],
                [
                    "dello",
                    a
                ],
                [
                    "den",
                    a
                ],
                [
                    "der",
                    a
                ],
                [
                    "des",
                    a
                ],
                [
                    "di",
                    a
                ],
                [
                    "die le",
                    s
                ],
                [
                    "do",
                    i
                ],
                [
                    "don",
                    i
                ],
                [
                    "dos",
                    a
                ],
                [
                    "du",
                    a
                ],
                [
                    "ed-",
                    a
                ],
                [
                    "edh-",
                    a
                ],
                [
                    "el",
                    a
                ],
                [
                    "el-",
                    a
                ],
                [
                    "en-",
                    a
                ],
                [
                    "er-",
                    a
                ],
                [
                    "es-",
                    a
                ],
                [
                    "esh-",
                    a
                ],
                [
                    "et-",
                    a
                ],
                [
                    "eth-",
                    a
                ],
                [
                    "ez-",
                    a
                ],
                [
                    "e\u0161-",
                    a
                ],
                [
                    "e\u1E0D-",
                    a
                ],
                [
                    "e\u1E0F-",
                    a
                ],
                [
                    "e\u1E63-",
                    a
                ],
                [
                    "e\u1E6D-",
                    a
                ],
                [
                    "e\u1E6F-",
                    a
                ],
                [
                    "e\u1E93-",
                    a
                ],
                [
                    "het",
                    i
                ],
                [
                    "i",
                    i
                ],
                [
                    "il",
                    t
                ],
                [
                    "im",
                    i
                ],
                [
                    "in 't",
                    s
                ],
                [
                    "in de",
                    s
                ],
                [
                    "in den",
                    s
                ],
                [
                    "in der",
                    o
                ],
                [
                    "in het",
                    s
                ],
                [
                    "in t",
                    s
                ],
                [
                    "in",
                    i
                ],
                [
                    "l",
                    i
                ],
                [
                    "l'",
                    i
                ],
                [
                    "la",
                    i
                ],
                [
                    "las",
                    i
                ],
                [
                    "le",
                    i
                ],
                [
                    "les",
                    a
                ],
                [
                    "lo",
                    a
                ],
                [
                    "los",
                    i
                ],
                [
                    "lou",
                    i
                ],
                [
                    "of",
                    i
                ],
                [
                    "onder 't",
                    s
                ],
                [
                    "onder de",
                    s
                ],
                [
                    "onder den",
                    s
                ],
                [
                    "onder het",
                    s
                ],
                [
                    "onder t",
                    s
                ],
                [
                    "onder",
                    i
                ],
                [
                    "op 't",
                    s
                ],
                [
                    "op de",
                    o
                ],
                [
                    "op den",
                    s
                ],
                [
                    "op der",
                    s
                ],
                [
                    "op gen",
                    s
                ],
                [
                    "op het",
                    s
                ],
                [
                    "op t",
                    s
                ],
                [
                    "op ten",
                    s
                ],
                [
                    "op",
                    i
                ],
                [
                    "over 't",
                    s
                ],
                [
                    "over de",
                    s
                ],
                [
                    "over den",
                    s
                ],
                [
                    "over het",
                    s
                ],
                [
                    "over t",
                    s
                ],
                [
                    "over",
                    i
                ],
                [
                    "s",
                    i
                ],
                [
                    "s'",
                    i
                ],
                [
                    "sen",
                    t
                ],
                [
                    "t",
                    i
                ],
                [
                    "te",
                    i
                ],
                [
                    "ten",
                    i
                ],
                [
                    "ter",
                    i
                ],
                [
                    "tho",
                    i
                ],
                [
                    "thoe",
                    i
                ],
                [
                    "thor",
                    i
                ],
                [
                    "to",
                    i
                ],
                [
                    "toe",
                    i
                ],
                [
                    "tot",
                    i
                ],
                [
                    "uijt 't",
                    s
                ],
                [
                    "uijt de",
                    s
                ],
                [
                    "uijt den",
                    s
                ],
                [
                    "uijt te de",
                    n
                ],
                [
                    "uijt ten",
                    s
                ],
                [
                    "uijt",
                    i
                ],
                [
                    "uit 't",
                    s
                ],
                [
                    "uit de",
                    s
                ],
                [
                    "uit den",
                    s
                ],
                [
                    "uit het",
                    s
                ],
                [
                    "uit t",
                    s
                ],
                [
                    "uit te de",
                    n
                ],
                [
                    "uit ten",
                    s
                ],
                [
                    "uit",
                    i
                ],
                [
                    "unter",
                    i
                ],
                [
                    "v",
                    i
                ],
                [
                    "v.",
                    i
                ],
                [
                    "v.d.",
                    i
                ],
                [
                    "van 't",
                    s
                ],
                [
                    "van de l",
                    n
                ],
                [
                    "van de l'",
                    n
                ],
                [
                    "van de",
                    s
                ],
                [
                    "van de",
                    s
                ],
                [
                    "van den",
                    s
                ],
                [
                    "van der",
                    s
                ],
                [
                    "van gen",
                    s
                ],
                [
                    "van het",
                    s
                ],
                [
                    "van la",
                    s
                ],
                [
                    "van t",
                    s
                ],
                [
                    "van ter",
                    s
                ],
                [
                    "van van de",
                    n
                ],
                [
                    "van",
                    a
                ],
                [
                    "vander",
                    i
                ],
                [
                    "vd",
                    i
                ],
                [
                    "ver",
                    i
                ],
                [
                    "vom und zum",
                    e
                ],
                [
                    "vom",
                    a
                ],
                [
                    "von 't",
                    s
                ],
                [
                    "von dem",
                    u
                ],
                [
                    "von den",
                    u
                ],
                [
                    "von der",
                    u
                ],
                [
                    "von t",
                    s
                ],
                [
                    "von und zu",
                    f
                ],
                [
                    "von zu",
                    u
                ],
                [
                    "von",
                    l
                ],
                [
                    "voor 't",
                    s
                ],
                [
                    "voor de",
                    s
                ],
                [
                    "voor den",
                    s
                ],
                [
                    "voor in 't",
                    n
                ],
                [
                    "voor in t",
                    n
                ],
                [
                    "voor",
                    i
                ],
                [
                    "vor der",
                    u
                ],
                [
                    "vor",
                    l
                ],
                [
                    "z",
                    t
                ],
                [
                    "ze",
                    t
                ],
                [
                    "zu",
                    l
                ],
                [
                    "zum",
                    a
                ],
                [
                    "zur",
                    a
                ]
            ];
            return d;
        }();
        r.parseParticles = function() {
            function t(s, n, a) {
                var o = s;
                s = a ? s.toLowerCase() : s;
                var l = [], u, f;
                n ? (s = s.split("").reverse().join(""), u = r.PARTICLE_GIVEN_REGEXP) : u = r.PARTICLE_FAMILY_REGEXP;
                for(var h = s.match(u); h;){
                    var d = n ? h[1].split("").reverse().join("") : h[1], p = h ? d : !1, p = p ? d.replace(/^[-\'\u02bb\u2019\s]*(.).*$/, "$1") : !1;
                    if (f = p ? p.toUpperCase() !== p : !1, !f) break;
                    n ? (l.push(o.slice(d.length * -1)), o = o.slice(0, d.length * -1)) : (l.push(o.slice(0, d.length)), o = o.slice(d.length)), s = h[2], h = s.match(u);
                }
                if (n) {
                    s = s.split("").reverse().join(""), l.reverse();
                    for(var m = 1, b = l.length; m < b; m++)l[m].slice(0, 1) == " " && (l[m - 1] += " ");
                    for(var m = 0, b = l.length; m < b; m++)l[m].slice(0, 1) == " " && (l[m] = l[m].slice(1));
                    s = o.slice(0, s.length);
                } else s = o.slice(s.length * -1);
                return [
                    f,
                    s,
                    l
                ];
            }
            function e(s) {
                var n = s.slice(-1);
                return s = s.trim(), n === " " && [
                    "'",
                    "\u2019"
                ].indexOf(s.slice(-1)) > -1 && (s += " "), s;
            }
            function i(s) {
                if (!s.suffix && s.given) {
                    var n = s.given.match(/(\s*,!*\s*)/);
                    if (n) {
                        var a = s.given.indexOf(n[1]), o = s.given.slice(a + n[1].length), l = s.given.slice(a, a + n[1].length).replace(/\s*/g, "");
                        o.replace(/\./g, "") === "et al" && !s["dropping-particle"] ? (s["dropping-particle"] = o, s["comma-dropping-particle"] = ",") : (l.length === 2 && (s["comma-suffix"] = !0), s.suffix = o), s.given = s.given.slice(0, a);
                    }
                }
            }
            return function(s) {
                var l = t(s.family), n = l[1], a = l[2];
                s.family = n;
                var o = e(a.join(""));
                o && (s["non-dropping-particle"] = o), i(s);
                var l = t(s.given, !0), u = l[1], f = l[2];
                s.given = u;
                var h = f.join("").trim();
                h && (s["dropping-particle"] = h);
            };
        }();
        Ut.exports = r;
    });
    var ft1 = {};
    Yt2(ft1, {
        AFTER: ()=>Xe2,
        ALL_ROMANESQUE_REGEXP: ()=>Ti,
        AREAS: ()=>Ke1,
        ASCENDING: ()=>Fe2,
        ASSUME_ALL_ITEMS_REGISTERED: ()=>Ae2,
        AbbreviationSegments: ()=>me1,
        AmbigConfig: ()=>Ys,
        Attributes: ()=>$s,
        BEFORE: ()=>Me1,
        Blob: ()=>Zs,
        CITE_FIELDS: ()=>Ye3,
        CREATORS: ()=>wi1,
        Conditions: ()=>Fs,
        DATE_PARTS: ()=>ni,
        DATE_PARTS_ALL: ()=>ai,
        DATE_PARTS_INTERNAL: ()=>oi,
        DATE_VARIABLES: ()=>Pi,
        DESCENDING: ()=>qe2,
        DISAMBIGUATE_OPTIONS: ()=>ui,
        DISPLAY_CLASSES: ()=>ki,
        DateParser: ()=>xs,
        Disambiguation: ()=>nr1,
        Doppeler: ()=>Rs,
        END: ()=>Re2,
        ENDSWITH_ROMANESQUE_REGEXP: ()=>Si1,
        ERROR_NO_RENDERED_FORM: ()=>Ee1,
        EVALUATE_GROUP_CONDITION: ()=>Ki,
        Engine: ()=>Ss,
        FIELD_CATEGORY_REMAP: ()=>_e3,
        FORMAT_KEY_SEQUENCE: ()=>Gi,
        GENDERS: ()=>Oe2,
        GET_COURT_CLASS: ()=>es,
        GIVENNAME_DISAMBIGUATION_RULES: ()=>pi1,
        INIT_JURISDICTION_MACROS: ()=>ss,
        INSTITUTION_KEYS: ()=>zi,
        ITERATION: ()=>Os,
        LANGS: ()=>$i,
        LANG_BASES: ()=>Wi,
        LITERAL: ()=>Be2,
        LOCATOR_LABELS_MAP: ()=>ue4,
        LOCATOR_LABELS_REGEXP: ()=>re3,
        LOOSE: ()=>hi1,
        LangPrefsMap: ()=>de2,
        MODULE_MACROS: ()=>pe2,
        MODULE_TYPES: ()=>fe3,
        MULTI_FIELDS: ()=>ce2,
        Mode: ()=>As,
        NAME_ATTRIBUTES: ()=>fi,
        NAME_INITIAL_REGEXP: ()=>bi1,
        NAME_PARTS: ()=>li,
        NAME_VARIABLES: ()=>Di,
        NONE: ()=>ei1,
        NOTE_FIELDS_REGEXP: ()=>Ni,
        NOTE_FIELD_REGEXP: ()=>Ai,
        NUMBER_REGEXP: ()=>_i,
        NUMERIC: ()=>ii,
        NUMERIC_VARIABLES: ()=>Ci,
        NameOutput: ()=>Gs,
        Node: ()=>qs,
        NumericBlob: ()=>tr1,
        Output: ()=>ks,
        PARTICLE_FAMILY_REGEXP: ()=>Ri1,
        PARTICLE_GIVEN_REGEXP: ()=>Ii,
        PLURAL: ()=>Ue1,
        POSITION: ()=>si,
        POSITION_CONTAINER_SUBSEQUENT: ()=>Qe2,
        POSITION_FIRST: ()=>je2,
        POSITION_IBID: ()=>$e1,
        POSITION_IBID_WITH_LOCATOR: ()=>We1,
        POSITION_MAP: ()=>He1,
        POSITION_SUBSEQUENT: ()=>Ve2,
        POSITION_TEST_VARS: ()=>Je1,
        PREFIX_PUNCTUATION: ()=>mi,
        PREVIEW: ()=>Ne2,
        PRIMARY: ()=>Ge,
        PROCESSOR_VERSION: ()=>Zt1,
        Parallel: ()=>Qs,
        ParticleList: ()=>ar1,
        PublisherOutput: ()=>zs,
        ROMANESQUE_NOT_REGEXP: ()=>yi1,
        ROMANESQUE_REGEXP: ()=>vi,
        ROMAN_NUMERALS: ()=>Vi,
        Registry: ()=>sr1,
        SECONDARY: ()=>ze2,
        SEEN: ()=>De2,
        SET_COURT_CLASSES: ()=>is,
        SINGLETON: ()=>ke3,
        SINGULAR: ()=>Le2,
        SKIP_WORDS: ()=>Fi,
        START: ()=>Ie2,
        STARTSWITH_ROMANESQUE_REGEXP: ()=>xi,
        STATUTE_SUBDIV_PLAIN_REGEX: ()=>ne5,
        STATUTE_SUBDIV_PLAIN_REGEX_FRONT: ()=>ae4,
        STATUTE_SUBDIV_STRINGS: ()=>oe5,
        STATUTE_SUBDIV_STRINGS_REVERSE: ()=>le3,
        STRICT: ()=>ci1,
        SUCCESSOR: ()=>we3,
        SUCCESSOR_OF_SUCCESSOR: ()=>Ce3,
        SUFFIX_CHARS: ()=>ji,
        SUFFIX_PUNCTUATION: ()=>gi2,
        SUPERSCRIPTS: ()=>Qi,
        SUPERSCRIPTS_REGEXP: ()=>Hi,
        SUPPRESS: ()=>Pe2,
        SWAPPING_PUNCTUATION: ()=>Ze1,
        SYS_OPTIONS: ()=>Yi,
        Stack: ()=>Ws,
        TERMINAL_PUNCTUATION: ()=>ti,
        TITLE_FIELD_SPLITS: ()=>Ui,
        TITLE_SPLIT: ()=>ts,
        TITLE_SPLIT_REGEXP: ()=>Zi,
        TOLERANT: ()=>di1,
        TRIGRAPH: ()=>ri,
        Token: ()=>Ks,
        Transform: ()=>Js,
        UPDATE_GROUP_CONTEXT_CONDITION: ()=>Ji,
        Util: ()=>Hs,
        VARIABLES_WITH_SHORT_FORM: ()=>Li,
        VIETNAMESE_NAMES: ()=>Ei1,
        VIETNAMESE_SPECIALS: ()=>Oi,
        XmlDOM: ()=>os1,
        XmlJSON: ()=>rs,
        XmlToToken: ()=>ys,
        ambigConfigDiff: ()=>ps,
        buildMacro: ()=>bs,
        castLabel: ()=>Vs,
        checkIgnorePredecessor: ()=>Se2,
        checkNestedBrace: ()=>he3,
        checkPrefixSpaceAppend: ()=>xe2,
        checkSuffixSpacePrepend: ()=>Te2,
        citeEnd: ()=>Us,
        citeStart: ()=>Ls,
        cloneAmbigConfig: ()=>fs1,
        configureMacro: ()=>vs,
        dateAsSortKey: ()=>ir1,
        dateMacroAsSortKey: ()=>er1,
        debug: ()=>ee3,
        default: ()=>ur1,
        demoteNoiseWords: ()=>Bi,
        error: ()=>te4,
        evaluateLabel: ()=>js,
        expandMacro: ()=>gs,
        extractTitleAndSubtitle: ()=>Mi,
        getAbbrevsDomain: ()=>ge2,
        getAmbigConfig: ()=>hs,
        getAmbiguousCite: ()=>Ds,
        getBibliographyEntries: ()=>Bs,
        getCitationCluster: ()=>Cs,
        getCite: ()=>Ps,
        getLocaleNames: ()=>Xs,
        getMacroTarget: ()=>_s,
        getMaxVals: ()=>cs,
        getMinVal: ()=>ds,
        getSafeEscape: ()=>qi,
        getSortCompare: ()=>us,
        getSortKeys: ()=>rr1,
        getSpliceDelimiter: ()=>ws,
        localeResolve: ()=>Ms,
        makeBuilder: ()=>Ts,
        normalizeLocaleStr: ()=>ve2,
        parseLocator: ()=>be2,
        parseNoteFieldHacks: ()=>ye2,
        parseParticles: ()=>or1,
        parseXml: ()=>as,
        setDecorations: ()=>Is,
        setupXml: ()=>ls,
        stripXmlProcessingInstruction: ()=>ns,
        substituteOne: ()=>Es,
        substituteTwo: ()=>Ns,
        titlecaseSentenceOrNormal: ()=>Xi,
        toLocaleLowerCase: ()=>se4,
        toLocaleUpperCase: ()=>ie4,
        tokenExec: ()=>ms
    });
    var Mt2 = Lt2(It2());
    dt2(ft1, Lt2(It2()));
    var { PROCESSOR_VERSION: Zt1, error: te4, debug: ee3, toLocaleUpperCase: ie4, toLocaleLowerCase: se4, LOCATOR_LABELS_REGEXP: re3, STATUTE_SUBDIV_PLAIN_REGEX: ne5, STATUTE_SUBDIV_PLAIN_REGEX_FRONT: ae4, STATUTE_SUBDIV_STRINGS: oe5, STATUTE_SUBDIV_STRINGS_REVERSE: le3, LOCATOR_LABELS_MAP: ue4, MODULE_MACROS: pe2, MODULE_TYPES: fe3, checkNestedBrace: he3, MULTI_FIELDS: ce2, LangPrefsMap: de2, AbbreviationSegments: me1, getAbbrevsDomain: ge2, FIELD_CATEGORY_REMAP: _e3, parseLocator: be2, normalizeLocaleStr: ve2, parseNoteFieldHacks: ye2, checkPrefixSpaceAppend: xe2, checkIgnorePredecessor: Se2, checkSuffixSpacePrepend: Te2, GENDERS: Oe2, ERROR_NO_RENDERED_FORM: Ee1, PREVIEW: Ne2, ASSUME_ALL_ITEMS_REGISTERED: Ae2, START: Ie2, END: Re2, SINGLETON: ke3, SEEN: De2, SUCCESSOR: we3, SUCCESSOR_OF_SUCCESSOR: Ce3, SUPPRESS: Pe2, SINGULAR: Le2, PLURAL: Ue1, LITERAL: Be2, BEFORE: Me1, AFTER: Xe2, DESCENDING: qe2, ASCENDING: Fe2, PRIMARY: Ge, SECONDARY: ze2, POSITION_FIRST: je2, POSITION_SUBSEQUENT: Ve2, POSITION_IBID: $e1, POSITION_IBID_WITH_LOCATOR: We1, POSITION_CONTAINER_SUBSEQUENT: Qe2, POSITION_MAP: He1, POSITION_TEST_VARS: Je1, AREAS: Ke1, CITE_FIELDS: Ye3, SWAPPING_PUNCTUATION: Ze1, TERMINAL_PUNCTUATION: ti, NONE: ei1, NUMERIC: ii, POSITION: si, TRIGRAPH: ri, DATE_PARTS: ni, DATE_PARTS_ALL: ai, DATE_PARTS_INTERNAL: oi, NAME_PARTS: li, DISAMBIGUATE_OPTIONS: ui, GIVENNAME_DISAMBIGUATION_RULES: pi1, NAME_ATTRIBUTES: fi, LOOSE: hi1, STRICT: ci1, TOLERANT: di1, PREFIX_PUNCTUATION: mi, SUFFIX_PUNCTUATION: gi2, NUMBER_REGEXP: _i, NAME_INITIAL_REGEXP: bi1, ROMANESQUE_REGEXP: vi, ROMANESQUE_NOT_REGEXP: yi1, STARTSWITH_ROMANESQUE_REGEXP: xi, ENDSWITH_ROMANESQUE_REGEXP: Si1, ALL_ROMANESQUE_REGEXP: Ti, VIETNAMESE_SPECIALS: Oi, VIETNAMESE_NAMES: Ei1, NOTE_FIELDS_REGEXP: Ni, NOTE_FIELD_REGEXP: Ai, PARTICLE_GIVEN_REGEXP: Ii, PARTICLE_FAMILY_REGEXP: Ri1, DISPLAY_CLASSES: ki, NAME_VARIABLES: Di, CREATORS: wi1, NUMERIC_VARIABLES: Ci, DATE_VARIABLES: Pi, VARIABLES_WITH_SHORT_FORM: Li, TITLE_FIELD_SPLITS: Ui, demoteNoiseWords: Bi, extractTitleAndSubtitle: Mi, titlecaseSentenceOrNormal: Xi, getSafeEscape: qi, SKIP_WORDS: Fi, FORMAT_KEY_SEQUENCE: Gi, INSTITUTION_KEYS: zi, SUFFIX_CHARS: ji, ROMAN_NUMERALS: Vi, LANGS: $i, LANG_BASES: Wi, SUPERSCRIPTS: Qi, SUPERSCRIPTS_REGEXP: Hi, UPDATE_GROUP_CONTEXT_CONDITION: Ji, EVALUATE_GROUP_CONDITION: Ki, SYS_OPTIONS: Yi, TITLE_SPLIT_REGEXP: Zi, TITLE_SPLIT: ts, GET_COURT_CLASS: es, SET_COURT_CLASSES: is, INIT_JURISDICTION_MACROS: ss, XmlJSON: rs, stripXmlProcessingInstruction: ns, parseXml: as, XmlDOM: os1, setupXml: ls, getSortCompare: us, ambigConfigDiff: ps, cloneAmbigConfig: fs1, getAmbigConfig: hs, getMaxVals: cs, getMinVal: ds, tokenExec: ms, expandMacro: gs, getMacroTarget: _s, buildMacro: bs, configureMacro: vs, XmlToToken: ys, DateParser: xs, Engine: Ss, makeBuilder: Ts, ITERATION: Os, substituteOne: Es, substituteTwo: Ns, Mode: As, setDecorations: Is, Doppeler: Rs, Output: ks, getAmbiguousCite: Ds, getSpliceDelimiter: ws, getCitationCluster: Cs, getCite: Ps, citeStart: Ls, citeEnd: Us, getBibliographyEntries: Bs, localeResolve: Ms, getLocaleNames: Xs, Node: qs, Conditions: Fs, NameOutput: Gs, PublisherOutput: zs, evaluateLabel: js, castLabel: Vs, Attributes: $s, Stack: Ws, Parallel: Qs, Util: Hs, Transform: Js, Token: Ks, AmbigConfig: Ys, Blob: Zs, NumericBlob: tr1, dateMacroAsSortKey: er1, dateAsSortKey: ir1, Registry: sr1, getSortKeys: rr1, Disambiguation: nr1, ParticleList: ar1, parseParticles: or1 } = Mt2, { default: Bt2, ...lr1 } = Mt2, ur1 = Bt2 !== void 0 ? Bt2 : lr1;
    const mod58 = {
        AFTER: Xe2,
        ALL_ROMANESQUE_REGEXP: Ti,
        AREAS: Ke1,
        ASCENDING: Fe2,
        ASSUME_ALL_ITEMS_REGISTERED: Ae2,
        AbbreviationSegments: me1,
        AmbigConfig: Ys,
        Attributes: $s,
        BEFORE: Me1,
        Blob: Zs,
        CITE_FIELDS: Ye3,
        CREATORS: wi1,
        Conditions: Fs,
        DATE_PARTS: ni,
        DATE_PARTS_ALL: ai,
        DATE_PARTS_INTERNAL: oi,
        DATE_VARIABLES: Pi,
        DESCENDING: qe2,
        DISAMBIGUATE_OPTIONS: ui,
        DISPLAY_CLASSES: ki,
        DateParser: xs,
        Disambiguation: nr1,
        Doppeler: Rs,
        END: Re2,
        ENDSWITH_ROMANESQUE_REGEXP: Si1,
        ERROR_NO_RENDERED_FORM: Ee1,
        EVALUATE_GROUP_CONDITION: Ki,
        Engine: Ss,
        FIELD_CATEGORY_REMAP: _e3,
        FORMAT_KEY_SEQUENCE: Gi,
        GENDERS: Oe2,
        GET_COURT_CLASS: es,
        GIVENNAME_DISAMBIGUATION_RULES: pi1,
        INIT_JURISDICTION_MACROS: ss,
        INSTITUTION_KEYS: zi,
        ITERATION: Os,
        LANGS: $i,
        LANG_BASES: Wi,
        LITERAL: Be2,
        LOCATOR_LABELS_MAP: ue4,
        LOCATOR_LABELS_REGEXP: re3,
        LOOSE: hi1,
        LangPrefsMap: de2,
        MODULE_MACROS: pe2,
        MODULE_TYPES: fe3,
        MULTI_FIELDS: ce2,
        Mode: As,
        NAME_ATTRIBUTES: fi,
        NAME_INITIAL_REGEXP: bi1,
        NAME_PARTS: li,
        NAME_VARIABLES: Di,
        NONE: ei1,
        NOTE_FIELDS_REGEXP: Ni,
        NOTE_FIELD_REGEXP: Ai,
        NUMBER_REGEXP: _i,
        NUMERIC: ii,
        NUMERIC_VARIABLES: Ci,
        NameOutput: Gs,
        Node: qs,
        NumericBlob: tr1,
        Output: ks,
        PARTICLE_FAMILY_REGEXP: Ri1,
        PARTICLE_GIVEN_REGEXP: Ii,
        PLURAL: Ue1,
        POSITION: si,
        POSITION_CONTAINER_SUBSEQUENT: Qe2,
        POSITION_FIRST: je2,
        POSITION_IBID: $e1,
        POSITION_IBID_WITH_LOCATOR: We1,
        POSITION_MAP: He1,
        POSITION_SUBSEQUENT: Ve2,
        POSITION_TEST_VARS: Je1,
        PREFIX_PUNCTUATION: mi,
        PREVIEW: Ne2,
        PRIMARY: Ge,
        PROCESSOR_VERSION: Zt1,
        Parallel: Qs,
        ParticleList: ar1,
        PublisherOutput: zs,
        ROMANESQUE_NOT_REGEXP: yi1,
        ROMANESQUE_REGEXP: vi,
        ROMAN_NUMERALS: Vi,
        Registry: sr1,
        SECONDARY: ze2,
        SEEN: De2,
        SET_COURT_CLASSES: is,
        SINGLETON: ke3,
        SINGULAR: Le2,
        SKIP_WORDS: Fi,
        START: Ie2,
        STARTSWITH_ROMANESQUE_REGEXP: xi,
        STATUTE_SUBDIV_PLAIN_REGEX: ne5,
        STATUTE_SUBDIV_PLAIN_REGEX_FRONT: ae4,
        STATUTE_SUBDIV_STRINGS: oe5,
        STATUTE_SUBDIV_STRINGS_REVERSE: le3,
        STRICT: ci1,
        SUCCESSOR: we3,
        SUCCESSOR_OF_SUCCESSOR: Ce3,
        SUFFIX_CHARS: ji,
        SUFFIX_PUNCTUATION: gi2,
        SUPERSCRIPTS: Qi,
        SUPERSCRIPTS_REGEXP: Hi,
        SUPPRESS: Pe2,
        SWAPPING_PUNCTUATION: Ze1,
        SYS_OPTIONS: Yi,
        Stack: Ws,
        TERMINAL_PUNCTUATION: ti,
        TITLE_FIELD_SPLITS: Ui,
        TITLE_SPLIT: ts,
        TITLE_SPLIT_REGEXP: Zi,
        TOLERANT: di1,
        TRIGRAPH: ri,
        Token: Ks,
        Transform: Js,
        UPDATE_GROUP_CONTEXT_CONDITION: Ji,
        Util: Hs,
        VARIABLES_WITH_SHORT_FORM: Li,
        VIETNAMESE_NAMES: Ei1,
        VIETNAMESE_SPECIALS: Oi,
        XmlDOM: os1,
        XmlJSON: rs,
        XmlToToken: ys,
        ambigConfigDiff: ps,
        buildMacro: bs,
        castLabel: Vs,
        checkIgnorePredecessor: Se2,
        checkNestedBrace: he3,
        checkPrefixSpaceAppend: xe2,
        checkSuffixSpacePrepend: Te2,
        citeEnd: Us,
        citeStart: Ls,
        cloneAmbigConfig: fs1,
        configureMacro: vs,
        dateAsSortKey: ir1,
        dateMacroAsSortKey: er1,
        debug: ee3,
        default: ur1,
        demoteNoiseWords: Bi,
        error: te4,
        evaluateLabel: js,
        expandMacro: gs,
        extractTitleAndSubtitle: Mi,
        getAbbrevsDomain: ge2,
        getAmbigConfig: hs,
        getAmbiguousCite: Ds,
        getBibliographyEntries: Bs,
        getCitationCluster: Cs,
        getCite: Ps,
        getLocaleNames: Xs,
        getMacroTarget: _s,
        getMaxVals: cs,
        getMinVal: ds,
        getSafeEscape: qi,
        getSortCompare: us,
        getSortKeys: rr1,
        getSpliceDelimiter: ws,
        localeResolve: Ms,
        makeBuilder: Ts,
        normalizeLocaleStr: ve2,
        parseLocator: be2,
        parseNoteFieldHacks: ye2,
        parseParticles: or1,
        parseXml: as,
        setDecorations: Is,
        setupXml: ls,
        stripXmlProcessingInstruction: ns,
        substituteOne: Es,
        substituteTwo: Ns,
        titlecaseSentenceOrNormal: Xi,
        toLocaleLowerCase: se4,
        toLocaleUpperCase: ie4,
        tokenExec: ms
    };
    var z4 = {
        "en-US": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="en-US"><info><translator><name>Andrew Dunning</name></translator><translator><name>Sebastian Karcher</name></translator><translator><name>Rintze M. Zelle</name></translator><translator><name>Denis Meier</name></translator><translator><name>Brenton M. Wiernik</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2015-10-10T23:31:02+00:00</updated></info><style-options punctuation-in-quote="true"/><date form="text"><date-part name="month" suffix=" "/><date-part name="day" suffix=", "/><date-part name="year"/></date><date form="numeric"><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">personal communication</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">accessed</term><term name="and">and</term><term name="and others">and others</term><term name="anonymous">anonymous</term><term name="anonymous" form="short">anon.</term><term name="at">at</term><term name="available at">available at</term><term name="by">by</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">cited</term><term name="edition"><single>edition</single><multiple>editions</multiple></term><term name="edition" form="short">ed.</term><term name="et-al">et al.</term><term name="forthcoming">forthcoming</term><term name="from">from</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">in press</term><term name="internet">internet</term><term name="interview">interview</term><term name="letter">letter</term><term name="no date">no date</term><term name="no date" form="short">n.d.</term><term name="online">online</term><term name="presented at">presented at the</term><term name="reference"><single>reference</single><multiple>references</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">retrieved</term><term name="scale">scale</term><term name="version">version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">personal communication</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">AD</term><term name="bc">BC</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u201C</term><term name="close-quote">\u201D</term><term name="open-inner-quote">\u2018</term><term name="close-inner-quote">\u2019</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">th</term><term name="ordinal-01">st</term><term name="ordinal-02">nd</term><term name="ordinal-03">rd</term><term name="ordinal-11">th</term><term name="ordinal-12">th</term><term name="ordinal-13">th</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">first</term><term name="long-ordinal-02">second</term><term name="long-ordinal-03">third</term><term name="long-ordinal-04">fourth</term><term name="long-ordinal-05">fifth</term><term name="long-ordinal-06">sixth</term><term name="long-ordinal-07">seventh</term><term name="long-ordinal-08">eighth</term><term name="long-ordinal-09">ninth</term><term name="long-ordinal-10">tenth</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>book</single><multiple>books</multiple></term><term name="chapter"><single>chapter</single><multiple>chapters</multiple></term><term name="column"><single>column</single><multiple>columns</multiple></term><term name="figure"><single>figure</single><multiple>figures</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue"><single>number</single><multiple>numbers</multiple></term><term name="line"><single>line</single><multiple>lines</multiple></term><term name="note"><single>note</single><multiple>notes</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>page</single><multiple>pages</multiple></term><term name="number-of-pages"><single>page</single><multiple>pages</multiple></term><term name="paragraph"><single>paragraph</single><multiple>paragraphs</multiple></term><term name="part"><single>part</single><multiple>parts</multiple></term><term name="section"><single>section</single><multiple>sections</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>verse</single><multiple>verses</multiple></term><term name="volume"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix" form="short">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator" form="short">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation" form="short">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation" form="short">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule" form="short">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene" form="short">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table" form="short">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp" form="short"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator" form="short">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short"><single>bk.</single><multiple>bks.</multiple></term><term name="chapter" form="short"><single>chap.</single><multiple>chaps.</multiple></term><term name="column" form="short"><single>col.</single><multiple>cols.</multiple></term><term name="figure" form="short"><single>fig.</single><multiple>figs.</multiple></term><term name="folio" form="short"><single>fol.</single><multiple>fols.</multiple></term><term name="issue" form="short"><single>no.</single><multiple>nos.</multiple></term><term name="line" form="short"><single>l.</single><multiple>ll.</multiple></term><term name="note" form="short"><single>n.</single><multiple>nn.</multiple></term><term name="opus" form="short"><single>op.</single><multiple>opp.</multiple></term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short"><single>para.</single><multiple>paras.</multiple></term><term name="part" form="short"><single>pt.</single><multiple>pts.</multiple></term><term name="section" form="short"><single>sec.</single><multiple>secs.</multiple></term><term name="sub-verbo" form="short"><single>s.v.</single><multiple>s.vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>director</single><multiple>directors</multiple></term><term name="editor"><single>editor</single><multiple>editors</multiple></term><term name="editorial-director"><single>editor</single><multiple>editors</multiple></term><term name="illustrator"><single>illustrator</single><multiple>illustrators</multiple></term><term name="translator"><single>translator</single><multiple>translators</multiple></term><term name="editortranslator"><single>editor &amp; translator</single><multiple>editors &amp; translators</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>dir.</single><multiple>dirs.</multiple></term><term name="editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="editorial-director" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ills.</multiple></term><term name="translator" form="short"><single>tran.</single><multiple>trans.</multiple></term><term name="editortranslator" form="short"><single>ed. &amp; tran.</single><multiple>eds. &amp; trans.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">by</term><term name="director" form="verb">directed by</term><term name="editor" form="verb">edited by</term><term name="editorial-director" form="verb">edited by</term><term name="illustrator" form="verb">illustrated by</term><term name="interviewer" form="verb">interview by</term><term name="recipient" form="verb">to</term><term name="reviewed-author" form="verb">by</term><term name="translator" form="verb">translated by</term><term name="editortranslator" form="verb">edited &amp; translated by</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">dir. by</term><term name="editor" form="verb-short">ed. by</term><term name="editorial-director" form="verb-short">ed. by</term><term name="illustrator" form="verb-short">illus. by</term><term name="translator" form="verb-short">trans. by</term><term name="editortranslator" form="verb-short">ed. &amp; trans. by</term>
<!-- LONG MONTH FORMS --><term name="month-01">January</term><term name="month-02">February</term><term name="month-03">March</term><term name="month-04">April</term><term name="month-05">May</term><term name="month-06">June</term><term name="month-07">July</term><term name="month-08">August</term><term name="month-09">September</term><term name="month-10">October</term><term name="month-11">November</term><term name="month-12">December</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">Jan.</term><term name="month-02" form="short">Feb.</term><term name="month-03" form="short">Mar.</term><term name="month-04" form="short">Apr.</term><term name="month-05" form="short">May</term><term name="month-06" form="short">Jun.</term><term name="month-07" form="short">Jul.</term><term name="month-08" form="short">Aug.</term><term name="month-09" form="short">Sep.</term><term name="month-10" form="short">Oct.</term><term name="month-11" form="short">Nov.</term><term name="month-12" form="short">Dec.</term>
<!-- SEASONS --><term name="season-01">Spring</term><term name="season-02">Summer</term><term name="season-03">Autumn</term><term name="season-04">Winter</term></terms>
</locale>
`,
        "nl-NL": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="nl-NL"><info><translator><name>Rintze M. Zelle</name><uri>http://twitter.com/rintzezelle</uri></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2017-04-01T12:00:00+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" suffix="-" range-delimiter="/"/><date-part name="month" form="numeric" suffix="-" range-delimiter="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">persoonlijke communicatie</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">geraadpleegd</term><term name="and">en</term><term name="and others">en anderen</term><term name="anonymous">anoniem</term><term name="anonymous" form="short">anon.</term><term name="at">bij</term><term name="available at">beschikbaar op</term><term name="by">door</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">geciteerd</term><term name="edition"><single>druk</single><multiple>drukken</multiple></term><term name="edition" form="short">dr.</term><term name="et-al">e.a.</term><term name="forthcoming">in voorbereiding</term><term name="from">van</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">in druk</term><term name="internet">internet</term><term name="interview">interview</term><term name="letter">brief</term><term name="no date">zonder datum</term><term name="no date" form="short">z.d.</term><term name="online">online</term><term name="presented at">gepresenteerd bij</term><term name="reference"><single>referentie</single><multiple>referenties</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">geraadpleegd</term><term name="scale">schaal</term><term name="version">versie</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">persoonlijke communicatie</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">AD</term><term name="bc">BC</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u2018</term><term name="close-quote">\u2019</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">ste</term><term name="ordinal-00" match="whole-number">de</term><term name="ordinal-02" match="last-two-digits">de</term><term name="ordinal-03" match="last-two-digits">de</term><term name="ordinal-04" match="last-two-digits">de</term><term name="ordinal-05" match="last-two-digits">de</term><term name="ordinal-06" match="last-two-digits">de</term><term name="ordinal-07" match="last-two-digits">de</term><term name="ordinal-09" match="last-two-digits">de</term><term name="ordinal-10">de</term><term name="ordinal-11">de</term><term name="ordinal-12">de</term><term name="ordinal-13">de</term><term name="ordinal-14">de</term><term name="ordinal-15">de</term><term name="ordinal-16">de</term><term name="ordinal-17">de</term><term name="ordinal-18">de</term><term name="ordinal-19">de</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">eerste</term><term name="long-ordinal-02">tweede</term><term name="long-ordinal-03">derde</term><term name="long-ordinal-04">vierde</term><term name="long-ordinal-05">vijfde</term><term name="long-ordinal-06">zesde</term><term name="long-ordinal-07">zevende</term><term name="long-ordinal-08">achtste</term><term name="long-ordinal-09">negende</term><term name="long-ordinal-10">tiende</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>boek</single><multiple>boeken</multiple></term><term name="chapter"><single>hoofdstuk</single><multiple>hoofdstukken</multiple></term><term name="column"><single>column</single><multiple>columns</multiple></term><term name="figure"><single>figuur</single><multiple>figuren</multiple></term><term name="folio"><single>folio</single><multiple>folio's</multiple></term><term name="issue"><single>nummer</single><multiple>nummers</multiple></term><term name="line"><single>regel</single><multiple>regels</multiple></term><term name="note"><single>aantekening</single><multiple>aantekeningen</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>pagina</single><multiple>pagina's</multiple></term><term name="number-of-pages"><single>pagina</single><multiple>pagina's</multiple></term><term name="paragraph"><single>paragraaf</single><multiple>paragrafen</multiple></term><term name="part"><single>deel</single><multiple>delen</multiple></term><term name="section"><single>sectie</single><multiple>secties</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>vers</single><multiple>versen</multiple></term><term name="volume"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">bk.</term><term name="chapter" form="short">hfdst.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short">f.</term><term name="issue" form="short">nr.</term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short">par.</term><term name="part" form="short">deel</term><term name="section" form="short">sec.</term><term name="sub-verbo" form="short"><single>s.v.</single><multiple>s.vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>regisseur</single><multiple>regisseurs</multiple></term><term name="editor"><single>redacteur</single><multiple>redacteuren</multiple></term><term name="editorial-director"><single>redacteur</single><multiple>redacteuren</multiple></term><term name="illustrator"><single>illustrator</single><multiple>illustrators</multiple></term><term name="translator"><single>vertaler</single><multiple>vertalers</multiple></term><term name="editortranslator"><single>redacteur &amp; vertaler</single><multiple>redacteuren &amp; vertalers</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>reg.</single><multiple>reg.</multiple></term><term name="editor" form="short"><single>red.</single><multiple>red.</multiple></term><term name="editorial-director" form="short"><single>red.</single><multiple>red.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ill.</multiple></term><term name="translator" form="short"><single>vert.</single><multiple>vert.</multiple></term><term name="editortranslator" form="short"><single>red. &amp; vert.</single><multiple>red. &amp; vert.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">door</term><term name="director" form="verb">geregisseerd door</term><term name="editor" form="verb">onder redactie van</term><term name="editorial-director" form="verb">onder redactie van</term><term name="illustrator" form="verb">ge\xEFllustreerd door</term><term name="interviewer" form="verb">ge\xEFnterviewd door</term><term name="recipient" form="verb">ontvangen door</term><term name="reviewed-author" form="verb">door</term><term name="translator" form="verb">vertaald door</term><term name="editortranslator" form="verb">bewerkt &amp; vertaald door</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">geregisseerd door</term><term name="editor" form="verb-short">onder redactie van</term><term name="editorial-director" form="verb-short">bewerkt door</term><term name="illustrator" form="verb-short">ge\xEFllustreerd door</term><term name="translator" form="verb-short">vertaald door</term><term name="editortranslator" form="verb-short">bewerkt &amp; vertaald door</term>
<!-- LONG MONTH FORMS --><term name="month-01">januari</term><term name="month-02">februari</term><term name="month-03">maart</term><term name="month-04">april</term><term name="month-05">mei</term><term name="month-06">juni</term><term name="month-07">juli</term><term name="month-08">augustus</term><term name="month-09">september</term><term name="month-10">oktober</term><term name="month-11">november</term><term name="month-12">december</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">jan.</term><term name="month-02" form="short">feb.</term><term name="month-03" form="short">mrt.</term><term name="month-04" form="short">apr.</term><term name="month-05" form="short">mei</term><term name="month-06" form="short">jun.</term><term name="month-07" form="short">jul.</term><term name="month-08" form="short">aug.</term><term name="month-09" form="short">sep.</term><term name="month-10" form="short">okt.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">dec.</term>
<!-- SEASONS --><term name="season-01">lente</term><term name="season-02">zomer</term><term name="season-03">herst</term><term name="season-04">winter</term></terms>
</locale>
`,
        "fr-FR": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="fr-FR"><info><translator><name>Gr\xE9goire Colly</name></translator><translator><name>Collectif Zotero francophone</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false" limit-day-ordinals-to-day-1="true"/><date form="text"><date-part name="day" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">publication en ligne anticip\xE9e</term><term name="album">album</term><term name="audio-recording">enregistrement audio</term><term name="film">film</term><term name="henceforth">d\xE9sormais</term><term name="loc-cit">loc.&#160;cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">sans lieu</term><term name="no-place" form="short">s.&#160;l.</term><term name="no-publisher">sans nom</term> <!-- sine nomine --><term name="no-publisher" form="short">s.&#160;n.</term><term name="on">sur</term><term name="op-cit">op.&#160;cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">\xE9dition originale</term><term name="personal-communication">communication personnelle</term><term name="podcast">podcast</term><term name="podcast-episode">\xE9pisode de podcast</term><term name="preprint">pr\xE9publication</term><term name="radio-broadcast">\xE9mission de radio</term><term name="radio-series">s\xE9rie radiophonique</term><term name="radio-series-episode">\xE9pisode de s\xE9rie radiophonique</term><term name="special-issue">num\xE9ro sp\xE9cial</term><term name="special-section">section sp\xE9ciale</term><term name="television-broadcast">\xE9mission de t\xE9l\xE9vision</term><term name="television-series">s\xE9rie t\xE9l\xE9vis\xE9e</term><term name="television-series-episode">\xE9pisode de s\xE9rie t\xE9l\xE9vis\xE9e</term><term name="video">vid\xE9o</term><term name="working-paper">document de travail</term><term name="accessed">consult\xE9 le</term><term name="and">et</term><term name="and others">et autres</term><term name="anonymous">anonyme</term><term name="anonymous" form="short">anon.</term><term name="at">sur</term><term name="available at">disponible sur</term><term name="by">par</term><term name="circa">vers</term><term name="circa" form="short">v.</term><term name="cited">cit\xE9</term><term name="edition" gender="feminine"><single>\xE9dition</single><multiple>\xE9ditions</multiple></term><term name="edition" form="short">\xE9d.</term><term name="et-al">et al.</term><term name="forthcoming">\xE0 para\xEEtre</term><term name="from">\xE0 l'adresse</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">sous presse</term><term name="internet">Internet</term><term name="interview">entretien</term><term name="letter">lettre</term><term name="no date">sans date</term><term name="no date" form="short">s.&#160;d.</term><term name="online">en ligne</term><term name="presented at">pr\xE9sent\xE9 \xE0</term><term name="reference"><single>r\xE9f\xE9rence</single><multiple>r\xE9f\xE9rences</multiple></term><term name="reference" form="short"><single>r\xE9f.</single><multiple>r\xE9f.</multiple></term><term name="retrieved">consult\xE9</term><term name="scale">\xE9chelle</term><term name="version">version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">article</term><term name="article-journal">article de revue</term><term name="article-magazine">article de magazine</term><term name="article-newspaper">article de presse</term><term name="bill">projet de loi</term><term name="book">livre</term><term name="broadcast">\xE9mission</term><term name="chapter">chapitre de livre</term><term name="classic">classique</term><term name="collection">collection</term><term name="dataset">jeu de donn\xE9es</term><term name="document">document</term><term name="entry">entr\xE9e</term><term name="entry-dictionary">entr\xE9e de dictionnaire</term><term name="entry-encyclopedia">entr\xE9e d'encyclop\xE9die</term><term name="event">\xE9v\xE9nement</term><!-- figure is in the list of locator terms --><term name="graphic">image</term><term name="hearing">audience</term><term name="interview">interview</term><term name="legal_case">affaire</term><term name="legislation">acte juridique</term><term name="manuscript">manuscrit</term><term name="map">carte</term><term name="motion_picture">enregistrement vid\xE9o</term><term name="musical_score">partition</term><term name="pamphlet">pamphlet</term><term name="paper-conference">article de colloque</term><term name="patent">brevet</term><term name="performance">interpr\xE9tation</term><term name="periodical">p\xE9riodique</term><term name="personal_communication">communication personnelle</term><term name="post">billet</term><term name="post-weblog">billet de blog</term><term name="regulation">r\xE8glement</term><term name="report">rapport</term><term name="review">recension</term><term name="review-book">recension de livre</term><term name="software">logiciel</term><term name="song">chanson</term><term name="speech">pr\xE9sentation</term><term name="standard">norme</term><term name="thesis">th\xE8se</term><term name="treaty">trait\xE9</term><term name="webpage">page web</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">art. de revue</term><term name="article-magazine" form="short">art. de mag.</term><term name="article-newspaper" form="short">art. de presse</term><term name="book" form="short">liv.</term><term name="chapter" form="short">chap. de liv.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">ms</term><term name="motion_picture" form="short">enr. vid\xE9o</term><term name="report" form="short">rap.</term><term name="review" form="short">recens.</term><term name="review-book" form="short">recens. de liv.</term><term name="song" form="short">enr. audio</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">apr. J.-C.</term><term name="bc">av. J.-C.</term><term name="bce">av. n. \xE8.</term><term name="ce">n. \xE8.</term>
<!-- PUNCTUATION --><term name="open-quote">\xAB&#160;</term><term name="close-quote">&#160;\xBB</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">&#8209;</term> <!-- non-breaking hyphen --><term name="colon">&#160;:</term><term name="comma">,</term><term name="semicolon">&#160;;</term>
<!-- ORDINALS --><term name="ordinal">\u1D49</term><term name="ordinal-01" gender-form="feminine" match="whole-number">\u02B3\u1D49</term><term name="ordinal-01" gender-form="masculine" match="whole-number">\u1D49\u02B3</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">premier</term><term name="long-ordinal-02">deuxi\xE8me</term><term name="long-ordinal-03">troisi\xE8me</term><term name="long-ordinal-04">quatri\xE8me</term><term name="long-ordinal-05">cinqui\xE8me</term><term name="long-ordinal-06">sixi\xE8me</term><term name="long-ordinal-07">septi\xE8me</term><term name="long-ordinal-08">huiti\xE8me</term><term name="long-ordinal-09">neuvi\xE8me</term><term name="long-ordinal-10">dixi\xE8me</term>
<!-- LONG LOCATOR FORMS --><term name="act"><single>acte</single><multiple>actes</multiple></term><term name="appendix"><single>appendice</single><multiple>appendices</multiple></term><term name="article-locator"><single>article</single><multiple>articles</multiple></term><term name="canon"><single>canon</single><multiple>canons</multiple></term><term name="elocation"><single>emplacement</single><multiple>emplacements</multiple></term><term name="equation"><single>\xE9quation</single><multiple>\xE9quations</multiple></term><term name="rule"><single>r\xE8gle</single><multiple>r\xE8gles</multiple></term><term name="scene"><single>sc\xE8ne</single><multiple>sc\xE8nes</multiple></term><term name="table"><single>tableau</single><multiple>tableaux</multiple></term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple></term><term name="title-locator"><single>titre</single><multiple>titres</multiple></term><term name="book"><single>livre</single><multiple>livres</multiple></term><term name="chapter"><single>chapitre</single><multiple>chapitres</multiple></term><term name="column"><single>colonne</single><multiple>colonnes</multiple></term><term name="figure"><single>figure</single><multiple>figures</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue" gender="masculine"><single>num\xE9ro</single><multiple>num\xE9ros</multiple></term><term name="line"><single>ligne</single><multiple>lignes</multiple></term><term name="note"><single>note</single><multiple>notes</multiple></term><term name="opus"><single>opus</single><multiple>opus</multiple></term><term name="page"><single>page</single><multiple>pages</multiple></term><term name="number-of-pages"><single>page</single><multiple>pages</multiple></term><term name="paragraph"><single>paragraphe</single><multiple>paragraphes</multiple></term><term name="part"><single>partie</single><multiple>parties</multiple></term><term name="section"><single>section</single><multiple>sections</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>verset</single><multiple>versets</multiple></term><term name="volume" gender="masculine"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix"><single>append.</single><multiple>append.</multiple></term><term name="article-locator"><single>art.</single><multiple>art.</multiple></term><term name="elocation"><single>emplact</single><multiple>emplact</multiple></term><term name="equation"><single>eq.</single><multiple>eq.</multiple></term><term name="rule"><single>r\xE8gle</single><multiple>r\xE8gles</multiple></term><term name="scene"><single>sc.</single><multiple>sc.</multiple></term><term name="table"><single>tab.</single><multiple>tab.</multiple></term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple></term><term name="title-locator"><single>tit.</single><multiple>tit.</multiple></term><term name="book" form="short">liv.</term><term name="chapter" form="short">chap.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short"><single>f\u1D52</single><multiple>f\u1D52\u02E2</multiple></term><term name="issue" form="short"><single>n\u1D52</single><multiple>n\u1D52\u02E2</multiple></term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>p.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>p.</multiple></term><term name="paragraph" form="short">paragr.</term><term name="part" form="short">part.</term><term name="section" form="short">sect.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>v.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vol.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>pr\xE9sident</single><multiple>pr\xE9sidents</multiple></term><term name="compiler"><single>compilateur</single><multiple>compilateurs</multiple></term><term name="contributor"><single>contributeur</single><multiple>contributeurs</multiple></term><term name="curator"><single>commissaire</single><multiple>commissaires</multiple></term><term name="executive-producer"><single>producteur ex\xE9cutif</single><multiple>producteurs ex\xE9cutifs</multiple></term><term name="guest"><single>invit\xE9</single><multiple>invit\xE9s</multiple></term><term name="host"><single>h\xF4te</single><multiple>h\xF4tes</multiple></term><term name="narrator"><single>narrateur</single><multiple>narrateurs</multiple></term><term name="organizer"><single>organisateur</single><multiple>organisateurs</multiple></term><term name="performer"><single>interpr\xE8te</single><multiple>interpr\xE8tes</multiple></term><term name="producer"><single>producteur</single><multiple>producteurs</multiple></term><term name="script-writer"><single>sc\xE9nariste</single><multiple>sc\xE9naristes</multiple></term><term name="series-creator"><single>cr\xE9ateur de s\xE9rie</single><multiple>cr\xE9ateurs de s\xE9rie</multiple></term><term name="director"><single>r\xE9alisateur</single><multiple>r\xE9alisateurs</multiple></term><term name="editor"><single>\xE9diteur</single><multiple>\xE9diteurs</multiple></term><term name="editorial-director"><single>directeur</single><multiple>directeurs</multiple></term><term name="illustrator"><single>illustrateur</single><multiple>illustrateurs</multiple></term><term name="translator"><single>traducteur</single><multiple>traducteurs</multiple></term><term name="editortranslator"><single>\xE9diteur et traducteur</single><multiple>\xE9diteurs et traducteurs</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>compil.</single><multiple>compil.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contrib.</multiple></term><term name="curator" form="short"><single>commiss.</single><multiple>commiss.</multiple></term><term name="executive-producer" form="short"><single>prod. ex\xE9.</single><multiple>prod. ex\xE9.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narr.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>org.</multiple></term><term name="performer" form="short"><single>interpr.</single><multiple>interpr.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prod.</multiple></term><term name="script-writer" form="short"><single>sc\xE9nar.</single><multiple>sc\xE9nar.</multiple></term><term name="series-creator" form="short"><single>cr\xE9at.</single><multiple>cr\xE9at.</multiple></term><term name="director" form="short"><single>r\xE9al.</single><multiple>r\xE9al.</multiple></term><term name="editor" form="short"><single>\xE9d.</single><multiple>\xE9d.</multiple></term><term name="editorial-director" form="short"><single>dir.</single><multiple>dir.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ill.</multiple></term><term name="translator" form="short"><single>trad.</single><multiple>trad.</multiple></term><term name="editortranslator" form="short"><single>\xE9d. et trad.</single><multiple>\xE9d. et trad.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">pr\xE9sid\xE9 par</term><term name="compiler" form="verb">compil\xE9 par</term><term name="contributor" form="verb">avec</term><term name="curator" form="verb">organis\xE9 par</term><term name="executive-producer" form="verb">production ex\xE9cutive par</term><term name="guest" form="verb">avec pour invit\xE9</term><term name="host" form="verb">anim\xE9 par</term><term name="narrator" form="verb">lu par</term><term name="organizer" form="verb">organis\xE9 par</term><term name="performer" form="verb">interpr\xE9t\xE9 par</term><term name="producer" form="verb">produit par</term><term name="script-writer" form="verb">sc\xE9nario de</term><term name="series-creator" form="verb">cr\xE9\xE9 par</term><term name="container-author" form="verb">par</term><term name="director" form="verb">r\xE9alis\xE9 par</term><term name="editor" form="verb">\xE9dit\xE9 par</term><term name="editorial-director" form="verb">sous la direction de</term><term name="illustrator" form="verb">illustr\xE9 par</term><term name="interviewer" form="verb">entretien r\xE9alis\xE9 par</term><term name="recipient" form="verb">\xE0</term><term name="reviewed-author" form="verb">par</term><term name="translator" form="verb">traduit par</term><term name="editortranslator" form="verb">\xE9dit\xE9 et traduit par</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">compil. par</term><term name="contributor" form="verb-short">ac</term><term name="curator" form="verb-short">org. par</term><term name="executive-producer" form="verb-short">prod. ex\xE9. par</term><term name="guest" form="verb-short">ac pr inv.</term><term name="host" form="verb-short">anim. par</term><term name="narrator" form="verb-short">lu par</term><term name="organizer" form="verb-short">org. par</term><term name="performer" form="verb-short">interpr. par</term><term name="producer" form="verb-short">prod. par</term><term name="script-writer" form="verb-short">sc\xE9nar. de</term><term name="series-creator" form="verb-short">cr\xE9\xE9 par</term><term name="director" form="verb-short">r\xE9al. par</term><term name="editor" form="verb-short">\xE9d. par</term><term name="editorial-director" form="verb-short">ss la dir. de</term><term name="illustrator" form="verb-short">ill. par</term><term name="translator" form="verb-short">trad. par</term><term name="editortranslator" form="verb-short">\xE9d. et trad. par</term>
<!-- LONG MONTH FORMS --><term name="month-01" gender="masculine">janvier</term><term name="month-02" gender="masculine">f\xE9vrier</term><term name="month-03" gender="masculine">mars</term><term name="month-04" gender="masculine">avril</term><term name="month-05" gender="masculine">mai</term><term name="month-06" gender="masculine">juin</term><term name="month-07" gender="masculine">juillet</term><term name="month-08" gender="masculine">ao\xFBt</term><term name="month-09" gender="masculine">septembre</term><term name="month-10" gender="masculine">octobre</term><term name="month-11" gender="masculine">novembre</term><term name="month-12" gender="masculine">d\xE9cembre</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">janv.</term><term name="month-02" form="short">f\xE9vr.</term><term name="month-03" form="short">mars</term><term name="month-04" form="short">avr.</term><term name="month-05" form="short">mai</term><term name="month-06" form="short">juin</term><term name="month-07" form="short">juill.</term><term name="month-08" form="short">ao\xFBt</term><term name="month-09" form="short">sept.</term><term name="month-10" form="short">oct.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">d\xE9c.</term>
<!-- SEASONS --><term name="season-01">printemps</term><term name="season-02">\xE9t\xE9</term><term name="season-03">automne</term><term name="season-04">hiver</term></terms>
</locale>
`,
        "de-DE": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="de-DE"><info><translator><name>Till A. Heilmann</name></translator><translator><name>Ulrich</name></translator><translator><name>Rintze M. Zelle</name></translator><translator><name>Sebastian Karcher</name></translator><translator><name>jakov</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" form="ordinal" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="."/><date-part name="month" form="numeric-leading-zeros" suffix="."/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">pers\xF6nliche Kommunikation</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">zugegriffen</term><term name="and">und</term><term name="and others">und andere</term><term name="anonymous">ohne Autor</term><term name="anonymous" form="short">o.&#160;A.</term><term name="at">auf</term><term name="available at">verf\xFCgbar unter</term><term name="by">von</term><term name="circa">circa</term><term name="circa" form="short">ca.</term><term name="cited">zitiert</term><term name="edition"><single>Auflage</single><multiple>Auflagen</multiple></term><term name="edition" form="short">Aufl.</term><term name="et-al">u.&#160;a.</term><term name="forthcoming">i.&#160;E.</term><term name="from">von</term><term name="ibid">ebd.</term><term name="in">in</term><term name="in press">im Druck</term><term name="internet">Internet</term><term name="interview">Interview</term><term name="letter">Brief</term><term name="no date">ohne Datum</term><term name="no date" form="short">o.&#160;J.</term><term name="online">online</term><term name="presented at">gehalten auf der</term><term name="reference"><single>Referenz</single><multiple>Referenzen</multiple></term><term name="reference" form="short"><single>Ref.</single><multiple>Ref.</multiple></term><term name="retrieved">abgerufen</term><term name="scale">Ma\xDFstab</term><term name="version">Version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">pers\xF6nliche Kommunikation</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">&#160;n.&#160;Chr.</term><term name="bc">&#160;v.&#160;Chr.</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u201E</term><term name="close-quote">\u201C</term><term name="open-inner-quote">\u201A</term><term name="close-inner-quote">\u2018</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">.</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">erster</term><term name="long-ordinal-02">zweiter</term><term name="long-ordinal-03">dritter</term><term name="long-ordinal-04">vierter</term><term name="long-ordinal-05">f\xFCnfter</term><term name="long-ordinal-06">sechster</term><term name="long-ordinal-07">siebter</term><term name="long-ordinal-08">achter</term><term name="long-ordinal-09">neunter</term><term name="long-ordinal-10">zehnter</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>Buch</single><multiple>B\xFCcher</multiple></term><term name="chapter"><single>Kapitel</single><multiple>Kapitel</multiple></term><term name="column"><single>Spalte</single><multiple>Spalten</multiple></term><term name="figure"><single>Abbildung</single><multiple>Abbildungen</multiple></term><term name="folio"><single>Blatt</single><multiple>Bl\xE4tter</multiple></term><term name="issue"><single>Nummer</single><multiple>Nummern</multiple></term><term name="line"><single>Zeile</single><multiple>Zeilen</multiple></term><term name="note"><single>Note</single><multiple>Noten</multiple></term><term name="opus"><single>Opus</single><multiple>Opera</multiple></term><term name="page"><single>Seite</single><multiple>Seiten</multiple></term><term name="number-of-pages"><single>Seite</single><multiple>Seiten</multiple></term><term name="paragraph"><single>Absatz</single><multiple>Abs\xE4tze</multiple></term><term name="part"><single>Teil</single><multiple>Teile</multiple></term><term name="section"><single>Abschnitt</single><multiple>Abschnitte</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>Vers</single><multiple>Verse</multiple></term><term name="volume"><single>Band</single><multiple>B\xE4nde</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">B.</term><term name="chapter" form="short">Kap.</term><term name="column" form="short">Sp.</term><term name="figure" form="short">Abb.</term><term name="folio" form="short">Fol.</term><term name="issue" form="short">Nr.</term><term name="line" form="short">Z.</term><term name="note" form="short">N.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>S.</single><multiple>S.</multiple></term><term name="number-of-pages" form="short"><single>S.</single><multiple>S.</multiple></term><term name="paragraph" form="short">Abs.</term><term name="part" form="short">Teil</term><term name="section" form="short">Abschn.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>V.</single><multiple>V.</multiple></term><term name="volume" form="short"><single>Bd.</single><multiple>Bde.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>Regisseur</single><multiple>Regisseure</multiple></term><term name="editor"><single>Herausgeber</single><multiple>Herausgeber</multiple></term><term name="collection-editor"><single>Reihenherausgeber</single><multiple>Reihenherausgeber</multiple></term><term name="editorial-director"><single>Herausgeber</single><multiple>Herausgeber</multiple></term><term name="illustrator"><single>Illustrator</single><multiple>Illustratoren</multiple></term><term name="translator"><single>\xDCbersetzer</single><multiple>\xDCbersetzer</multiple></term><term name="editortranslator"><single>Herausgeber&#160;&amp; \xDCbersetzer</single><multiple>Herausgeber&#160;&amp; \xDCbersetzer</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>Reg.</single><multiple>Reg.</multiple></term><term name="editor" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="collection-editor" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="editorial-director" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="illustrator" form="short"><single>Ill.</single><multiple>Ill.</multiple></term><term name="translator" form="short"><single>\xDCbers.</single><multiple>\xDCbers.</multiple></term><term name="editortranslator" form="short"><single>Hrsg.&#160;&amp; \xDCbers.</single><multiple>Hrsg.&#160;&amp; \xDCbers.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">von</term><term name="director" form="verb">Regie von</term><term name="editor" form="verb">herausgegeben von</term><term name="collection-editor" form="verb">herausgegeben von</term><term name="editorial-director" form="verb">herausgegeben von</term><term name="illustrator" form="verb">illustriert von</term><term name="interviewer" form="verb">interviewt von</term><term name="recipient" form="verb">an</term><term name="reviewed-author" form="verb">von</term><term name="translator" form="verb">\xFCbersetzt von</term><term name="editortranslator" form="verb">herausgegeben und \xFCbersetzt von</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">Reg.</term><term name="editor" form="verb-short">hg. von</term><term name="collection-editor" form="verb-short">hg. von</term><term name="editorial-director" form="verb-short">hg. von</term><term name="illustrator" form="verb-short">illus. von</term><term name="translator" form="verb-short">\xFCbers. von</term><term name="editortranslator" form="verb-short">hg.&#160;&amp; \xFCbers. von</term>
<!-- LONG MONTH FORMS --><term name="month-01">Januar</term><term name="month-02">Februar</term><term name="month-03">M\xE4rz</term><term name="month-04">April</term><term name="month-05">Mai</term><term name="month-06">Juni</term><term name="month-07">Juli</term><term name="month-08">August</term><term name="month-09">September</term><term name="month-10">Oktober</term><term name="month-11">November</term><term name="month-12">Dezember</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">Jan.</term><term name="month-02" form="short">Feb.</term><term name="month-03" form="short">M\xE4rz</term><term name="month-04" form="short">Apr.</term><term name="month-05" form="short">Mai</term><term name="month-06" form="short">Juni</term><term name="month-07" form="short">Juli</term><term name="month-08" form="short">Aug.</term><term name="month-09" form="short">Sep.</term><term name="month-10" form="short">Okt.</term><term name="month-11" form="short">Nov.</term><term name="month-12" form="short">Dez.</term>
<!-- SEASONS --><term name="season-01">Fr\xFChjahr</term><term name="season-02">Sommer</term><term name="season-03">Herbst</term><term name="season-04">Winter</term></terms>
</locale>
`,
        "es-ES": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="es-ES"><info><translator><name>javimat</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" suffix=" de "/><date-part name="month" suffix=" de "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">comunicaci\xF3n personal</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">accedido</term><term name="and">y</term><term name="and others">y otros</term><term name="anonymous">an\xF3nimo</term><term name="anonymous" form="short">an\xF3n.</term><term name="at">en</term><term name="available at">disponible en</term><term name="by">de</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">citado</term><term name="edition"><single>edici\xF3n</single><multiple>ediciones</multiple></term><term name="edition" form="short">ed.</term><term name="et-al">et&#160;al.</term><term name="forthcoming">previsto</term><term name="from">a partir de</term><term name="ibid">ibid.</term><term name="in">en</term><term name="in press">en imprenta</term><term name="internet">internet</term><term name="interview">entrevista</term><term name="letter">carta</term><term name="no date">sin fecha</term><term name="no date" form="short">s.&#160;f.</term><term name="online">en l\xEDnea</term><term name="presented at">presentado en</term><term name="reference"><single>referencia</single><multiple>referencias</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">recuperado</term><term name="scale">escala</term><term name="version">versi\xF3n</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">comunicaci\xF3n personal</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">d.&#160;C.</term><term name="bc">a.&#160;C.</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\xAB</term><term name="close-quote">\xBB</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">-</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">.\xAA</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">primera</term><term name="long-ordinal-02">segunda</term><term name="long-ordinal-03">tercera</term><term name="long-ordinal-04">cuarta</term><term name="long-ordinal-05">quinta</term><term name="long-ordinal-06">sexta</term><term name="long-ordinal-07">s\xE9ptima</term><term name="long-ordinal-08">octava</term><term name="long-ordinal-09">novena</term><term name="long-ordinal-10">d\xE9cima</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>libro</single><multiple>libros</multiple></term><term name="chapter"><single>cap\xEDtulo</single><multiple>cap\xEDtulos</multiple></term><term name="column"><single>columna</single><multiple>columnas</multiple></term><term name="figure"><single>figura</single><multiple>figuras</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue"><single>n\xFAmero</single><multiple>n\xFAmeros</multiple></term><term name="line"><single>l\xEDnea</single><multiple>l\xEDneas</multiple></term><term name="note"><single>nota</single><multiple>notas</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>p\xE1gina</single><multiple>p\xE1ginas</multiple></term><term name="number-of-pages"><single>p\xE1gina</single><multiple>p\xE1ginas</multiple></term><term name="paragraph"><single>p\xE1rrafo</single><multiple>p\xE1rrafos</multiple></term><term name="part"><single>parte</single><multiple>partes</multiple></term><term name="section"><single>secci\xF3n</single><multiple>secciones</multiple></term><term name="sub-verbo"><single>sub voce</single><multiple>sub vocibus</multiple></term><term name="verse"><single>verso</single><multiple>versos</multiple></term><term name="volume"><single>volumen</single><multiple>vol\xFAmenes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">lib.</term><term name="chapter" form="short">cap.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short">f.</term><term name="issue" form="short">n.\xBA</term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short">p\xE1rr.</term><term name="part" form="short">pt.</term><term name="section" form="short">sec.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>director</single><multiple>directores</multiple></term><term name="editor"><single>editor</single><multiple>editores</multiple></term><term name="editorial-director"><single>editor</single><multiple>editores</multiple></term><term name="illustrator"><single>ilustrador</single><multiple>ilustradores</multiple></term><term name="translator"><single>traductor</single><multiple>traductores</multiple></term><term name="editortranslator"><single>editor y traductor</single><multiple>editores y traductores</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>dir.</single><multiple>dirs.</multiple></term><term name="editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="editorial-director" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="illustrator" form="short"><single>ilust.</single><multiple>ilusts.</multiple></term><term name="translator" form="short"><single>trad.</single><multiple>trads.</multiple></term><term name="editortranslator" form="short"><single>ed. y trad.</single><multiple>eds. y trads.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">de</term><term name="director" form="verb">dirigido por</term><term name="editor" form="verb">editado por</term><term name="editorial-director" form="verb">editado por</term><term name="illustrator" form="verb">ilustrado por</term><term name="interviewer" form="verb">entrevistado por</term><term name="recipient" form="verb">a</term><term name="reviewed-author" form="verb">por</term><term name="translator" form="verb">traducido por</term><term name="editortranslator" form="verb">editado y traducido por</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">dir.</term><term name="editor" form="verb-short">ed.</term><term name="editorial-director" form="verb-short">ed.</term><term name="illustrator" form="verb-short">ilust.</term><term name="translator" form="verb-short">trad.</term><term name="editortranslator" form="verb-short">ed. y trad.</term>
<!-- LONG MONTH FORMS --><term name="month-01">enero</term><term name="month-02">febrero</term><term name="month-03">marzo</term><term name="month-04">abril</term><term name="month-05">mayo</term><term name="month-06">junio</term><term name="month-07">julio</term><term name="month-08">agosto</term><term name="month-09">septiembre</term><term name="month-10">octubre</term><term name="month-11">noviembre</term><term name="month-12">diciembre</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">ene.</term><term name="month-02" form="short">feb.</term><term name="month-03" form="short">mar.</term><term name="month-04" form="short">abr.</term><term name="month-05" form="short">may</term><term name="month-06" form="short">jun.</term><term name="month-07" form="short">jul.</term><term name="month-08" form="short">ago.</term><term name="month-09" form="short">sep.</term><term name="month-10" form="short">oct.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">dic.</term>
<!-- SEASONS --><term name="season-01">primavera</term><term name="season-02">verano</term><term name="season-03">oto\xF1o</term><term name="season-04">invierno</term></terms>
</locale>
`
    };
    var c2 = new jt.Register(z4);
    var R4 = {
        apa: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="never" page-range-format="expanded"><info><title>American Psychological Association 7th edition</title><title-short>APA</title-short><id>http://www.zotero.org/styles/apa</id><link href="http://www.zotero.org/styles/apa" rel="self"/><link href="http://www.zotero.org/styles/apa-6th-edition" rel="template"/><link href="https://apastyle.apa.org/style-grammar-guidelines/references/examples" rel="documentation"/><author><name>Brenton M. Wiernik</name><email>zotero@wiernik.org</email></author><category citation-format="author-date"/><category field="psychology"/><category field="generic-base"/><updated>2022-01-31T14:43:56+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en"><terms><term name="editortranslator" form="short"><single>ed. &amp; trans.</single><multiple>eds. &amp; trans.</multiple></term><term name="translator" form="short">trans.</term><term name="interviewer" form="short"><single>interviewer</single><multiple>interviewers</multiple></term><term name="collection-editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="circa" form="short">ca.</term><term name="bc"> B.C.E.</term><term name="ad"> C.E.</term><term name="letter">personal communication</term><term name="letter" form="short">letter</term><term name="issue" form="long"><single>issue</single><multiple>issues</multiple></term></terms></locale><locale xml:lang="af"><terms><term name="letter">persoonlike kommunikasie</term><term name="letter" form="short">brief</term></terms></locale><locale xml:lang="ar"><terms><term name="letter">\u0627\u062A\u0635\u0627\u0644 \u0634\u062E\u0635\u064A</term><term name="letter" form="short">\u062E\u0637\u0627\u0628</term></terms></locale><locale xml:lang="bg"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430 \u043A\u043E\u043C\u0443\u043D\u0438\u043A\u0430\u0446\u0438\u044F</term><term name="letter" form="short">\u043F\u0438\u0441\u043C\u043E</term></terms></locale><locale xml:lang="ca"><terms><term name="letter">comunicaci\xF3 personal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="cs"><terms><term name="letter">osobn\xED komunikace</term><term name="letter" form="short">dopis</term></terms></locale><locale xml:lang="cy"><terms><term name="letter">cyfathrebu personol</term><term name="letter" form="short">llythyr</term></terms></locale><locale xml:lang="da"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikation</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="de"><terms><term name="et-al">et al.</term><term name="letter">pers\xF6nliche Kommunikation</term><term name="letter" form="short">Brief</term></terms></locale><locale xml:lang="el"><terms><term name="letter">\u03C0\u03C1\u03BF\u03C3\u03C9\u03C0\u03B9\u03BA\u03AE \u03B5\u03C0\u03B9\u03BA\u03BF\u03B9\u03BD\u03C9\u03BD\u03AF\u03B1</term><term name="letter" form="short">\u03B5\u03C0\u03B9\u03C3\u03C4\u03BF\u03BB\u03AE</term></terms></locale><locale xml:lang="es"><terms><term name="from">de</term><term name="letter">comunicaci\xF3n personal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="et"><terms><term name="letter">isiklik suhtlus</term><term name="letter" form="short">kiri</term></terms></locale><locale xml:lang="eu"><terms><term name="letter">komunikazio pertsonala</term><term name="letter" form="short">gutuna</term></terms></locale><locale xml:lang="fa"><terms><term name="letter">\u0627\u0631\u062A\u0628\u0627\u0637 \u0634\u062E\u0635\u06CC</term><term name="letter" form="short">\u0646\u0627\u0645\u0647</term></terms></locale><locale xml:lang="fi"><terms><term name="letter">henkil\xF6kohtainen viestint\xE4</term><term name="letter" form="short">kirje</term></terms></locale><locale xml:lang="fr"><terms><term name="letter">communication personnelle</term><term name="letter" form="short">lettre</term><term name="editor" form="short"><single>\xE9d.</single><multiple>\xE9ds.</multiple></term></terms></locale><locale xml:lang="he"><terms><term name="letter">\u05EA\u05E7\u05E9\u05D5\u05E8\u05EA \u05D0\u05D9\u05E9\u05D9\u05EA</term><term name="letter" form="short">\u05DE\u05DB\u05EA\u05D1</term></terms></locale><locale xml:lang="hr"><terms><term name="letter">osobna komunikacija</term><term name="letter" form="short">pismo</term></terms></locale><locale xml:lang="hu"><terms><term name="letter">szem\xE9lyes kommunik\xE1ci\xF3</term><term name="letter" form="short">lev\xE9l</term></terms></locale><locale xml:lang="id"><terms><term name="letter">komunikasi pribadi</term><term name="letter" form="short">surat</term></terms></locale><locale xml:lang="is"><terms><term name="letter">pers\xF3nuleg samskipti</term><term name="letter" form="short">br\xE9f</term></terms></locale><locale xml:lang="it"><terms><term name="letter">comunicazione personale</term><term name="letter" form="short">lettera</term></terms></locale><locale xml:lang="ja"><terms><term name="letter">\u500B\u4EBA\u7684\u306A\u3084\u308A\u53D6\u308A</term><term name="letter" form="short">\u624B\u7D19</term></terms></locale><locale xml:lang="ko"><terms><term name="letter">\uAC1C\uC778 \uC11C\uC2E0</term><term name="letter" form="short">\uD3B8\uC9C0</term></terms></locale><locale xml:lang="la"><terms><term name="letter"/><term name="letter" form="short">epistula</term></terms></locale><locale xml:lang="lt"><terms><term name="letter">communicationis personalis</term><term name="letter" form="short"/></terms></locale><locale xml:lang="lv"><terms><term name="letter">person\u012Bga komunik\u0101cija</term><term name="letter" form="short">v\u0113stule</term></terms></locale><locale xml:lang="mn"><terms><term name="letter">\u0445\u0443\u0432\u0438\u0439\u043D \u0445\u0430\u0440\u0438\u043B\u0446\u0430\u0430 \u0445\u043E\u043B\u0431\u043E\u043E</term><term name="letter" form="short">\u0437\u0430\u0445\u0438\u0430</term></terms></locale><locale xml:lang="nb"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikasjon</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="nl"><terms><term name="et-al">et al.</term><term name="letter">persoonlijke communicatie</term><term name="letter" form="short">brief</term></terms></locale><locale xml:lang="nn"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikasjon</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="pl"><terms><term name="letter">osobista komunikacja</term><term name="letter" form="short">list</term></terms></locale><locale xml:lang="pt"><terms><term name="letter">comunica\xE7\xE3o pessoal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="ro"><terms><term name="letter">comunicare personal\u0103</term><term name="letter" form="short">scrisoare</term></terms></locale><locale xml:lang="ru"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430\u044F \u043F\u0435\u0440\u0435\u043F\u0438\u0441\u043A\u0430</term><term name="letter" form="short">\u043F\u0438\u0441\u044C\u043C\u043E</term></terms></locale><locale xml:lang="sk"><terms><term name="letter">osobn\xE1 komunik\xE1cia</term><term name="letter" form="short">list</term></terms></locale><locale xml:lang="sl"><terms><term name="letter">osebna komunikacija</term><term name="letter" form="short">pismo</term></terms></locale><locale xml:lang="sr"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430 \u043A\u043E\u043C\u0443\u043D\u0438\u043A\u0430\u0446\u0438\u0458\u0430</term><term name="letter" form="short">\u043F\u0438\u0441\u043C\u043E</term></terms></locale><locale xml:lang="sv"><terms><term name="letter">personlig kommunikation</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="th"><terms><term name="letter">\u0E01\u0E32\u0E23\u0E2A\u0E37\u0E48\u0E2D\u0E2A\u0E32\u0E23\u0E2A\u0E48\u0E27\u0E19\u0E1A\u0E38\u0E04\u0E04\u0E25</term><term name="letter" form="short">\u0E08\u0E14\u0E2B\u0E21\u0E32\u0E22</term></terms></locale><locale xml:lang="tr"><terms><term name="letter">ki\u015Fisel ileti\u015Fim</term><term name="letter" form="short">mektup</term></terms></locale><locale xml:lang="uk"><terms><term name="letter">\u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0435 \u0441\u043F\u0456\u043B\u043A\u0443\u0432\u0430\u043D\u043D\u044F</term><term name="letter" form="short">\u043B\u0438\u0441\u0442</term></terms></locale><locale xml:lang="vi"><terms><term name="letter">giao ti\u1EBFp c\xE1 nh\xE2n</term><term name="letter" form="short">th\u01B0</term></terms></locale><locale xml:lang="zh-CN"><terms><term name="letter">\u7684\u79C1\u4EBA\u4EA4\u6D41</term><term name="letter" form="short">\u4FE1\u51FD</term></terms></locale><locale xml:lang="zh-TW"><terms><term name="letter">\u79C1\u4EBA\u901A\u8A0A</term><term name="letter" form="short">\u4FE1\u51FD</term></terms></locale><!-- General categories of item types:Periodical: article-journal article-magazine article-newspaper post-weblog review review-bookPeriodical or Booklike: paper-conferenceBooklike: article book broadcast chapter dataset entry entry-dictionary entry-encyclopedia figure graphic interview manuscript map motion_picture musical_score pamphlet patent personal_communication report song speech thesis post webpageLegal: bill legal_case legislation treaty--><!-- APA references contain four parts: author, date, title, source --><macro name="author-bib"><names variable="composer" delimiter=", "><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><substitute><names variable="author"/><names variable="illustrator"/><names variable="director"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=" (" suffix=")" text-case="title"/></names><choose><if variable="container-title"><choose><if type="book entry entry-dictionary entry-encyclopedia" match="any"><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/></group></if><else><text macro="title-and-descriptions"/></else></choose></if></choose></if></choose><!-- Test for editortranslator and put that first as that becomes available --><names variable="editor" delimiter=", "><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><names variable="editorial-director"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><names variable="collection-editor"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/></group></if><else><text macro="title-and-descriptions"/></else></choose></substitute></names></macro><macro name="author-intext"><choose><if type="bill legal_case legislation treaty" match="any"><text macro="title-intext"/></if><else-if type="interview personal_communication" match="any"><choose><!-- These variables indicate that the letter is retrievable by the reader. If not, then use the APA in-text-only personal communication format --><if variable="archive container-title DOI publisher URL" match="none"><group delimiter=", "><names variable="author"><name and="symbol" delimiter=", " initialize-with=". "/><substitute><text macro="title-intext"/></substitute></names><!-- Replace with term="personal-communication" if that becomes available --><text term="letter"/></group></if><else><names variable="author" delimiter=", "><name form="short" and="symbol" delimiter=", " initialize-with=". "/><substitute><text macro="title-intext"/></substitute></names></else></choose></else-if><else><names variable="composer" delimiter=", "><name form="short" and="symbol" delimiter=", " initialize-with=". "/><substitute><names variable="author"/><names variable="illustrator"/><names variable="director"/><choose><if variable="container-title"><choose><if type="book entry entry-dictionary entry-encyclopedia" match="any"><text macro="title-intext"/></if></choose></if></choose><names variable="editor"/><names variable="editorial-director"/><text macro="title-intext"/></substitute></names></else></choose></macro><macro name="date-bib"><group delimiter=" " prefix="(" suffix=")"><choose><if is-uncertain-date="issued"><text term="circa" form="short"/></if></choose><group><choose><if variable="issued"><date variable="issued"><date-part name="year"/></date><text variable="year-suffix"/><choose><if type="article-magazine article-newspaper broadcast interview motion_picture pamphlet personal_communication post post-weblog song speech webpage" match="any"><!-- Many video and audio examples in manual give full dates. Err on the side of too much information. --><date variable="issued"><date-part prefix=", " name="month"/><date-part prefix=" " name="day"/></date></if><else-if type="paper-conference"><!-- Capture 'speech' stored as 'paper-conference' --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><date variable="issued"><date-part prefix=", " name="month"/><date-part prefix=" " name="day"/></date></if></choose></else-if><!-- Only year: article article-journal book chapter entry entry-dictionary entry-encyclopedia dataset figure graphic manuscript map musical_score paper-conference[published] patent report review review-book thesis --></choose></if><else-if variable="status"><group><text variable="status" text-case="lowercase"/><text variable="year-suffix" prefix="-"/></group></else-if><else><text term="no date" form="short"/><text variable="year-suffix" prefix="-"/></else></choose></group></group></macro><macro name="date-sort-group"><!-- APA sorts 1. no-date items, 2. items with dates, 3. in-press (status) items --><choose><if variable="issued"><text value="1"/></if><else-if variable="status"><text value="2"/></else-if><else><text value="0"/></else></choose></macro><macro name="date-sort-date"><date variable="issued" form="numeric"/></macro><macro name="date-intext"><choose><if variable="issued"><group delimiter="/"><group delimiter=" "><choose><if is-uncertain-date="original-date"><text term="circa" form="short"/></if></choose><date variable="original-date"><date-part name="year"/></date></group><group delimiter=" "><choose><if is-uncertain-date="issued"><text term="circa" form="short"/></if></choose><group><choose><if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><!-- These variables indicate that the communication is retrievable by the reader. If not, then use the in-text-only personal communication format --><date variable="issued" form="text"/></if><else><date variable="issued"><date-part name="year"/></date></else></choose></if><else><date variable="issued"><date-part name="year"/></date></else></choose><text variable="year-suffix"/></group></group></group></if><else-if variable="status"><text variable="status" text-case="lowercase"/><text variable="year-suffix" prefix="-"/></else-if><else><text term="no date" form="short"/><text variable="year-suffix" prefix="-"/></else></choose></macro><!-- APA has two description elements following the title:title (parenthetical) [bracketed]  --><macro name="title-and-descriptions"><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/><text macro="bracketed"/></group></if><else><group delimiter=" "><text macro="bracketed"/><text macro="parenthetical"/></group></else></choose></macro><macro name="title"><choose><if type="post webpage" match="any"><!-- Webpages are always italicized --><text variable="title" font-style="italic"/></if><else-if variable="container-title" match="any"><!-- Other types are italicized based on presence of container-title.Assume that review and review-book are published in periodicals/blogs,not just on a web page (ex. 69) --><text variable="title"/></else-if><else><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><text variable="title" font-style="italic"/></if><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><group delimiter=": " font-style="italic"><text variable="title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></if><else><text variable="title" font-style="italic"/></else></choose></else-if><else><group delimiter=": " font-style="italic"><text variable="title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></else></choose></else></choose></macro><macro name="title-intext"><choose><if variable="title" match="none"><text macro="bracketed-intext" prefix="[" suffix="]"/></if><else-if type="bill"><!-- If a bill has no number or container-title, assume it is a hearing; italic --><choose><if variable="number container-title" match="none"><text variable="title" form="short" font-style="italic" text-case="title"/></if><else-if variable="title"><text variable="title" form="short" text-case="title"/></else-if><else><group delimiter=" "><text variable="genre"/><group delimiter=" "><choose><if variable="chapter-number container-title" match="none"><!-- Replace with label variable="number" as that becomes available --><text term="issue" form="short"/></if></choose><text variable="number"/></group></group></else></choose></else-if><else-if type="legal_case" match="any"><!-- Cases are italicized --><text variable="title" font-style="italic"/></else-if><else-if type="legislation treaty" match="any"><!-- Legislation and treaties not italicized or quoted --><text variable="title" form="short" text-case="title"/></else-if><else-if type="post webpage" match="any"><!-- Webpages are always italicized --><text variable="title" form="short" font-style="italic" text-case="title"/></else-if><else-if variable="container-title" match="any"><!-- Other types are italicized or quoted based on presence of container-title. As in title macro. --><text variable="title" form="short" quotes="true" text-case="title"/></else-if><else><text variable="title" form="short" font-style="italic" text-case="title"/></else></choose></macro><macro name="parenthetical"><!-- (Secondary contributors; Database location; Genre no. 123; Report Series 123, Version, Edition, Volume, Page) --><group prefix="(" suffix=")"><choose><if type="patent"><!-- authority: U.S. ; genre: patent ; number: 123,445 --><group delimiter=" "><text variable="authority" form="short"/><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else><!-- This should be localized --><text value="patent" text-case="capitalize-first"/></else></choose><group delimiter=" "><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></group></group></if><else-if type="post webpage" match="any"><!-- For post webpage, container-title is treated as publisher --><group delimiter="; "><text macro="secondary-contributors"/><text macro="database-location"/><text macro="number"/><text macro="locators-booklike"/></group></else-if><else-if variable="container-title"><group delimiter="; "><text macro="secondary-contributors"/><choose><if type="broadcast graphic map motion_picture song" match="any"><!-- For audiovisual media, number information comes after title, not container-title --><text macro="number"/></if></choose></group></else-if><else><group delimiter="; "><text macro="secondary-contributors"/><text macro="database-location"/><text macro="number"/><text macro="locators-booklike"/></group></else></choose></group></macro><macro name="parenthetical-container"><choose><if variable="container-title" match="any"><group prefix="(" suffix=")"><group delimiter="; "><text macro="database-location"/><choose><if type="broadcast graphic map motion_picture song" match="none"><!-- For audiovisual media, number information comes after title, not container-title --><text macro="number"/></if></choose><text macro="locators-booklike"/></group></group></if></choose></macro><macro name="bracketed"><!-- [Descriptive information] --><!-- If there is a number, genre is already printed in macro="number" --><group prefix="[" suffix="]"><choose><if variable="reviewed-author reviewed-title" type="review review-book" match="any"><!-- Reviewed item --><group delimiter="; "><group delimiter=", "><group delimiter=" "><!-- Assume that genre is entered as 'Review of the book' or similar --><choose><if variable="number" match="none"><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><else><!-- Replace with term="review" as that becomes available --><text value="Review of"/></else></choose></if><else><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/></if><else><!-- Replace with term="review" as that becomes available --><text value="Review of"/></else></choose></else></choose><text macro="reviewed-title"/></group><names variable="reviewed-author"><label form="verb-short" suffix=" "/><name and="symbol" initialize-with=". " delimiter=", "/></names></group><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></if><else-if type="thesis"><!-- Thesis type and institution --><group delimiter="; "><choose><if variable="number" match="none"><group delimiter=", "><text variable="genre" text-case="capitalize-first"/><choose><if variable="archive DOI URL" match="any"><!-- Include the university in brackets if thesis is published --><text variable="publisher"/></if></choose></group></if></choose><text variable="medium" text-case="capitalize-first"/></group></else-if><else-if variable="interviewer" type="interview" match="any"><!-- Interview information --><choose><if variable="title"><text macro="format"/></if><else-if variable="genre"><group delimiter="; "><group delimiter=" "><text variable="genre" text-case="capitalize-first"/><group delimiter=" "><text term="author" form="verb"/><names variable="interviewer"><name and="symbol" initialize-with=". " delimiter=", "/></names></group></group></group></else-if><else-if variable="interviewer"><group delimiter="; "><names variable="interviewer"><label form="verb" suffix=" " text-case="capitalize-first"/><name and="symbol" initialize-with=". " delimiter=", "/></names><text variable="medium" text-case="capitalize-first"/></group></else-if><else><text macro="format"/></else></choose></else-if><else-if type="personal_communication"><!-- Letter information --><choose><if variable="recipient"><group delimiter="; "><group delimiter=" "><choose><if variable="number" match="none"><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose></if><else><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/></if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose></else></choose><names variable="recipient" delimiter=", "><label form="verb" suffix=" "/><name and="symbol" delimiter=", "/></names></group><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></if><else><text macro="format"/></else></choose></else-if><else-if variable="composer" type="song" match="all"><!-- Performer of classical music works --><group delimiter="; "><choose><if variable="number" match="none"><group delimiter=" "><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else-if><else><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="Recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else></choose></group></if><else><group delimiter=" "><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></if><else><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="Recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else></choose></group></else></choose><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></else-if><else-if variable="container-title" match="none"><!-- Other description --><text macro="format"/></else-if><else><!-- For conference presentations, chapters in reports, software, place bracketed after the container title --><choose><if type="paper-conference speech" match="any"><choose><if variable="collection-editor editor editorial-director issue page volume" match="any"><text macro="format"/></if></choose></if><else-if type="book"><choose><if variable="version" match="none"><text macro="format"/></if></choose></else-if><else-if type="report" match="none"><text macro="format"/></else-if></choose></else></choose></group></macro><macro name="bracketed-intext"><group prefix="[" suffix="]"><choose><if variable="reviewed-author reviewed-title" type="review review-book" match="any"><!-- This should be localized --><text macro="reviewed-title-intext" prefix="Review of "/></if><else-if variable="interviewer" type="interview" match="any"><names variable="interviewer"><label form="verb" suffix=" " text-case="capitalize-first"/><name and="symbol" initialize-with=". " delimiter=", "/><substitute><text macro="format-intext"/></substitute></names></else-if><else-if type="personal_communication"><!-- Letter information --><choose><if variable="recipient"><group delimiter=" "><choose><if variable="number" match="none"><text variable="genre" text-case="capitalize-first"/></if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose><names variable="recipient" delimiter=", "><label form="verb" suffix=" "/><name and="symbol" delimiter=", "/></names></group></if><else><text macro="format-intext"/></else></choose></else-if><else><text macro="format-intext"/></else></choose></group></macro><macro name="bracketed-container"><group prefix="[" suffix="]"><choose><if type="paper-conference speech" match="any"><!-- Conference presentations should describe the session [container] in bracketed unless published in a proceedings --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><text macro="format"/></if></choose></if><else-if type="book" variable="version" match="all"><!-- For entries in mobile app reference works, place bracketed after the container-title --><text macro="format"/></else-if><else-if type="report"><!-- For chapters in reports, place bracketed after the container title --><text macro="format"/></else-if></choose></group></macro><macro name="secondary-contributors"><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><text macro="secondary-contributors-periodical"/></if><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><text macro="secondary-contributors-booklike"/></if><else><text macro="secondary-contributors-periodical"/></else></choose></else-if><else><text macro="secondary-contributors-booklike"/></else></choose></macro><macro name="secondary-contributors-periodical"><group delimiter="; "><choose><if variable="title"><names variable="interviewer" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></if></choose><names variable="translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></macro><macro name="secondary-contributors-booklike"><group delimiter="; "><choose><if variable="title"><names variable="interviewer"><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></if></choose><!-- When editortranslator becomes available, add a test: variable="editortranslator" match="none"; then print translator --><choose><if type="post webpage" match="none"><!-- Webpages treat container-title like publisher --><choose><if variable="container-title" match="none"><group delimiter="; "><names variable="container-author"><label form="verb-short" suffix=" " text-case="title"/><name and="symbol" initialize-with=". " delimiter=", "/></names><names variable="editor translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></if></choose></if><else><group delimiter="; "><names variable="container-author"><label form="verb-short" suffix=" " text-case="title"/><name and="symbol" initialize-with=". " delimiter=", "/></names><names variable="editor translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></else></choose></group></macro><macro name="database-location"><choose><if variable="archive-place" match="none"><!-- With \`archive-place\`: physical archives. Without: online archives. --><!-- Add archive_collection as that becomes available --><text variable="archive_location"/></if></choose></macro><macro name="number"><choose><if variable="number"><group delimiter=", "><group delimiter=" "><text variable="genre" text-case="title"/><choose><if is-numeric="number"><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></if><else><text variable="number"/></else></choose></group><choose><if type="thesis"><choose><!-- Include the university in brackets if thesis is published --><if variable="archive DOI URL" match="any"><text variable="publisher"/></if></choose></if></choose></group></if></choose></macro><macro name="locators-booklike"><choose><if type="article-journal article-magazine article-newspaper broadcast interview patent post post-weblog review review-book speech webpage" match="any"/><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><group delimiter=", "><text macro="version"/><text macro="edition"/><text macro="volume-booklike"/></group></if></choose></else-if><else><group delimiter=", "><text macro="version"/><text macro="edition"/><text macro="volume-booklike"/></group></else></choose></macro><macro name="version"><choose><if is-numeric="version"><group delimiter=" "><!-- replace with label variable="version" if that becomes available --><text term="version" text-case="capitalize-first"/><text variable="version"/></group></if><else><text variable="version"/></else></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><label variable="edition" form="short"/></group></if><else><text variable="edition"/></else></choose></macro><macro name="volume-booklike"><group delimiter=", "><!-- Report series [ex. 52] --><choose><if type="report"><group delimiter=" "><text variable="collection-title" text-case="title"/><text variable="collection-number"/></group></if></choose><choose><if variable="volume" match="any"><choose><!-- Non-numeric volumes are already printed as part of the book title --><if is-numeric="volume" match="none"/><else><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><number variable="volume" form="numeric"/></group></else></choose></if><else><group><!-- Replace with label variable="number-of-volumes" if that becomes available --><text term="volume" form="short" text-case="capitalize-first" suffix=" "/><text term="page-range-delimiter" prefix="1"/><number variable="number-of-volumes" form="numeric"/></group></else></choose><group delimiter=" "><label variable="issue" text-case="capitalize-first"/><text variable="issue"/></group><group delimiter=" "><label variable="page" form="short" suffix=" "/><text variable="page"/></group></group></macro><macro name="reviewed-title"><choose><if variable="reviewed-title"><!-- Not possible to distinguish TV series episode from other reviewed works [Ex. 69] --><text variable="reviewed-title" font-style="italic"/></if><else><!-- Assume title is title of reviewed work --><text variable="title" font-style="italic"/></else></choose></macro><macro name="reviewed-title-intext"><choose><if variable="reviewed-title"><!-- Not possible to distinguish TV series episode from other reviewed works [Ex. 69] --><text variable="reviewed-title" form="short" font-style="italic" text-case="title"/></if><else><!-- Assume title is title of reviewed work --><text variable="title" form="short" font-style="italic" text-case="title"/></else></choose></macro><macro name="format"><choose><if variable="genre medium" match="any"><group delimiter="; "><choose><if variable="number" match="none"><text variable="genre" text-case="capitalize-first"/></if></choose><text variable="medium" text-case="capitalize-first"/></group></if><!-- Generic labels for specific types --><!-- These should be localized when possible --><else-if type="dataset"><text value="Data set"/></else-if><else-if type="book" variable="version" match="all"><!-- Replace with type="software" and term="software" as that becomes available --><text value="Computer software"/></else-if><else-if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><text term="letter" text-case="capitalize-first"/></if><else-if type="interview"><text term="interview" text-case="capitalize-first"/></else-if></choose></else-if><else-if type="map"><text value="Map"/></else-if></choose></macro><macro name="format-intext"><choose><if variable="genre" match="any"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><!-- Generic labels for specific types --><!-- These should be localized when possible --><else-if type="dataset"><text value="Data set"/></else-if><else-if type="book" variable="version" match="all"><!-- Replace with type="software" and term="software" as that becomes available --><text value="Computer software"/></else-if><else-if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><text term="letter" text-case="capitalize-first"/></if><else-if type="interview"><text term="interview" text-case="capitalize-first"/></else-if></choose></else-if><else-if type="map"><text value="Map"/></else-if></choose></macro><!-- APA 'source' element contains four parts:container, event, publisher, access --><macro name="container"><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><!-- Periodical items --><text macro="container-periodical"/></if><else-if type="paper-conference"><!-- Determine if paper-conference is a periodical or booklike --><choose><if variable="editor editorial-director collection-editor container-author" match="any"><text macro="container-booklike"/></if><else><text macro="container-periodical"/></else></choose></else-if><else-if type="post webpage" match="none"><!-- post and webpage treat container-title like publisher --><text macro="container-booklike"/></else-if></choose></macro><macro name="container-periodical"><group delimiter=". "><group delimiter=", "><text variable="container-title" font-style="italic" text-case="title"/><choose><if variable="volume"><group><text variable="volume" font-style="italic"/><text variable="issue" prefix="(" suffix=")"/></group></if><else><text variable="issue" font-style="italic"/></else></choose><choose><if variable="page"><text variable="page"/></if><else><!-- Ex. 6: Journal article with article number or eLocator --><!-- This should be localized --><text variable="number" prefix="Article "/></else></choose></group><choose><if variable="issued"><choose><if variable="issue page volume" match="none"><text variable="status" text-case="capitalize-first"/></if></choose></if></choose></group></macro><macro name="container-booklike"><choose><if variable="container-title" match="any"><group delimiter=" "><text term="in" text-case="capitalize-first"/><group delimiter=", "><names variable="editor translator" delimiter=", &amp; "><!-- Change to editortranslator and move editor to substitute as that becomes available --><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" text-case="title" prefix=" (" suffix=")"/><substitute><names variable="editorial-director"/><names variable="collection-editor"/><names variable="container-author"/></substitute></names><group delimiter=": " font-style="italic"><text variable="container-title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></group><text macro="parenthetical-container"/><text macro="bracketed-container"/></group></if></choose></macro><macro name="publisher"><group delimiter="; "><choose><if type="thesis"><choose><if variable="archive DOI URL" match="none"><text variable="publisher"/></if></choose></if><else-if type="post webpage" match="any"><!-- For websites, treat container title like publisher --><group delimiter="; "><text variable="container-title" text-case="title"/><text variable="publisher"/></group></else-if><else-if type="paper-conference"><!-- For paper-conference, don't print publisher if in a journal-like proceedings --><choose><if variable="collection-editor editor editorial-director" match="any"><text variable="publisher"/></if></choose></else-if><else-if type="article-journal article-magazine article-newspaper post-weblog" match="none"><text variable="publisher"/></else-if></choose><group delimiter=", "><choose><if variable="archive-place"><!-- With \`archive-place\`: physical archives. Without: online archives. --><!-- For physical archives, print the location before the archive name.For electronic archives, these are printed in macro="description". --><!-- Split "archive_location" into "archive_collection" and "archive_location" as that becomes available --><!-- Must test for archive_collection:With collection: archive_collection (archive_location), archive, archive-placeNo collection: archive (archive_location), archive-place--><text variable="archive_location"/></if></choose><text variable="archive"/><text variable="archive-place"/></group></group></macro><macro name="access"><choose><if variable="DOI" match="any"><text variable="DOI" prefix="https://doi.org/"/></if><else-if variable="URL"><group delimiter=" "><choose><if variable="issued status" match="none"><group delimiter=" "><text term="retrieved" text-case="capitalize-first"/><date variable="accessed" form="text" suffix=","/><text term="from"/></group></if></choose><text variable="URL"/></group></else-if></choose></macro><macro name="event"><choose><if variable="event"><!-- To prevent Zotero from printing event-place due to its double-mapping of all 'place' toboth publisher-place and event-place. Remove this 'choose' when that is changed. --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><!-- Don't print event info if published in a proceedings --><group delimiter=", "><text variable="event"/><text variable="event-place"/></group></if></choose></if></choose></macro><!-- After 'source', APA also prints publication history (original publication, reprint info, retraction info) --><macro name="publication-history"><choose><if type="patent" match="none"><group prefix="(" suffix=")"><choose><if variable="references"><!-- This provides the option for more elaborate description of publication history, such as full "reprinted" references(examples 11, 43, 44) or retracted references --><text variable="references"/></if><else><group delimiter=" "><text value="Original work published"/><choose><if is-uncertain-date="original-date"><text term="circa" form="short"/></if></choose><date variable="original-date"><date-part name="year"/></date></group></else></choose></group></if><else><text variable="references" prefix="(" suffix=")"/></else></choose></macro><!-- Legal citations have their own rules --><macro name="legal-cites"><choose><if type="legal_case"><group delimiter=". "><group delimiter=", "><text variable="title"/><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/></group><text variable="references"/></group><text macro="access"/></group></if><else-if type="bill"><!-- Currently designed to handle bills, resolutions, hearings, rederal reports. --><group delimiter=". "><group delimiter=", "><choose><if variable="number container-title" match="none"><!-- If no number or container-title, then assume it is a hearing --><text variable="title" font-style="italic"/></if><else><text variable="title"/></else></choose><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/><choose><if variable="number container-title" match="none"><!-- If no number or container-title, then assume it is a hearing --><names variable="author" prefix="(testimony of " suffix=")"><name and="symbol" delimiter=", "/></names></if><else><text variable="status" prefix="(" suffix=")"/></else></choose></group><text variable="references"/></group><text macro="access"/></group></else-if><else-if type="legislation"><!-- Currently designed to handle statutes, codified regulations, executive orders.For uncodified regulations, assume future code section is in status. --><group delimiter=". "><group delimiter=", "><text variable="title"/><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/><text variable="status" prefix="(" suffix=")"/></group><text variable="references"/></group><text macro="access"/></group></else-if><else-if type="treaty"><!-- APA generally defers to Bluebook for legal citations, but diverges withoutexplanation for treaty items. The Bluebook format that was used in APA 6thed. is used here. --><group delimiter=", "><text variable="title" text-case="title"/><names variable="author"><name initialize-with="." form="short" delimiter="-"/></names><text macro="date-legal"/><text macro="container-legal"/><text macro="access"/></group></else-if></choose></macro><macro name="date-legal"><choose><if type="legal_case"><group prefix="(" suffix=")" delimiter=" "><text variable="authority"/><choose><if variable="container-title" match="any"><!-- Print only year for cases published in reporters--><date variable="issued" form="numeric" date-parts="year"/></if><else><date variable="issued" form="text"/></else></choose></group></if><else-if type="bill legislation" match="any"><group prefix="(" suffix=")" delimiter=" "><group delimiter=" "><date variable="original-date"><date-part name="year"/></date><text term="and" form="symbol"/></group><date variable="issued"><date-part name="year"/></date></group></else-if><else-if type="treaty"><date variable="issued" form="text"/></else-if></choose></macro><macro name="container-legal"><!-- Expect legal item container-titles to be stored in short form --><choose><if type="legal_case"><group delimiter=" "><choose><if variable="container-title"><group delimiter=" "><text variable="volume"/><text variable="container-title"/><group delimiter=" "><!-- Change to label variable="section" as that becomes available --><text term="section" form="symbol"/><text variable="section"/></group><choose><if variable="page page-first" match="any"><text variable="page-first"/></if><else><text value="___"/></else></choose></group></if><else><group delimiter=" "><choose><if is-numeric="number"><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/></if></choose><text variable="number"/></group></else></choose></group></if><else-if type="bill"><group delimiter=", "><group delimiter=" "><text variable="genre"/><group delimiter=" "><choose><if variable="chapter-number container-title" match="none"><!-- Replace with label variable="number" as that becomes available --><text term="issue" form="short"/></if></choose><text variable="number"/></group></group><text variable="authority"/><text variable="chapter-number"/><group delimiter=" "><text variable="volume"/><text variable="container-title"/><text variable="page-first"/></group></group></else-if><else-if type="legislation"><choose><if variable="number"><!--There's a public law number--><group delimiter=", "><text variable="number" prefix="Pub. L. No. "/><group delimiter=" "><text variable="volume"/><text variable="container-title"/><text variable="page-first"/></group></group></if><else><group delimiter=" "><text variable="volume"/><text variable="container-title"/><choose><if variable="section"><group delimiter=" "><!-- Change to label variable="section" as that becomes available --><text term="section" form="symbol"/><text variable="section"/></group></if><else><text variable="page-first"/></else></choose></group></else></choose></else-if><else-if type="treaty"><group delimiter=" "><number variable="volume"/><text variable="container-title"/><choose><if variable="page page-first" match="any"><text variable="page-first"/></if><else><group delimiter=" "><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></group></else></choose></group></else-if></choose></macro><macro name="citation-locator"><group delimiter=" "><choose><if locator="chapter"><label variable="locator" text-case="capitalize-first"/></if><else><label variable="locator" form="short"/></else></choose><text variable="locator"/></group></macro><citation et-al-min="3" et-al-use-first="1" disambiguate-add-year-suffix="true" disambiguate-add-names="true" disambiguate-add-givenname="true" collapse="year" givenname-disambiguation-rule="primary-name-with-initials"><sort><key macro="author-bib" names-min="3" names-use-first="1"/><key macro="date-sort-group"/><key macro="date-sort-date" sort="ascending"/><key variable="status"/></sort><layout prefix="(" suffix=")" delimiter="; "><group delimiter=", "><text macro="author-intext"/><text macro="date-intext"/><text macro="citation-locator"/></group></layout></citation><bibliography hanging-indent="true" et-al-min="21" et-al-use-first="19" et-al-use-last="true" entry-spacing="0" line-spacing="2"><sort><key macro="author-bib"/><key macro="date-sort-group"/><key macro="date-sort-date" sort="ascending"/><key variable="status"/><key macro="title"/></sort><layout><choose><if type="bill legal_case legislation treaty" match="any"><!-- Legal items have different orders and delimiters --><choose><if variable="DOI URL" match="any"><text macro="legal-cites"/></if><else><text macro="legal-cites" suffix="."/></else></choose></if><else><group delimiter=" "><group delimiter=". " suffix="."><text macro="author-bib"/><text macro="date-bib"/><text macro="title-and-descriptions"/><text macro="container"/><text macro="event"/><text macro="publisher"/></group><text macro="access"/><text macro="publication-history"/></group></else></choose></layout></bibliography>
</style>
`,
        vancouver: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="sort-only" initialize-with-hyphen="false" page-range-format="minimal"><info><title>Vancouver</title><id>http://www.zotero.org/styles/vancouver</id><link href="http://www.zotero.org/styles/vancouver" rel="self"/><link href="http://www.nlm.nih.gov/bsd/uniform_requirements.html" rel="documentation"/><author><name>Michael Berkowitz</name><email>mberkowi@gmu.edu</email></author><contributor><name>Sean Takats</name><email>stakats@gmu.edu</email></contributor><contributor><name>Sebastian Karcher</name></contributor><category citation-format="numeric"/><category field="medicine"/><summary>Vancouver style as outlined by International Committee of Medical Journal Editors Uniform Requirements for Manuscripts Submitted to Biomedical Journals: Sample References</summary><updated>2022-04-14T13:48:43+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en"><date form="text" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><terms><term name="collection-editor" form="long"><single>editor</single><multiple>editors</multiple></term><term name="presented at">presented at</term><term name="available at">available from</term><term name="section" form="short">sect.</term></terms></locale><locale xml:lang="fr"><date form="text" delimiter=" "><date-part name="day"/><date-part name="month" form="short" strip-periods="true"/><date-part name="year"/></date></locale><macro name="author"><names variable="author"><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/><substitute><names variable="editor"/></substitute></names></macro><macro name="editor"><names variable="editor" suffix="."><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/></names></macro><macro name="chapter-marker"><choose><if type="chapter paper-conference entry-dictionary entry-encyclopedia" match="any"><text term="in" text-case="capitalize-first"/></if></choose></macro><macro name="publisher"><choose><!--discard publisher info for articles--><if type="article-journal article-magazine article-newspaper" match="none"><group delimiter=": " suffix=";"><choose><if type="thesis"><text variable="publisher-place" prefix="[" suffix="]"/></if><else-if type="speech"/><else><text variable="publisher-place"/></else></choose><text variable="publisher"/></group></if></choose></macro><macro name="access"><choose><if variable="URL"><group delimiter=": "><text term="available at" text-case="capitalize-first"/><text variable="URL"/></group></if></choose></macro><macro name="accessed-date"><choose><if variable="URL"><group prefix="[" suffix="]" delimiter=" "><text term="cited" text-case="lowercase"/><date variable="accessed" form="text"/></group></if></choose></macro><macro name="container-title"><choose><if type="article-journal article-magazine chapter paper-conference article-newspaper review review-book entry-dictionary entry-encyclopedia" match="any"><group suffix="." delimiter=" "><choose><if type="article-journal review review-book" match="any"><text variable="container-title" form="short" strip-periods="true"/></if><else><text variable="container-title" strip-periods="true"/></else></choose><choose><if variable="URL"><text term="internet" prefix="[" suffix="]" text-case="capitalize-first"/></if></choose></group><text macro="edition" prefix=" "/></if><!--add event-name and event-place once they become available--><else-if type="bill legislation" match="any"><group delimiter=", "><group delimiter=". "><text variable="container-title"/><group delimiter=" "><text term="section" form="short" text-case="capitalize-first"/><text variable="section"/></group></group><text variable="number"/></group></else-if><else-if type="speech"><group delimiter=": " suffix=";"><group delimiter=" "><text variable="genre" text-case="capitalize-first"/><text term="presented at"/></group><text variable="event"/></group></else-if><else><group delimiter=", " suffix="."><choose><if variable="collection-title" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose><text variable="container-title"/></group></else></choose></macro><macro name="title"><text variable="title"/><choose><if type="article-journal article-magazine chapter paper-conference article-newspaper review review-book entry-dictionary entry-encyclopedia" match="none"><choose><if variable="URL"><text term="internet" prefix=" [" suffix="]" text-case="capitalize-first"/></if></choose><text macro="edition" prefix=". "/></if></choose><choose><if type="thesis"><text variable="genre" prefix=" [" suffix="]"/></if></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><text term="edition" form="short"/></group></if><else><text variable="edition" suffix="."/></else></choose></macro><macro name="date"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="any"><group suffix=";" delimiter=" "><date variable="issued" form="text"/><text macro="accessed-date"/></group></if><else-if type="bill legislation" match="any"><group delimiter=", "><date variable="issued" delimiter=" "><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><date variable="issued"><date-part name="year"/></date></group></else-if><else-if type="report"><date variable="issued" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/></date><text macro="accessed-date" prefix=" "/></else-if><else-if type="patent"><group suffix="."><group delimiter=", "><text variable="number"/><date variable="issued"><date-part name="year"/></date></group><text macro="accessed-date" prefix=" "/></group></else-if><else-if type="speech"><group delimiter="; "><group delimiter=" "><date variable="issued" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><text macro="accessed-date"/></group><text variable="event-place"/></group></else-if><else><group suffix="."><date variable="issued"><date-part name="year"/></date><text macro="accessed-date" prefix=" "/></group></else></choose></macro><macro name="pages"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="any"><text variable="page" prefix=":"/></if><else-if type="book" match="any"><text variable="number-of-pages" prefix=" "/><choose><if is-numeric="number-of-pages"><label variable="number-of-pages" form="short" prefix=" " plural="never"/></if></choose></else-if><else><group prefix=" " delimiter=" "><label variable="page" form="short" plural="never"/><text variable="page"/></group></else></choose></macro><macro name="journal-location"><choose><if type="article-journal article-magazine review review-book" match="any"><text variable="volume"/><text variable="issue" prefix="(" suffix=")"/></if></choose></macro><macro name="collection-details"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="none"><choose><if variable="collection-title"><group delimiter=" " prefix="(" suffix=")"><names variable="collection-editor" suffix="."><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/></names><group delimiter="; "><text variable="collection-title"/><group delimiter=" "><label variable="volume" form="short"/><text variable="volume"/></group></group></group></if></choose></if></choose></macro><macro name="report-details"><choose><if type="report"><text variable="number" prefix="Report No.: "/></if></choose></macro><citation collapse="citation-number"><sort><key variable="citation-number"/></sort><layout prefix="(" suffix=")" delimiter=","><text variable="citation-number"/></layout></citation><bibliography et-al-min="7" et-al-use-first="6" second-field-align="flush"><layout><text variable="citation-number" suffix=". "/><group delimiter=". " suffix=". "><text macro="author"/><text macro="title"/></group><group delimiter=" " suffix=". "><group delimiter=": "><text macro="chapter-marker"/><group delimiter=" "><text macro="editor"/><text macro="container-title"/></group></group><text macro="publisher"/><group><text macro="date"/><text macro="journal-location"/><text macro="pages"/></group></group><text macro="collection-details" suffix=". "/><text macro="report-details" suffix=". "/><text macro="access"/></layout></bibliography>
</style>
`,
        harvard1: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="sort-only" default-locale="en-GB"><info><title>Cite Them Right 11th edition - Harvard</title><id>http://www.zotero.org/styles/harvard-cite-them-right</id><link href="http://www.zotero.org/styles/harvard-cite-them-right" rel="self"/><link href="http://www.zotero.org/styles/harvard-cite-them-right-10th-edition" rel="template"/><link href="http://www.citethemrightonline.com/" rel="documentation"/><author><name>Patrick O'Brien</name></author><category citation-format="author-date"/><category field="generic-base"/><summary>Harvard according to Cite Them Right, 11th edition.</summary><updated>2021-09-01T10:12:20+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en-GB"><terms><term name="editor" form="short"><single>ed.</single><multiple>eds</multiple></term><term name="editortranslator" form="verb">edited and translated by</term><term name="edition" form="short">edn.</term></terms></locale><macro name="editor"><choose><if type="chapter paper-conference" match="any"><names variable="container-author" delimiter=", " suffix=", "><name and="text" initialize-with=". " delimiter=", " sort-separator=", " name-as-sort-order="all"/></names><choose><if variable="container-author" match="none"><names variable="editor translator" delimiter=", "><name and="text" initialize-with="." name-as-sort-order="all"/><label form="short" prefix=" (" suffix=")"/></names></if></choose></if></choose></macro><macro name="secondary-contributors"><choose><if type="chapter paper-conference" match="none"><names variable="editor translator" delimiter=". "><label form="verb" text-case="capitalize-first" suffix=" "/><name and="text" initialize-with="."/></names></if><else-if variable="container-author" match="any"><names variable="editor translator" delimiter=". "><label form="verb" text-case="capitalize-first" suffix=" "/><name and="text" initialize-with=". " delimiter=", "/></names></else-if></choose></macro><macro name="author"><names variable="author"><name and="text" delimiter-precedes-last="never" initialize-with="." name-as-sort-order="all"/><label form="short" prefix=" (" suffix=")"/><et-al font-style="italic"/><substitute><names variable="editor"/><names variable="translator"/><choose><if type="article-newspaper article-magazine" match="any"><text variable="container-title" text-case="title" font-style="italic"/></if><else><text macro="title"/></else></choose></substitute></names></macro><macro name="author-short"><names variable="author"><name form="short" and="text" delimiter=", " delimiter-precedes-last="never" initialize-with=". "/><et-al font-style="italic"/><substitute><names variable="editor"/><names variable="translator"/><choose><if type="article-newspaper article-magazine" match="any"><text variable="container-title" text-case="title" font-style="italic"/></if><else><text macro="title"/></else></choose></substitute></names></macro><macro name="access"><choose><if variable="DOI"><text variable="DOI" prefix="doi:"/></if><else-if variable="URL"><text term="available at" suffix=": " text-case="capitalize-first"/><text variable="URL"/><group prefix=" (" delimiter=": " suffix=")"><text term="accessed" text-case="capitalize-first"/><date form="text" variable="accessed"><date-part name="day"/><date-part name="month"/><date-part name="year"/></date></group></else-if></choose></macro><macro name="number-volumes"><choose><if variable="volume" match="none"><group delimiter=" " prefix="(" suffix=")"><text variable="number-of-volumes"/><label variable="volume" form="short" strip-periods="true"/></group></if></choose></macro><macro name="title"><choose><if type="bill book legal_case legislation motion_picture report song thesis webpage graphic" match="any"><group delimiter=". "><group delimiter=" "><group delimiter=" "><text variable="title" font-style="italic"/><text variable="medium" prefix="[" suffix="]"/></group><text macro="number-volumes"/></group><text macro="edition"/></group></if><else><text variable="title" form="long" quotes="true"/></else></choose></macro><macro name="publisher"><choose><if type="thesis"><group delimiter=". "><text variable="genre"/><text variable="publisher"/></group></if><else-if type="report"><group delimiter=". "><group delimiter=" "><text variable="genre"/><text variable="number"/></group><group delimiter=": "><text variable="publisher-place"/><text variable="publisher"/></group></group></else-if><else-if type="article-journal article-newspaper article-magazine" match="none"><group delimiter=" "><group delimiter=", "><choose><if type="speech" variable="event" match="any"><text variable="event" font-style="italic"/></if></choose><group delimiter=": "><text variable="publisher-place"/><text variable="publisher"/></group></group><group prefix="(" suffix=")" delimiter=", "><text variable="collection-title"/><text variable="collection-number"/></group></group></else-if></choose></macro><macro name="year-date"><choose><if variable="issued"><date variable="issued"><date-part name="year"/></date><text variable="year-suffix"/></if><else><text term="no date"/><text variable="year-suffix" prefix=" "/></else></choose></macro><macro name="locator"><choose><if type="article-journal"><text variable="volume"/><text variable="issue" prefix="(" suffix=")"/></if></choose></macro><macro name="published-date"><choose><if type="article-newspaper article-magazine post-weblog speech" match="any"><date variable="issued"><date-part name="day" suffix=" "/><date-part name="month" form="long"/></date></if></choose></macro><macro name="pages"><choose><if type="chapter paper-conference article-journal article article-magazine article-newspaper book review review-book report" match="any"><group delimiter=" "><label variable="page" form="short"/><text variable="page"/></group></if></choose></macro><macro name="container-title"><choose><if variable="container-title"><group delimiter=". "><group delimiter=" "><text variable="container-title" font-style="italic"/><choose><if type="article article-journal" match="any"><choose><if match="none" variable="page volume"><text value="Preprint" prefix="[" suffix="]"/></if></choose></if></choose></group><text macro="edition"/></group></if></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><text term="edition" form="short" strip-periods="true"/></group></if><else><text variable="edition"/></else></choose></macro><macro name="container-prefix"><choose><if type="chapter paper-conference" match="any"><text term="in"/></if></choose></macro><citation et-al-min="4" et-al-use-first="1" disambiguate-add-year-suffix="true" disambiguate-add-names="true" disambiguate-add-givenname="true" collapse="year"><sort><key macro="year-date"/></sort><layout prefix="(" suffix=")" delimiter="; "><group delimiter=", "><group delimiter=", "><text macro="author-short"/><text macro="year-date"/></group><group><label variable="locator" form="short" suffix=" "/><text variable="locator"/></group></group></layout></citation><bibliography and="text" et-al-min="4" et-al-use-first="1"><sort><key macro="author"/><key macro="year-date"/><key variable="title"/></sort><layout suffix="."><group delimiter=". "><group delimiter=" "><text macro="author"/><text macro="year-date" prefix="(" suffix=")"/><group delimiter=", "><text macro="title"/><group delimiter=" "><text macro="container-prefix"/><text macro="editor"/><text macro="container-title"/></group></group></group><text macro="secondary-contributors"/><text macro="publisher"/></group><group delimiter=", " prefix=", "><text macro="locator"/><text macro="published-date"/><text macro="pages"/></group><text macro="access" prefix=". "/></layout></bibliography>
</style>
`
    };
    var h3 = new jt.Register(R4);
    var S4 = Symbol.for("proxied"), N5 = function(e) {
        let t = function(r, m) {
            if (r.sys.wrapBibliographyEntry) {
                let [a, o] = r.sys.wrapBibliographyEntry(this.system_id);
                m = [
                    a,
                    m,
                    o
                ].join("");
            }
            return e.call(this, r, m);
        };
        return t[S4] = !0, t;
    };
    for(let e in ur1.Output.Formats){
        let t = ur1.Output.Formats[e]["@bibliography/entry"];
        !t || t[S4] || (ur1.Output.Formats[e]["@bibliography/entry"] = N5(t));
    }
    function q4(e) {
        if (c2.has(e)) return c2.get(e);
        let t = e.replace("-", "_");
        return c2.has(t) ? c2.get(t) : {};
    }
    var x4 = {}, I5 = function(e, t, r, m, a) {
        let o = `${e}|${t}`, l;
        return x4[o] instanceof ur1.Engine ? (l = x4[o], l.sys.retrieveItem = m, l.sys.wrapBibliographyEntry = void 0, l.updateItems([])) : l = x4[o] = new ur1.Engine({
            retrieveLocale: a,
            retrieveItem: m
        }, r, t, !0), l;
    }, _5 = function(e, t, r, m) {
        if (!ur1.Output.Formats[m] || !ur1.Output.Formats[m]["@bibliography/entry"]) throw new TypeError(`Cannot find format '${m}'`);
        let a = e.reduce((i, f)=>(i[f.id] = f, i), {}), o = h3.get(h3.has(t) ? t : "apa");
        r = c2.has(r) ? r : void 0;
        let n = I5(t, r, o, function(i) {
            if (Object.prototype.hasOwnProperty.call(a, i)) return a[i];
            throw new Error(`Cannot find entry with id '${i}'`);
        }, q4);
        return n.setOutputFormat(m), n;
    }, g5 = _5;
    var H3 = (e, t, r)=>e.replace(/^\s*<[a-z]+/i, `$& data-${t}="${r}"`), T6 = (e, t)=>H3(e, "csl-entry-id", t);
    var A4 = (e, t)=>typeof t == "function" ? t(e) : t || "";
    function y4(e, t = {}) {
        let { template: r = "apa", lang: m, format: a = "text", nosort: o = !1 } = t, l = t.entry ? [].concat(t.entry) : e.map(({ id: p })=>p);
        e = jt.downgradeCsl(e);
        let n = g5(e, r, m, a), i = n.updateItems(l, o);
        if (t.append || t.prepend) {
            let p = e.reduce((s, d)=>(s[d.id] = d, s), {});
            n.sys.wrapBibliographyEntry = function(s) {
                let d = p[s];
                return [
                    A4(d, t.prepend),
                    A4(d, t.append)
                ];
            };
        }
        let f = n.makeBibliography(), [{ bibstart: b, bibend: k }, v] = f, O = v.map((p, s)=>T6(p, i[s]));
        return t.asEntryArray ? O.map((p, s)=>[
                i[s],
                p
            ]) : b + O.join("") + k;
    }
    function D2(e) {
        return typeof e == "object" ? e : {
            id: e
        };
    }
    function M5(e) {
        return e.citationItems ? e : {
            citationItems: [].concat(e).map(D2),
            properties: {
                noteIndex: 0
            }
        };
    }
    function L4(e) {
        return e ? e.map(M5) : [];
    }
    function w5(e, t = {}) {
        let { template: r = "apa", lang: m, format: a = "text" } = t, o = e.map(({ id: v })=>v), l = t.entry ? t.entry : o;
        e = jt.downgradeCsl(e);
        let n = g5(e, r, m, a), i = L4(t.citationsPre), f = M5(l), b = L4(t.citationsPost);
        return n.rebuildProcessorState([
            ...i,
            f,
            ...b
        ], a, [])[i.length][2];
    }
    tt.add("@csl", {
        output: {
            bibliography: y4,
            citation: w5
        },
        config: {
            engine: g5,
            locales: c2,
            templates: h3
        }
    });
    const mod59 = {};
    var T7 = Object.defineProperty;
    var i2 = (e, t)=>{
        for(var r in t)T7(e, r, {
            get: t[r],
            enumerable: !0
        });
    };
    var o = {};
    i2(o, {
        default: ()=>p4,
        parse: ()=>p4
    });
    function p4(e) {
        return (Array.isArray(e) ? e : e.trim().split(/(?:\s+)/g)).map((r)=>`https://doi.org/${r}`);
    }
    var l2 = {};
    i2(l2, {
        parse: ()=>f3,
        parseAsync: ()=>u2
    });
    var d3 = {};
    i2(d3, {
        default: ()=>c3,
        parse: ()=>c3
    });
    var n2 = {};
    i2(n2, {
        default: ()=>a5,
        parse: ()=>a5
    });
    var g6 = {
        "journal-article": "article-journal",
        "book-chapter": "chapter",
        "posted-content": "manuscript",
        "proceedings-article": "paper-conference"
    };
    function a5(e, t) {
        return e === "posted-content" && t.subtype === "preprint" ? "article" : g6[e] || e;
    }
    function c3(e) {
        let t = {
            type: a5(e.type, e)
        };
        return [
            "submitted",
            "issued",
            "event-date",
            "original-date",
            "container",
            "accessed"
        ].forEach((h)=>{
            let s = e[h];
            s && s["date-parts"] && typeof s["date-parts"][0] == "number" && (s["date-parts"] = [
                s["date-parts"]
            ]);
        }), Object.assign({}, e, t);
    }
    var m5 = {
        checkContentType: !0,
        headers: {
            Accept: "application/vnd.citationstyles.csl+json"
        }
    };
    function A5(e) {
        return e === "[]" ? {} : c3(JSON.parse(e));
    }
    function u2(e) {
        let t = [].concat(e).map((r)=>jt.fetchFileAsync(r, m5).then(A5));
        return Promise.all(t);
    }
    function f3(e) {
        return [].concat(e).map((r)=>jt.fetchFile(r, m5)).map(A5);
    }
    var D3 = "@doi", _6 = {
        id: o,
        api: l2,
        json: d3,
        type: n2
    }, b3 = {
        "@doi/api": {
            parse: f3,
            parseAsync: u2,
            parseType: {
                dataType: "String",
                predicate: /^\s*(https?:\/\/(?:dx\.)?doi\.org\/(10.\d{4,9}\/[-._;()/:A-Z0-9]+))\s*$/i,
                extends: "@else/url"
            }
        },
        "@doi/short-url": {
            parse: function(e) {
                return e.replace(/^(\s*)/, "$1https://");
            },
            parseType: {
                dataType: "String",
                predicate: /^\s*((?:dx\.)?doi\.org\/(10.\d{4,9}\/[-._;()/:A-Z0-9]+))\s*$/i
            }
        },
        "@doi/id": {
            parse: p4,
            parseType: {
                dataType: "String",
                predicate: /^\s*(10.\d{4,9}\/[-._;()/:A-Z0-9]+)\s*$/i
            }
        },
        "@doi/list+text": {
            parse: p4,
            parseType: {
                dataType: "String",
                tokenList: /^10.\d{4,9}\/[-._;()/:A-Z0-9]+$/i
            }
        },
        "@doi/list+object": {
            parse: p4,
            parseType: {
                dataType: "Array",
                elementConstraint: "@doi/id"
            }
        },
        "@doi/type": {
            parse: a5
        }
    };
    tt.add(D3, {
        input: b3
    });
    const mod60 = {
        formats: b3,
        parsers: _6,
        ref: D3
    };
    var T8 = {
        outputSpec: "mixed"
    };
    var l3 = {
        RIS: {
            ABST: "article-journal",
            ADVS: "motion_picture",
            AGGR: "dataset",
            ANCIENT: "classic",
            ART: "graphic",
            BILL: "bill",
            BLOG: "post-weblog",
            BOOK: "book",
            CASE: "legal_case",
            CHAP: "chapter",
            CHART: "figure",
            CLSWK: "classic",
            COMP: "software",
            CONF: "paper-conference",
            CPAPER: "paper-conference",
            CTLG: "entry",
            DATA: "dataset",
            DBASE: "dataset",
            DICT: "entry-dictionary",
            EBOOK: "book",
            ECHAP: "chapter",
            EDBOOK: "book",
            EJOUR: "article-journal",
            ELEC: "webpage",
            ENCYC: "entry-encyclopedia",
            EQUA: "article",
            FIGURE: "figure",
            GEN: "document",
            GOVDOC: "report",
            GRANT: "article",
            HEAR: "hearing",
            ICOMM: "personal_communication",
            INPR: "article-journal",
            JFULL: "article-journal",
            JOUR: "article-journal",
            LEGAL: "legislation",
            MANSCPT: "manuscript",
            MAP: "map",
            MGZN: "article-magazine",
            MPCT: "broadcast",
            MULTI: "motion_picture",
            MUSIC: "musical_score",
            NEWS: "article-newspaper",
            PAMP: "pamphlet",
            PAT: "patent",
            PCOMM: "personal_communication",
            RPRT: "report",
            SER: "periodical",
            SLIDE: "motion_picture",
            SOUND: "motion_picture",
            STAND: "standard",
            STAT: "legislation",
            THES: "thesis",
            UNBILL: "manuscript",
            UNPB: "manuscript",
            VIDEO: "motion_picture",
            WEB: "webpage"
        },
        CSL: {
            "article-journal": "JOUR",
            "article-magazine": "MGZN",
            "article-newspaper": "NEWS",
            article: "JOUR",
            bill: "BILL",
            book: "BOOK",
            broadcast: "MPCT",
            chapter: "CHAP",
            classic: "CLSWK",
            collection: "GEN",
            dataset: "DATA",
            document: "GEN",
            entry: "CTLG",
            "entry-dictionary": "DICT",
            "entry-encyclopedia": "ENCYC",
            event: "GEN",
            figure: "FIGURE",
            graphic: "ART",
            hearing: "HEAR",
            interview: "GEN",
            legal_case: "CASE",
            legislation: "LEGAL",
            manuscript: "MANSCPT",
            map: "MAP",
            motion_picture: "MPCT",
            musical_score: "MUSIC",
            pamphlet: "PAMP",
            "paper-conference": "CONF",
            patent: "PAT",
            performance: "GEN",
            periodical: "SER",
            personal_communication: "PCOMM",
            "post-weblog": "BLOG",
            post: "ICOMM",
            regulation: "LEGAL",
            report: "RPRT",
            "review-book": "BOOK",
            review: "JOUR",
            software: "COMP",
            song: "SOUND",
            speech: "SOUND",
            standard: "STAND",
            thesis: "THES",
            treaty: "GEN",
            webpage: "ELEC"
        }
    };
    var p5 = [
        {
            source: "A2",
            target: "editor",
            when: {
                source: {
                    TY: [
                        "ANCIENT",
                        "BLOG",
                        "CHAP",
                        "CONF",
                        "CPAPER",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "ENCYC",
                        "MUSIC",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "chapter",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "musical_score",
                        "paper-conference",
                        "periodical",
                        "post-weblog"
                    ]
                }
            }
        },
        {
            source: "A2",
            target: "performer",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "song",
                        "speech"
                    ]
                }
            }
        },
        {
            source: "A2",
            target: "collection-editor",
            when: {
                source: {
                    TY: [
                        "BOOK",
                        "CLSWK",
                        "COMP",
                        "EDBOOK",
                        "ELEC",
                        "MAP",
                        "MULTI",
                        "RPRT",
                        "UNPB"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "classic",
                        "map",
                        "report",
                        "review-book",
                        "software",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "A2",
            target: "reporter",
            when: {
                source: {
                    TY: [
                        "CASE"
                    ]
                },
                target: {
                    type: [
                        "legal_case"
                    ]
                }
            }
        },
        {
            source: "A2",
            target: "producer",
            when: {
                source: {
                    TY: [
                        "DATA"
                    ]
                },
                target: {
                    type: [
                        "dataset"
                    ]
                }
            }
        },
        {
            source: "A2",
            target: "recipient",
            when: {
                source: {
                    TY: [
                        "ICOMM",
                        "PCOMM"
                    ]
                },
                target: {
                    type: [
                        "personal_communication",
                        "post"
                    ]
                }
            }
        },
        {
            source: "A3",
            target: "collection-editor",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "CHAP",
                        "CONF",
                        "EBOOK",
                        "MUSIC",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "chapter",
                        "musical_score",
                        "paper-conference",
                        "periodical",
                        "song",
                        "speech"
                    ]
                }
            }
        },
        {
            source: "A3",
            target: "illustrator",
            when: {
                source: {
                    TY: [
                        "BLOG"
                    ]
                },
                target: {
                    type: [
                        "post-weblog"
                    ]
                }
            }
        },
        {
            source: "A3",
            target: "editor",
            when: {
                source: {
                    TY: [
                        "BOOK"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "review-book"
                    ]
                }
            }
        },
        {
            source: "A3",
            target: "producer",
            when: {
                source: {
                    TY: [
                        "MPCT"
                    ]
                },
                target: {
                    type: [
                        "broadcast",
                        "motion_picture"
                    ]
                }
            }
        },
        {
            source: "A4",
            target: "translator",
            when: {
                source: {
                    TY: [
                        "ANCIENT",
                        "BOOK",
                        "CHAP",
                        "CLSWK",
                        "CTLG",
                        "DICT",
                        "EDBOOK",
                        "ENCYC",
                        "GRANT",
                        "PAMP"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "chapter",
                        "classic",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "pamphlet",
                        "review-book"
                    ]
                }
            }
        },
        {
            source: "A4",
            target: "performer",
            when: {
                source: {
                    TY: [
                        "MPCT"
                    ]
                },
                target: {
                    type: [
                        "broadcast",
                        "motion_picture"
                    ]
                }
            }
        },
        {
            source: "A4",
            target: "producer",
            when: {
                source: {
                    TY: [
                        "MUSIC"
                    ]
                },
                target: {
                    type: [
                        "musical_score"
                    ]
                }
            }
        },
        {
            source: "AB",
            target: "abstract",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "AU",
            target: "author",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MULTI",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "book",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "interview",
                        "legislation",
                        "manuscript",
                        "map",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "AU",
            target: "editor",
            when: {
                source: {
                    TY: [
                        "EDBOOK"
                    ]
                },
                target: !1
            }
        },
        {
            source: "AU",
            target: "director",
            when: {
                source: {
                    TY: [
                        "MPCT"
                    ]
                },
                target: {
                    type: [
                        "broadcast",
                        "motion_picture"
                    ]
                }
            }
        },
        {
            source: "AU",
            target: "composer",
            when: {
                source: {
                    TY: [
                        "MUSIC"
                    ]
                },
                target: {
                    type: [
                        "musical_score"
                    ]
                }
            }
        },
        {
            source: "AU",
            target: "reporter",
            when: {
                source: {
                    TY: [
                        "NEWS"
                    ]
                },
                target: {
                    type: [
                        "article-newspaper"
                    ]
                }
            }
        },
        {
            source: "C1",
            target: "section",
            when: {
                source: {
                    TY: [
                        "CHAP",
                        "ECHAP",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "chapter",
                        "periodical"
                    ]
                }
            }
        },
        {
            source: "C1",
            target: "publisher-place",
            when: {
                source: {
                    TY: [
                        "CONF",
                        "CPAPER"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "C1",
            target: "scale",
            when: {
                source: {
                    TY: [
                        "MAP"
                    ]
                },
                target: {
                    type: [
                        "map"
                    ]
                }
            }
        },
        {
            source: "C2",
            target: "PMCID",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "INPR",
                        "JFULL",
                        "JOUR"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "review"
                    ]
                }
            }
        },
        {
            source: "C2",
            target: "issue",
            when: {
                source: {
                    TY: [
                        "NEWS"
                    ]
                },
                target: {
                    type: [
                        "article-newspaper"
                    ]
                }
            }
        },
        {
            source: "C2",
            target: "number",
            when: {
                source: {
                    TY: [
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "periodical"
                    ]
                }
            }
        },
        {
            source: "C3",
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "MAP",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "map",
                        "song",
                        "speech"
                    ]
                }
            }
        },
        {
            source: "C3",
            target: "container-title",
            when: {
                source: {
                    TY: [
                        "CONF"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "C3",
            target: "PMCID",
            when: {
                source: {
                    TY: [
                        "EJOUR"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C3",
            target: "jurisdiction",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: [
                "C3",
                "M1"
            ],
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "ART"
                    ]
                },
                target: {
                    type: [
                        "graphic"
                    ]
                }
            }
        },
        {
            source: "C5",
            target: "volume-title",
            when: {
                source: {
                    TY: [
                        "EJOUR"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C5",
            target: "number",
            when: {
                source: {
                    TY: [
                        "GRANT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C5",
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "MULTI"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C5",
            target: "references",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: [
                "C5",
                "PY"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "EBOOK"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C6",
            target: "status",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: "C6",
            target: "issue",
            when: {
                source: {
                    TY: [
                        "RPRT"
                    ]
                },
                target: {
                    type: [
                        "report"
                    ]
                }
            }
        },
        {
            source: "C6",
            target: "volume",
            when: {
                source: {
                    TY: [
                        "STAT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "C7",
            target: "number",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "INPR",
                        "JFULL",
                        "JOUR"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "review"
                    ]
                }
            }
        },
        {
            source: "C7",
            target: "PMCID",
            when: {
                source: {
                    TY: [
                        "EBOOK",
                        "ECHAP"
                    ]
                },
                target: !1
            }
        },
        {
            source: [
                "C7",
                "NV"
            ],
            target: "number",
            when: {
                source: {
                    TY: [
                        "EJOUR"
                    ]
                },
                target: !1
            }
        },
        {
            source: "CN",
            target: "call-number",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CTLG",
                        "DATA",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "CY",
            target: "publisher-place",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "HEAR",
                        "ICOMM",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article-magazine",
                        "article-newspaper",
                        "book",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legislation",
                        "manuscript",
                        "map",
                        "musical_score",
                        "pamphlet",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "CY",
            target: "event-place",
            when: {
                source: {
                    TY: [
                        "CONF",
                        "CPAPER"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "DA",
            target: "accessed",
            when: {
                source: {
                    TY: [
                        "AGGR",
                        "DBASE",
                        "EBOOK",
                        "EJOUR",
                        "MULTI"
                    ]
                },
                target: !1
            }
        },
        {
            source: [
                "DA",
                "C2"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "CONF"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: [
                "DA",
                "C2",
                "PY"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: [
                "DA",
                "PY"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHART",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "EDBOOK",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "PAMP",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "bill",
                        "book",
                        "broadcast",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: [
                "DA",
                "PY",
                "Y2"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "STAT"
                    ]
                },
                target: !1
            }
        },
        {
            source: [
                "DA",
                "Y2"
            ],
            target: "accessed",
            when: {
                source: {
                    TY: [
                        "ECHAP"
                    ]
                },
                target: !1
            }
        },
        {
            source: "DB",
            target: "source",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "DO",
            target: "DOI",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "ET",
            target: "edition",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "ANCIENT",
                        "ART",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "CLSWK",
                        "CONF",
                        "CTLG",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "GEN",
                        "GOVDOC",
                        "LEGAL",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article-magazine",
                        "article-newspaper",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "graphic",
                        "interview",
                        "legislation",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review-book",
                        "song",
                        "speech",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "ET",
            target: "version",
            when: {
                source: {
                    TY: [
                        "CHART",
                        "COMP",
                        "DATA",
                        "EQUA",
                        "FIGURE"
                    ]
                },
                target: {
                    type: [
                        "dataset",
                        "figure",
                        "software"
                    ]
                }
            }
        },
        {
            source: "ET",
            target: "available-date",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "INPR",
                        "JFULL",
                        "JOUR"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "review"
                    ]
                }
            }
        },
        {
            source: "ET",
            target: "medium",
            when: {
                source: {
                    TY: [
                        "MANSCPT"
                    ]
                },
                target: {
                    type: [
                        "manuscript"
                    ]
                }
            }
        },
        {
            source: [
                "ET",
                "PY"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "AGGR",
                        "DBASE"
                    ]
                },
                target: !1
            }
        },
        {
            source: "ID",
            target: "id"
        },
        {
            source: "IS",
            target: "number-of-volumes",
            when: {
                source: {
                    TY: [
                        "CHAP"
                    ]
                },
                target: {
                    type: [
                        "chapter"
                    ]
                }
            }
        },
        {
            source: "IS",
            target: "issue",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "INPR",
                        "JFULL",
                        "JOUR"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "review"
                    ]
                }
            }
        },
        {
            source: "J2",
            target: "container-title-short",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ANCIENT",
                        "BOOK",
                        "CHAP",
                        "CTLG",
                        "DATA",
                        "DICT",
                        "ENCYC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MGZN",
                        "PAMP",
                        "PCOMM",
                        "SER",
                        "STAND",
                        "STAT",
                        "UNPB"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "book",
                        "chapter",
                        "dataset",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "legislation",
                        "manuscript",
                        "pamphlet",
                        "periodical",
                        "personal_communication",
                        "post",
                        "regulation",
                        "review",
                        "review-book",
                        "standard"
                    ]
                }
            }
        },
        {
            source: "KW",
            target: "keyword",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "LA",
            target: "language",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "LB",
            target: "citation-label",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "M1",
            target: "number",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "BILL",
                        "CHART",
                        "DICT",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "HEAR",
                        "SLIDE",
                        "SOUND",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "bill",
                        "collection",
                        "document",
                        "entry-dictionary",
                        "event",
                        "figure",
                        "hearing",
                        "interview",
                        "performance",
                        "song",
                        "speech",
                        "thesis",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "M1",
            target: "collection-number",
            when: {
                source: {
                    TY: [
                        "BOOK",
                        "CLSWK",
                        "CTLG",
                        "EDBOOK",
                        "PAMP",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "classic",
                        "entry",
                        "pamphlet",
                        "periodical",
                        "review-book"
                    ]
                }
            }
        },
        {
            source: "M1",
            target: "issue",
            when: {
                source: {
                    TY: [
                        "CONF",
                        "EJOUR",
                        "GOVDOC",
                        "MGZN"
                    ]
                },
                target: {
                    type: [
                        "article-magazine",
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "M1",
            target: "chapter-number",
            when: {
                source: {
                    TY: [
                        "ECHAP"
                    ]
                },
                target: !1
            }
        },
        {
            source: "M1",
            target: "status",
            when: {
                source: {
                    TY: [
                        "GRANT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "M1",
            target: "page-first",
            when: {
                source: {
                    TY: [
                        "LEGAL",
                        "NEWS",
                        "STAND"
                    ]
                },
                target: {
                    type: [
                        "article-newspaper",
                        "legislation",
                        "regulation",
                        "standard"
                    ]
                }
            }
        },
        {
            source: [
                "M1",
                "NV"
            ],
            target: "number",
            when: {
                source: {
                    TY: "STAT"
                },
                target: !1
            }
        },
        {
            source: [
                "NV",
                "M1"
            ],
            target: "number",
            when: {
                source: {
                    TY: [
                        "ICOMM",
                        "MANSCPT",
                        "PCOMM"
                    ]
                },
                target: {
                    type: [
                        "manuscript",
                        "personal_communication",
                        "post"
                    ]
                }
            }
        },
        {
            source: [
                "M1",
                "VL"
            ],
            target: "accessed",
            when: {
                source: {
                    TY: [
                        "ELEC"
                    ]
                },
                target: {
                    type: [
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "M2",
            target: "page-first",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "INPR",
                        "JFULL",
                        "JOUR"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "review"
                    ]
                }
            }
        },
        {
            source: "M2",
            target: "number-of-pages",
            when: {
                source: {
                    TY: [
                        "PAMP"
                    ]
                },
                target: {
                    type: [
                        "pamphlet"
                    ]
                }
            }
        },
        {
            source: "M3",
            target: "genre",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BOOK",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CPAPER",
                        "CTLG",
                        "DBASE",
                        "DICT",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MULTI",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "book",
                        "classic",
                        "collection",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "event",
                        "figure",
                        "graphic",
                        "interview",
                        "legislation",
                        "manuscript",
                        "map",
                        "pamphlet",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "M3",
            target: "medium",
            when: {
                source: {
                    TY: [
                        "BLOG",
                        "EBOOK",
                        "ELEC",
                        "MPCT",
                        "MUSIC"
                    ]
                },
                target: {
                    type: [
                        "broadcast",
                        "motion_picture",
                        "musical_score",
                        "post-weblog",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: [
                "N1",
                "RN"
            ],
            target: "note",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PCOMM",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: [
                "N1",
                "RN",
                "RP"
            ],
            target: "note",
            when: {
                source: {
                    TY: [
                        "PAT",
                        "RPRT"
                    ]
                },
                target: {
                    type: [
                        "patent",
                        "report"
                    ]
                }
            }
        },
        {
            source: "NV",
            target: "number-of-volumes",
            when: {
                source: {
                    TY: [
                        "ANCIENT",
                        "BOOK",
                        "CLSWK",
                        "CONF",
                        "DICT",
                        "ECHAP",
                        "EDBOOK",
                        "ENCYC",
                        "GEN",
                        "HEAR",
                        "MUSIC",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "classic",
                        "collection",
                        "document",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "hearing",
                        "interview",
                        "musical_score",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "review-book",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "NV",
            target: "number",
            when: {
                source: {
                    TY: [
                        "CTLG",
                        "DATA"
                    ]
                },
                target: {
                    type: [
                        "dataset",
                        "entry"
                    ]
                }
            }
        },
        {
            source: "NV",
            target: "version",
            when: {
                source: {
                    TY: [
                        "EBOOK"
                    ]
                },
                target: !1
            }
        },
        {
            source: "NV",
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "GRANT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "NV",
            target: "collection-number",
            when: {
                source: {
                    TY: [
                        "RPRT"
                    ]
                },
                target: {
                    type: [
                        "report"
                    ]
                }
            }
        },
        {
            source: "OP",
            target: "original-title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "AGGR",
                        "ANCIENT",
                        "BOOK",
                        "CHAP",
                        "CLSWK",
                        "CTLG",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "ENCYC",
                        "GEN",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MGZN",
                        "MUSIC",
                        "PAMP",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "book",
                        "chapter",
                        "classic",
                        "collection",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "interview",
                        "musical_score",
                        "pamphlet",
                        "performance",
                        "periodical",
                        "review",
                        "review-book",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "OP",
            target: "references",
            when: {
                source: {
                    TY: [
                        "BILL",
                        "CASE",
                        "HEAR",
                        "LEGAL",
                        "STAT",
                        "UNBILL"
                    ]
                },
                target: {
                    type: [
                        "bill",
                        "hearing",
                        "legal_case",
                        "legislation",
                        "regulation"
                    ]
                }
            }
        },
        {
            source: "PB",
            target: "publisher",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "LEGAL",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PCOMM",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article-magazine",
                        "article-newspaper",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legislation",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "PB",
            target: "authority",
            when: {
                source: {
                    TY: [
                        "CASE"
                    ]
                },
                target: {
                    type: [
                        "legal_case"
                    ]
                }
            }
        },
        {
            source: "PB",
            target: "archive",
            when: {
                source: {
                    TY: [
                        "MANSCPT"
                    ]
                },
                target: {
                    type: [
                        "manuscript"
                    ]
                }
            }
        },
        {
            source: [
                "PB",
                "A3"
            ],
            target: "publisher",
            when: {
                source: {
                    TY: [
                        "RPRT"
                    ]
                },
                target: {
                    type: [
                        "report"
                    ]
                }
            }
        },
        {
            source: [
                "PB",
                "C5"
            ],
            target: "publisher",
            when: {
                source: {
                    TY: [
                        "STAT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "PY",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "CHAP",
                        "CLSWK",
                        "COMP",
                        "DICT",
                        "ECHAP",
                        "GOVDOC",
                        "MULTI",
                        "NEWS"
                    ]
                },
                target: {
                    type: [
                        "article-newspaper",
                        "chapter",
                        "classic",
                        "entry-dictionary",
                        "software"
                    ]
                }
            }
        },
        {
            source: "PY",
            target: "event-date",
            when: {
                source: {
                    TY: [
                        "CONF"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "RI",
            target: "reviewed-title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ANCIENT",
                        "CHAP",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "GRANT",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MGZN",
                        "NEWS",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "chapter",
                        "collection",
                        "document",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "interview",
                        "performance",
                        "periodical",
                        "review",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "RI",
            target: "locator",
            when: {
                source: {
                    TY: [
                        "STAT"
                    ]
                },
                target: !1
            }
        },
        {
            source: "SE",
            target: "section",
            when: {
                source: {
                    TY: [
                        "BILL",
                        "GEN",
                        "GOVDOC",
                        "MUSIC",
                        "NEWS",
                        "STAT",
                        "UNBILL"
                    ]
                },
                target: {
                    type: [
                        "article-newspaper",
                        "bill",
                        "collection",
                        "document",
                        "event",
                        "interview",
                        "musical_score",
                        "performance",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "number",
            when: {
                source: {
                    TY: [
                        "BLOG"
                    ]
                },
                target: {
                    type: [
                        "post-weblog"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "chapter-number",
            when: {
                source: {
                    TY: [
                        "CHAP",
                        "SER"
                    ]
                },
                target: {
                    type: [
                        "chapter",
                        "periodical"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "page",
            when: {
                source: {
                    TY: [
                        "BOOK"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "review-book"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "submitted",
            when: {
                source: {
                    TY: [
                        "CASE"
                    ]
                },
                target: {
                    type: [
                        "legal_case"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "number-of-pages",
            when: {
                source: {
                    TY: [
                        "CTLG"
                    ]
                },
                target: {
                    type: [
                        "entry"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "original-date",
            when: {
                source: {
                    TY: [
                        "DATA"
                    ]
                },
                target: {
                    type: [
                        "dataset"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "version",
            when: {
                source: {
                    TY: [
                        "DICT"
                    ]
                },
                target: {
                    type: [
                        "entry-dictionary"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "locator",
            when: {
                source: {
                    TY: [
                        "STAND"
                    ]
                },
                target: {
                    type: [
                        "standard"
                    ]
                }
            }
        },
        {
            source: "SE",
            target: "page-first",
            when: {
                source: {
                    TY: [
                        "MANSCPT",
                        "MGZN"
                    ]
                },
                target: {
                    type: [
                        "article-magazine",
                        "manuscript"
                    ]
                }
            }
        },
        {
            source: [
                "SE",
                "PY"
            ],
            target: "issued",
            when: {
                source: {
                    TY: [
                        "EJOUR"
                    ]
                },
                target: !1
            }
        },
        {
            source: [
                "SE",
                "T2"
            ],
            target: "locator",
            when: {
                source: {
                    TY: [
                        "LEGAL"
                    ]
                },
                target: {
                    type: [
                        "legislation",
                        "regulation"
                    ]
                }
            }
        },
        {
            source: "SN",
            target: [
                "ISSN",
                "ISBN"
            ],
            when: {
                source: {
                    TY: [
                        "AGGR",
                        "CLSWK",
                        "GEN"
                    ]
                },
                target: {
                    type: [
                        "classic",
                        "collection",
                        "document",
                        "event",
                        "interview",
                        "performance",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "SN",
            target: "ISBN",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "ANCIENT",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "COMP",
                        "CONF",
                        "CTLG",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "ELEC",
                        "ENCYC",
                        "HEAR",
                        "MAP",
                        "PAMP",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "chapter",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "hearing",
                        "map",
                        "pamphlet",
                        "paper-conference",
                        "periodical",
                        "post-weblog",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "SN",
            target: "ISSN",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "DATA",
                        "EJOUR",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MGZN",
                        "MUSIC",
                        "NEWS"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "dataset",
                        "musical_score",
                        "review"
                    ]
                }
            }
        },
        {
            source: "SN",
            target: "number",
            when: {
                source: {
                    TY: [
                        "DBASE",
                        "GOVDOC"
                    ]
                },
                target: !1
            }
        },
        {
            source: [
                "SN",
                "M1"
            ],
            target: "number",
            when: {
                source: {
                    TY: [
                        "RPRT"
                    ]
                },
                target: {
                    type: [
                        "report"
                    ]
                }
            }
        },
        {
            source: [
                "SN",
                "SE",
                "M1"
            ],
            target: "number",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: [
                "SN",
                "T3"
            ],
            target: "number",
            when: {
                source: {
                    TY: [
                        "LEGAL",
                        "STAND"
                    ]
                },
                target: {
                    type: [
                        "legislation",
                        "regulation",
                        "standard"
                    ]
                }
            }
        },
        {
            source: "SP",
            target: "page",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "AGGR",
                        "ANCIENT",
                        "BILL",
                        "CHAP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DBASE",
                        "DICT",
                        "ECHAP",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "STAND",
                        "STAT",
                        "UNBILL",
                        "UNPB"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "chapter",
                        "collection",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "hearing",
                        "interview",
                        "legislation",
                        "manuscript",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "regulation",
                        "report",
                        "review",
                        "standard",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "SP",
            target: "number-of-pages",
            when: {
                source: {
                    TY: [
                        "BOOK",
                        "CLSWK",
                        "EBOOK",
                        "EDBOOK",
                        "THES"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "classic",
                        "review-book",
                        "thesis"
                    ]
                }
            }
        },
        {
            source: "SP",
            target: "page-first",
            when: {
                source: {
                    TY: [
                        "CASE"
                    ]
                },
                target: {
                    type: [
                        "legal_case"
                    ]
                }
            }
        },
        {
            source: "SP",
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "MPCT"
                    ]
                },
                target: {
                    type: [
                        "broadcast",
                        "motion_picture"
                    ]
                }
            }
        },
        {
            source: "ST",
            target: "title-short",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CTLG",
                        "DATA",
                        "DICT",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "GEN",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "SV",
            target: "collection-number",
            when: {
                source: {
                    TY: [
                        "CHAP"
                    ]
                },
                target: {
                    type: [
                        "chapter"
                    ]
                }
            }
        },
        {
            source: "T2",
            target: "collection-title",
            when: {
                source: {
                    TY: [
                        "AGGR",
                        "BOOK",
                        "CLSWK",
                        "COMP",
                        "CTLG",
                        "DBASE",
                        "ELEC",
                        "MANSCPT",
                        "MAP",
                        "MPCT",
                        "MULTI",
                        "RPRT",
                        "UNPB"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "broadcast",
                        "classic",
                        "entry",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "report",
                        "review-book",
                        "software",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "T2",
            target: "container-title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ANCIENT",
                        "BILL",
                        "BLOG",
                        "CHAP",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "SER",
                        "STAT",
                        "THES",
                        "UNBILL"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "chapter",
                        "collection",
                        "document",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "interview",
                        "musical_score",
                        "pamphlet",
                        "patent",
                        "performance",
                        "periodical",
                        "post-weblog",
                        "review",
                        "thesis",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "T2",
            target: "event",
            when: {
                source: {
                    TY: [
                        "CONF",
                        "CPAPER"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "T2",
            target: "committee",
            when: {
                source: {
                    TY: [
                        "HEAR"
                    ]
                },
                target: {
                    type: [
                        "hearing"
                    ]
                }
            }
        },
        {
            source: "T2",
            target: "section",
            when: {
                source: {
                    TY: [
                        "STAND"
                    ]
                },
                target: {
                    type: [
                        "standard"
                    ]
                }
            }
        },
        {
            source: "T3",
            target: "collection-title",
            when: {
                source: {
                    TY: [
                        "ADVS",
                        "ANCIENT",
                        "CHAP",
                        "CONF",
                        "DATA",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR",
                        "GEN",
                        "GOVDOC",
                        "MUSIC",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "chapter",
                        "collection",
                        "dataset",
                        "document",
                        "event",
                        "interview",
                        "musical_score",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "song",
                        "speech",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "TI",
            target: "title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "TY",
            target: "type"
        },
        {
            source: "UR",
            target: "URL",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: [
                "UR",
                "L4"
            ],
            target: "URL",
            when: {
                source: {
                    TY: [
                        "HEAR"
                    ]
                },
                target: {
                    type: [
                        "hearing"
                    ]
                }
            }
        },
        {
            source: "VL",
            target: "volume",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "BILL",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CLSWK",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "GOVDOC",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "UNBILL",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "chapter",
                        "classic",
                        "collection",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "musical_score",
                        "paper-conference",
                        "performance",
                        "periodical",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "song",
                        "speech",
                        "standard",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "VL",
            target: "dimensions",
            when: {
                source: {
                    TY: [
                        "CHART",
                        "EQUA",
                        "FIGURE"
                    ]
                },
                target: {
                    type: [
                        "figure"
                    ]
                }
            }
        },
        {
            source: "VL",
            target: "edition",
            when: {
                source: {
                    TY: [
                        "COMP"
                    ]
                },
                target: {
                    type: [
                        "software"
                    ]
                }
            }
        },
        {
            source: "VL",
            target: "number",
            when: {
                source: {
                    TY: [
                        "PAMP"
                    ]
                },
                target: {
                    type: [
                        "pamphlet"
                    ]
                }
            }
        },
        {
            source: "VL",
            target: "version",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ]
                },
                target: {
                    type: [
                        "patent"
                    ]
                }
            }
        },
        {
            source: [
                "VL",
                "Y2"
            ],
            target: "accessed",
            when: {
                source: {
                    TY: [
                        "BLOG"
                    ]
                },
                target: {
                    type: [
                        "post-weblog"
                    ]
                }
            }
        },
        {
            source: "Y2",
            target: "accessed",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DICT",
                        "EDBOOK",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper",
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "classic",
                        "collection",
                        "dataset",
                        "document",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "event",
                        "figure",
                        "graphic",
                        "hearing",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "performance",
                        "periodical",
                        "personal_communication",
                        "post",
                        "regulation",
                        "report",
                        "review",
                        "review-book",
                        "software",
                        "song",
                        "speech",
                        "standard",
                        "thesis",
                        "treaty"
                    ]
                }
            }
        },
        {
            source: "C4",
            target: "author",
            when: {
                source: {
                    TY: [
                        "BOOK",
                        "CHAP",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR"
                    ]
                },
                target: {
                    "reviewed-author": !0,
                    type: [
                        "book",
                        "chapter",
                        "review-book",
                        "review"
                    ]
                }
            }
        },
        {
            source: "AU",
            target: "reviewed-author",
            when: {
                source: {
                    C4: !0,
                    TY: [
                        "BOOK",
                        "CHAP",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR"
                    ]
                },
                target: {
                    type: [
                        "book",
                        "chapter",
                        "review-book",
                        "review"
                    ]
                }
            }
        },
        {
            source: "TA",
            target: "author",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    "original-author": !0,
                    translator: !0
                }
            }
        },
        {
            source: "AU",
            target: "original-author",
            when: {
                source: {
                    TA: !0,
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    translator: !0
                }
            }
        },
        {
            source: "TT",
            target: "title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    "original-author": !0,
                    translator: !0
                }
            }
        },
        {
            source: "TI",
            target: "original-title",
            when: {
                source: {
                    TT: !0,
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ]
                },
                target: {
                    translator: !0
                }
            }
        }
    ];
    var y5 = /^\d{4}-\d{3}[0-9Xx]$/, g7 = /10(?:\.[0-9]{4,})?\/[^\s]*[^\s.,]/, f4 = {
        ANY: {
            toTarget (...e) {
                return e.find(Boolean);
            },
            toSource (e) {
                return [
                    e
                ];
            }
        },
        PAGE: {
            keepAll: !0,
            toTarget (e, t) {
                return [
                    e,
                    t
                ].filter(Boolean).join("-");
            },
            toSource (e) {
                return e.replace(/[-–—]/g, "-");
            }
        },
        ISBN: {
            toTarget (e) {
                return y5.test(e) ? [
                    e
                ] : [
                    void 0,
                    e
                ];
            },
            toSource (...e) {
                return e.find(Boolean);
            }
        },
        DATE: {
            toTarget (e) {
                return e && ue1(e.split("/").slice(0, 3).filter(Boolean).join("/"));
            },
            toSource (e) {
                let t = Array(4).fill("");
                return e["date-parts"][0].forEach((r, a)=>{
                    t[a] = r;
                }), e.season && (t[3] = e.season), t.join("/");
            }
        },
        NAME: {
            toTarget (e) {
                return e && [].concat(e).map((t)=>{
                    let r = t.split(/, ?/), [a, o, c] = r;
                    switch(r.length){
                        case 3:
                            return {
                                family: a,
                                given: o,
                                suffix: c
                            };
                        case 2:
                            return {
                                family: a,
                                given: o
                            };
                        case 1:
                            if (a.indexOf(" ") === -1) return {
                                family: a
                            };
                        default:
                            return {
                                literal: t
                            };
                    }
                });
            },
            toSource (e) {
                return e.map(({ family: t, given: r, suffix: a, literal: o })=>{
                    let c = [
                        t,
                        r,
                        a
                    ].filter(Boolean);
                    return c.length ? c.join(", ") : o;
                });
            }
        },
        KEYWORD: {
            toTarget (e) {
                return e = [].concat(e), e.join(",");
            },
            toSource (e) {
                return e.split(",");
            }
        },
        ID: {
            toSource (e) {
                return e.slice(0, 20);
            }
        },
        TYPE: {
            toTarget (e) {
                return l3.RIS[e];
            },
            toSource (e) {
                return l3.CSL[e];
            }
        },
        DOI: {
            toTarget (e) {
                return e.match(g7)[0];
            },
            toSource (e) {
                return e.match(g7)[0];
            }
        }
    }, n3 = f4;
    var P7 = [
        {
            source: "TY",
            target: "type"
        },
        {
            source: "ID",
            target: "id"
        },
        {
            source: [
                "T1",
                "TI",
                "CT"
            ],
            target: "title"
        },
        {
            source: "BT",
            target: "title",
            when: {
                source: {
                    type: [
                        "BOOK",
                        "UNPB"
                    ],
                    T1: !1,
                    TI: !1,
                    CT: !1
                },
                target: !1
            }
        },
        {
            source: "T2",
            target: "container-title",
            when: {
                target: {
                    type: [
                        "bill",
                        "book",
                        "broadcast",
                        "chapter",
                        "dataset",
                        "entry",
                        "entry-dictionary",
                        "entry-encyclopedia",
                        "figure",
                        "graphic",
                        "interview",
                        "legal_case",
                        "legislation",
                        "manuscript",
                        "map",
                        "motion_picture",
                        "musical_score",
                        "pamphlet",
                        "paper-conference",
                        "patent",
                        "personal_communication",
                        "post",
                        "post-weblog",
                        "report",
                        "review",
                        "review-book",
                        "song",
                        "speech",
                        "thesis",
                        "treaty",
                        "webpage"
                    ]
                }
            }
        },
        {
            source: "BT",
            target: "container-title",
            when: {
                source: {
                    type: [
                        "ABST",
                        "ADVS",
                        "ART",
                        "BILL",
                        "CASE",
                        "CHAP",
                        "COMP",
                        "CONF",
                        "CTLG",
                        "DATA",
                        "ELEC",
                        "GEN",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "VIDEO"
                    ],
                    T2: !1
                },
                target: !1
            }
        },
        {
            source: "T3",
            target: "collection-title"
        },
        {
            source: [
                "A1",
                "AU"
            ],
            target: "author"
        },
        {
            source: [
                "A2",
                "ED"
            ],
            target: "editor"
        },
        {
            source: "A3",
            target: "collection-editor"
        },
        {
            source: [
                "Y1",
                "PY"
            ],
            target: "issued"
        },
        {
            source: "Y2",
            target: "event-date",
            convert: n3.DATE,
            when: {
                source: {
                    type: [
                        "CONF",
                        "CPAPER"
                    ]
                },
                target: {
                    type: [
                        "paper-conference"
                    ]
                }
            }
        },
        {
            source: "Y2",
            target: "submitted",
            convert: n3.DATE,
            when: {
                source: {
                    type: [
                        "PAT"
                    ]
                },
                target: {
                    type: "patent"
                }
            }
        },
        {
            source: [
                "AB",
                "N1"
            ],
            target: "note"
        },
        {
            source: "N2",
            target: "abstract"
        },
        {
            source: "KW",
            target: "keyword"
        },
        {
            source: [
                "JF",
                "JO"
            ],
            target: "container-title",
            convert: n3.ANY,
            when: {
                target: {
                    type: [
                        "article",
                        "article-journal",
                        "article-magazine",
                        "article-newspaper"
                    ]
                }
            }
        },
        {
            source: [
                "JA",
                "J1",
                "J2"
            ],
            target: "container-title-short"
        },
        {
            source: "VL",
            target: "volume"
        },
        {
            source: [
                "IS",
                "CP"
            ],
            target: "issue"
        },
        {
            source: "SP",
            target: "page-first"
        },
        {
            source: [
                "SP",
                "EP"
            ],
            target: "page",
            convert: n3.PAGE,
            when: {
                source: {
                    SP: !0,
                    EP: !0
                }
            }
        },
        {
            source: "CY",
            target: "publisher-place"
        },
        {
            source: "PB",
            target: "publisher"
        },
        {
            source: "SN",
            target: [
                "ISSN",
                "ISBN"
            ]
        },
        {
            source: "AV",
            target: "archive_location"
        },
        {
            source: "UR",
            target: "URL"
        }
    ];
    var N6 = [
        {
            source: [
                "T1",
                "BT"
            ],
            target: "title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ],
                    TI: !1
                },
                target: !1
            }
        },
        {
            source: "A1",
            target: "author",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BLOG",
                        "BOOK",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MULTI",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNPB",
                        "VIDEO"
                    ],
                    AU: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "CONF"
                    ],
                    C2: !1,
                    DA: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "PAT"
                    ],
                    C2: !1,
                    DA: !1,
                    PY: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "EBOOK"
                    ],
                    C5: !1,
                    PY: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHART",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "EDBOOK",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MUSIC",
                        "PAMP",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ],
                    DA: !1,
                    PY: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "STAT"
                    ],
                    DA: !1,
                    PY: !1,
                    Y2: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "AGGR",
                        "DBASE"
                    ],
                    ET: !1,
                    PY: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "CHAP",
                        "CLSWK",
                        "COMP",
                        "DICT",
                        "ECHAP",
                        "GOVDOC",
                        "MULTI",
                        "NEWS"
                    ],
                    PY: !1
                },
                target: !1
            }
        },
        {
            source: "Y1",
            target: "issued",
            when: {
                source: {
                    TY: [
                        "EJOUR"
                    ],
                    PY: !1,
                    SE: !1
                },
                target: !1
            }
        },
        {
            source: [
                "JO",
                "JF",
                "J1"
            ],
            target: "container-title",
            when: {
                source: {
                    TY: [
                        "CONF"
                    ],
                    C3: !1
                },
                target: !1
            }
        },
        {
            source: [
                "JO",
                "JF",
                "J1"
            ],
            target: "container-title",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ANCIENT",
                        "BILL",
                        "BLOG",
                        "CHAP",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "SER",
                        "STAT",
                        "THES",
                        "UNBILL"
                    ],
                    T2: !1
                },
                target: !1
            }
        },
        {
            source: "JA",
            target: "container-title-short",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ANCIENT",
                        "BOOK",
                        "CHAP",
                        "CTLG",
                        "DATA",
                        "DICT",
                        "ENCYC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MGZN",
                        "PAMP",
                        "PCOMM",
                        "SER",
                        "STAND",
                        "STAT",
                        "UNPB"
                    ],
                    J2: !1
                },
                target: !1
            }
        },
        {
            source: "N2",
            target: "abstract",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ],
                    AB: !1
                },
                target: !1
            }
        },
        {
            source: [
                "SP",
                "EP"
            ],
            target: "page",
            when: {
                source: {
                    TY: [
                        "BOOK"
                    ],
                    SE: !1
                },
                target: !1
            }
        },
        {
            source: [
                "SP",
                "EP"
            ],
            target: "page",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "AGGR",
                        "ANCIENT",
                        "BILL",
                        "CHAP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DBASE",
                        "DICT",
                        "ECHAP",
                        "EJOUR",
                        "ENCYC",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "HEAR",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MGZN",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "STAND",
                        "STAT",
                        "UNBILL",
                        "UNPB"
                    ],
                    EP: !0
                },
                target: !1
            }
        },
        {
            source: "AV",
            target: "archive_location",
            when: {
                target: !1
            }
        },
        {
            source: "LK",
            target: "URL",
            when: {
                source: {
                    TY: [
                        "HEAR"
                    ],
                    L4: !1,
                    UR: !1
                },
                target: !1
            }
        },
        {
            source: "LK",
            target: "URL",
            when: {
                source: {
                    TY: [
                        "ABST",
                        "ADVS",
                        "AGGR",
                        "ANCIENT",
                        "ART",
                        "BILL",
                        "BLOG",
                        "BOOK",
                        "CASE",
                        "CHAP",
                        "CHART",
                        "CLSWK",
                        "COMP",
                        "CONF",
                        "CPAPER",
                        "CTLG",
                        "DATA",
                        "DBASE",
                        "DICT",
                        "EBOOK",
                        "ECHAP",
                        "EDBOOK",
                        "EJOUR",
                        "ELEC",
                        "ENCYC",
                        "EQUA",
                        "FIGURE",
                        "GEN",
                        "GOVDOC",
                        "GRANT",
                        "ICOMM",
                        "INPR",
                        "JFULL",
                        "JOUR",
                        "LEGAL",
                        "MANSCPT",
                        "MAP",
                        "MGZN",
                        "MPCT",
                        "MULTI",
                        "MUSIC",
                        "NEWS",
                        "PAMP",
                        "PAT",
                        "PCOMM",
                        "RPRT",
                        "SER",
                        "SLIDE",
                        "SOUND",
                        "STAND",
                        "STAT",
                        "THES",
                        "UNBILL",
                        "UNPB",
                        "VIDEO"
                    ],
                    UR: !1
                },
                target: !1
            }
        },
        {
            source: "IS",
            target: "issue",
            when: {
                source: {
                    TY: "MGZN",
                    M1: !1
                },
                target: !1
            }
        }
    ];
    var S5 = p5.concat(N6);
    var i3 = {
        new: p5,
        old: P7,
        mixed: S5
    };
    var u3 = {
        author: "NAME",
        "collection-editor": "NAME",
        composer: "NAME",
        "container-author": "NAME",
        director: "NAME",
        editor: "NAME",
        "editorial-director": "NAME",
        interviewer: "NAME",
        illustrator: "NAME",
        "original-author": "NAME",
        recipient: "NAME",
        "reviewed-author": "NAME",
        translator: "NAME",
        accessed: "DATE",
        container: "DATE",
        "event-date": "DATE",
        issued: "DATE",
        "original-date": "DATE",
        submitted: "DATE",
        id: "ID",
        "ISSN,ISBN": "ISBN",
        keyword: "KEYWORD",
        page: "PAGE",
        type: "TYPE",
        DOI: "DOI"
    };
    var K3 = /^[A-Z][A-Z0-9] {2}-( |$)/, v7 = / {2}-(?: |$)/, O4 = new Map;
    function E4(e) {
        if (!O4.has(e)) {
            for (let t of e)if (t.target in u3 && (t.convert = n3[u3[t.target]]), !(t.convert && t.convert.keepAll === !0) && Array.isArray(t.source)) if (t.convert) {
                let { toSource: r, toTarget: a } = t.convert;
                t.convert = {
                    toTarget (...o) {
                        return a(n3.ANY.toTarget(...o));
                    },
                    toSource (...o) {
                        return n3.ANY.toSource(r(...o));
                    }
                };
            } else t.convert = n3.ANY;
            O4.set(e, new jt.Translator(e));
        }
        return O4.get(e);
    }
    function L5(e) {
        let t = [], r, a;
        for (let o of e.split(/\r?\n/)){
            if (o = o.trim(), !K3.test(o)) {
                r && a && (r[a] += " " + o);
                continue;
            }
            let [c, s] = o.split(v7);
            switch(c){
                case "ER":
                    r = void 0, a = void 0;
                    break;
                case "TY":
                    r = {}, t.push(r);
                default:
                    Array.isArray(r[c]) ? r[c].push(s) : r[c] = r[c] ? [
                        r[c],
                        s
                    ] : s, a = c;
            }
        }
        return t;
    }
    function R5(e) {
        return E4(i3.old).convertToTarget(e);
    }
    function M6(e) {
        return E4(i3.new).convertToTarget(e);
    }
    function I6(e) {
        return E4(i3.mixed).convertToTarget(e);
    }
    function D4(e, { type: t, format: r = t || "text", spec: a } = {}) {
        let o = a || T8.outputSpec, c = e.map(E4(i3[o]).convertToSource);
        return r === "object" ? c : c.map((s)=>{
            let A = [];
            for(let C in s)C !== "TY" && A.push(...[].concat(s[C]).map((U)=>`${C}  - ${U.toString().replace(/(.{70})/g, `$1
`)}`));
            return A.unshift(`TY  - ${s.TY}`), A.push("ER  - "), A.join(`
`);
        }).join(`
`);
    }
    var m6 = [
        "A1",
        "AV",
        "BT",
        "CP",
        "ED",
        "EP",
        "ID",
        "J1",
        "JA",
        "JF",
        "JO",
        "L2",
        "L3",
        "N2",
        "T1",
        "U1",
        "U2",
        "U3",
        "U4",
        "U5",
        "U6",
        "Y1"
    ], w6 = [
        "A4",
        "AD",
        "AN",
        "C1",
        "C2",
        "C3",
        "C4",
        "C5",
        "C6",
        "C7",
        "C8",
        "CA",
        "CN",
        "DA",
        "DB",
        "DO",
        "DP",
        "ET",
        "LA",
        "LB",
        "NV",
        "OP",
        "PY",
        "RI",
        "RN",
        "SE",
        "ST",
        "SV",
        "TA",
        "TT"
    ];
    tt.add("@ris", {
        input: {
            "@ris/file": {
                parse: L5,
                parseType: {
                    dataType: "String",
                    predicate: /^TY {2}- /m
                }
            },
            "@ris/record": {
                parse: I6,
                parseType: {
                    dataType: "SimpleObject",
                    propertyConstraint: {
                        props: [
                            "TY"
                        ]
                    }
                }
            },
            "@ris/new+record": {
                parse: M6,
                parseType: {
                    extends: "@ris/record",
                    propertyConstraint: [
                        {
                            props: w6,
                            match: "some"
                        },
                        {
                            props: m6,
                            match: "none"
                        }
                    ]
                }
            },
            "@ris/old+record": {
                parse: R5,
                parseType: {
                    extends: "@ris/record",
                    propertyConstraint: [
                        {
                            props: m6,
                            match: "some"
                        },
                        {
                            props: w6,
                            match: "none"
                        }
                    ]
                }
            }
        },
        config: T8,
        output: {
            ris: D4
        }
    });
    const mod61 = {};
    var kt2 = Object.create;
    var Q3 = Object.defineProperty;
    var bt1 = Object.getOwnPropertyDescriptor;
    var Et2 = Object.getOwnPropertyNames;
    var $t3 = Object.getPrototypeOf, vt3 = Object.prototype.hasOwnProperty;
    var l4 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), qt2 = (e, t)=>{
        for(var r in t)Q3(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, z5 = (e, t, r, s)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let i of Et2(t))!vt3.call(e, i) && i !== r && Q3(e, i, {
            get: ()=>t[i],
            enumerable: !(s = bt1(t, i)) || s.enumerable
        });
        return e;
    }, q5 = (e, t, r)=>(z5(e, t, "default"), r && z5(r, t, "default")), ie5 = (e, t, r)=>(r = e != null ? kt2($t3(e)) : {}, z5(t || !e || !e.__esModule ? Q3(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var y6 = l4((Vs, ne)=>{
        ne.exports = {
            shortLang: (e)=>e.toLowerCase().split("_")[0],
            forceArray: (e)=>(typeof e == "string" && (e = [
                    e
                ]), e || []),
            isPlainObject: (e)=>!(!e || typeof e != "object" || e instanceof Array),
            fixedEncodeURIComponent: (e)=>encodeURIComponent(e).replace(/[!'()*]/g, St),
            replaceSpaceByUnderscores: (e)=>e.replace(/\s/g, "_"),
            uniq: (e)=>Array.from(new Set(e))
        };
        var St = (e)=>"%" + e.charCodeAt(0).toString(16);
    });
    var P8 = l4((zs, ae)=>{
        var oe = (e)=>(t)=>{
                let r = {};
                return Object.keys(t).forEach((s)=>{
                    let i = t[s];
                    i != null ? r[s] = e ? i.map(xt) : i.value : r[s] = e ? [] : null;
                }), r;
            }, xt = (e)=>e.value, x = oe(!1);
        ae.exports = {
            labels: x,
            descriptions: x,
            aliases: oe(!0),
            lemmas: x,
            representations: x,
            glosses: x
        };
    });
    var le4 = l4((Qs, ce)=>{
        ce.exports = (e)=>{
            typeof e == "object" && (e = e.time);
            let t = e[0], [r, s] = e.slice(1).split("T");
            r = r.replace(/-00/g, "-01");
            let i = `${r}T${s}`;
            return jt(t, i);
        };
        var jt = (e, t)=>{
            let r = t.split("-")[0];
            return e === "-" || r.length > 4 ? It(e, t, r) : new Date(t);
        }, It = (e, t, r)=>{
            let s;
            return r.length === 4 ? s = `${e}00${t}` : r.length === 5 ? s = `${e}0${t}` : s = e + t, new Date(s);
        };
    });
    var b4 = l4((As, pe)=>{
        var A = le4(), u = {};
        u.isNumericId = (e)=>/^[1-9][0-9]*$/.test(e);
        u.isEntityId = (e)=>/^((Q|P|L|M)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)$/.test(e);
        u.isEntitySchemaId = (e)=>/^E[1-9][0-9]*$/.test(e);
        u.isItemId = (e)=>/^Q[1-9][0-9]*$/.test(e);
        u.isPropertyId = (e)=>/^P[1-9][0-9]*$/.test(e);
        u.isLexemeId = (e)=>/^L[1-9][0-9]*$/.test(e);
        u.isFormId = (e)=>/^L[1-9][0-9]*-F[1-9][0-9]*$/.test(e);
        u.isSenseId = (e)=>/^L[1-9][0-9]*-S[1-9][0-9]*$/.test(e);
        u.isGuid = (e)=>/^((Q|P|L)[1-9][0-9]*|L[1-9][0-9]*-(F|S)[1-9][0-9]*)\$[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i.test(e);
        u.isHash = (e)=>/^[0-9a-f]{40}$/.test(e);
        u.isPropertyClaimsId = (e)=>{
            let [t, r] = e.split("#");
            return u.isEntityId(t) && u.isPropertyId(r);
        };
        u.isRevisionId = (e)=>/^\d+$/.test(e);
        u.isEntityPageTitle = (e)=>{
            if (typeof e != "string") return !1;
            let [t, r] = e.split(":");
            return t && r ? Rt(t) && u[`is${t}Id`](r) : (r = t, u.isItemId(r));
        };
        var Pt = [
            "Item",
            "Property",
            "Lexeme"
        ], Rt = (e)=>Pt.includes(e), Tt = (e)=>/^(Q|P|L)[1-9][0-9]*$/.test(e);
        u.getNumericId = (e)=>{
            if (!Tt(e)) throw new Error(`invalid entity id: ${e}`);
            return e.replace(/^(Q|P|L)/, "");
        };
        u.wikibaseTimeToDateObject = A;
        var F = (e)=>(t)=>{
                try {
                    return e(t);
                } catch  {
                    t = t.time || t;
                    let s = t[0], [i, n] = t.slice(1).split("T");
                    return i = i.replace(/-00/g, "-01"), `${s}${i}T${n}`;
                }
            }, Ct = (e)=>A(e).getTime(), Ot = (e)=>A(e).toISOString(), Lt = (e)=>{
            if (typeof e == "object") {
                let { time: t, precision: r } = e;
                r === 9 ? e = t.replace("-01-01T", "-00-00T") : r === 10 ? e = t.replace("-01T", "-00T") : e = t;
            }
            return e.split("T")[0].replace(/^\+/, "").replace(/^(-?)0+/, "$1").replace(/-00$/, "").replace(/-00$/, "");
        };
        u.wikibaseTimeToEpochTime = F(Ct);
        u.wikibaseTimeToISOString = F(Ot);
        u.wikibaseTimeToSimpleDay = F(Lt);
        u.getImageUrl = (e, t)=>{
            let r = `https://commons.wikimedia.org/wiki/Special:FilePath/${e}`;
            return typeof t == "number" && (r += `?width=${t}`), r;
        };
        u.getEntityIdFromGuid = (e)=>{
            let t = e.split(/[$-]/);
            if (t.length === 6) return t[0].toUpperCase();
            if (t.length === 7) return t.slice(0, 2).join("-").toUpperCase();
            throw new Error(`invalid guid: ${e}`);
        };
        pe.exports = u;
    });
    var me2 = l4((Fs, fe)=>{
        var { wikibaseTimeToISOString: Dt, wikibaseTimeToEpochTime: Vt, wikibaseTimeToSimpleDay: zt } = b4(), g = (e)=>e.value, Qt = (e, t)=>t.keepRichValues ? e.value : e.value.text, S = (e, t)=>Ft(e, t.entityPrefix), At = {
            item: "Q",
            lexeme: "L",
            property: "P"
        }, Ft = (e, t)=>{
            let { value: r } = e, s = r.id || At[r["entity-type"]] + r["numeric-id"];
            return typeof t == "string" ? `${t}:${s}` : s;
        }, _t = (e, t)=>{
            let { value: r } = e, s = parseFloat(r.amount);
            if (t.keepRichValues) {
                let i = {
                    amount: parseFloat(r.amount),
                    unit: r.unit.replace(/^https?:\/\/.*\/entity\//, "")
                };
                return r.upperBound != null && (i.upperBound = parseFloat(r.upperBound)), r.lowerBound != null && (i.lowerBound = parseFloat(r.lowerBound)), i;
            } else return s;
        }, Ut = (e, t)=>t.keepRichValues ? e.value : [
                e.value.latitude,
                e.value.longitude
            ], Bt = (e, t)=>{
            let r;
            if (typeof t.timeConverter == "function" ? r = t.timeConverter(e.value) : r = Nt(t.timeConverter)(e.value), t.keepRichValues) {
                let { timezone: s, before: i, after: n, precision: o, calendarmodel: a } = e.value;
                return {
                    time: r,
                    timezone: s,
                    before: i,
                    after: n,
                    precision: o,
                    calendarmodel: a
                };
            } else return r;
        }, Nt = (e = "iso")=>{
            let t = Mt[e];
            if (!t) throw new Error(`invalid converter key: ${JSON.stringify(e).substring(0, 100)}`);
            return t;
        }, Mt = {
            iso: Dt,
            epoch: Vt,
            "simple-day": zt,
            none: (e)=>e.time || e
        }, ue = {
            commonsMedia: g,
            "external-id": g,
            "geo-shape": g,
            "globe-coordinate": Ut,
            math: g,
            monolingualtext: Qt,
            "musical-notation": g,
            quantity: _t,
            string: g,
            "tabular-data": g,
            time: Bt,
            url: g,
            "wikibase-entityid": S,
            "wikibase-form": S,
            "wikibase-item": S,
            "wikibase-lexeme": S,
            "wikibase-property": S,
            "wikibase-sense": S
        };
        fe.exports = {
            parsers: ue,
            parse: (e, t, r, s)=>{
                e = e || t.type, e = e.replace(" ", "-");
                try {
                    return ue[e](t, r);
                } catch (i) {
                    throw i.message === "parsers[datatype] is not a function" && (i.message = `${e} claim parser isn't implemented
        Claim id: ${s}
        Please report to https://github.com/maxlath/wikibase-sdk/issues`), i;
                }
            }
        };
    });
    var _7 = l4((_s, ye)=>{
        var de = (e)=>{
            let t = e.reduce(Wt, {});
            return t.preferred || t.normal || [];
        }, Ht = (e)=>e.filter((t)=>t.rank !== "deprecated"), Wt = (e, t)=>{
            let { rank: r } = t;
            return e[r] || (e[r] = []), e[r].push(t), e;
        }, Gt = (e)=>{
            let t = {};
            return Object.keys(e).forEach((r)=>{
                t[r] = de(e[r]);
            }), t;
        };
        ye.exports = {
            truthyClaims: Gt,
            truthyPropertyClaims: de,
            nonDeprecatedPropertyClaims: Ht
        };
    });
    var T9 = l4((Us, ge)=>{
        var { parse: Kt } = me2(), { uniq: Yt } = y6(), { truthyPropertyClaims: Xt, nonDeprecatedPropertyClaims: Jt } = _7(), B = (e, ...t)=>{
            let { propertyPrefix: r } = M(t), s = {};
            for(let i in e){
                let n = e[i];
                r && (i = r + ":" + i), s[i] = N(n, ...t);
            }
            return s;
        }, N = (e, ...t)=>{
            if (e == null || e.length === 0) return [];
            let { keepNonTruthy: r, keepNonDeprecated: s, areSubSnaks: i } = M(t);
            return s ? e = Jt(e) : r || i || (e = Xt(e)), e = e.map((n)=>U(n, ...t)).filter(Zt), e[0] && typeof e[0] != "object" ? Yt(e) : e;
        }, Zt = (e)=>e !== void 0, U = (e, ...t)=>{
            t = M(t);
            let { keepQualifiers: r, keepReferences: s, keepIds: i, keepHashes: n, keepTypes: o, keepSnaktypes: a, keepRanks: c } = sr(t), { mainsnak: p, rank: d } = e, m, f, w, v, re, se;
            if (p ? (f = p.datatype, w = p.datavalue, v = p.snaktype) : (w = e.datavalue, f = e.datatype, v = e.snaktype, e.hash ? re = !0 : se = !0), w) m = Kt(f, w, t, e.id);
            else if (v === "somevalue") m = t.somevalueValue;
            else if (v === "novalue") m = t.novalueValue;
            else throw new Error("no datavalue or special snaktype found");
            if (re) {
                if (!(n || o || a)) return m;
                let I = {
                    value: m
                };
                return n && (I.hash = e.hash), o && (I.type = f), a && (I.snaktype = v), I;
            }
            if (se) return o ? {
                type: f,
                value: m
            } : m;
            if (!(r || s || i || o || a || c)) return m;
            let k = {
                value: m
            };
            o && (k.type = f), a && (k.snaktype = v), c && (k.rank = d);
            let V = R(t);
            return V.keepHashes = n, r && (k.qualifiers = he(e.qualifiers, V)), s && (e.references = e.references || [], k.references = we(e.references, V)), i && (k.id = e.id), k;
        }, M = (e)=>{
            if (e == null) return {};
            if (e[0] && typeof e[0] == "object") return e[0];
            let [t, r, s] = e;
            return {
                entityPrefix: t,
                propertyPrefix: r,
                keepQualifiers: s
            };
        }, he = (e, t)=>B(e, R(t)), er = (e, t)=>N(e, R(t)), we = (e, t)=>e.map((r)=>tr(r, t)), tr = (e, t)=>{
            let r = R(t), s = B(e.snaks, r);
            return r.keepHashes ? {
                snaks: s,
                hash: e.hash
            } : s;
        }, R = (e = {})=>e.areSubSnaks ? e : Object.assign({}, e, {
                areSubSnaks: !0
            }), rr = [
            "keepQualifiers",
            "keepReferences",
            "keepIds",
            "keepHashes",
            "keepTypes",
            "keepSnaktypes",
            "keepRanks",
            "keepRichValues"
        ], sr = (e)=>(e.keepAll && rr.forEach((t)=>{
                e[t] == null && (e[t] = !0);
            }), e);
        ge.exports = {
            simplifyClaims: B,
            simplifyPropertyClaims: N,
            simplifyClaim: U,
            simplifyQualifiers: he,
            simplifyPropertyQualifiers: er,
            simplifyQualifier: U,
            simplifyReferences: we
        };
    });
    var Ee2 = l4((Bs, be)=>{
        var { isFormId: ir } = b4(), { representations: nr } = P8(), { simplifyClaims: or } = T9(), ke = (e, t)=>{
            let { id: r, representations: s, grammaticalFeatures: i, claims: n } = e;
            if (!ir(r)) throw new Error("invalid form object");
            return {
                id: r,
                representations: nr(s),
                grammaticalFeatures: i,
                claims: or(n, t)
            };
        }, ar = (e, t)=>e.map((r)=>ke(r, t));
        be.exports = {
            simplifyForm: ke,
            simplifyForms: ar
        };
    });
    var qe3 = l4((Ns, ve)=>{
        var { isSenseId: cr } = b4(), { glosses: lr } = P8(), { simplifyClaims: pr } = T9(), $e = (e, t)=>{
            let { id: r, glosses: s, claims: i } = e;
            if (!cr(r)) throw new Error("invalid sense object");
            return {
                id: r,
                glosses: lr(s),
                claims: pr(i, t)
            };
        }, ur = (e, t)=>e.map((r)=>$e(r, t));
        ve.exports = {
            simplifySense: $e,
            simplifySenses: ur
        };
    });
    var xe3 = l4((Ms, Se)=>{
        Se.exports = [
            "aa",
            "ab",
            "ace",
            "ady",
            "af",
            "ak",
            "als",
            "alt",
            "ami",
            "am",
            "ang",
            "an",
            "arc",
            "ar",
            "ary",
            "arz",
            "ast",
            "as",
            "atj",
            "avk",
            "av",
            "awa",
            "ay",
            "azb",
            "az",
            "ban",
            "bar",
            "bat_smg",
            "ba",
            "bcl",
            "be_x_old",
            "be",
            "bg",
            "bh",
            "bi",
            "bjn",
            "bm",
            "bn",
            "bo",
            "bpy",
            "br",
            "bs",
            "bug",
            "bxr",
            "ca",
            "cbk_zam",
            "cdo",
            "ceb",
            "ce",
            "cho",
            "chr",
            "ch",
            "chy",
            "ckb",
            "co",
            "crh",
            "cr",
            "csb",
            "cs",
            "cu",
            "cv",
            "cy",
            "dag",
            "da",
            "de",
            "din",
            "diq",
            "dsb",
            "dty",
            "dv",
            "dz",
            "ee",
            "el",
            "eml",
            "en",
            "eo",
            "es",
            "et",
            "eu",
            "ext",
            "fa",
            "ff",
            "fiu_vro",
            "fi",
            "fj",
            "fo",
            "frp",
            "frr",
            "fr",
            "fur",
            "fy",
            "gag",
            "gan",
            "ga",
            "gcr",
            "gd",
            "glk",
            "gl",
            "gn",
            "gom",
            "gor",
            "got",
            "gu",
            "guw",
            "gv",
            "hak",
            "ha",
            "haw",
            "he",
            "hif",
            "hi",
            "ho",
            "hr",
            "hsb",
            "ht",
            "hu",
            "hy",
            "hyw",
            "hz",
            "ia",
            "id",
            "ie",
            "ig",
            "ii",
            "ik",
            "ilo",
            "inh",
            "io",
            "is",
            "it",
            "iu",
            "jam",
            "ja",
            "jbo",
            "jv",
            "kaa",
            "kab",
            "ka",
            "kbd",
            "kbp",
            "kcg",
            "kg",
            "ki",
            "kj",
            "kk",
            "kl",
            "km",
            "kn",
            "koi",
            "ko",
            "krc",
            "kr",
            "ksh",
            "ks",
            "ku",
            "kv",
            "kw",
            "ky",
            "lad",
            "la",
            "lbe",
            "lb",
            "lez",
            "lfn",
            "lg",
            "lij",
            "li",
            "lld",
            "lmo",
            "ln",
            "lo",
            "lrc",
            "ltg",
            "lt",
            "lv",
            "mad",
            "mai",
            "map_bms",
            "mdf",
            "mg",
            "mhr",
            "mh",
            "min",
            "mi",
            "mk",
            "ml",
            "mni",
            "mn",
            "mnw",
            "mo",
            "mrj",
            "mr",
            "ms",
            "mt",
            "mus",
            "mwl",
            "myv",
            "my",
            "mzn",
            "nah",
            "nap",
            "na",
            "nds_nl",
            "nds",
            "ne",
            "new",
            "ng",
            "nia",
            "nl",
            "nn",
            "nov",
            "no",
            "nqo",
            "nrm",
            "nso",
            "nv",
            "ny",
            "oc",
            "olo",
            "om",
            "or",
            "os",
            "pag",
            "pam",
            "pap",
            "pa",
            "pcd",
            "pdc",
            "pfl",
            "pih",
            "pi",
            "pl",
            "pms",
            "pnb",
            "pnt",
            "ps",
            "pt",
            "pwn",
            "qu",
            "rm",
            "rmy",
            "rn",
            "roa_rup",
            "roa_tara",
            "ro",
            "rue",
            "ru",
            "rw",
            "sah",
            "sat",
            "sa",
            "scn",
            "sco",
            "sc",
            "sd",
            "se",
            "sg",
            "shi",
            "shn",
            "sh",
            "shy",
            "simple",
            "si",
            "skr",
            "sk",
            "sl",
            "smn",
            "sm",
            "sn",
            "sources",
            "so",
            "sq",
            "srn",
            "sr",
            "ss",
            "stq",
            "st",
            "su",
            "sv",
            "sw",
            "szl",
            "szy",
            "ta",
            "tay",
            "tcy",
            "tet",
            "te",
            "tg",
            "th",
            "ti",
            "tk",
            "tl",
            "tn",
            "to",
            "tpi",
            "trv",
            "tr",
            "ts",
            "tt",
            "tum",
            "tw",
            "tyv",
            "ty",
            "udm",
            "ug",
            "uk",
            "ur",
            "uz",
            "vec",
            "vep",
            "ve",
            "vi",
            "vls",
            "vo",
            "war",
            "wa",
            "wo",
            "wuu",
            "xal",
            "xh",
            "xmf",
            "yi",
            "yo",
            "yue",
            "za",
            "zea",
            "zh_classical",
            "zh_min_nan",
            "zh_yue",
            "zh",
            "zu"
        ];
    });
    var W2 = l4((Hs, Ie)=>{
        var { fixedEncodeURIComponent: fr, replaceSpaceByUnderscores: mr, isPlainObject: dr } = y6(), yr = "https://www.wikidata.org/wiki/", hr = xe3(), wr = (e, t)=>{
            if (dr(e) && (t = e.title, e = e.site), !e) throw new Error("missing a site");
            if (!t) throw new Error("missing a title");
            let r = e.replace(/wiki$/, ""), s = je[r] || je[e];
            if (s) return s(t);
            let { lang: i, project: n } = H(e);
            return t = fr(mr(t)), `https://${i}.${n}.org/wiki/${t}`;
        }, C = (e)=>(t)=>`https://${e}.wikimedia.org/wiki/${t}`, je = {
            commons: C("commons"),
            mediawiki: (e)=>`https://www.mediawiki.org/wiki/${e}`,
            meta: C("meta"),
            species: C("species"),
            wikidata: (e)=>{
                let t = gr[e[0]], r = t ? `${t}:${e}` : e;
                return r = r.replace("-", "#"), `${yr}${r}`;
            },
            wikimania: C("wikimania")
        }, gr = {
            E: "EntitySchema",
            L: "Lexeme",
            P: "Property"
        }, kr = /^https?:\/\/([\w-]{2,10})\.(\w+)\.org\/\w+\/(.*)/, H = (e)=>{
            if (e.startsWith("http")) {
                let t = e, r = t.match(kr);
                if (!r) throw new Error(`invalid sitelink url: ${t}`);
                let [s, i, n] = r.slice(1);
                n = decodeURIComponent(n);
                let o;
                return s === "www" ? (s = "en", o = i) : s === "commons" ? (s = "en", i = o = "commons") : (s = s.replace(/-/g, "_"), o = `${s}${i}`.replace("wikipedia", "wiki")), {
                    lang: s,
                    project: i,
                    key: o,
                    title: n,
                    url: t
                };
            } else {
                let t = e, r = br[t];
                if (r) return {
                    lang: "en",
                    project: r,
                    key: t
                };
                let [s, i, n] = t.split("wik");
                if (n != null) throw new Error(`invalid sitelink key: ${t}`);
                if (hr.indexOf(s) === -1) throw new Error(`sitelink lang not found: ${s}. Updating wikibase-sdk to a more recent version might fix the issue.`);
                s = s.replace(/_/g, "-");
                let o = $r[i];
                if (!o) throw new Error(`sitelink project not found: ${o}`);
                return {
                    lang: s,
                    project: o,
                    key: t
                };
            }
        }, br = {
            commonswiki: "commons",
            mediawikiwiki: "mediawiki",
            metawiki: "meta",
            specieswiki: "specieswiki",
            wikidatawiki: "wikidata",
            wikimaniawiki: "wikimania"
        }, Er = (e)=>{
            try {
                return H(e), !0;
            } catch  {
                return !1;
            }
        }, $r = {
            i: "wikipedia",
            isource: "wikisource",
            iquote: "wikiquote",
            tionary: "wiktionary",
            ibooks: "wikibooks",
            iversity: "wikiversity",
            ivoyage: "wikivoyage",
            inews: "wikinews"
        };
        Ie.exports = {
            getSitelinkUrl: wr,
            getSitelinkData: H,
            isSitelinkKey: Er
        };
    });
    var Re3 = l4((Ws, Pe)=>{
        var { getSitelinkUrl: vr } = W2();
        Pe.exports = (e, t = {})=>{
            let { addUrl: r, keepBadges: s, keepAll: i } = t;
            return s = s || i, Object.keys(e).reduce(qr({
                sitelinks: e,
                addUrl: r,
                keepBadges: s
            }), {});
        };
        var qr = ({ sitelinks: e, addUrl: t, keepBadges: r })=>(s, i)=>{
                if (e[i] == null) return s[i] = e[i], s;
                let { title: n, badges: o } = e[i];
                return t || r ? (s[i] = {
                    title: n
                }, t && (s[i].url = vr(i, n)), r && (s[i].badges = o)) : s[i] = n, s;
            };
    });
    var Ce4 = l4((Gs, Te)=>{
        Te.exports = (e, t = {})=>{
            typeof e == "string" && (e = JSON.parse(e));
            let { vars: r } = e.head, s = e.results.bindings;
            if (r.length === 1 && t.minimize === !0) {
                let a = r[0];
                return s.map((c)=>G(c[a])).filter((c)=>c != null);
            }
            let { richVars: i, associatedVars: n, standaloneVars: o } = Tr(r);
            return s.map(Or(i, n, o));
        };
        var G = (e)=>{
            if (!e) return;
            let { datatype: t } = e;
            return t = t && t.replace("http://www.w3.org/2001/XMLSchema#", ""), (Sr[e.type] || xr(t))(e);
        }, Sr = {
            uri: (e)=>Pr(e.value),
            bnode: ()=>null
        }, O = (e)=>parseFloat(e.value), xr = (e)=>(e = e && e.replace("http://www.w3.org/2001/XMLSchema#", ""), jr[e] || Ir), jr = {
            decimal: O,
            integer: O,
            float: O,
            double: O,
            boolean: (e)=>e.value === "true"
        }, Ir = (e)=>e.value, Pr = (e)=>e.match(/http.*\/entity\/statement\//) ? Rr(e) : e.replace(/^https?:\/\/.*\/entity\//, "").replace(/^https?:\/\/.*\/prop\/direct\//, ""), Rr = (e)=>{
            e = e.replace(/^https?:\/\/.*\/entity\/statement\//, "");
            let t = e.split("-");
            return t[0] + "$" + t.slice(1).join("-");
        }, Tr = (e)=>{
            let t = e.filter((n)=>e.some(Cr(n)));
            t = t.filter((n)=>!t.some((o)=>n !== o && n.startsWith(o)));
            let r = new RegExp(`^(${t.join("|")})[A-Z]`), s = e.filter((n)=>r.test(n)), i = e.filter((n)=>!t.includes(n) && !r.test(n));
            return {
                richVars: t,
                associatedVars: s,
                standaloneVars: i
            };
        }, Cr = (e)=>{
            let t = new RegExp(`^${e}[A-Z]\\w+`);
            return t.test.bind(t);
        }, Or = (e, t, r)=>(s)=>{
                let i = {};
                for (let n of e){
                    let o = {}, a = G(s[n]);
                    a != null && (o.value = a);
                    for (let c of t)c.startsWith(n) && Lr(s, n, c, o);
                    Object.keys(o).length > 0 && (i[n] = o);
                }
                for (let n of r)i[n] = G(s[n]);
                return i;
            }, Lr = (e, t, r, s)=>{
            let i = r.split(t)[1];
            i = i[0].toLowerCase() + i.slice(1), i = Dr[i] || i;
            let n = e[r];
            n != null && (s[i] = n.value);
        }, Dr = {
            altLabel: "aliases"
        };
    });
    var K4 = l4((Ks, Ve)=>{
        var { labels: Vr, descriptions: zr, aliases: Qr, lemmas: Ar, glosses: Fr } = P8(), { simplifyClaim: Oe, simplifyPropertyClaims: Le, simplifyClaims: De, simplifyQualifier: _r, simplifyPropertyQualifiers: Ur, simplifyQualifiers: Br, simplifyReferences: Nr } = T9(), { simplifyForm: Mr, simplifyForms: Hr } = Ee2(), { simplifySense: Wr, simplifySenses: Gr } = qe3(), Kr = Re3(), Yr = Ce4();
        Ve.exports = {
            labels: Vr,
            descriptions: zr,
            aliases: Qr,
            claim: Oe,
            propertyClaims: Le,
            claims: De,
            qualifier: _r,
            propertyQualifiers: Ur,
            qualifiers: Br,
            references: Nr,
            sitelinks: Kr,
            snak: Oe,
            propertySnaks: Le,
            snaks: De,
            lemmas: Ar,
            glosses: Fr,
            form: Mr,
            forms: Hr,
            sense: Wr,
            senses: Gr,
            sparqlResults: Yr
        };
    });
    var Ae3 = l4((Ys, Qe)=>{
        var Y = K4(), X = (e, t)=>{
            let { type: r } = e, s = {
                id: e.id,
                type: r,
                modified: e.modified
            };
            return e.datatype && (s.datatype = e.datatype), r === "item" ? (h(e, s, "labels"), h(e, s, "descriptions"), h(e, s, "aliases"), h(e, s, "claims", t), h(e, s, "sitelinks", t)) : r === "property" ? (s.datatype = e.datatype, h(e, s, "labels"), h(e, s, "descriptions"), h(e, s, "aliases"), h(e, s, "claims", t)) : r === "lexeme" && (h(e, s, "lemmas"), s.lexicalCategory = e.lexicalCategory, s.language = e.language, h(e, s, "claims", t), h(e, s, "forms", t), h(e, s, "senses", t)), s;
        }, h = (e, t, r, s)=>{
            e[r] != null && (t[r] = Y[r](e[r], s));
        }, ze = (e, t = {})=>{
            e.entities && (e = e.entities);
            let { entityPrefix: r } = t;
            return Object.keys(e).reduce((s, i)=>{
                let n = e[i];
                return r && (i = `${r}:${i}`), s[i] = X(n, t), s;
            }, {});
        };
        Y.entity = X;
        Y.entities = ze;
        Qe.exports = {
            simplifyEntity: X,
            simplifyEntities: ze
        };
    });
    var Ue2 = l4((Xs, _e)=>{
        var { simplifyEntity: Xr } = Ae3(), Fe = {
            entities: (e)=>{
                e = e.body || e;
                let { entities: t } = e;
                return Object.keys(t).forEach((r)=>{
                    t[r] = Xr(t[r]);
                }), t;
            },
            pagesTitles: (e)=>(e = e.body || e, e.query.search.map((t)=>t.title))
        };
        _e.exports = {
            wb: Fe,
            wd: Fe
        };
    });
    var Ne3 = l4((Js, Be)=>{
        var Jr = typeof location < "u" && typeof document < "u", Zr = (e)=>new URLSearchParams(e).toString();
        Be.exports = (e)=>(t)=>(Jr && (t.origin = "*"), Object.keys(t).forEach((r)=>{
                    t[r] == null && delete t[r];
                }), e + "?" + Zr(t));
    });
    var He2 = l4((Zs, Me)=>{
        var { isPlainObject: es } = y6(), ts = [
            "item",
            "property",
            "lexeme",
            "form",
            "sense"
        ];
        Me.exports = (e)=>(t, r, s, i, n)=>{
                let o, a;
                if (es(t)) {
                    let c = t;
                    t = c.search, r = c.language, s = c.limit, a = c.continue, i = c.format, n = c.uselang, o = c.type;
                }
                if (!(t && t.length > 0)) throw new Error("search can't be empty");
                if (r = r || "en", n = n || r, s = s || "20", i = i || "json", o = o || "item", a = a || "0", !ts.includes(o)) throw new Error(`invalid type: ${o}`);
                return e({
                    action: "wbsearchentities",
                    search: t,
                    language: r,
                    limit: s,
                    continue: a,
                    format: i,
                    uselang: n,
                    type: o
                });
            };
    });
    var Ge1 = l4((ei, We)=>{
        var { isPlainObject: rs } = y6(), ss = /^\d+[|\d]*$/;
        We.exports = (e)=>(t)=>{
                if (!rs(t)) throw new Error(`expected parameters to be passed as an object, got ${t} (${typeof t})`);
                for(let f in t)if (f.startsWith("sr")) {
                    let w = f.replace(/^sr/, "");
                    if (t[w] != null) throw new Error(`${w} and ${f} are the same`);
                    t[w] = t[f];
                }
                let { search: r, haswbstatement: s, format: i = "json", limit: n, offset: o, profile: a, sort: c } = t, { namespace: p, prop: d } = t;
                if (!(r || s)) throw new Error('missing "search" or "haswbstatement" parameter');
                let m = "";
                if (r && (m += r), s) {
                    let f = s instanceof Array ? s : [
                        s
                    ];
                    for (let w of f)w[0] === "-" ? m += ` -haswbstatement:${w.slice(1)}` : m += ` haswbstatement:${w}`;
                }
                if (n != null && (typeof n != "number" || n < 1)) throw new Error(`invalid limit: ${n}`);
                if (o != null && (typeof o != "number" || o < 0)) throw new Error(`invalid offset: ${o}`);
                if (p instanceof Array ? p = p.join("|") : typeof p == "number" && (p = p.toString()), p && !ss.test(p)) throw new Error(`invalid namespace: ${p}`);
                if (a != null && typeof a != "string") throw new Error(`invalid profile: ${a} (${typeof a}, expected string)`);
                if (c != null && typeof c != "string") throw new Error(`invalid sort: ${c} (${typeof c}, expected string)`);
                if (d != null && (p instanceof Array && (d = d.join("|")), typeof d != "string")) throw new Error(`invalid prop: ${d} (${typeof d}, expected string)`);
                return e({
                    action: "query",
                    list: "search",
                    srsearch: m.trim(),
                    format: i,
                    srnamespace: p,
                    srlimit: n,
                    sroffset: o,
                    srqiprofile: a,
                    srsort: c,
                    srprop: d
                });
            };
    });
    var j6 = l4((ti, Ke)=>{
        var is = b4(), L = (e, t)=>(r)=>{
                if (!is[t](r)) throw new Error(`invalid ${e}: ${r}`);
            };
        Ke.exports = {
            entityId: L("entity id", "isEntityId"),
            propertyId: L("property id", "isPropertyId"),
            entityPageTitle: L("entity page title", "isEntityPageTitle"),
            revisionId: L("revision id", "isRevisionId")
        };
    });
    var Z4 = l4((ri, Ye)=>{
        var { isPlainObject: ns, forceArray: J, shortLang: os } = y6(), as = j6();
        Ye.exports = (e)=>(t, r, s, i, n)=>{
                if (ns(t) && ({ ids: t, languages: r, props: s, format: i, redirects: n } = t), i = i || "json", !(t && t.length > 0)) throw new Error("no id provided");
                t = J(t), t.forEach(as.entityId), t.length > 50 && console.warn(`getEntities accepts 50 ids max to match Wikidata API limitations:
      this request won't get all the desired entities.
      You can use getManyEntities instead to generate several request urls
      to work around this limitation`);
                let o = {
                    action: "wbgetentities",
                    ids: t.join("|"),
                    format: i
                };
                return n === !1 && (o.redirects = "no"), r && (r = J(r).map(os), o.languages = r.join("|")), s && s.length > 0 && (o.props = J(s).join("|")), e(o);
            };
    });
    var Je2 = l4((si, Xe)=>{
        var { isPlainObject: cs } = y6();
        Xe.exports = (e)=>{
            let t = Z4()(e);
            return (r, s, i, n, o)=>{
                if (cs(r) && ({ ids: r, languages: s, props: i, format: n, redirects: o } = r), !(r instanceof Array)) throw new Error("getManyEntities expects an array of ids");
                return ls(r).map((a)=>t(a, s, i, n, o));
            };
        };
        var ls = (e)=>{
            let t = [];
            for(; e.length > 0;){
                let r = e.slice(0, 50);
                e = e.slice(50), t.push(r);
            }
            return t;
        };
    });
    var rt1 = l4((ii, tt)=>{
        var { forceArray: Ze } = y6(), ps = j6();
        tt.exports = (e)=>(t, r = {})=>{
                t = Ze(t), t.forEach(ps.entityPageTitle);
                let s = t.length === 1, i = {
                    action: "query",
                    prop: "revisions"
                };
                i.titles = t.join("|"), i.format = r.format || "json", s && (i.rvlimit = r.limit || "max"), s && r.start && (i.rvstart = et(r.start)), s && r.end && (i.rvend = et(r.end));
                let { prop: n, user: o, excludeuser: a, tag: c } = r;
                return n ? i.rvprop = Ze(n).join("|") : i.rvprop = "ids|flags|timestamp|user|userid|size|slotsize|sha1|slotsha1|contentmodel|comment|parsedcomment|content|tags|roles|oresscores", i.rvslots = "*", o && (i.rvuser = o), a && (i.rvexcludeuser = a), c && (i.rvtag = c), e(i);
            };
        var et = (e)=>typeof e == "number" && e < us ? e : Math.trunc(new Date(e).getTime() / 1e3), us = new Date("2000-01-01").getTime();
    });
    var nt1 = l4((ni, it)=>{
        var st = j6(), { isPlainObject: fs } = y6();
        it.exports = (e, t)=>(r, s)=>(fs(r) && (s = r.revision, r = r.id), st.entityId(r), st.revisionId(s), `${e}/${t}/index.php?title=Special:EntityData/${r}.json&revision=${s}`);
    });
    var at2 = l4((oi, ot)=>{
        var { isPlainObject: ms, forceArray: D, shortLang: ds } = y6();
        ot.exports = (e)=>(t, r, s, i, n, o)=>{
                if (ms(t)) {
                    let c = t;
                    t = c.titles, r = c.sites, s = c.languages, i = c.props, n = c.format, o = c.redirects;
                }
                if (n = n || "json", !(t && t.length > 0)) throw new Error("no titles provided");
                r && r.length > 0 || (r = [
                    "enwiki"
                ]), t = D(t), r = D(r).map(ys), i = D(i);
                let a = {
                    action: "wbgetentities",
                    titles: t.join("|"),
                    sites: r.join("|"),
                    format: n
                };
                return r.length === 1 && t.length === 1 && (a.normalize = !0), s && (s = D(s).map(ds), a.languages = s.join("|")), i && i.length > 0 && (a.props = i.join("|")), o === !1 && (a.redirects = "no"), e(a);
            };
        var ys = (e)=>e.length === 2 ? `${e}wiki` : e;
    });
    var ee4 = l4((ai, ct)=>{
        var { fixedEncodeURIComponent: hs } = y6();
        ct.exports = (e)=>(t)=>{
                let r = hs(t);
                return `${e}?format=json&query=${r}`;
            };
    });
    var ut2 = l4((ci, pt)=>{
        var { forceArray: ws } = y6(), { isItemId: gs } = b4(), ks = j6(), bs = "FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } ";
        pt.exports = (e)=>{
            let t = ee4()(e);
            return (r, s, i = {})=>{
                let { limit: n, caseInsensitive: o, keepProperties: a } = i, c = o ? vs : $s, p = a ? "" : bs, d = ws(r);
                d.forEach(ks.propertyId), d = d.map(qs).join("|");
                let f = `SELECT DISTINCT ?subject WHERE { ${Es(s, c, d, p)} }`;
                return n && (f += ` LIMIT ${n}`), t(f);
            };
        };
        var Es = (e, t, r, s)=>e instanceof Array ? "{ " + e.map(lt).map((n)=>t(r, n, s)).join("} UNION {") + " }" : t(r, lt(e), s), lt = (e)=>(gs(e) ? e = `wd:${e}` : typeof e == "string" && (e = `'${e}'`), e), $s = (e, t, r, s)=>`?subject ${e} ${t} .
    ${r}`, vs = (e, t, r, s)=>`?subject ${e} ?value .
    FILTER (lcase(?value) = ${t.toLowerCase()})
    ${r}`, qs = (e)=>"wdt:" + e;
    });
    var te5 = l4((li, wt)=>{
        var { isPlainObject: Ss } = y6(), xs = K4(), js = Ue2(), Is = b4(), Ps = W2(), Rs = _7(), Ts = `Tip: if you just want to access functions that don't need an instance or a sparqlEndpoint,
those are also exposed directly on the module object. Exemple:
const { isItemId, simplify } = require('wikibase-sdk')`, dt = Object.assign({
            simplify: xs,
            parse: js
        }, Is, Ps, Rs), yt = (e)=>{
            if (!Ss(e)) throw new Error("invalid config");
            let { instance: t, sparqlEndpoint: r } = e, { wgScriptPath: s = "w" } = e;
            if (s = s.replace(/^\//, ""), !(t || r)) throw new Error(`one of instance or sparqlEndpoint should be set at initialization.
${Ts}`);
            let i, n, o;
            if (t) {
                ft("instance", t), n = t.replace(/\/$/, "").replace(`/${s}/api.php`, ""), o = `${n}/${s}/api.php`;
                let p = Ne3()(o);
                i = {
                    searchEntities: He2()(p),
                    cirrusSearchPages: Ge1()(p),
                    getEntities: Z4()(p),
                    getManyEntities: Je2()(p),
                    getRevisions: rt1()(p),
                    getEntityRevision: nt1()(t, s),
                    getEntitiesFromSitelinks: at2()(p)
                };
            } else i = {
                searchEntities: E("searchEntities"),
                cirrusSearchPages: E("cirrusSearchPages"),
                getEntities: E("getEntities"),
                getManyEntities: E("getManyEntities"),
                getRevisions: E("getRevisions"),
                getEntityRevision: E("getEntityRevision"),
                getEntitiesFromSitelinks: E("getEntitiesFromSitelinks")
            };
            let a;
            return r ? (ft("sparqlEndpoint", r), a = {
                sparqlQuery: ee4()(r),
                getReverseClaims: ut2()(r)
            }) : a = {
                sparqlQuery: mt("sparqlQuery"),
                getReverseClaims: mt("getReverseClaims")
            }, Object.assign({
                instance: {
                    root: n,
                    apiEndpoint: o
                }
            }, dt, i, a);
        };
        Object.assign(yt, dt);
        var ft = (e, t)=>{
            if (!(typeof t == "string" && t.startsWith("http"))) throw new Error(`invalid ${e}: ${t}`);
        }, ht = (e)=>(t)=>()=>{
                    throw new Error(`${t} requires ${e} to be set at initialization`);
                }, mt = ht("a sparqlEndpoint"), E = ht("an instance");
        wt.exports = yt;
    });
    var $3 = {};
    qt2($3, {
        default: ()=>Ls1
    });
    var Cs1 = ie5(te5());
    q5($3, ie5(te5()));
    var { default: gt1, ...Os1 } = Cs1, Ls1 = gt1 !== void 0 ? gt1 : Os1;
    const mod62 = {
        default: Ls1
    };
    var require2 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m;
        switch(n){
            case "wikibase-sdk":
                return e(mod62);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var _8 = Object.create;
    var p6 = Object.defineProperty;
    var w7 = Object.getOwnPropertyDescriptor;
    var m7 = Object.getOwnPropertyNames;
    var q6 = Object.getPrototypeOf, x5 = Object.prototype.hasOwnProperty;
    var c4 = ((t)=>typeof require2 < "u" ? require2 : typeof Proxy < "u" ? new Proxy(t, {
            get: (e, r)=>(typeof require2 < "u" ? require2 : e)[r]
        }) : t)(function(t) {
        if (typeof require2 < "u") return require2.apply(this, arguments);
        throw Error('Dynamic require of "' + t + '" is not supported');
    });
    var g8 = (t, e)=>()=>(e || t((e = {
                exports: {}
            }).exports, e), e.exports), h4 = (t, e)=>{
        for(var r in e)p6(t, r, {
            get: e[r],
            enumerable: !0
        });
    }, i4 = (t, e, r, n)=>{
        if (e && typeof e == "object" || typeof e == "function") for (let d of m7(e))!x5.call(t, d) && d !== r && p6(t, d, {
            get: ()=>e[d],
            enumerable: !(n = w7(e, d)) || n.enumerable
        });
        return t;
    }, o1 = (t, e, r)=>(i4(t, e, "default"), r && i4(r, e, "default")), u4 = (t, e, r)=>(r = t != null ? _8(q6(t)) : {}, i4(e || !t || !t.__esModule ? p6(r, "default", {
            value: t,
            enumerable: !0
        }) : r, t));
    var s = g8((j, f)=>{
        f.exports = c4("wikibase-sdk")({
            instance: "https://www.wikidata.org",
            sparqlEndpoint: "https://query.wikidata.org/sparql"
        });
    });
    var a6 = {};
    h4(a6, {
        default: ()=>E5
    });
    var k4 = u4(s());
    o1(a6, u4(s()));
    var { default: l5, ...y7 } = k4, E5 = l5 !== void 0 ? l5 : y7;
    console.warn("[npm] %cdeprecated%c wikidata-sdk@8.1.1: wikidata-sdk has been renamed wikibase-sdk", "color:red", "");
    var G3 = Object.defineProperty;
    var b5 = (Q, e)=>{
        for(var t in e)G3(Q, t, {
            get: e[t],
            enumerable: !0
        });
    };
    var k5 = {};
    b5(k5, {
        default: ()=>d4,
        parse: ()=>d4
    });
    var s1 = {
        langs: [
            "en"
        ]
    };
    function d4(Q, e) {
        let t = [].concat(Q);
        return [].concat(E5.getManyEntities(t, e || s1.langs));
    }
    var T10 = {};
    b5(T10, {
        default: ()=>O5,
        parse: ()=>O5,
        parseAsync: ()=>j7,
        parseEntities: ()=>O5,
        parseEntitiesAsync: ()=>j7,
        parseEntity: ()=>y8
    });
    var p7 = {};
    b5(p7, {
        parse: ()=>i5,
        parseAsync: ()=>w8
    });
    var { fetchFile: ee5, fetchFileAsync: Qe3 } = jt;
    function i5(Q) {
        return [].concat(Q).map(ee5);
    }
    function w8(Q) {
        return Promise.all([].concat(Q).map(Qe3));
    }
    function S6(Q, e) {
        var t = Object.keys(Q);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(Q);
            e && (n = n.filter(function(v) {
                return Object.getOwnPropertyDescriptor(Q, v).enumerable;
            })), t.push.apply(t, n);
        }
        return t;
    }
    function x6(Q) {
        for(var e = 1; e < arguments.length; e++){
            var t = arguments[e] != null ? arguments[e] : {};
            e % 2 ? S6(Object(t), !0).forEach(function(n) {
                te6(Q, n, t[n]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Q, Object.getOwnPropertyDescriptors(t)) : S6(Object(t)).forEach(function(n) {
                Object.defineProperty(Q, n, Object.getOwnPropertyDescriptor(t, n));
            });
        }
        return Q;
    }
    function te6(Q, e, t) {
        return e = ne6(e), e in Q ? Object.defineProperty(Q, e, {
            value: t,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : Q[e] = t, Q;
    }
    function ne6(Q) {
        var e = ve3(Q, "string");
        return typeof e == "symbol" ? e : String(e);
    }
    function ve3(Q, e) {
        if (typeof Q != "object" || Q === null) return Q;
        var t = Q[Symbol.toPrimitive];
        if (t !== void 0) {
            var n = t.call(Q, e || "default");
            if (typeof n != "object") return n;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (e === "string" ? String : Number)(Q);
    }
    var C5 = {
        keepQualifiers: !0,
        timeConverter: "simple-day"
    }, c5 = {
        P17: null
    }, E6 = {
        P740: c5,
        P159: c5
    }, oe6 = {
        P50: null,
        P57: null,
        P58: null,
        P86: null,
        P98: null,
        P110: null,
        P162: null,
        P170: null,
        P175: null,
        P178: null,
        P371: null,
        P488: null,
        P655: null,
        P664: null,
        P1431: null,
        P1640: null,
        P1817: null,
        P2438: null,
        P5030: null,
        P921: {
            P50: null
        },
        P407: null,
        P364: null,
        P123: E6,
        P629: {
            P50: null,
            P123: E6
        },
        P437: null,
        P186: null,
        P179: {
            P98: null
        },
        P1433: {
            P4745: {
                P276: c5
            }
        },
        P361: {
            P50: null
        }
    };
    function N7(Q, e) {
        return e ? (Q._needed = Object.assign(Q._needed || {}, e), Object.keys(Q.claims).filter((t)=>t in e).flatMap((t)=>Q.claims[t].map(({ value: n })=>n.id || n))) : [];
    }
    function q7(Q, e) {
        if (!e) {
            let n = [];
            for(let v in Q){
                let o = N7(Q[v], oe6);
                for (let a of o)n.includes(a) || n.push(a);
            }
            return n;
        }
        let t = [];
        for (let n of e){
            let v = Q[n];
            if (v._needed) {
                for(let o in v.claims)if (o in v._needed) for (let a of v.claims[o])a.value && a.value.id || (a.value = Q[a.value], t.push(...N7(a.value, v._needed[o])));
                delete v._needed;
            }
        }
        return t;
    }
    function g9(Q) {
        let e = simplify.entities(Q, C5);
        for(let t in Q){
            let n = Q[t].claims;
            n.P348 && (e[t].claims["P348:all"] = simplify.propertyClaims(n.P348, x6(x6({}, C5), {}, {
                keepNonTruthy: !0,
                keepRank: !0
            })).filter((v)=>v.rank !== "deprecated"));
        }
        return e;
    }
    function L6(Q, e) {
        return {
            needed: q7(e),
            incomplete: Object.keys(Q)
        };
    }
    function R6(Q, e) {
        let t = Q.filter((n, v)=>!(n in e) && Q.indexOf(n) === v);
        return d4(t);
    }
    function F4(Q, e) {
        let { entities: t } = JSON.parse(Q);
        Object.assign(e, g9(t));
    }
    function H4(Q, e) {
        return {
            needed: q7(e, Q.incomplete),
            incomplete: Q.needed
        };
    }
    function M7(Q, e) {
        return Object.keys(Q).map((t)=>e[t]);
    }
    function ae5(Q) {
        let e = g9(Q), t = L6(Q, e);
        for(; t.needed.length;)R6(t.needed, e).map((v)=>F4(i5(v), e)), t = H4(t, e);
        return e;
    }
    function W3(Q) {
        let e = ae5(Q);
        return M7(Q, e);
    }
    async function re4(Q) {
        let e = g9(Q), t = L6(Q, e);
        for(; t.needed.length;){
            let n = R6(t.needed, e);
            await Promise.all(n.map(async (v)=>F4(await w8(v), e))), t = H4(t, e);
        }
        return e;
    }
    async function z6(Q) {
        let e = await re4(Q);
        return M7(Q, e);
    }
    var _9 = {};
    b5(_9, {
        TYPE_PRIORITIES: ()=>u5,
        default: ()=>f5,
        getLabel: ()=>r,
        parse: ()=>f5,
        parseProp: ()=>f5,
        parseType: ()=>l6
    });
    var $4 = {
        Q2377289: "book",
        Q2396513: "book",
        Q2514954: "book",
        Q2537127: "book",
        Q2787237: "book",
        Q2831984: "book",
        Q3257187: "book",
        Q3257212: "book",
        Q3356371: "book",
        Q3423631: "dataset",
        Q3831846: "book",
        Q3831847: "book",
        Q3915339: "book",
        Q3975991: "book",
        Q4043103: "book",
        Q4067007: "book",
        Q4224691: "book",
        Q4230425: "book",
        Q4515179: "book",
        Q4677625: "book",
        Q4931288: "book",
        Q4943243: "book",
        Q5073531: "book",
        Q5093328: "book",
        Q5159310: "book",
        Q5189957: "book",
        Q5560014: "book",
        Q5591880: "book",
        Q6165948: "book",
        Q6374241: "book",
        Q6675210: "book",
        Q7291983: "book",
        Q8051587: "book",
        Q8275050: "book",
        Q9138748: "book",
        Q10656197: "book",
        Q10666342: "book",
        Q10666349: "book",
        Q10863072: "book",
        Q10911540: "book",
        Q11396303: "book",
        Q11424383: "book",
        Q11567160: "book",
        Q11589491: "book",
        Q11659402: "book",
        Q11750596: "book",
        Q11976342: "book",
        Q12021072: "book",
        Q12135062: "book",
        Q12215439: "book",
        Q12310958: "book",
        Q12327390: "book",
        Q12410152: "book",
        Q12731131: "book",
        Q13137339: "book",
        Q13430107: "book",
        Q13636757: "book",
        Q13751595: "book",
        Q16046027: "book",
        Q16385949: "book",
        Q16507688: "book",
        Q16670817: "book",
        Q16736578: "book",
        Q16968990: "book",
        Q17590416: "book",
        Q19379268: "book",
        Q19602268: "book",
        Q21446882: "book",
        Q21550981: "book",
        Q21598767: "book",
        Q21662746: "book",
        Q22988237: "book",
        Q25571778: "book",
        Q25679217: "book",
        Q26267321: "book",
        Q26271743: "book",
        Q26271823: "book",
        Q27277147: "book",
        Q29154430: "book",
        Q29586870: "book",
        Q31075282: "book",
        Q31441034: "book",
        Q31946409: "book",
        Q52005090: "book",
        Q52153485: "book",
        Q55610842: "book",
        Q56552233: "book",
        Q57933693: "book",
        Q58142059: "book",
        Q58211632: "book",
        Q58807269: "book",
        Q60226001: "book",
        Q60475414: "book",
        Q60475468: "book",
        Q60533444: "book",
        Q60627667: "book",
        Q60793696: "book",
        Q61696018: "book",
        Q63720062: "book",
        Q63922229: "book",
        Q65085460: "book",
        Q65769536: "book",
        Q65769568: "book",
        Q65769781: "book",
        Q65770793: "book",
        Q66382988: "book",
        Q72263827: "book",
        Q73153914: "book",
        Q73614409: "book",
        Q74634121: "book",
        Q74634279: "book",
        Q74634331: "book",
        Q74634636: "book",
        Q74634690: "book",
        Q74680846: "book",
        Q75112246: "book",
        Q75112260: "book",
        Q75112938: "book",
        Q75112943: "book",
        Q75112940: "book",
        Q75112946: "book",
        Q75112944: "book",
        Q75112950: "book",
        Q75112948: "book",
        Q75112954: "book",
        Q75112952: "book",
        Q75112959: "book",
        Q75112962: "book",
        Q75112966: "book",
        Q75112964: "book",
        Q75112971: "book",
        Q75112968: "book",
        Q75112973: "book",
        Q75112979: "book",
        Q75112976: "book",
        Q75112982: "book",
        Q75112987: "book",
        Q75112984: "book",
        Q75112990: "book",
        Q75112992: "book",
        Q75112999: "book",
        Q75112996: "book",
        Q75112997: "book",
        Q75113003: "book",
        Q75113001: "book",
        Q75113006: "book",
        Q75113005: "book",
        Q75113010: "book",
        Q75113008: "book",
        Q75113014: "book",
        Q75113015: "book",
        Q75113012: "book",
        Q75113019: "book",
        Q75113017: "book",
        Q75113023: "book",
        Q75113021: "book",
        Q75113025: "book",
        Q75113030: "book",
        Q75113028: "book",
        Q75113034: "book",
        Q75113032: "book",
        Q75113038: "book",
        Q75113037: "book",
        Q75113043: "book",
        Q75113041: "book",
        Q75113045: "book",
        Q75113050: "book",
        Q75113051: "book",
        Q75113048: "book",
        Q75113055: "book",
        Q75113053: "book",
        Q75113058: "book",
        Q75113057: "book",
        Q75113062: "book",
        Q75113060: "book",
        Q75113066: "book",
        Q75113064: "book",
        Q75113070: "book",
        Q75113071: "book",
        Q75113068: "book",
        Q75113073: "book",
        Q75113077: "book",
        Q75113082: "book",
        Q75113080: "book",
        Q75113085: "book",
        Q83818856: "book",
        Q84890753: "book",
        Q89676823: "book",
        Q92257259: "book",
        Q92259224: "book",
        Q97501585: "book",
        Q104438918: "book",
        Q105623646: "book",
        Q105890301: "book",
        Q106412622: "book",
        Q106597511: "book",
        Q106599082: "book",
        Q107026784: "book",
        Q107196901: "book",
        Q107339086: "book",
        Q109222913: "book",
        Q133792: "map",
        Q162206: "map",
        Q162827: "map",
        Q191072: "map",
        Q216526: "map",
        Q320228: "map",
        Q328720: "map",
        Q352416: "map",
        Q366511: "map",
        Q441903: "map",
        Q573980: "map",
        Q602481: "map",
        Q653848: "map",
        Q715789: "map",
        Q728502: "map",
        Q842617: "map",
        Q110078641: "book",
        Q110346117: "book",
        Q110494834: "book",
        Q1362775: "map",
        Q1410020: "map",
        Q110569815: "book",
        Q1453402: "map",
        Q1501880: "map",
        Q1502030: "map",
        Q1664468: "map",
        Q1783108: "map",
        Q110979523: "book",
        Q111028843: "book",
        Q1875628: "map",
        Q111051149: "book",
        Q2089517: "map",
        Q2127425: "map",
        Q111281891: "book",
        Q2177089: "map",
        Q111349622: "book",
        Q2309464: "map",
        Q2328087: "map",
        Q2353983: "map",
        Q2368091: "map",
        Q2426254: "map",
        Q111588306: "book",
        Q111594734: "book",
        Q2470969: "map",
        Q2471702: "map",
        Q2620815: "map",
        Q2656361: "map",
        Q112045634: "book",
        Q2940478: "map",
        Q2940522: "map",
        Q3268937: "map",
        Q3509676: "map",
        Q3515498: "map",
        Q3965372: "map",
        Q4120609: "map",
        Q4388138: "map",
        Q4505959: "map",
        Q5047387: "map",
        Q5177325: "map",
        Q5434353: "map",
        Q5594885: "map",
        Q6017843: "map",
        Q6158810: "map",
        Q6664848: "map",
        Q7104865: "map",
        Q7127170: "map",
        Q7291975: "map",
        Q7323492: "map",
        Q7646471: "map",
        Q7809952: "map",
        Q10544122: "map",
        Q11426259: "map",
        Q12059912: "map",
        Q14321585: "map",
        Q15877105: "map",
        Q17047956: "map",
        Q21935483: "map",
        Q22125384: "map",
        Q23887460: "map",
        Q41346237: "map",
        Q56753859: "map",
        Q61868337: "map",
        Q62071263: "map",
        Q63313331: "map",
        Q63872468: "map",
        Q64006414: "map",
        Q64138390: "map",
        Q65962034: "map",
        Q66495627: "map",
        Q69863064: "map",
        Q75085545: "map",
        Q86436436: "map",
        Q91985453: "map",
        Q94579381: "map",
        Q97016221: "map",
        Q97372097: "map",
        Q104885681: "map",
        Q108837752: "book",
        Q108862288: "book",
        Q87167: "manuscript",
        Q187947: "musical_score",
        Q253623: "patent",
        Q637866: "review-book",
        Q1002697: "periodical",
        Q1580166: "entry-dictionary",
        Q861911: "speech",
        Q2334719: "legal_case",
        Q5707594: "article-newspaper",
        Q1172284: "dataset",
        Q10870555: "report",
        Q13433827: "entry-encyclopedia",
        Q13442814: "article-journal",
        Q7216866: "post",
        Q17928402: "post-weblog",
        Q9388534: "collection",
        Q191067: "article",
        Q686822: "bill",
        Q11578774: "broadcast",
        Q23927052: "paper-conference",
        Q1980247: "chapter",
        Q106833: "book",
        Q174361: "book",
        Q193495: "book",
        Q203490: "book",
        Q203780: "book",
        Q216665: "book",
        Q223638: "book",
        Q241996: "book",
        Q254554: "book",
        Q273610: "book",
        Q265158: "review",
        Q448980: "book",
        Q489637: "book",
        Q604219: "book",
        Q605076: "book",
        Q642946: "software",
        Q30070590: "article-magazine",
        Q727715: "manuscript",
        Q756230: "regulation",
        Q830588: "book",
        Q855753: "book",
        Q890239: "book",
        Q913554: "book",
        Q922203: "legislation",
        Q944359: "book",
        Q1009641: "book",
        Q1072884: "book",
        Q1106827: "book",
        Q1184488: "book",
        Q1238720: "book",
        Q1250896: "book",
        Q1250897: "book",
        Q1294318: "software",
        Q1311092: "book",
        Q1415108: "book",
        Q1496857: "book",
        Q1507226: "book",
        Q1528894: "book",
        Q1569424: "book",
        Q1605954: "book",
        Q1609706: "book",
        Q1650727: "book",
        Q1760610: "periodical",
        Q1785330: "book",
        Q1792377: "book",
        Q1870591: "manuscript",
        Q1883939: "book",
        Q1986787: "book",
        Q2069066: "book",
        Q2072218: "book",
        Q2107273: "book",
        Q2128336: "book",
        Q2135225: "book",
        Q2208044: "book",
        Q1656682: "event",
        Q2314679: "book",
        Q2331348: "book",
        Q2363145: "book",
        Q317623: "standard",
        Q3331189: "book",
        Q7725634: "book",
        Q545861: "hearing",
        Q178651: "interview",
        Q3055347: "entry",
        Q30070753: "figure",
        Q4006: "map",
        Q11424: "motion_picture",
        Q1266946: "thesis",
        Q7366: "song",
        Q131569: "treaty",
        Q428148: "regulation",
        Q7397: "software",
        Q571: "book",
        Q23622: "book",
        Q43013: "book",
        Q49371: "legislation",
        Q35140: "performance",
        Q36774: "webpage",
        Q177771: "song",
        Q178122: "song",
        Q216860: "song",
        Q261434: "song",
        Q318894: "song",
        Q319448: "song",
        Q380233: "song",
        Q484692: "song",
        Q493169: "song",
        Q499042: "song",
        Q523896: "song",
        Q574784: "song",
        Q600094: "song",
        Q608862: "song",
        Q661651: "song",
        Q744327: "song",
        Q758422: "song",
        Q784074: "song",
        Q844450: "song",
        Q873000: "song",
        Q943929: "song",
        Q944800: "song",
        Q959583: "song",
        Q1009280: "song",
        Q1033810: "song",
        Q1033813: "song",
        Q1069070: "song",
        Q1073515: "song",
        Q1127578: "song",
        Q1148122: "song",
        Q1228189: "song",
        Q1229479: "song",
        Q1236108: "song",
        Q1288193: "song",
        Q1510942: "song",
        Q1779217: "song",
        Q1779319: "song",
        Q1899706: "song",
        Q1942905: "song",
        Q1963108: "song",
        Q2038845: "song",
        Q2058312: "song",
        Q2108499: "song",
        Q2138639: "song",
        Q2165184: "song",
        Q2212946: "song",
        Q2235352: "song",
        Q2281713: "song",
        Q2298624: "song",
        Q2334774: "song",
        Q2358279: "song",
        Q2544997: "song",
        Q2596399: "song",
        Q2891357: "song",
        Q2894096: "song",
        Q2956164: "song",
        Q3246270: "song",
        Q3345491: "song",
        Q3482281: "song",
        Q3562031: "song",
        Q3656514: "song",
        Q3843655: "song",
        Q3924081: "song",
        Q4770819: "song",
        Q4797274: "song",
        Q5031532: "song",
        Q5037289: "song",
        Q5151790: "song",
        Q5529931: "song",
        Q5747946: "song",
        Q6705418: "song",
        Q6781835: "song",
        Q6784085: "song",
        Q7148059: "song",
        Q7257251: "song",
        Q7314000: "song",
        Q7561608: "song",
        Q7579604: "song",
        Q7824869: "song",
        Q8053529: "song",
        Q8261762: "song",
        Q10600586: "song",
        Q10669480: "song",
        Q10677514: "song",
        Q11214531: "song",
        Q11341610: "song",
        Q11496089: "song",
        Q11502655: "song",
        Q11588375: "song",
        Q11637394: "song",
        Q12819160: "song",
        Q12976278: "song",
        Q12985660: "song",
        Q105872368: "map",
        Q106585509: "map",
        Q106963642: "map",
        Q108121955: "map",
        Q110996876: "map",
        Q111708950: "map",
        Q112076892: "map",
        Q93661: "software",
        Q104851: "software",
        Q116112: "software",
        Q131093: "software",
        Q137742: "software",
        Q166142: "software",
        Q184752: "software",
        Q208218: "software",
        Q210499: "software",
        Q218616: "software",
        Q281039: "software",
        Q351507: "software",
        Q358785: "software",
        Q386197: "software",
        Q438556: "software",
        Q444835: "software",
        Q528166: "software",
        Q529029: "software",
        Q581319: "software",
        Q598205: "software",
        Q604270: "software",
        Q629399: "software",
        Q639653: "software",
        Q676202: "software",
        Q694007: "software",
        Q735918: "software",
        Q816659: "software",
        Q830743: "software",
        Q854840: "software",
        Q856108: "software",
        Q861170: "software",
        Q872058: "software",
        Q876057: "software",
        Q884270: "software",
        Q891055: "software",
        Q893130: "software",
        Q13142456: "song",
        Q13212139: "song",
        Q13829124: "song",
        Q15810872: "song",
        Q15907187: "song",
        Q16084298: "song",
        Q16194930: "song",
        Q16891251: "song",
        Q16912992: "song",
        Q17102166: "song",
        Q17118203: "song",
        Q17118736: "song",
        Q17150323: "song",
        Q20107778: "song",
        Q20579345: "song",
        Q20737166: "song",
        Q21653344: "song",
        Q22086714: "song",
        Q23808313: "song",
        Q25022242: "song",
        Q28666781: "song",
        Q28704254: "song",
        Q39086064: "song",
        Q42681239: "song",
        Q48747276: "song",
        Q48952271: "song",
        Q55596271: "song",
        Q56299718: "song",
        Q56572789: "song",
        Q57248574: "song",
        Q59032066: "song",
        Q60030725: "song",
        Q61688673: "song",
        Q63141557: "song",
        Q64138195: "song",
        Q64139002: "song",
        Q64152470: "song",
        Q64152591: "song",
        Q65286306: "song",
        Q67608251: "song",
        Q341: "software",
        Q416: "periodical",
        Q11287: "software",
        Q14001: "software",
        Q19541: "software",
        Q58199: "software",
        Q61905: "software",
        Q81616558: "song",
        Q91192165: "song",
        Q93540236: "song",
        Q94499224: "song",
        Q97375316: "song",
        Q102250909: "song",
        Q104310542: "song",
        Q104831709: "song",
        Q107029565: "song",
        Q108823220: "song",
        Q109566187: "song",
        Q109566342: "song",
        Q109566383: "song",
        Q109566452: "song",
        Q110297557: "song",
        Q110647181: "song",
        Q111009299: "song",
        Q907342: "software",
        Q943442: "standard",
        Q946715: "software",
        Q956086: "software",
        Q956238: "software",
        Q999154: "software",
        Q1000501: "software",
        Q1003012: "software",
        Q1004415: "software",
        Q1023826: "software",
        Q1035852: "software",
        Q1035935: "software",
        Q1061077: "software",
        Q1092177: "software",
        Q1096695: "software",
        Q1124648: "software",
        Q1143070: "software",
        Q1156072: "software",
        Q1156881: "software",
        Q1172313: "software",
        Q1172474: "software",
        Q1178921: "software",
        Q1200186: "software",
        Q1254596: "software",
        Q1275377: "software",
        Q1297182: "software",
        Q1318054: "software",
        Q1335007: "software",
        Q1345429: "software",
        Q1369666: "software",
        Q1371279: "software",
        Q1384501: "software",
        Q1386743: "software",
        Q1403556: "software",
        Q1419081: "software",
        Q1427675: "software",
        Q1475717: "review",
        Q1480561: "software",
        Q1531370: "software",
        Q1594330: "software",
        Q1641413: "software",
        Q1668023: "software",
        Q1674651: "software",
        Q1739331: "dataset",
        Q1757693: "software",
        Q1760545: "software",
        Q1995545: "software",
        Q2023643: "software",
        Q2053289: "software",
        Q2057931: "software",
        Q2072225: "software",
        Q2102850: "software",
        Q2132167: "software",
        Q2134087: "software",
        Q2164499: "software",
        Q2259352: "software",
        Q2404906: "software",
        Q2418022: "software",
        Q2429814: "software",
        Q2463207: "software",
        Q2532749: "software",
        Q2916479: "software",
        Q2996416: "software",
        Q3125508: "software",
        Q3257918: "software",
        Q3257934: "software",
        Q3539533: "software",
        Q3618796: "software",
        Q3752489: "software",
        Q3809412: "software",
        Q4039665: "software",
        Q4043509: "software",
        Q4117406: "software",
        Q4120889: "software",
        Q4303335: "software",
        Q4307913: "software",
        Q4346576: "software",
        Q4388320: "software",
        Q4406907: "software",
        Q4550939: "software",
        Q4774400: "software",
        Q4774436: "software",
        Q4811587: "software",
        Q4826753: "software",
        Q4828920: "software",
        Q4943247: "software",
        Q5157529: "software",
        Q5249204: "software",
        Q5283161: "software",
        Q5287634: "software",
        Q5327172: "software",
        Q5416718: "software",
        Q5500964: "software",
        Q5535060: "software",
        Q5597177: "software",
        Q5610543: "software",
        Q5628889: "software",
        Q5957560: "software",
        Q6020321: "software",
        Q6059927: "software",
        Q6060218: "software",
        Q6484272: "software",
        Q6543028: "software",
        Q6543035: "software",
        Q6895998: "software",
        Q7094135: "software",
        Q7144990: "software",
        Q7201225: "software",
        Q7240669: "software",
        Q7247856: "software",
        Q7311809: "software",
        Q7312175: "software",
        Q7314108: "software",
        Q7392743: "software",
        Q7395178: "software",
        Q7554365: "standard",
        Q7558983: "software",
        Q7565031: "software",
        Q7573049: "software",
        Q7644530: "software",
        Q7833919: "software",
        Q7880671: "software",
        Q7927896: "software",
        Q7934950: "software",
        Q7935096: "software",
        Q8012311: "software",
        Q9127910: "software",
        Q10413423: "software",
        Q11275354: "software",
        Q11942877: "software",
        Q12014419: "software",
        Q12046424: "software",
        Q13515741: "software",
        Q15456942: "software",
        Q15593630: "software",
        Q15618637: "software",
        Q15933979: "software",
        Q16920237: "software",
        Q16947796: "software",
        Q17077007: "software",
        Q17081023: "software",
        Q17093781: "software",
        Q17137706: "software",
        Q18922759: "software",
        Q19307174: "software",
        Q20726407: "webpage",
        Q21129801: "software",
        Q21743174: "software",
        Q23931362: "software",
        Q24021076: "software",
        Q24091050: "software",
        Q24480005: "software",
        Q24841467: "software",
        Q25374232: "software",
        Q25588783: "software",
        Q26203767: "software",
        Q27861186: "software",
        Q28057052: "software",
        Q28148501: "software",
        Q28167864: "software",
        Q28778566: "software",
        Q28812506: "software",
        Q28966214: "software",
        Q29032804: "software",
        Q29032808: "software",
        Q29645725: "software",
        Q29649691: "software",
        Q30113732: "software",
        Q30324611: "software",
        Q30740917: "software",
        Q50316487: "software",
        Q50355772: "software",
        Q50410214: "software",
        Q51938570: "software",
        Q56273712: "software",
        Q56297973: "software",
        Q56298373: "software",
        Q56660744: "software",
        Q56842894: "software",
        Q60229368: "standard",
        Q61906203: "software",
        Q62057790: "software",
        Q63213147: "software",
        Q65951263: "software",
        Q66436511: "software",
        Q71348743: "software",
        Q76158006: "software",
        Q76443836: "software",
        Q77685760: "software",
        Q79600797: "software",
        Q80261011: "software",
        Q82748357: "software",
        Q85757110: "software",
        Q88465956: "software",
        Q89292899: "software",
        Q91314720: "software",
        Q91447167: "software",
        Q93533999: "software",
        Q95001953: "software",
        Q97656063: "software",
        Q130232: "motion_picture",
        Q157443: "motion_picture",
        Q185529: "motion_picture",
        Q188473: "motion_picture",
        Q202866: "motion_picture",
        Q219557: "motion_picture",
        Q226730: "motion_picture",
        Q229390: "motion_picture",
        Q319221: "motion_picture",
        Q336144: "motion_picture",
        Q369747: "motion_picture",
        Q370630: "motion_picture",
        Q421719: "motion_picture",
        Q430525: "motion_picture",
        Q455315: "motion_picture",
        Q455620: "motion_picture",
        Q459290: "motion_picture",
        Q505119: "motion_picture",
        Q506240: "motion_picture",
        Q517386: "motion_picture",
        Q628165: "motion_picture",
        Q645928: "motion_picture",
        Q652256: "motion_picture",
        Q663106: "motion_picture",
        Q677466: "dataset",
        Q790192: "motion_picture",
        Q842256: "motion_picture",
        Q848512: "motion_picture",
        Q882006: "motion_picture",
        Q917641: "motion_picture",
        Q959790: "motion_picture",
        Q1054574: "motion_picture",
        Q1067324: "motion_picture",
        Q1135802: "motion_picture",
        Q1146335: "motion_picture",
        Q1200678: "motion_picture",
        Q1251417: "motion_picture",
        Q1257444: "motion_picture",
        Q1268687: "motion_picture",
        Q1320115: "motion_picture",
        Q1339864: "motion_picture",
        Q1361932: "motion_picture",
        Q1397462: "motion_picture",
        Q1899749: "motion_picture",
        Q1933746: "motion_picture",
        Q1935609: "motion_picture",
        Q1994410: "motion_picture",
        Q2125170: "motion_picture",
        Q2143665: "motion_picture",
        Q2156835: "motion_picture",
        Q2165644: "motion_picture",
        Q2301591: "motion_picture",
        Q2484376: "motion_picture",
        Q2903140: "motion_picture",
        Q2973181: "motion_picture",
        Q3066315: "motion_picture",
        Q3072031: "motion_picture",
        Q3072043: "motion_picture",
        Q3294961: "motion_picture",
        Q3327002: "motion_picture",
        Q3585697: "motion_picture",
        Q3634883: "motion_picture",
        Q3648909: "motion_picture",
        Q3745400: "motion_picture",
        Q4220915: "motion_picture",
        Q4484381: "motion_picture",
        Q5145881: "motion_picture",
        Q5156753: "motion_picture",
        Q6133352: "motion_picture",
        Q7130449: "motion_picture",
        Q24862: "motion_picture",
        Q24865: "motion_picture",
        Q24869: "motion_picture",
        Q98808364: "software",
        Q98808384: "software",
        Q98808893: "software",
        Q98812836: "software",
        Q99263266: "software",
        Q100148106: "software",
        Q101408242: "software",
        Q104529428: "software",
        Q104595152: "software",
        Q104855363: "software",
        Q104901669: "software",
        Q105034815: "software",
        Q105557478: "software",
        Q105558035: "software",
        Q105832388: "software",
        Q106466562: "software",
        Q106572402: "software",
        Q106777209: "software",
        Q107417836: "software",
        Q108759345: "software",
        Q109252818: "software",
        Q110272868: "software",
        Q110322910: "software",
        Q110498923: "software",
        Q110509708: "software",
        Q111100275: "software",
        Q111660063: "software",
        Q7257728: "motion_picture",
        Q7299951: "motion_picture",
        Q7858343: "motion_picture",
        Q8030668: "motion_picture",
        Q9259727: "motion_picture",
        Q10475300: "motion_picture",
        Q11570976: "motion_picture",
        Q12410174: "motion_picture",
        Q12912091: "motion_picture",
        Q15859327: "motion_picture",
        Q16034224: "motion_picture",
        Q16641504: "motion_picture",
        Q16721823: "motion_picture",
        Q16909344: "motion_picture",
        Q17013749: "motion_picture",
        Q17123180: "motion_picture",
        Q18011171: "motion_picture",
        Q18011172: "motion_picture",
        Q18156020: "motion_picture",
        Q20202970: "motion_picture",
        Q20442589: "motion_picture",
        Q20650540: "motion_picture",
        Q21858363: "motion_picture",
        Q24887738: "motion_picture",
        Q24960157: "motion_picture",
        Q25212003: "motion_picture",
        Q26225677: "motion_picture",
        Q28735856: "motion_picture",
        Q29017630: "motion_picture",
        Q29226975: "motion_picture",
        Q33111614: "motion_picture",
        Q33373157: "motion_picture",
        Q48816645: "motion_picture",
        Q178406: "performance",
        Q204854: "performance",
        Q279752: "performance",
        Q823571: "performance",
        Q902899: "performance",
        Q1124733: "performance",
        Q1125630: "performance",
        Q1330221: "performance",
        Q1486440: "performance",
        Q1751775: "performance",
        Q1820662: "performance",
        Q2319401: "performance",
        Q2416176: "performance",
        Q2784170: "performance",
        Q2828251: "performance",
        Q2905677: "performance",
        Q3010369: "performance",
        Q3492850: "performance",
        Q3635468: "performance",
        Q5100970: "performance",
        Q54344007: "motion_picture",
        Q6942562: "performance",
        Q56240556: "motion_picture",
        Q7785123: "performance",
        Q11572071: "performance",
        Q11774631: "performance",
        Q11812395: "performance",
        Q60753838: "motion_picture",
        Q60965006: "motion_picture",
        Q61283808: "motion_picture",
        Q12535023: "performance",
        Q13136212: "performance",
        Q13454063: "performance",
        Q63302132: "motion_picture",
        Q15522668: "performance",
        Q64777087: "motion_picture",
        Q68974025: "motion_picture",
        Q21156425: "performance",
        Q73504838: "motion_picture",
        Q24906831: "performance",
        Q28492397: "performance",
        Q77906388: "motion_picture",
        Q30141393: "performance",
        Q88400940: "motion_picture",
        Q40249767: "performance",
        Q40249907: "performance",
        Q40250279: "performance",
        Q89928742: "motion_picture",
        Q45999579: "performance",
        Q47468117: "performance",
        Q47513101: "book",
        Q99526025: "motion_picture",
        Q52239285: "performance",
        Q101973724: "motion_picture",
        Q102706436: "motion_picture",
        Q103888910: "motion_picture",
        Q104840802: "motion_picture",
        Q107210978: "motion_picture",
        Q107210977: "motion_picture",
        Q109108478: "motion_picture",
        Q109122021: "motion_picture",
        Q109323491: "motion_picture",
        Q109733358: "motion_picture",
        Q109911570: "motion_picture",
        Q111241092: "motion_picture",
        Q111590800: "motion_picture",
        Q111745923: "motion_picture",
        Q81201196: "webpage",
        Q102241450: "performance",
        Q104872740: "performance",
        Q106499608: "performance",
        Q107100830: "performance",
        Q109044916: "performance",
        Q105004976: "webpage",
        Q106044661: "webpage",
        Q108156364: "webpage",
        Q109647055: "webpage",
        Q181589: "legislation",
        Q197806: "legislation",
        Q208202: "legislation",
        Q328293: "legislation",
        Q110227941: "webpage",
        Q476068: "legislation",
        Q574759: "legislation",
        Q621608: "legislation",
        Q661356: "legislation",
        Q694045: "legislation",
        Q903453: "legislation",
        Q928812: "legislation",
        Q110874299: "webpage",
        Q1135306: "legislation",
        Q111136048: "webpage",
        Q111279923: "webpage",
        Q1414472: "legislation",
        Q1637292: "legislation",
        Q1803798: "legislation",
        Q1864489: "legislation",
        Q1930934: "legislation",
        Q1938208: "legislation",
        Q1944228: "legislation",
        Q1946268: "legislation",
        Q2002525: "legislation",
        Q2070258: "legislation",
        Q111961945: "webpage",
        Q2094042: "legislation",
        Q2125353: "legislation",
        Q2251446: "legislation",
        Q2415181: "legislation",
        Q2416325: "legislation",
        Q2541543: "legislation",
        Q2799362: "legislation",
        Q3152878: "legislation",
        Q3430295: "legislation",
        Q3494013: "legislation",
        Q3571226: "legislation",
        Q4184949: "legislation",
        Q4349624: "legislation",
        Q4718567: "legislation",
        Q4774377: "legislation",
        Q4792967: "legislation",
        Q5021113: "legislation",
        Q5122775: "legislation",
        Q5133519: "legislation",
        Q5163317: "legislation",
        Q5313672: "legislation",
        Q6453643: "legislation",
        Q6542565: "legislation",
        Q7100795: "legislation",
        Q7243147: "legislation",
        Q7307387: "legislation",
        Q7327674: "legislation",
        Q7432325: "legislation",
        Q10263225: "legislation",
        Q10316956: "legislation",
        Q10701048: "legislation",
        Q11391992: "legislation",
        Q11644876: "legislation",
        Q11900299: "legislation",
        Q12760881: "legislation",
        Q13515734: "legislation",
        Q14565721: "legislation",
        Q16661688: "legislation",
        Q17018036: "legislation",
        Q18449256: "legislation",
        Q18894753: "legislation",
        Q18900373: "legislation",
        Q19752986: "legislation",
        Q19889049: "legislation",
        Q25339629: "legislation",
        Q1494741: "webpage",
        Q1503327: "webpage",
        Q1650567: "webpage",
        Q2139769: "webpage",
        Q2261569: "webpage",
        Q2641220: "webpage",
        Q2737701: "webpage",
        Q7631805: "webpage",
        Q23691297: "webpage",
        Q52314485: "performance",
        Q55760977: "performance",
        Q56477241: "performance",
        Q66371350: "webpage",
        Q78331840: "motion_picture",
        Q11439: "webpage",
        Q79355877: "book",
        Q85860240: "performance",
        Q213924: "manuscript",
        Q274076: "manuscript",
        Q390477: "manuscript",
        Q720106: "manuscript",
        Q865595: "manuscript",
        Q962741: "manuscript",
        Q1067768: "manuscript",
        Q1266076: "manuscript",
        Q1320539: "manuscript",
        Q110393809: "legislation",
        Q1641020: "manuscript",
        Q1671640: "manuscript",
        Q110707194: "legislation",
        Q1784036: "manuscript",
        Q2049275: "manuscript",
        Q2209578: "manuscript",
        Q2217259: "manuscript",
        Q111194727: "legislation",
        Q111208084: "legislation",
        Q2427245: "manuscript",
        Q2531964: "manuscript",
        Q2801575: "manuscript",
        Q2816501: "manuscript",
        Q3220177: "manuscript",
        Q3240926: "manuscript",
        Q3252544: "manuscript",
        Q3560324: "manuscript",
        Q3919785: "legislation",
        Q3960554: "manuscript",
        Q4475654: "manuscript",
        Q7012086: "manuscript",
        Q7261481: "manuscript",
        Q7452368: "manuscript",
        Q9026959: "manuscript",
        Q11564158: "manuscript",
        Q11613006: "manuscript",
        Q12043767: "manuscript",
        Q13430250: "manuscript",
        Q11122: "treaty",
        Q17143154: "manuscript",
        Q21089188: "manuscript",
        Q22669850: "manuscript",
        Q22948347: "manuscript",
        Q23840892: "manuscript",
        Q30103158: "manuscript",
        Q31078443: "manuscript",
        Q33308141: "manuscript",
        Q27243428: "legislation",
        Q28024845: "legislation",
        Q28097703: "legislation",
        Q28110087: "legislation",
        Q28807480: "legislation",
        Q60795643: "manuscript",
        Q35258599: "legislation",
        Q65769424: "manuscript",
        Q48498: "manuscript",
        Q49335: "manuscript",
        Q50319172: "legislation",
        Q193170: "treaty",
        Q252550: "treaty",
        Q625298: "treaty",
        Q837144: "treaty",
        Q88295258: "manuscript",
        Q60751404: "legislation",
        Q62179152: "legislation",
        Q63718677: "legislation",
        Q93643300: "manuscript",
        Q64605672: "legislation",
        Q64605677: "legislation",
        Q64605843: "legislation",
        Q64605863: "legislation",
        Q64607511: "legislation",
        Q65203908: "legislation",
        Q65203962: "legislation",
        Q65204493: "legislation",
        Q65204496: "legislation",
        Q67121475: "legislation",
        Q98561538: "manuscript",
        Q99032061: "manuscript",
        Q104198179: "manuscript",
        Q104199632: "manuscript",
        Q104211636: "manuscript",
        Q104417320: "manuscript",
        Q106957643: "manuscript",
        Q107007162: "manuscript",
        Q107181871: "manuscript",
        Q107213692: "manuscript",
        Q96048686: "legislation",
        Q97176272: "legislation",
        Q99771118: "legislation",
        Q102046748: "legislation",
        Q105071469: "legislation",
        Q105077399: "legislation",
        Q105106133: "legislation",
        Q105394735: "legislation",
        Q106377223: "legislation",
        Q106377248: "legislation",
        Q106463758: "legislation",
        Q143217: "musical_score",
        Q897381: "musical_score",
        Q1329869: "musical_score",
        Q1955137: "musical_score",
        Q2457903: "musical_score",
        Q2552822: "musical_score",
        Q57205857: "treaty",
        Q7190079: "musical_score",
        Q7452061: "musical_score",
        Q7673115: "musical_score",
        Q17991520: "musical_score",
        Q106393006: "interview",
        Q106813818: "interview",
        Q108418154: "interview",
        Q108576949: "interview",
        Q108679208: "interview",
        Q82317825: "treaty",
        Q108823064: "interview",
        Q109016973: "interview",
        Q109418359: "interview",
        Q110621229: "interview",
        Q85750821: "treaty",
        Q95692585: "treaty",
        Q97200740: "treaty",
        Q104178698: "treaty",
        Q110484215: "treaty",
        Q195414: "interview",
        Q442919: "interview",
        Q850171: "interview",
        Q1384479: "interview",
        Q1477475: "interview",
        Q1799882: "interview",
        Q2106925: "interview",
        Q3055290: "interview",
        Q3055291: "interview",
        Q3156406: "interview",
        Q4202018: "interview",
        Q4317093: "interview",
        Q5280330: "interview",
        Q7256239: "interview",
        Q7305960: "interview",
        Q65943904: "musical_score",
        Q7625207: "interview",
        Q8776455: "interview",
        Q12054584: "interview",
        Q16947017: "interview",
        Q22905880: "interview",
        Q864737: "treaty",
        Q931855: "treaty",
        Q1242841: "treaty",
        Q1414340: "treaty",
        Q1498487: "treaty",
        Q1671773: "treaty",
        Q1711115: "treaty",
        Q1758832: "treaty",
        Q1791610: "treaty",
        Q1976409: "treaty",
        Q2039547: "treaty",
        Q2113720: "treaty",
        Q2243479: "treaty",
        Q2245859: "treaty",
        Q2252156: "treaty",
        Q2290707: "treaty",
        Q2300991: "treaty",
        Q2325350: "treaty",
        Q2465017: "treaty",
        Q3305388: "treaty",
        Q3824506: "treaty",
        Q3847997: "treaty",
        Q4426710: "treaty",
        Q4461806: "treaty",
        Q4872029: "treaty",
        Q4985043: "treaty",
        Q6908053: "treaty",
        Q6934728: "treaty",
        Q6944158: "treaty",
        Q9557810: "treaty",
        Q11455760: "treaty",
        Q11510761: "treaty",
        Q11637357: "treaty",
        Q16835935: "treaty",
        Q16956642: "treaty",
        Q17124128: "treaty",
        Q18471364: "treaty",
        Q45933791: "interview",
        Q104479805: "musical_score",
        Q19958750: "treaty",
        Q20755435: "treaty",
        Q21044709: "treaty",
        Q21702674: "treaty",
        Q26877661: "treaty",
        Q29526855: "treaty",
        Q29527278: "treaty",
        Q29527544: "treaty",
        Q29883540: "treaty",
        Q30747863: "treaty",
        Q30921722: "treaty",
        Q38653134: "treaty",
        Q39234269: "treaty",
        Q50192946: "treaty",
        Q450873: "patent",
        Q681875: "patent",
        Q864645: "patent",
        Q913351: "patent",
        Q111020843: "review",
        Q2359937: "patent",
        Q5399577: "patent",
        Q19787436: "patent",
        Q580922: "article-journal",
        Q759838: "article",
        Q1809676: "article",
        Q2106255: "article-journal",
        Q2136117: "article",
        Q2438528: "report",
        Q6646525: "article",
        Q7582241: "article",
        Q265871: "review",
        Q1399118: "review",
        Q1589335: "review",
        Q2416230: "review",
        Q132364: "standard",
        Q170417: "standard",
        Q178562: "standard",
        Q184759: "standard",
        Q198614: "standard",
        Q235557: "standard",
        Q272683: "standard",
        Q290378: "standard",
        Q293813: "standard",
        Q304433: "standard",
        Q312100: "standard",
        Q375479: "standard",
        Q385853: "standard",
        Q579565: "standard",
        Q635130: "standard",
        Q681263: "standard",
        Q682415: "standard",
        Q774901: "standard",
        Q834575: "standard",
        Q848031: "standard",
        Q4589696: "review",
        Q5196473: "review",
        Q5251247: "review",
        Q15138389: "webpage",
        Q35639987: "patent",
        Q7247798: "review",
        Q17633526: "article-newspaper",
        Q18454631: "article",
        Q19389637: "entry-encyclopedia",
        Q21403168: "article",
        Q43305660: "patent",
        Q26260507: "broadcast",
        Q20058247: "review",
        Q42350535: "article",
        Q58010711: "article",
        Q56515249: "review",
        Q61992233: "review",
        Q75823667: "article",
        Q77253277: "article-journal",
        Q27588: "review",
        Q69699844: "review",
        Q31022: "standard",
        Q43521: "standard",
        Q105541326: "musical_score",
        Q105659338: "musical_score",
        Q105659385: "musical_score",
        Q105659398: "musical_score",
        Q105659428: "musical_score",
        Q105659450: "musical_score",
        Q105659498: "musical_score",
        Q105659558: "musical_score",
        Q105659572: "musical_score",
        Q105660091: "musical_score",
        Q105660178: "musical_score",
        Q105671645: "musical_score",
        Q105672249: "musical_score",
        Q105686838: "musical_score",
        Q106129133: "musical_score",
        Q80698083: "review",
        Q86460068: "review",
        Q86540783: "review",
        Q93404209: "review",
        Q104445146: "dataset",
        Q106253373: "article",
        Q106645507: "article",
        Q106648287: "article",
        Q98967226: "review",
        Q104898869: "review",
        Q106677599: "review",
        Q106707189: "review",
        Q107610481: "review",
        Q107610646: "review",
        Q108492447: "review",
        Q107560916: "standard",
        Q109560589: "standard",
        Q109829629: "standard",
        Q110040336: "standard",
        Q110404686: "standard",
        Q110421054: "standard",
        Q110822406: "standard",
        Q853547: "standard",
        Q917023: "standard",
        Q917824: "standard",
        Q919510: "standard",
        Q927865: "standard",
        Q932938: "standard",
        Q996023: "standard",
        Q1091326: "standard",
        Q1144899: "standard",
        Q1148887: "standard",
        Q1153670: "standard",
        Q1155472: "standard",
        Q1193215: "standard",
        Q1233868: "standard",
        Q1271511: "standard",
        Q1334738: "standard",
        Q1349015: "standard",
        Q1584581: "standard",
        Q1745938: "standard",
        Q1779838: "standard",
        Q2141493: "standard",
        Q2309650: "standard",
        Q2380440: "standard",
        Q2505632: "standard",
        Q2661442: "standard",
        Q2680559: "standard",
        Q2722351: "standard",
        Q3163103: "standard",
        Q3343904: "standard",
        Q3477575: "standard",
        Q3979666: "standard",
        Q5008573: "standard",
        Q5100562: "standard",
        Q5117123: "standard",
        Q5201840: "standard",
        Q5570849: "standard",
        Q6046311: "standard",
        Q6108055: "standard",
        Q6313217: "standard",
        Q6815743: "standard",
        Q6964137: "standard",
        Q7248507: "standard",
        Q7598374: "standard",
        Q7884737: "standard",
        Q11320552: "standard",
        Q11362401: "standard",
        Q11509377: "standard",
        Q12623246: "standard",
        Q13420342: "standard",
        Q14955693: "standard",
        Q15613582: "standard",
        Q15808102: "standard",
        Q15848903: "standard",
        Q16937237: "standard",
        Q22906682: "standard",
        Q23824424: "standard",
        Q24574728: "standard",
        Q25393707: "standard",
        Q26119883: "standard",
        Q26763979: "standard",
        Q29473497: "standard",
        Q39050366: "standard",
        Q42794186: "standard",
        Q44409829: "standard",
        Q45941145: "dataset",
        Q47119608: "standard",
        Q47477642: "standard",
        Q51885764: "standard",
        Q52162337: "standard",
        Q52162346: "standard",
        Q55593943: "standard",
        Q55755785: "standard",
        Q55871434: "standard",
        Q56277227: "standard",
        Q56751006: "standard",
        Q58184783: "standard",
        Q58467951: "standard",
        Q58468273: "standard",
        Q65037409: "standard",
        Q67035425: "standard",
        Q84957891: "standard",
        Q85785649: "standard",
        Q85875700: "standard",
        Q100708753: "standard",
        Q104213466: "standard",
        Q104634626: "standard",
        Q104948405: "standard",
        Q105047548: "standard",
        Q105989562: "standard",
        Q105989599: "standard",
        Q105990004: "standard",
        Q105990097: "standard",
        Q184528: "speech",
        Q203737: "speech",
        Q261197: "speech",
        Q272281: "speech",
        Q554211: "speech",
        Q55631395: "regulation",
        Q787020: "speech",
        Q805093: "speech",
        Q891813: "speech",
        Q960189: "speech",
        Q111193247: "standard",
        Q62966720: "regulation",
        Q66325840: "regulation",
        Q3074: "regulation",
        Q72389425: "regulation",
        Q862685: "bill",
        Q876477: "bill",
        Q1006544: "bill",
        Q1591172: "bill",
        Q3878684: "bill",
        Q5953169: "bill",
        Q7246224: "bill",
        Q7257705: "bill",
        Q7885007: "bill",
        Q10437243: "bill",
        Q10437244: "bill",
        Q10501549: "bill",
        Q10550020: "bill",
        Q10553236: "bill",
        Q11706145: "bill",
        Q87722315: "regulation",
        Q87745167: "regulation",
        Q88221447: "regulation",
        Q88323877: "regulation",
        Q88761692: "regulation",
        Q90659435: "regulation",
        Q16602140: "bill",
        Q16821677: "bill",
        Q17156988: "bill",
        Q18334806: "bill",
        Q20917883: "bill",
        Q21655772: "bill",
        Q24964968: "bill",
        Q99773426: "regulation",
        Q99902083: "regulation",
        Q28457660: "bill",
        Q1002816: "hearing",
        Q1167776: "hearing",
        Q30587581: "bill",
        Q105635736: "regulation",
        Q105749581: "regulation",
        Q105845569: "regulation",
        Q106570004: "regulation",
        Q106947327: "regulation",
        Q4888807: "hearing",
        Q108696274: "regulation",
        Q109042905: "regulation",
        Q7099379: "hearing",
        Q109934417: "legislation",
        Q110590221: "regulation",
        Q110623683: "regulation",
        Q60797: "speech",
        Q182899: "regulation",
        Q281095: "regulation",
        Q536149: "regulation",
        Q573538: "regulation",
        Q732898: "regulation",
        Q845436: "regulation",
        Q1538155: "regulation",
        Q1698722: "regulation",
        Q2113439: "regulation",
        Q2183290: "regulation",
        Q3027601: "regulation",
        Q4590880: "regulation",
        Q5165640: "regulation",
        Q5411641: "regulation",
        Q6665312: "regulation",
        Q6842880: "regulation",
        Q7075804: "regulation",
        Q7448168: "regulation",
        Q7832074: "regulation",
        Q7832073: "regulation",
        Q7880553: "regulation",
        Q7959501: "regulation",
        Q9050660: "regulation",
        Q9067730: "regulation",
        Q10713442: "regulation",
        Q75447980: "bill",
        Q12049270: "regulation",
        Q17010171: "regulation",
        Q85512917: "bill",
        Q28136600: "regulation",
        Q28525375: "regulation",
        Q106377135: "bill",
        Q106377140: "bill",
        Q106377258: "bill",
        Q106377257: "bill",
        Q110454131: "bill",
        Q50412353: "regulation",
        Q549638: "periodical",
        Q567357: "periodical",
        Q614289: "periodical",
        Q737498: "periodical",
        Q1227078: "periodical",
        Q1250903: "periodical",
        Q1250900: "periodical",
        Q1770383: "periodical",
        Q2065227: "periodical",
        Q2291158: "periodical",
        Q2305295: "periodical",
        Q1121851: "speech",
        Q2586014: "periodical",
        Q1346967: "speech",
        Q1389170: "speech",
        Q2903810: "periodical",
        Q3129162: "periodical",
        Q1832748: "speech",
        Q1833700: "speech",
        Q1840948: "speech",
        Q3186812: "periodical",
        Q1923787: "speech",
        Q1980740: "speech",
        Q3374808: "periodical",
        Q2127053: "speech",
        Q2136176: "speech",
        Q2183050: "speech",
        Q3490128: "periodical",
        Q2694964: "speech",
        Q2895132: "speech",
        Q3030189: "speech",
        Q3030216: "speech",
        Q3040417: "speech",
        Q5209394: "periodical",
        Q4329077: "speech",
        Q4388316: "speech",
        Q6307419: "periodical",
        Q5152362: "speech",
        Q6517555: "periodical",
        Q5264168: "speech",
        Q7506281: "periodical",
        Q7620434: "periodical",
        Q6735422: "speech",
        Q6972133: "speech",
        Q7628679: "speech",
        Q7979513: "speech",
        Q9288110: "periodical",
        Q10623884: "periodical",
        Q10536399: "speech",
        Q12102552: "periodical",
        Q10953735: "speech",
        Q11261492: "speech",
        Q11399933: "speech",
        Q11496736: "speech",
        Q11504413: "speech",
        Q11639251: "speech",
        Q11798867: "speech",
        Q11917341: "speech",
        Q11981659: "speech",
        Q12336939: "speech",
        Q13499711: "speech",
        Q13571862: "speech",
        Q13611058: "speech",
        Q13632631: "speech",
        Q15749620: "periodical",
        Q15853847: "speech",
        Q15877576: "speech",
        Q16962603: "speech",
        Q17010067: "speech",
        Q18907443: "speech",
        Q19776345: "speech",
        Q24634210: "broadcast",
        Q25451361: "periodical",
        Q27963520: "periodical",
        Q28869365: "periodical",
        Q50808469: "periodical",
        Q55089306: "periodical",
        Q55630524: "periodical",
        Q56191193: "speech",
        Q56192445: "speech",
        Q60534272: "periodical",
        Q60061482: "speech",
        Q60780612: "speech",
        Q61051477: "speech",
        Q11032: "periodical",
        Q30849: "periodical",
        Q41298: "periodical",
        Q49850: "periodical",
        Q88462341: "speech",
        Q96574230: "speech",
        Q100115646: "speech",
        Q100701567: "speech",
        Q104816002: "speech",
        Q107268129: "speech",
        Q108070213: "speech",
        Q108453730: "speech",
        Q109036000: "speech",
        Q110340050: "speech",
        Q110629616: "speech",
        Q82753: "dataset",
        Q186588: "dataset",
        Q193351: "dataset",
        Q367680: "dataset",
        Q857354: "dataset",
        Q1172480: "dataset",
        Q1469824: "dataset",
        Q2352616: "dataset",
        Q3219655: "dataset",
        Q3304360: "dataset",
        Q3519041: "dataset",
        Q3997298: "dataset",
        Q5227330: "dataset",
        Q5340806: "dataset",
        Q5465452: "dataset",
        Q6499736: "dataset",
        Q6973929: "dataset",
        Q7079603: "dataset",
        Q7884241: "dataset",
        Q7943567: "dataset",
        Q8034984: "dataset",
        Q20088085: "entry-dictionary",
        Q20088089: "entry-dictionary",
        Q17305522: "dataset",
        Q97466636: "thesis",
        Q18814183: "dataset",
        Q175331: "event",
        Q185220: "event",
        Q189760: "event",
        Q21264512: "dataset",
        Q106276531: "thesis",
        Q107490693: "thesis",
        Q31386861: "dataset",
        Q31388616: "dataset",
        Q111475835: "thesis",
        Q111475860: "thesis",
        Q111476177: "thesis",
        Q32945468: "dataset",
        Q43570203: "dataset",
        Q44106130: "dataset",
        Q50826803: "dataset",
        Q60534442: "periodical",
        Q55387750: "dataset",
        Q67016056: "periodical",
        Q187685: "thesis",
        Q798134: "thesis",
        Q1414362: "thesis",
        Q1884156: "thesis",
        Q1907875: "thesis",
        Q39825: "dataset",
        Q49918: "dataset",
        Q18249952: "thesis",
        Q77231205: "dataset",
        Q77231662: "dataset",
        Q88566195: "periodical",
        Q95916748: "periodical",
        Q96095238: "periodical",
        Q96096738: "periodical",
        Q96225078: "periodical",
        Q96241181: "periodical",
        Q96251079: "periodical",
        Q96358835: "periodical",
        Q96359087: "periodical",
        Q96621011: "periodical",
        Q96635732: "periodical",
        Q98704303: "periodical",
        Q30749496: "thesis",
        Q27259: "event",
        Q27318: "event",
        Q46855: "event",
        Q100282728: "periodical",
        Q91137337: "dataset",
        Q104213422: "periodical",
        Q94709889: "dataset",
        Q104897316: "periodical",
        Q104897459: "periodical",
        Q105353738: "periodical",
        Q105641905: "periodical",
        Q96051494: "dataset",
        Q96213647: "dataset",
        Q97173834: "dataset",
        Q108441504: "periodical",
        Q109819438: "entry-dictionary",
        Q110444999: "periodical",
        Q110479257: "periodical",
        Q101113283: "dataset",
        Q112031239: "periodical",
        Q104819290: "dataset",
        Q105036058: "dataset",
        Q46629343: "thesis",
        Q105342529: "dataset",
        Q106415528: "dataset",
        Q106603459: "dataset",
        Q107986363: "map",
        Q51282441: "thesis",
        Q110670200: "dataset",
        Q110686914: "dataset",
        Q111095542: "dataset",
        Q57262921: "thesis",
        Q200538: "event",
        Q207549: "event",
        Q254832: "event",
        Q261426: "event",
        Q267995: "event",
        Q273039: "event",
        Q273182: "event",
        Q312543: "event",
        Q318862: "event",
        Q378427: "event",
        Q383078: "event",
        Q446354: "event",
        Q450487: "event",
        Q481638: "event",
        Q517909: "event",
        Q558566: "event",
        Q603773: "event",
        Q625994: "event",
        Q635377: "event",
        Q635568: "event",
        Q645767: "event",
        Q657449: "event",
        Q683388: "event",
        Q745325: "event",
        Q812298: "event",
        Q841654: "event",
        Q847696: "event",
        Q860700: "event",
        Q860879: "event",
        Q868291: "event",
        Q885621: "event",
        Q951537: "event",
        Q1004317: "event",
        Q1004895: "event",
        Q1005954: "event",
        Q1006250: "event",
        Q1006694: "event",
        Q1009898: "event",
        Q1070669: "event",
        Q1106728: "event",
        Q1113939: "event",
        Q1135376: "event",
        Q1140043: "event",
        Q1140660: "event",
        Q1160214: "event",
        Q1306940: "event",
        Q1421331: "event",
        Q1431232: "event",
        Q1445650: "event",
        Q1457237: "event",
        Q1539016: "event",
        Q1567963: "performance",
        Q1568205: "event",
        Q1583778: "event",
        Q1643594: "event",
        Q1644573: "event",
        Q1668139: "event",
        Q1673271: "event",
        Q1694159: "event",
        Q1714945: "event",
        Q1733014: "event",
        Q1741794: "event",
        Q1751515: "event",
        Q1802168: "event",
        Q1819008: "broadcast",
        Q1863677: "event",
        Q1938861: "event",
        Q1984492: "event",
        Q2096163: "event",
        Q2136042: "event",
        Q2140455: "event",
        Q2147865: "event",
        Q2175990: "event",
        Q2177993: "event",
        Q2239246: "event",
        Q2253556: "event",
        Q2277475: "event",
        Q2280405: "event",
        Q2312082: "event",
        Q2332228: "event",
        Q2343198: "event",
        Q2441722: "event",
        Q2497972: "event",
        Q2545934: "event",
        Q2558684: "event",
        Q2609546: "event",
        Q2627975: "event",
        Q2681701: "event",
        Q2702632: "event",
        Q2761147: "event",
        Q2855494: "event",
        Q2985198: "event",
        Q2999003: "event",
        Q2999004: "event",
        Q3029385: "event",
        Q3191634: "event",
        Q3194451: "event",
        Q3304140: "event",
        Q3354903: "event",
        Q3428752: "event",
        Q3533809: "event",
        Q3734784: "event",
        Q3765035: "event",
        Q3834389: "event",
        Q3850676: "event",
        Q3918368: "event",
        Q4060300: "event",
        Q4829973: "event",
        Q4941415: "event",
        Q5469948: "event",
        Q5495352: "event",
        Q5953202: "event",
        Q6392390: "event",
        Q6549200: "event",
        Q6739275: "event",
        Q7179683: "event",
        Q7203113: "event",
        Q7205288: "event",
        Q7246244: "event",
        Q7269307: "event",
        Q7502926: "event",
        Q7912065: "event",
        Q10501952: "event",
        Q10712494: "event",
        Q10772859: "event",
        Q11263497: "event",
        Q11555016: "event",
        Q11612751: "event",
        Q12048934: "event",
        Q12508892: "event",
        Q13156501: "event",
        Q13156520: "event",
        Q13406554: "event",
        Q13728461: "event",
        Q13973290: "event",
        Q14208553: "event",
        Q14645228: "event",
        Q14828014: "event",
        Q15051339: "event",
        Q15116915: "event",
        Q15238777: "event",
        Q15275719: "event",
        Q15633604: "event",
        Q15726688: "event",
        Q15804130: "event",
        Q15820322: "event",
        Q16022392: "event",
        Q16510064: "event",
        Q16743915: "event",
        Q17193309: "event",
        Q17414829: "event",
        Q18915726: "event",
        Q20182967: "event",
        Q20649656: "event",
        Q20823612: "event",
        Q21358050: "event",
        Q21550582: "event",
        Q21893675: "event",
        Q22667754: "event",
        Q23058953: "event",
        Q23579700: "book",
        Q24030666: "event",
        Q24037741: "event",
        Q24273026: "event",
        Q24870096: "event",
        Q26883550: "event",
        Q27690146: "event",
        Q27968055: "event",
        Q28924760: "event",
        Q29052255: "event",
        Q29156916: "event",
        Q30111082: "event",
        Q32948345: "event",
        Q33385772: "event",
        Q42880958: "event",
        Q43099500: "event",
        Q43100730: "event",
        Q44532072: "event",
        Q47136026: "event",
        Q47150471: "event",
        Q50744367: "event",
        Q52260246: "event",
        Q55604548: "event",
        Q56298858: "event",
        Q58687420: "event",
        Q60221005: "event",
        Q63522650: "event",
        Q63523297: "event",
        Q64242378: "event",
        Q64348974: "event",
        Q64800812: "event",
        Q65064390: "event",
        Q65236448: "event",
        Q65395256: "event",
        Q65598177: "event",
        Q66309059: "event",
        Q67421136: "event",
        Q67817876: "event",
        Q68157611: "event",
        Q146071: "legal_case",
        Q177253: "legal_case",
        Q108886259: "event",
        Q108900992: "event",
        Q480498: "legal_case",
        Q697327: "legal_case",
        Q1124012: "legal_case",
        Q110573458: "event",
        Q2144800: "legal_case",
        Q110701040: "event",
        Q110799181: "event",
        Q2823677: "legal_case",
        Q111657387: "event",
        Q111823426: "event",
        Q112064134: "event",
        Q3771751: "legal_case",
        Q4116621: "legal_case",
        Q5467543: "legal_case",
        Q6942426: "legal_case",
        Q9283157: "legal_case",
        Q10706788: "legal_case",
        Q11519624: "legal_case",
        Q11827307: "legal_case",
        Q16738832: "legal_case",
        Q18536127: "legal_case",
        Q19692072: "legal_case",
        Q19902850: "legal_case",
        Q19930933: "legal_case",
        Q234262: "chapter",
        Q23759311: "legal_case",
        Q104029957: "entry",
        Q26885514: "legal_case",
        Q106377152: "entry",
        Q5555914: "chapter",
        Q240862: "motion_picture",
        Q308463: "book",
        Q680458: "book",
        Q778580: "book",
        Q1224889: "book",
        Q30637971: "legal_case",
        Q1341283: "book",
        Q1670252: "book",
        Q2030763: "book",
        Q2031291: "book",
        Q2338167: "book",
        Q2564985: "book",
        Q2568454: "book",
        Q2900369: "book",
        Q3901046: "book",
        Q5281629: "book",
        Q5394558: "book",
        Q12825884: "chapter",
        Q9250355: "book",
        Q9250353: "book",
        Q9250357: "book",
        Q9379159: "book",
        Q21481766: "chapter",
        Q26989423: "chapter",
        Q29154515: "chapter",
        Q56704157: "legal_case",
        Q1417174: "entry",
        Q60845736: "legal_case",
        Q61221204: "legal_case",
        Q64796768: "legal_case",
        Q43148525: "chapter",
        Q43180447: "chapter",
        Q10376649: "entry",
        Q53460949: "chapter",
        Q76647964: "legal_case",
        Q85821037: "legal_case",
        Q96251253: "legal_case",
        Q96482904: "legal_case",
        Q97451302: "legal_case",
        Q97451648: "legal_case",
        Q97451722: "legal_case",
        Q71537878: "event",
        Q105499756: "legal_case",
        Q76548380: "event",
        Q109018958: "legal_case",
        Q84562343: "event",
        Q85743284: "event",
        Q89564537: "event",
        Q96487369: "event",
        Q96500749: "event",
        Q97521133: "event",
        Q102854363: "event",
        Q104215654: "event",
        Q104411569: "event",
        Q104418497: "event",
        Q105061621: "event",
        Q105946019: "event",
        Q106691960: "event",
        Q106763129: "event",
        Q106892156: "event",
        Q108308625: "event",
        Q309481: "article-newspaper",
        Q2495037: "article-newspaper",
        Q111749705: "book",
        Q2602337: "article-newspaper",
        Q3326038: "article-newspaper",
        Q5001223: "article-newspaper",
        Q5149212: "article-newspaper",
        Q3503343: "post",
        Q4770042: "post",
        Q17628188: "article-newspaper",
        Q18339884: "article-newspaper",
        Q15646675: "post",
        Q28502153: "article-newspaper",
        Q25345994: "post",
        Q10379956: "book",
        Q10898227: "book",
        Q11060274: "book",
        Q11696048: "book",
        Q11696049: "book",
        Q15994174: "book",
        Q16937116: "book",
        Q17578748: "book",
        Q20826013: "book",
        Q20850604: "book",
        Q21112633: "book",
        Q56119332: "post-weblog",
        Q57988118: "post",
        Q66338351: "article-newspaper",
        Q39811647: "book",
        Q59908: "article-newspaper",
        Q63412991: "post",
        Q42793760: "book",
        Q66058204: "post",
        Q52147067: "webpage",
        Q55089312: "dataset",
        Q55155149: "book",
        Q87849013: "article-newspaper",
        Q58482601: "book",
        Q59466300: "book",
        Q59466853: "book",
        Q60997816: "software",
        Q84444779: "post",
        Q84497003: "post",
        Q65770270: "book",
        Q65772139: "book",
        Q65772760: "book",
        Q65920672: "book",
        Q428: "book",
        Q482: "book",
        Q676: "book",
        Q1004: "book",
        Q97487580: "post",
        Q104563003: "article-newspaper",
        Q104758629: "article-newspaper",
        Q108837133: "article-newspaper",
        Q108970988: "article-newspaper",
        Q104717411: "post",
        Q83378585: "book",
        Q106367310: "periodical",
        Q85806118: "book",
        Q110875209: "post",
        Q110888858: "dataset",
        Q111547222: "post",
        Q111602731: "post",
        Q111629695: "post",
        Q111630696: "post",
        Q111638057: "post",
        Q111660285: "post",
        Q111678745: "post",
        Q111678755: "post",
        Q111678758: "post",
        Q111678771: "post",
        Q111678776: "post",
        Q111691879: "post",
        Q112058486: "post",
        Q112058774: "post",
        Q92275711: "book",
        Q96636361: "book",
        Q101113149: "book",
        Q104804934: "book",
        Q104804938: "book",
        Q106053322: "periodical",
        Q106373589: "book",
        Q106373713: "book",
        Q106530803: "book",
        Q107044688: "book",
        Q107528122: "book",
        Q107529864: "book",
        Q107549014: "book",
        Q108744804: "book",
        Q83367: "book",
        Q113013: "book",
        Q114375: "book",
        Q124761: "book",
        Q131084: "book",
        Q133492: "book",
        Q182659: "book",
        Q185363: "book",
        Q185598: "book",
        Q189867: "book",
        Q234343: "book",
        Q268416: "book",
        Q277759: "book",
        Q354326: "book",
        Q727413: "book",
        Q757370: "book",
        Q867335: "book",
        Q870452: "book",
        Q920285: "book",
        Q1035168: "book",
        Q1056378: "book",
        Q1072723: "book",
        Q1093312: "book",
        Q1097273: "book",
        Q1132324: "book",
        Q1164267: "book",
        Q1194040: "book",
        Q1310296: "book",
        Q1412507: "book",
        Q1425198: "book",
        Q1440453: "book",
        Q1472357: "book",
        Q1497854: "book",
        Q1517777: "book",
        Q1585442: "book",
        Q1617445: "book",
        Q1663071: "book",
        Q1771692: "book",
        Q1790870: "book",
        Q1852950: "book",
        Q2012083: "book",
        Q2219343: "book",
        Q2250271: "book",
        Q2376293: "book",
        Q2477865: "book",
        Q2916240: "book",
        Q3025978: "book",
        Q3250561: "book",
        Q3328821: "book",
        Q3445695: "book",
        Q3691017: "book",
        Q3739522: "book",
        Q4167727: "book",
        Q4380077: "book",
        Q4530655: "book",
        Q4671704: "book",
        Q5185279: "book",
        Q5977103: "book",
        Q7679101: "book",
        Q7958155: "book",
        Q9380277: "book",
        Q10432278: "book",
        Q10529868: "book",
        Q11712374: "book",
        Q12047746: "book",
        Q12295065: "book",
        Q12617225: "book",
        Q12765855: "book",
        Q12799318: "book",
        Q13408937: "book",
        Q16681629: "book",
        Q16909089: "book",
        Q17009106: "book",
        Q17345318: "book",
        Q17518870: "book",
        Q18536349: "book",
        Q19904733: "book",
        Q20540385: "book",
        Q24906264: "book",
        Q30920856: "book",
        Q38072107: "book",
        Q42109240: "book",
        Q58483083: "book",
        Q58900620: "book",
        Q1661: "book",
        Q1845: "book",
        Q8261: "book",
        Q25372: "book",
        Q25379: "book",
        Q34990: "book",
        Q39950: "book",
        Q49084: "book",
        Q78814135: "book",
        Q109553089: "book",
        Q109588548: "book",
        Q109806598: "book",
        Q110295240: "book",
        Q113093: "report",
        Q223729: "report",
        Q524352: "report",
        Q110984751: "book",
        Q111042372: "book",
        Q628175: "report",
        Q699735: "report",
        Q111219279: "book",
        Q830689: "report",
        Q836925: "report",
        Q855232: "report",
        Q1004391: "report",
        Q111528869: "book",
        Q111834363: "book",
        Q1473099: "report",
        Q1554400: "report",
        Q1668727: "report",
        Q1926270: "report",
        Q2054229: "report",
        Q2135248: "report",
        Q2206516: "report",
        Q2307704: "report",
        Q2309880: "report",
        Q2677586: "report",
        Q2782326: "report",
        Q3000100: "report",
        Q3099732: "report",
        Q3926217: "report",
        Q4064750: "report",
        Q4343952: "report",
        Q4390057: "report",
        Q4690599: "report",
        Q4769694: "report",
        Q4951615: "report",
        Q5133397: "report",
        Q5915865: "report",
        Q6451276: "report",
        Q6457082: "report",
        Q7671191: "report",
        Q7918438: "report",
        Q9770904: "report",
        Q207601: "broadcast",
        Q10585384: "report",
        Q1190246: "broadcast",
        Q1241826: "broadcast",
        Q11640080: "report",
        Q1452460: "broadcast",
        Q11798615: "report",
        Q1555508: "broadcast",
        Q1983062: "broadcast",
        Q2155186: "broadcast",
        Q15629444: "report",
        Q15781350: "report",
        Q17090395: "report",
        Q19355445: "report",
        Q23954833: "report",
        Q27027169: "report",
        Q30012802: "report",
        Q30314941: "report",
        Q41274869: "report",
        Q47123453: "report",
        Q47126552: "report",
        Q56013707: "report",
        Q59387148: "report",
        Q64548048: "report",
        Q66104273: "report",
        Q60730271: "collection",
        Q15416: "broadcast",
        Q85653251: "report",
        Q88380217: "report",
        Q88802020: "report",
        Q96179541: "report",
        Q98550843: "report",
        Q101096466: "report",
        Q102391350: "report",
        Q104605006: "report",
        Q104900597: "report",
        Q105394996: "report",
        Q106034900: "report",
        Q106540977: "report",
        Q106908570: "report",
        Q107023179: "report",
        Q108378344: "report",
        Q109466918: "report",
        Q109768337: "report",
        Q110589838: "report",
        Q104976141: "collection",
        Q104977294: "collection",
        Q103820137: "book",
        Q105685558: "book",
        Q105688416: "book",
        Q105709657: "manuscript",
        Q108419088: "book",
        Q1347686: "article-journal",
        Q1504425: "article-journal",
        Q2774197: "article-journal",
        Q2903479: "post-weblog",
        Q7301211: "article-journal",
        Q7316896: "article-journal",
        Q7318358: "article-journal",
        Q10885494: "paper-conference",
        Q2178268: "broadcast",
        Q2435927: "broadcast",
        Q3588923: "broadcast",
        Q15706459: "article-journal",
        Q5177022: "broadcast",
        Q5401282: "broadcast",
        Q6863157: "broadcast",
        Q18918145: "article-journal",
        Q119391: "software",
        Q506883: "software",
        Q1037852: "software",
        Q1144323: "software",
        Q10709386: "broadcast",
        Q11079003: "broadcast",
        Q11293915: "broadcast",
        Q11325507: "broadcast",
        Q11334197: "broadcast",
        Q11351206: "broadcast",
        Q11378697: "broadcast",
        Q11464636: "broadcast",
        Q11483878: "broadcast",
        Q11491683: "broadcast",
        Q3772627: "software",
        Q15852671: "broadcast",
        Q9011149: "software",
        Q182357: "book",
        Q202208: "book",
        Q250090: "book",
        Q288909: "book",
        Q474090: "book",
        Q568286: "book",
        Q580340: "book",
        Q596594: "book",
        Q656042: "book",
        Q18458820: "broadcast",
        Q742530: "book",
        Q761529: "book",
        Q777828: "book",
        Q858271: "book",
        Q895311: "book",
        Q919982: "book",
        Q968679: "book",
        Q1069928: "book",
        Q1091366: "book",
        Q1113204: "book",
        Q1125196: "book",
        Q1161145: "book",
        Q1265067: "book",
        Q1292502: "book",
        Q1344317: "book",
        Q1384424: "book",
        Q1384433: "book",
        Q1428637: "book",
        Q1491684: "book",
        Q1494806: "book",
        Q20712193: "software",
        Q20825628: "software",
        Q20983788: "software",
        Q21125433: "software",
        Q27021481: "software",
        Q30314788: "software",
        Q56478376: "article-journal",
        Q58632367: "paper-conference",
        Q58898396: "article-journal",
        Q58900805: "article-journal",
        Q58901470: "article-journal",
        Q58902427: "article-journal",
        Q59458414: "article-journal",
        Q39999225: "software",
        Q60535861: "article-journal",
        Q52990223: "software",
        Q61953751: "broadcast",
        Q56191572: "software",
        Q82969330: "article-journal",
        Q84572095: "post-weblog",
        Q85521961: "entry-encyclopedia",
        Q388: "software",
        Q92998777: "article-journal",
        Q93003322: "article-journal",
        Q31411: "book",
        Q99770806: "article-journal",
        Q101116078: "article-journal",
        Q108196115: "article-journal",
        Q96756422: "broadcast",
        Q110716513: "article-journal",
        Q101494737: "broadcast",
        Q104652127: "software",
        Q108540395: "software",
        Q1499591: "book",
        Q1505583: "book",
        Q1510912: "book",
        Q1601739: "book",
        Q1613812: "book",
        Q1683305: "book",
        Q1784354: "book",
        Q1808721: "book",
        Q1980139: "book",
        Q2058791: "book",
        Q2158741: "book",
        Q2293670: "book",
        Q2578278: "book",
        Q2621904: "book",
        Q2671604: "book",
        Q2735649: "book",
        Q2891671: "book",
        Q3099146: "book",
        Q3149507: "book",
        Q3236984: "book",
        Q3315360: "book",
        Q3401045: "book",
        Q3401086: "book",
        Q3401097: "book",
        Q3401107: "book",
        Q3401112: "book",
        Q3426697: "book",
        Q3440974: "book",
        Q3556118: "book",
        Q3642905: "book",
        Q3684595: "book",
        Q3718743: "book",
        Q3906959: "book",
        Q3906957: "book",
        Q3906966: "book",
        Q3906965: "book",
        Q3906975: "book",
        Q3943110: "book",
        Q3958013: "book",
        Q4024576: "book",
        Q4112129: "book",
        Q4481123: "book",
        Q4484338: "book",
        Q4750852: "book",
        Q4907378: "book",
        Q4984279: "book",
        Q5098270: "book",
        Q5145848: "book",
        Q5179572: "book",
        Q5493881: "book",
        Q5643057: "book",
        Q5692451: "book",
        Q5774336: "book",
        Q6003397: "book",
        Q6026483: "book",
        Q6043568: "book",
        Q6054894: "book",
        Q6081426: "book",
        Q6082779: "book",
        Q6102109: "book",
        Q6154079: "book",
        Q6168405: "book",
        Q6496542: "book",
        Q6888692: "book",
        Q7084639: "book",
        Q7099402: "book",
        Q7143050: "book",
        Q7168247: "book",
        Q7207403: "book",
        Q7267789: "book",
        Q7316515: "book",
        Q7413883: "book",
        Q7565898: "book",
        Q7697891: "book",
        Q7709192: "book",
        Q7824966: "book",
        Q7928675: "book",
        Q9144651: "book",
        Q9210656: "book",
        Q11869215: "book",
        Q11917349: "book",
        Q12046027: "book",
        Q12218857: "book",
        Q12361583: "book",
        Q12483706: "manuscript",
        Q12503055: "book",
        Q12798580: "book",
        Q12799539: "book",
        Q12982033: "book",
        Q13134398: "book",
        Q13157313: "book",
        Q13646664: "book",
        Q14472342: "book",
        Q14524057: "book",
        Q14634492: "book",
        Q15141535: "book",
        Q15720097: "book",
        Q15805624: "book",
        Q15880899: "book",
        Q109353029: "book",
        Q109570005: "book",
        Q110733987: "book",
        Q149537: "book",
        Q181283: "book",
        Q387284: "book",
        Q438464: "book",
        Q562214: "book",
        Q725377: "book",
        Q754669: "book",
        Q838795: "book",
        Q881642: "book",
        Q906229: "book",
        Q1053765: "book",
        Q1114502: "book",
        Q1124088: "book",
        Q1366174: "book",
        Q1471388: "book",
        Q1474729: "book",
        Q1479970: "book",
        Q1679746: "book",
        Q1782964: "book",
        Q1866937: "book",
        Q2178671: "book",
        Q2268050: "book",
        Q2292302: "book",
        Q2342463: "book",
        Q2359975: "book",
        Q2410710: "book",
        Q2620972: "book",
        Q2816906: "book",
        Q2882208: "book",
        Q2882223: "book",
        Q2882221: "book",
        Q2882226: "book",
        Q2882230: "book",
        Q2882235: "book",
        Q2882233: "book",
        Q3138364: "book",
        Q3185361: "periodical",
        Q3285662: "book",
        Q3314991: "book",
        Q3325189: "book",
        Q3496994: "book",
        Q3543088: "book",
        Q3817331: "book",
        Q4262998: "book",
        Q4505975: "book",
        Q4971317: "book",
        Q7261479: "book",
        Q10913337: "book",
        Q13403571: "book",
        Q15890340: "book",
        Q16933953: "book",
        Q17030485: "book",
        Q19275887: "book",
        Q19310814: "book",
        Q19366069: "book",
        Q19628984: "book",
        Q20106666: "book",
        Q20523717: "book",
        Q20646003: "book",
        Q20857448: "book",
        Q22936789: "book",
        Q24055548: "book",
        Q24947942: "book",
        Q25536258: "book",
        Q26906566: "book",
        Q27589951: "book",
        Q29512782: "book",
        Q55689884: "book",
        Q55738783: "book",
        Q56239988: "book",
        Q65064557: "book",
        Q67555086: "book",
        Q8274: "book",
        Q38801: "book",
        Q70600066: "book",
        Q70686944: "book",
        Q70863928: "book",
        Q71842123: "book",
        Q72572910: "book",
        Q87805180: "book",
        Q95984504: "book",
        Q97213031: "book",
        Q97704215: "book",
        Q99395170: "book",
        Q101528367: "book",
        Q102316242: "book",
        Q103317810: "book",
        Q104096289: "book",
        Q105898065: "book",
        Q106629230: "book",
        Q106771414: "book",
        Q107226151: "book",
        Q107971457: "book",
        Q108759375: "book",
        Q108930504: "book",
        Q110894356: "book",
        Q111753071: "book",
        Q141126: "book",
        Q188007: "book",
        Q545533: "book",
        Q591099: "book",
        Q749674: "book",
        Q759708: "book",
        Q849692: "book",
        Q937691: "book",
        Q1253572: "book",
        Q1397862: "book",
        Q1669566: "book",
        Q1754210: "book",
        Q2154673: "book",
        Q2351286: "book",
        Q2363988: "book",
        Q3011071: "book",
        Q3094820: "book",
        Q3133334: "book",
        Q3321260: "book",
        Q3640435: "book",
        Q3682002: "book",
        Q3926615: "book",
        Q3999022: "book",
        Q4416531: "book",
        Q5043410: "book",
        Q5110307: "book",
        Q5648335: "book",
        Q5716961: "book",
        Q5745599: "book",
        Q5771262: "book",
        Q5821209: "book",
        Q5821600: "book",
        Q5822241: "book",
        Q5855864: "book",
        Q5905220: "book",
        Q5939750: "book",
        Q5946823: "book",
        Q5980911: "book",
        Q5981176: "book",
        Q6003212: "book",
        Q6112440: "book",
        Q6160146: "book",
        Q6398529: "book",
        Q6416261: "book",
        Q6887078: "book",
        Q7970827: "book",
        Q9002297: "book",
        Q9077888: "book",
        Q9646025: "book",
        Q10379766: "book",
        Q10616457: "book",
        Q11664268: "book",
        Q11892511: "book",
        Q12818502: "book",
        Q13134959: "book",
        Q13136081: "book",
        Q13566156: "book",
        Q14406742: "book",
        Q14466421: "book",
        Q16516572: "book",
        Q17351671: "book",
        Q17630544: "book",
        Q18384470: "book",
        Q20100282: "book",
        Q21081491: "book",
        Q24897257: "software",
        Q25616496: "book",
        Q47152505: "book",
        Q48977725: "book",
        Q55831886: "book",
        Q56305481: "book",
        Q56577736: "book",
        Q56855534: "book",
        Q60032729: "book",
        Q61744282: "book",
        Q61745175: "book",
        Q63888811: "book",
        Q67801963: "periodical",
        Q74411368: "book",
        Q74413080: "book",
        Q75530255: "book",
        Q76874795: "book",
        Q80356954: "book",
        Q80797877: "book",
        Q83962725: "book",
        Q90374281: "book",
        Q98608820: "book",
        Q104096788: "book",
        Q105758835: "book",
        Q108884806: "book",
        Q108904764: "book",
        Q108905728: "book",
        Q108905774: "book",
        Q108905781: "book",
        Q65201540: "regulation",
        Q21209375: "book",
        Q28134954: "book",
        Q448457: "regulation",
        Q33815646: "regulation",
        Q96438794: "book",
        Q98526825: "book",
        Q101625455: "book",
        Q186602: "book",
        Q192239: "book",
        Q208505: "book",
        Q223945: "book",
        Q286328: "book",
        Q319226: "book",
        Q465821: "book",
        Q512207: "book",
        Q583064: "book",
        Q583976: "book",
        Q718972: "book",
        Q740919: "book",
        Q747381: "book",
        Q858330: "book",
        Q884863: "book",
        Q908667: "book",
        Q948970: "book",
        Q1139378: "book",
        Q1156871: "book",
        Q1325447: "book",
        Q1347363: "book",
        Q1429059: "book",
        Q1469684: "book",
        Q1470773: "book",
        Q1491680: "book",
        Q1498403: "book",
        Q1593709: "book",
        Q1619888: "book",
        Q1799548: "book",
        Q2016518: "book",
        Q2134778: "book",
        Q2246055: "book",
        Q2358301: "book",
        Q2421000: "book",
        Q2481494: "book",
        Q2520572: "book",
        Q2561390: "book",
        Q2599412: "book",
        Q2802102: "book",
        Q2883183: "book",
        Q3048395: "book",
        Q3440809: "book",
        Q3440917: "book",
        Q3440956: "book",
        Q142043: "periodical",
        Q190705: "periodical",
        Q329669: "periodical",
        Q109581872: "book",
        Q442927: "periodical",
        Q569348: "periodical",
        Q665319: "periodical",
        Q738377: "periodical",
        Q832165: "periodical",
        Q895089: "periodical",
        Q1110794: "periodical",
        Q1278984: "periodical",
        Q1336693: "periodical",
        Q1416653: "periodical",
        Q1449648: "periodical",
        Q1868552: "periodical",
        Q1935225: "periodical",
        Q2006125: "periodical",
        Q2016362: "periodical",
        Q2048876: "periodical",
        Q2138556: "periodical",
        Q2328176: "periodical",
        Q2390658: "periodical",
        Q111591151: "book",
        Q2466157: "periodical",
        Q2497638: "periodical",
        Q2966795: "periodical",
        Q3186859: "periodical",
        Q3186988: "periodical",
        Q3535851: "periodical",
        Q3899141: "periodical",
        Q4736543: "periodical",
        Q5104179: "periodical",
        Q5155035: "periodical",
        Q5155101: "periodical",
        Q5276122: "periodical",
        Q5369583: "periodical",
        Q5469882: "periodical",
        Q6158891: "periodical",
        Q6841189: "periodical",
        Q3440959: "book",
        Q3440961: "book",
        Q3454581: "book",
        Q3940779: "book",
        Q3940776: "book",
        Q4375672: "book",
        Q4376526: "book",
        Q5067934: "book",
        Q5110346: "book",
        Q5248657: "book",
        Q5456296: "book",
        Q5528690: "book",
        Q6045390: "book",
        Q6045948: "book",
        Q6045959: "book",
        Q6045956: "book",
        Q6619804: "book",
        Q6915338: "book",
        Q6960620: "book",
        Q7064585: "book",
        Q7451276: "book",
        Q7797293: "book",
        Q10379557: "book",
        Q10646806: "book",
        Q10992055: "book",
        Q11282935: "book",
        Q11360573: "book",
        Q11452132: "book",
        Q11661562: "book",
        Q11825892: "book",
        Q11939005: "book",
        Q12075815: "book",
        Q12197074: "book",
        Q17009296: "book",
        Q17010642: "book",
        Q20225034: "book",
        Q20358335: "book",
        Q20792268: "book",
        Q21081921: "book",
        Q21615367: "book",
        Q26225474: "book",
        Q26906556: "book",
        Q26913048: "book",
        Q26987767: "book",
        Q27217074: "book",
        Q31074013: "book",
        Q49162829: "book",
        Q51780389: "book",
        Q55705111: "book",
        Q55705849: "book",
        Q56273349: "book",
        Q62397960: "book",
        Q71399826: "book",
        Q72996181: "book",
        Q89650533: "book",
        Q95994112: "book",
        Q98538409: "book",
        Q104543384: "book",
        Q106771238: "book",
        Q7019804: "periodical",
        Q7426758: "periodical",
        Q7531230: "periodical",
        Q10493961: "periodical",
        Q11313190: "periodical",
        Q11389521: "periodical",
        Q11511502: "periodical",
        Q11968661: "periodical",
        Q12046361: "periodical",
        Q16853516: "periodical",
        Q17016787: "periodical",
        Q19046104: "periodical",
        Q19138837: "periodical",
        Q20850562: "periodical",
        Q20919310: "periodical",
        Q22981456: "periodical",
        Q27156322: "periodical",
        Q31075044: "periodical",
        Q49094509: "periodical",
        Q56296973: "periodical",
        Q56824093: "periodical",
        Q62470341: "periodical",
        Q72717073: "periodical",
        Q87062808: "periodical",
        Q98785129: "periodical",
        Q104148637: "periodical",
        Q104459845: "periodical",
        Q106508612: "periodical",
        Q106634743: "periodical",
        Q106635283: "periodical",
        Q106650857: "periodical",
        Q106650895: "periodical",
        Q106650967: "periodical",
        Q106651073: "periodical",
        Q106651089: "periodical",
        Q106651150: "periodical",
        Q106651156: "periodical",
        Q106651322: "periodical",
        Q106651333: "periodical",
        Q106651338: "periodical",
        Q106651350: "periodical",
        Q106651372: "periodical",
        Q106651387: "periodical",
        Q106651430: "periodical",
        Q106652786: "periodical",
        Q106652971: "periodical",
        Q106652977: "periodical",
        Q106664582: "periodical",
        Q106668171: "periodical",
        Q106668248: "periodical",
        Q106668332: "periodical",
        Q106668420: "periodical",
        Q106668471: "periodical",
        Q106668535: "periodical",
        Q106668608: "periodical",
        Q106668646: "periodical",
        Q106671524: "periodical",
        Q106676147: "periodical",
        Q106676186: "periodical",
        Q106676275: "periodical",
        Q106676417: "periodical",
        Q106677807: "periodical",
        Q106677862: "periodical",
        Q106678098: "periodical",
        Q106678195: "periodical",
        Q106687540: "periodical",
        Q106687570: "periodical",
        Q106687639: "periodical",
        Q106687644: "periodical",
        Q106687653: "periodical",
        Q107170444: "periodical",
        Q107170468: "periodical",
        Q107170485: "periodical",
        Q107170506: "periodical",
        Q107170655: "periodical",
        Q107171978: "periodical",
        Q107171982: "periodical",
        Q107171980: "periodical",
        Q107171989: "periodical",
        Q107178453: "periodical",
        Q107181454: "periodical",
        Q107181979: "periodical",
        Q107182188: "periodical",
        Q107182194: "periodical",
        Q107182201: "periodical",
        Q107182208: "periodical",
        Q107182322: "periodical",
        Q107182456: "periodical",
        Q107183119: "periodical",
        Q107183122: "periodical",
        Q107183138: "periodical",
        Q107183145: "periodical",
        Q107183151: "periodical",
        Q107208914: "periodical",
        Q107208916: "periodical",
        Q107227701: "periodical",
        Q107236569: "periodical",
        Q107236603: "periodical",
        Q107236849: "periodical",
        Q182415: "broadcast",
        Q336059: "broadcast",
        Q336181: "broadcast",
        Q358942: "broadcast",
        Q390220: "broadcast",
        Q431102: "broadcast",
        Q622812: "broadcast",
        Q661436: "broadcast",
        Q846662: "broadcast",
        Q854995: "dataset",
        Q874342: "broadcast",
        Q986699: "broadcast",
        Q1172910: "dataset",
        Q1261214: "broadcast",
        Q1278356: "broadcast",
        Q1358344: "broadcast",
        Q1407240: "broadcast",
        Q1407245: "broadcast",
        Q1464125: "broadcast",
        Q1472288: "broadcast",
        Q1619206: "broadcast",
        Q1774527: "broadcast",
        Q1857766: "broadcast",
        Q1924371: "broadcast",
        Q1948292: "broadcast",
        Q2081003: "broadcast",
        Q2231383: "broadcast",
        Q2304946: "broadcast",
        Q2456999: "broadcast",
        Q2605607: "broadcast",
        Q2794180: "broadcast",
        Q3464665: "broadcast",
        Q3744532: "broadcast",
        Q5243465: "broadcast",
        Q5398426: "broadcast",
        Q5428822: "broadcast",
        Q5434357: "broadcast",
        Q6057169: "broadcast",
        Q6495169: "broadcast",
        Q6626746: "broadcast",
        Q7696995: "broadcast",
        Q180712: "software",
        Q193345: "software",
        Q309396: "software",
        Q612694: "software",
        Q635758: "standard",
        Q638079: "software",
        Q846726: "software",
        Q926331: "software",
        Q1140037: "software",
        Q1154669: "software",
        Q1291200: "software",
        Q1357381: "software",
        Q1522059: "software",
        Q10594993: "broadcast",
        Q10676514: "broadcast",
        Q1856893: "software",
        Q11086742: "broadcast",
        Q11492855: "broadcast",
        Q11504513: "broadcast",
        Q3062122: "software",
        Q4839599: "software",
        Q4976857: "software",
        Q6407569: "software",
        Q13090306: "software",
        Q13225925: "software",
        Q15401472: "software",
        Q16947775: "software",
        Q18649598: "software",
        Q19365656: "software",
        Q24896672: "software",
        Q25389983: "software",
        Q25496701: "software",
        Q28134936: "software",
        Q30592326: "software",
        Q56064107: "software",
        Q485: "software",
        Q14639: "software",
        Q14644: "software",
        Q14645: "software",
        Q107236916: "periodical",
        Q107237013: "periodical",
        Q107258494: "periodical",
        Q107258644: "periodical",
        Q107258714: "periodical",
        Q107258724: "periodical",
        Q107259317: "periodical",
        Q109420226: "periodical",
        Q110204935: "periodical",
        Q110408907: "periodical",
        Q111747619: "periodical",
        Q99936926: "software",
        Q105626027: "software",
        Q106255432: "software",
        Q5296: "webpage",
        Q108546259: "software",
        Q256900: "software",
        Q350882: "software",
        Q1138815: "software",
        Q1607417: "software",
        Q1891170: "software",
        Q2713778: "software",
        Q11664270: "broadcast",
        Q3775098: "software",
        Q3819460: "software",
        Q3909888: "software",
        Q14346334: "broadcast",
        Q14942329: "broadcast",
        Q15836186: "broadcast",
        Q7000900: "software",
        Q15903379: "broadcast",
        Q16068806: "broadcast",
        Q16206641: "broadcast",
        Q7441651: "software",
        Q16913666: "broadcast",
        Q17145545: "broadcast",
        Q17355003: "broadcast",
        Q378914: "book",
        Q521983: "book",
        Q533803: "book",
        Q697133: "book",
        Q18640746: "broadcast",
        Q859161: "dataset",
        Q861712: "book",
        Q897755: "book",
        Q932934: "book",
        Q975413: "book",
        Q1048400: "book",
        Q1224346: "book",
        Q10123170: "software",
        Q1304223: "book",
        Q1391417: "book",
        Q1455182: "book",
        Q1575315: "book",
        Q1656835: "book",
        Q1722340: "book",
        Q1820290: "book",
        Q19845560: "broadcast",
        Q2134855: "book",
        Q19973797: "broadcast",
        Q2191807: "book",
        Q2210568: "book",
        Q2361647: "dataset",
        Q2394934: "book",
        Q20220309: "broadcast",
        Q2640207: "book",
        Q2648129: "book",
        Q2843365: "book",
        Q21044675: "broadcast",
        Q21191270: "broadcast",
        Q21217315: "broadcast",
        Q3808854: "book",
        Q4428939: "book",
        Q4492301: "book",
        Q4750851: "book",
        Q5805540: "book",
        Q6486734: "book",
        Q25090976: "broadcast",
        Q27912070: "broadcast",
        Q19603862: "software",
        Q28664032: "broadcast",
        Q34682961: "broadcast",
        Q46706005: "broadcast",
        Q61704031: "broadcast",
        Q63585458: "broadcast",
        Q64224679: "broadcast",
        Q65128215: "broadcast",
        Q65212398: "broadcast",
        Q66382991: "software",
        Q8096: "book",
        Q93992677: "broadcast",
        Q97496299: "broadcast",
        Q91136116: "software",
        Q101716172: "broadcast",
        Q101720774: "broadcast",
        Q101761842: "broadcast",
        Q101860688: "broadcast",
        Q101863750: "broadcast",
        Q101895799: "broadcast",
        Q101898470: "broadcast",
        Q102227549: "broadcast",
        Q102430681: "broadcast",
        Q104034099: "broadcast",
        Q104223533: "broadcast",
        Q106942341: "broadcast",
        Q107040579: "broadcast",
        Q109736732: "broadcast",
        Q110436441: "broadcast",
        Q110757460: "broadcast",
        Q110940888: "motion_picture",
        Q111534108: "broadcast",
        Q107637706: "software",
        Q112076616: "software",
        Q193977: "motion_picture",
        Q245056: "motion_picture",
        Q109529255: "book",
        Q109529378: "book",
        Q423504: "motion_picture",
        Q735478: "motion_picture",
        Q972687: "motion_picture",
        Q110324066: "book",
        Q111096611: "book",
        Q2757149: "motion_picture",
        Q6942568: "motion_picture",
        Q7751682: "motion_picture",
        Q7832972: "motion_picture",
        Q7841716: "motion_picture",
        Q11900986: "motion_picture",
        Q11997526: "motion_picture",
        Q17517379: "motion_picture",
        Q20647642: "motion_picture",
        Q20667187: "motion_picture",
        Q29168811: "motion_picture",
        Q405584: "book",
        Q612513: "book",
        Q760110: "book",
        Q854836: "book",
        Q856327: "book",
        Q972769: "book",
        Q1050848: "book",
        Q1194583: "book",
        Q1255621: "book",
        Q1255669: "book",
        Q1310759: "book",
        Q1349065: "book",
        Q1370860: "book",
        Q1548170: "book",
        Q1582333: "book",
        Q1589402: "book",
        Q1649473: "book",
        Q1656714: "book",
        Q1660122: "book",
        Q1761274: "book",
        Q1897671: "book",
        Q1999791: "book",
        Q2079843: "book",
        Q2105776: "book",
        Q2207959: "book",
        Q2234241: "book",
        Q2305470: "book",
        Q2406762: "book",
        Q2430899: "book",
        Q31897275: "motion_picture",
        Q2635894: "broadcast",
        Q3038928: "book",
        Q3038946: "book",
        Q3038949: "book",
        Q3316111: "book",
        Q3351966: "book",
        Q5105016: "book",
        Q5110327: "book",
        Q7187214: "book",
        Q7191193: "book",
        Q7400100: "book",
        Q7621096: "book",
        Q11766949: "book",
        Q12558347: "book",
        Q12607437: "book",
        Q47486001: "motion_picture",
        Q23891671: "book",
        Q26868446: "book",
        Q31786464: "book",
        Q69084760: "motion_picture",
        Q45740849: "book",
        Q52162477: "book",
        Q52162481: "standard",
        Q52162484: "book",
        Q83424438: "motion_picture",
        Q55214821: "book",
        Q55594385: "book",
        Q55713039: "book",
        Q56297260: "book",
        Q60535660: "book",
        Q60550487: "book",
        Q63525289: "book",
        Q2743: "book",
        Q70328030: "book",
        Q70335128: "book",
        Q105101851: "motion_picture",
        Q77046980: "book",
        Q110397019: "motion_picture",
        Q84599584: "book",
        Q90580318: "book",
        Q98807796: "book",
        Q98905977: "software",
        Q99231526: "book",
        Q100401147: "book",
        Q104536999: "book",
        Q104629604: "book",
        Q106145652: "book",
        Q106914773: "broadcast",
        Q107978278: "book",
        Q108103627: "book",
        Q109673193: "book",
        Q110024700: "book",
        Q110275973: "book",
        Q110275977: "book",
        Q111972389: "book",
        Q245037: "event",
        Q255043: "event",
        Q759860: "event",
        Q873512: "event",
        Q1031365: "event",
        Q1087138: "event",
        Q1132542: "event",
        Q1355298: "event",
        Q1392263: "event",
        Q1536712: "event",
        Q1599337: "event",
        Q1720648: "event",
        Q1741002: "event",
        Q1967459: "event",
        Q2067088: "event",
        Q2067218: "event",
        Q2106138: "event",
        Q2783906: "book",
        Q2165332: "event",
        Q2180043: "event",
        Q2308121: "event",
        Q2316176: "event",
        Q3010123: "book",
        Q2356770: "event",
        Q2406443: "event",
        Q3092278: "book",
        Q2461826: "event",
        Q2469396: "event",
        Q2543625: "event",
        Q2551313: "event",
        Q2647917: "event",
        Q2733534: "event",
        Q3389567: "book",
        Q3566051: "book",
        Q2920411: "event",
        Q2953961: "event",
        Q2956466: "event",
        Q2992127: "event",
        Q3684598: "book",
        Q3062291: "event",
        Q3244907: "event",
        Q3269883: "event",
        Q3496346: "event",
        Q4202036: "book",
        Q3657183: "event",
        Q4042171: "event",
        Q4056451: "event",
        Q4311037: "event",
        Q4347853: "event",
        Q4430357: "event",
        Q5290180: "book",
        Q5038934: "event",
        Q5774663: "book",
        Q5141150: "event",
        Q5954513: "book",
        Q5378310: "event",
        Q6126478: "book",
        Q6139969: "book",
        Q5611272: "event",
        Q6592456: "book",
        Q6165531: "event",
        Q7261254: "book",
        Q6647568: "event",
        Q7697093: "broadcast",
        Q7162891: "event",
        Q7231330: "event",
        Q7243084: "event",
        Q13020317: "book",
        Q13049802: "book",
        Q16854678: "book",
        Q18450502: "book",
        Q26257569: "book",
        Q26805199: "book",
        Q29047452: "book",
        Q30899623: "book",
        Q30912678: "book",
        Q44092605: "book",
        Q44102201: "book",
        Q47284976: "book",
        Q47485959: "book",
        Q57965289: "book",
        Q60982751: "book",
        Q72408184: "book",
        Q87544043: "book",
        Q101509260: "book",
        Q102430127: "book",
        Q102711921: "book",
        Q103319035: "book",
        Q104097002: "book",
        Q104438919: "book",
        Q104704034: "book",
        Q106771428: "book",
        Q107547472: "book",
        Q92438: "periodical",
        Q108633576: "event",
        Q429707: "periodical",
        Q498783: "periodical",
        Q674926: "periodical",
        Q752295: "periodical",
        Q842399: "periodical",
        Q1134687: "periodical",
        Q110087292: "event",
        Q1780427: "periodical",
        Q1826799: "periodical",
        Q1968599: "periodical",
        Q2468316: "periodical",
        Q2617891: "periodical",
        Q2901024: "periodical",
        Q2906864: "periodical",
        Q3976078: "periodical",
        Q4797179: "periodical",
        Q111953054: "standard",
        Q5340829: "periodical",
        Q5431486: "periodical",
        Q5442871: "periodical",
        Q5690817: "periodical",
        Q7209566: "periodical",
        Q7210258: "periodical",
        Q7239010: "periodical",
        Q7245773: "periodical",
        Q7249390: "periodical",
        Q14759031: "periodical",
        Q15292273: "periodical",
        Q19786808: "periodical",
        Q20829703: "periodical",
        Q21130352: "periodical",
        Q25918088: "periodical",
        Q1261318: "standard",
        Q3044558: "standard",
        Q4671278: "standard",
        Q5802810: "standard",
        Q9340606: "event",
        Q10334719: "event",
        Q10507808: "event",
        Q10926758: "event",
        Q10932260: "event",
        Q11420812: "event",
        Q41557148: "periodical",
        Q11736601: "event",
        Q11826510: "event",
        Q12055231: "event",
        Q12183863: "event",
        Q12404423: "event",
        Q13458751: "event",
        Q47009221: "periodical",
        Q17156866: "event",
        Q17157236: "event",
        Q47472816: "periodical",
        Q18476724: "event",
        Q19602896: "event",
        Q20521429: "event",
        Q20816013: "event",
        Q23679940: "event",
        Q42291635: "event",
        Q44209773: "event",
        Q55719998: "event",
        Q85970961: "periodical",
        Q56462003: "event",
        Q89375907: "periodical",
        Q60269584: "event",
        Q69941436: "event",
        Q109515555: "periodical",
        Q82331151: "event",
        Q82439301: "event",
        Q93551880: "event",
        Q101113099: "event",
        Q106472758: "event",
        Q106992383: "event",
        Q106992420: "event",
        Q107020037: "event",
        Q108168870: "event",
        Q521414: "dataset",
        Q986756: "dataset",
        Q1345528: "dataset",
        Q1641277: "dataset",
        Q1787676: "dataset",
        Q1979529: "dataset",
        Q2361901: "dataset",
        Q2532367: "dataset",
        Q2532379: "dataset",
        Q3404855: "dataset",
        Q3405306: "dataset",
        Q3421859: "dataset",
        Q3518943: "dataset",
        Q3664416: "dataset",
        Q3678170: "dataset",
        Q4127466: "dataset",
        Q4350734: "dataset",
        Q4350735: "dataset",
        Q4350754: "dataset",
        Q4391701: "dataset",
        Q5058966: "dataset",
        Q5058970: "dataset",
        Q5058971: "dataset",
        Q5058968: "dataset",
        Q5058969: "dataset",
        Q5058974: "dataset",
        Q5058975: "dataset",
        Q5058972: "dataset",
        Q5058978: "dataset",
        Q5058977: "dataset",
        Q5058981: "dataset",
        Q5058989: "dataset",
        Q5165136: "dataset",
        Q5334384: "dataset",
        Q5478543: "dataset",
        Q5760464: "dataset",
        Q5760561: "dataset",
        Q7015254: "dataset",
        Q10497456: "dataset",
        Q10871947: "dataset",
        Q11452069: "dataset",
        Q12058091: "dataset",
        Q12409404: "dataset",
        Q12876973: "dataset",
        Q15194024: "dataset",
        Q15854286: "dataset",
        Q16056280: "dataset",
        Q17003001: "dataset",
        Q18029299: "dataset",
        Q18481148: "dataset",
        Q19799894: "dataset",
        Q19894430: "dataset",
        Q20715856: "dataset",
        Q24934691: "dataset",
        Q25380840: "dataset",
        Q25383554: "dataset",
        Q26207721: "dataset",
        Q28730356: "dataset",
        Q29795177: "dataset",
        Q37833472: "dataset",
        Q48790556: "dataset",
        Q56290048: "dataset",
        Q60518318: "dataset",
        Q60767795: "dataset",
        Q61355526: "dataset",
        Q64267945: "dataset",
        Q64853398: "dataset",
        Q69316638: "dataset",
        Q77713908: "dataset",
        Q100312296: "dataset",
        Q105872226: "dataset",
        Q264238: "periodical",
        Q685935: "periodical",
        Q847906: "periodical",
        Q867242: "periodical",
        Q1029418: "periodical",
        Q1170050: "periodical",
        Q1327300: "periodical",
        Q1350347: "periodical",
        Q1404635: "periodical",
        Q1407909: "periodical",
        Q1416251: "periodical",
        Q1572421: "periodical",
        Q1711354: "periodical",
        Q1743269: "periodical",
        Q1784788: "periodical",
        Q1791899: "periodical",
        Q1911105: "periodical",
        Q1958170: "periodical",
        Q2116411: "periodical",
        Q2178566: "periodical",
        Q2265195: "periodical",
        Q2514037: "periodical",
        Q2740804: "periodical",
        Q2784039: "periodical",
        Q3244962: "periodical",
        Q3267592: "periodical",
        Q3736345: "periodical",
        Q3817205: "periodical",
        Q4345830: "periodical",
        Q4468966: "periodical",
        Q4737473: "periodical",
        Q4971301: "periodical",
        Q5049323: "periodical",
        Q5433603: "periodical",
        Q5976452: "periodical",
        Q6046722: "periodical",
        Q6124786: "periodical",
        Q6297581: "periodical",
        Q6545508: "periodical",
        Q7493984: "periodical",
        Q8189527: "periodical",
        Q9019003: "periodical",
        Q9068487: "periodical",
        Q9198406: "periodical",
        Q9397629: "periodical",
        Q10300473: "periodical",
        Q11239137: "periodical",
        Q11780435: "periodical",
        Q11832342: "periodical",
        Q11887445: "periodical",
        Q11889441: "periodical",
        Q12298619: "periodical",
        Q12340140: "periodical",
        Q12408563: "periodical",
        Q12420307: "periodical",
        Q12834611: "periodical",
        Q12902861: "periodical",
        Q13112752: "periodical",
        Q13605686: "periodical",
        Q15695196: "periodical",
        Q16676025: "periodical",
        Q18215934: "periodical",
        Q21032630: "periodical",
        Q24273525: "periodical",
        Q25102282: "periodical",
        Q25351576: "periodical",
        Q1041638: "book",
        Q1709804: "book",
        Q101313: "standard",
        Q3687564: "book",
        Q6055945: "book",
        Q51448788: "periodical",
        Q53629993: "periodical",
        Q56313771: "periodical",
        Q57904379: "periodical",
        Q61851987: "periodical",
        Q79209169: "periodical",
        Q89488985: "periodical",
        Q92334825: "periodical",
        Q93716609: "periodical",
        Q98561135: "periodical",
        Q99424035: "periodical",
        Q103847161: "periodical",
        Q104146008: "periodical",
        Q107373430: "periodical",
        Q109174082: "periodical",
        Q109174122: "periodical",
        Q110280043: "periodical",
        Q111914189: "periodical",
        Q106105993: "dataset",
        Q106106042: "dataset",
        Q107285736: "dataset",
        Q107444042: "dataset",
        Q107862888: "dataset",
        Q107969031: "dataset",
        Q111219304: "dataset",
        Q111253599: "dataset",
        Q99393955: "book",
        Q267628: "article-newspaper",
        Q597695: "manuscript",
        Q856314: "manuscript",
        Q871232: "article-newspaper",
        Q928128: "manuscript",
        Q998631: "manuscript",
        Q1190781: "manuscript",
        Q1620808: "manuscript",
        Q1734271: "manuscript",
        Q111152090: "book",
        Q738826: "speech",
        Q111204686: "event",
        Q1813927: "speech",
        Q3637297: "manuscript",
        Q3694604: "article-newspaper",
        Q3719255: "article-newspaper",
        Q2623953: "speech",
        Q2781658: "speech",
        Q4307822: "manuscript",
        Q3479856: "speech",
        Q5153657: "periodical",
        Q5597707: "periodical",
        Q7454995: "speech",
        Q218013: "dataset",
        Q283579: "dataset",
        Q426674: "dataset",
        Q479833: "dataset",
        Q539662: "dataset",
        Q592312: "dataset",
        Q657179: "dataset",
        Q838281: "dataset",
        Q843670: "dataset",
        Q860625: "dataset",
        Q877809: "dataset",
        Q900856: "dataset",
        Q949532: "dataset",
        Q1250322: "dataset",
        Q1265166: "dataset",
        Q1571814: "dataset",
        Q11555354: "speech",
        Q13522717: "manuscript",
        Q4376548: "dataset",
        Q5128020: "dataset",
        Q5227290: "dataset",
        Q5227352: "dataset",
        Q7572716: "dataset",
        Q8069577: "dataset",
        Q8095398: "dataset",
        Q18558914: "manuscript",
        Q17993444: "speech",
        Q1844938: "software",
        Q13769783: "dataset",
        Q3559933: "software",
        Q14902318: "dataset",
        Q4110622: "software",
        Q8048052: "software",
        Q193206: "book",
        Q2532146: "book",
        Q386638: "standard",
        Q3928536: "book",
        Q5793771: "book",
        Q6034702: "book",
        Q5519943: "event",
        Q25975660: "dataset",
        Q26260540: "dataset",
        Q26987229: "dataset",
        Q27198004: "dataset",
        Q28948553: "dataset",
        Q29053519: "dataset",
        Q29694587: "dataset",
        Q7933844: "standard",
        Q10615359: "book",
        Q12046622: "book",
        Q11925961: "standard",
        Q15919135: "book",
        Q16143859: "book",
        Q16257663: "book",
        Q21853436: "book",
        Q21905924: "book",
        Q41709380: "dataset",
        Q47459830: "dataset",
        Q27812003: "event",
        Q60259696: "manuscript",
        Q60323106: "manuscript",
        Q60325498: "manuscript",
        Q60363009: "manuscript",
        Q51954352: "dataset",
        Q77463328: "manuscript",
        Q2115: "dataset",
        Q14679: "dataset",
        Q51845238: "event",
        Q55604459: "event",
        Q65647244: "software",
        Q64152609: "book",
        Q64152635: "book",
        Q65927107: "event",
        Q98810104: "book",
        Q106771575: "book",
        Q108269159: "event",
        Q109326945: "book",
        Q542475: "motion_picture",
        Q846544: "motion_picture",
        Q3072039: "motion_picture",
        Q7168625: "motion_picture",
        Q8192124: "motion_picture",
        Q11448155: "motion_picture",
        Q1146189: "software",
        Q1344636: "software",
        Q1625990: "software",
        Q1637801: "software",
        Q1810858: "software",
        Q2136127: "software",
        Q2288448: "software",
        Q5358377: "software",
        Q10853141: "software",
        Q12042784: "software",
        Q4943282: "book",
        Q7445203: "song",
        Q19868411: "software",
        Q21041173: "software",
        Q21474132: "book",
        Q63214877: "motion_picture",
        Q56822593: "dataset",
        Q59138954: "dataset",
        Q59154562: "dataset",
        Q59154746: "dataset",
        Q45211: "software",
        Q100721968: "motion_picture",
        Q102429885: "motion_picture",
        Q104536994: "motion_picture",
        Q104559206: "motion_picture",
        Q98405806: "dataset",
        Q109733318: "motion_picture",
        Q111605989: "motion_picture",
        Q86355865: "book",
        Q110854230: "dataset",
        Q110854780: "dataset",
        Q111269750: "dataset",
        Q102676349: "software",
        Q577697: "map",
        Q110459741: "book",
        Q1425895: "map",
        Q1554584: "legal_case",
        Q111175013: "book",
        Q2352868: "legal_case",
        Q112081373: "book",
        Q111336109: "standard",
        Q21944833: "map",
        Q221409: "book",
        Q254435: "book",
        Q371008: "book",
        Q569410: "book",
        Q646754: "book",
        Q651270: "book",
        Q679045: "book",
        Q905972: "book",
        Q915196: "book",
        Q1183753: "book",
        Q1221902: "book",
        Q1225625: "book",
        Q1339210: "book",
        Q1378260: "book",
        Q1388608: "book",
        Q1522225: "book",
        Q1758647: "book",
        Q1945147: "book",
        Q1963679: "book",
        Q1976376: "book",
        Q2116256: "book",
        Q2129011: "book",
        Q2390418: "book",
        Q81945: "standard",
        Q2602058: "book",
        Q133862: "standard",
        Q165194: "standard",
        Q2713365: "book",
        Q230872: "standard",
        Q230924: "standard",
        Q2727962: "book",
        Q2731728: "book",
        Q264364: "standard",
        Q386027: "standard",
        Q2940540: "book",
        Q11985288: "software",
        Q622993: "standard",
        Q847021: "standard",
        Q886092: "standard",
        Q974922: "standard",
        Q989220: "standard",
        Q1025017: "standard",
        Q1354819: "standard",
        Q1382530: "standard",
        Q13104404: "software",
        Q4634777: "book",
        Q2296308: "standard",
        Q2434518: "standard",
        Q2525317: "standard",
        Q5372544: "book",
        Q5383630: "book",
        Q5469932: "dataset",
        Q3359858: "standard",
        Q3408087: "standard",
        Q6449786: "book",
        Q7281267: "book",
        Q4825885: "standard",
        Q5004612: "standard",
        Q5965755: "standard",
        Q6045205: "standard",
        Q11883648: "book",
        Q11973502: "book",
        Q12306381: "book",
        Q13896240: "book",
        Q22918958: "software",
        Q13360597: "standard",
        Q16963509: "book",
        Q15836568: "standard",
        Q19143923: "book",
        Q16935517: "standard",
        Q21012191: "book",
        Q18761595: "standard",
        Q21662314: "book",
        Q19599398: "standard",
        Q20311482: "standard",
        Q52768654: "map",
        Q24260582: "book",
        Q25471746: "book",
        Q23891373: "standard",
        Q56408570: "book",
        Q65966993: "software",
        Q87663609: "map",
        Q87669200: "map",
        Q9158: "software",
        Q29522: "standard",
        Q39531: "standard",
        Q42283: "standard",
        Q94579027: "book",
        Q106858935: "book",
        Q108399221: "book",
        Q248583: "motion_picture",
        Q457832: "motion_picture",
        Q460214: "map",
        Q622548: "motion_picture",
        Q624771: "motion_picture",
        Q860626: "motion_picture",
        Q1115187: "motion_picture",
        Q1540100: "map",
        Q1788980: "motion_picture",
        Q2108819: "map",
        Q2250805: "map",
        Q2331945: "motion_picture",
        Q2359829: "map",
        Q2415383: "map",
        Q2678111: "motion_picture",
        Q2843083: "motion_picture",
        Q2869471: "map",
        Q2869478: "map",
        Q2905670: "legal_case",
        Q2991560: "motion_picture",
        Q3374310: "legal_case",
        Q3677141: "motion_picture",
        Q3745430: "motion_picture",
        Q3778115: "motion_picture",
        Q4816871: "map",
        Q5070847: "motion_picture",
        Q5135690: "map",
        Q5151497: "motion_picture",
        Q5778924: "motion_picture",
        Q10631817: "motion_picture",
        Q11025270: "map",
        Q11298147: "motion_picture",
        Q11894225: "motion_picture",
        Q15804095: "motion_picture",
        Q15849377: "legal_case",
        Q16950433: "motion_picture",
        Q17112331: "motion_picture",
        Q18331260: "motion_picture",
        Q19952560: "motion_picture",
        Q75050: "software",
        Q131212: "software",
        Q183197: "software",
        Q185534: "software",
        Q189210: "software",
        Q192726: "software",
        Q240795: "software",
        Q453843: "software",
        Q483130: "software",
        Q498267: "software",
        Q620615: "software",
        Q631525: "software",
        Q635540: "software",
        Q651476: "software",
        Q692199: "software",
        Q776688: "software",
        Q778043: "software",
        Q840703: "software",
        Q860676: "software",
        Q868410: "software",
        Q874411: "software",
        Q897678: "software",
        Q925622: "software",
        Q985394: "software",
        Q21936815: "map",
        Q21938018: "map",
        Q26885495: "map",
        Q30006080: "map",
        Q60029764: "legislation",
        Q60535736: "map",
        Q63969629: "map",
        Q6368: "software",
        Q7889: "software",
        Q13741: "software",
        Q54277: "software",
        Q95440291: "motion_picture",
        Q95952108: "motion_picture",
        Q98517089: "legal_case",
        Q105813043: "motion_picture",
        Q107353665: "map",
        Q107449079: "map",
        Q107531224: "map",
        Q108466999: "motion_picture",
        Q1047507: "software",
        Q1068192: "software",
        Q1074158: "software",
        Q1194864: "software",
        Q1324042: "software",
        Q1328864: "software",
        Q1331892: "software",
        Q1461523: "software",
        Q1568118: "software",
        Q1608344: "software",
        Q1684148: "software",
        Q1897589: "software",
        Q1932945: "software",
        Q1955251: "software",
        Q2115026: "software",
        Q2136515: "software",
        Q2158576: "software",
        Q2522958: "software",
        Q2903541: "software",
        Q2933820: "software",
        Q3189452: "software",
        Q3257916: "software",
        Q3552754: "software",
        Q3635085: "software",
        Q3751111: "software",
        Q4033109: "software",
        Q4034719: "software",
        Q4834650: "software",
        Q5134342: "software",
        Q5155929: "software",
        Q5164835: "software",
        Q5165883: "software",
        Q5227393: "software",
        Q5429711: "software",
        Q5519929: "software",
        Q5596600: "software",
        Q6577295: "software",
        Q6686945: "software",
        Q7554244: "software",
        Q7554300: "software",
        Q7805487: "software",
        Q7936632: "software",
        Q7950128: "software",
        Q9361521: "software",
        Q528892: "event",
        Q10336531: "software",
        Q10360429: "software",
        Q898830: "event",
        Q11121294: "software",
        Q11188577: "software",
        Q11275082: "software",
        Q11320567: "software",
        Q2344644: "standard",
        Q15122700: "software",
        Q15505266: "software",
        Q15544757: "software",
        Q15547961: "software",
        Q15548064: "software",
        Q15548076: "software",
        Q15548082: "software",
        Q15614008: "software",
        Q15614016: "software",
        Q15618491: "software",
        Q16972647: "software",
        Q17140402: "software",
        Q18456364: "software",
        Q21570197: "software",
        Q21572113: "software",
        Q21577192: "software",
        Q22907861: "software",
        Q24657198: "software",
        Q24960288: "software",
        Q25104204: "software",
        Q28051323: "software",
        Q28061130: "software",
        Q28454366: "software",
        Q30047053: "software",
        Q38984481: "software",
        Q48780637: "software",
        Q55344424: "software",
        Q60461507: "software",
        Q63862928: "software",
        Q65048190: "software",
        Q72271641: "software",
        Q84177695: "software",
        Q91231169: "software",
        Q92205975: "software",
        Q97644802: "software",
        Q99460482: "software",
        Q100158612: "software",
        Q104804744: "software",
        Q105044723: "software",
        Q105100182: "software",
        Q105273027: "software",
        Q105682544: "software",
        Q108684412: "software",
        Q110439009: "software",
        Q110907733: "software",
        Q111915979: "software",
        Q111926836: "event",
        Q383904: "song",
        Q564848: "song",
        Q721644: "song",
        Q65212460: "regulation",
        Q5158512: "song",
        Q6037387: "song",
        Q189053: "software",
        Q188602: "book",
        Q682203: "book",
        Q866144: "book",
        Q869210: "song",
        Q1000882: "book",
        Q917015: "legislation",
        Q1221179: "book",
        Q1025005: "event",
        Q1792348: "book",
        Q1147337: "event",
        Q1210697: "event",
        Q1241851: "event",
        Q1241933: "event",
        Q1947846: "book",
        Q2122997: "book",
        Q1518054: "event",
        Q1533355: "event",
        Q1562095: "event",
        Q2450419: "book",
        Q1902629: "event",
        Q2558132: "book",
        Q2605476: "book",
        Q2624969: "book",
        Q144352: "standard",
        Q184756: "standard",
        Q184766: "standard",
        Q21998394: "song",
        Q372395: "standard",
        Q386787: "standard",
        Q2891173: "book",
        Q2910735: "book",
        Q2345910: "event",
        Q2612295: "event",
        Q3395292: "book",
        Q1186870: "standard",
        Q1416278: "standard",
        Q3304691: "event",
        Q2289247: "standard",
        Q4301939: "event",
        Q2512796: "standard",
        Q5001430: "book",
        Q4437084: "event",
        Q2610482: "standard",
        Q2903897: "standard",
        Q5717007: "book",
        Q5792832: "book",
        Q5792840: "book",
        Q3775042: "standard",
        Q7694469: "book",
        Q7251589: "event",
        Q5514108: "standard",
        Q8026382: "book",
        Q7623054: "event",
        Q6108264: "standard",
        Q9311446: "book",
        Q10524630: "book",
        Q10551707: "book",
        Q10556386: "book",
        Q10594989: "book",
        Q10654964: "book",
        Q10655415: "book",
        Q10670937: "book",
        Q11487759: "event",
        Q12623918: "standard",
        Q12623919: "standard",
        Q15735174: "book",
        Q15631336: "event",
        Q99543120: "regulation",
        Q19362971: "book",
        Q104596067: "regulation",
        Q25616446: "standard",
        Q48999297: "song",
        Q29149990: "standard",
        Q30592417: "standard",
        Q47496733: "event",
        Q47167051: "standard",
        Q41270: "song",
        Q1674502: "regulation",
        Q1724745: "regulation",
        Q58815974: "event",
        Q4214118: "regulation",
        Q60716473: "event",
        Q59155105: "standard",
        Q63993400: "event",
        Q69405214: "event",
        Q76279659: "event",
        Q84322263: "song",
        Q85739691: "event",
        Q106103855: "song",
        Q106103953: "song",
        Q91280428: "event",
        Q94574942: "book",
        Q222639: "motion_picture",
        Q672598: "map",
        Q1033891: "motion_picture",
        Q1735630: "map",
        Q1740789: "motion_picture",
        Q1776156: "motion_picture",
        Q2297927: "motion_picture",
        Q2932613: "map",
        Q4373044: "motion_picture",
        Q4797626: "motion_picture",
        Q6010762: "map",
        Q6656179: "map",
        Q12090051: "map",
        Q2514870: "dataset",
        Q16254232: "motion_picture",
        Q16825889: "map",
        Q20649407: "motion_picture",
        Q20656232: "motion_picture",
        Q92206157: "thesis",
        Q96573613: "thesis",
        Q185597: "book",
        Q205919: "book",
        Q336468: "book",
        Q100328456: "thesis",
        Q100328465: "thesis",
        Q620035: "legislation",
        Q337987: "event",
        Q452237: "event",
        Q1125133: "book",
        Q615255: "event",
        Q708369: "event",
        Q926161: "event",
        Q1788866: "book",
        Q1141155: "event",
        Q1214249: "event",
        Q1433039: "event",
        Q2151774: "book",
        Q2393445: "book",
        Q3069017: "book",
        Q3186884: "book",
        Q3286535: "book",
        Q4016503: "event",
        Q5178219: "book",
        Q5522468: "book",
        Q5358448: "event",
        Q5358449: "event",
        Q26132283: "dataset",
        Q6164848: "event",
        Q7362854: "book",
        Q6887787: "event",
        Q7196127: "event",
        Q7443004: "event",
        Q7578606: "event",
        Q7858737: "event",
        Q10921030: "book",
        Q11606858: "book",
        Q11885722: "book",
        Q11423936: "event",
        Q11626449: "event",
        Q18121429: "book",
        Q18340514: "book",
        Q19255325: "book",
        Q19300775: "book",
        Q18915287: "event",
        Q20830278: "book",
        Q20591610: "event",
        Q21778963: "event",
        Q25063938: "event",
        Q78633168: "motion_picture",
        Q56653708: "book",
        Q62474270: "book",
        Q63344699: "event",
        Q97016664: "motion_picture",
        Q40231: "event",
        Q43109: "event",
        Q104537013: "motion_picture",
        Q104851179: "motion_picture",
        Q98069877: "dataset",
        Q24960616: "treaty",
        Q85855009: "event",
        Q51282711: "thesis",
        Q51282766: "thesis",
        Q51282798: "thesis",
        Q51282875: "thesis",
        Q51282918: "thesis",
        Q51282969: "thesis",
        Q51282999: "thesis",
        Q51283026: "thesis",
        Q51283053: "thesis",
        Q51283145: "thesis",
        Q51283327: "thesis",
        Q55399605: "thesis",
        Q97380578: "event",
        Q97696406: "event",
        Q98078994: "event",
        Q100163998: "book",
        Q105116684: "broadcast",
        Q105502076: "book",
        Q105296293: "event",
        Q106288677: "book",
        Q332564: "motion_picture",
        Q547760: "motion_picture",
        Q987831: "motion_picture",
        Q1047299: "motion_picture",
        Q3249257: "motion_picture",
        Q4765076: "motion_picture",
        Q13377551: "motion_picture",
        Q150139: "event",
        Q255208: "event",
        Q256611: "event",
        Q20707560: "dataset",
        Q375011: "event",
        Q381977: "event",
        Q429166: "event",
        Q478515: "event",
        Q696781: "event",
        Q819634: "event",
        Q884672: "event",
        Q899207: "event",
        Q925645: "event",
        Q992266: "event",
        Q1000774: "event",
        Q1113775: "event",
        Q1190070: "event",
        Q1290437: "event",
        Q1439766: "event",
        Q1472127: "event",
        Q1617360: "event",
        Q1679801: "event",
        Q1724702: "event",
        Q1759320: "event",
        Q1770155: "event",
        Q1954483: "event",
        Q2006207: "event",
        Q2086428: "event",
        Q2387698: "event",
        Q2458322: "event",
        Q2709567: "event",
        Q2717679: "event",
        Q2754877: "event",
        Q2994156: "event",
        Q3010205: "event",
        Q3069796: "event",
        Q3335361: "event",
        Q3399898: "event",
        Q3919798: "legislation",
        Q3919961: "legislation",
        Q3505413: "event",
        Q4370379: "event",
        Q4899367: "event",
        Q5215299: "event",
        Q5767018: "event",
        Q5849664: "event",
        Q6159649: "event",
        Q6612823: "event",
        Q7137430: "event",
        Q7619792: "event",
        Q8355038: "event",
        Q10281823: "event",
        Q10859648: "event",
        Q11547760: "event",
        Q11706236: "event",
        Q11906196: "event",
        Q11909230: "event",
        Q11921906: "event",
        Q12056720: "event",
        Q12389156: "event",
        Q13745686: "event",
        Q15361145: "event",
        Q16034435: "event",
        Q16154065: "event",
        Q18006428: "event",
        Q18752057: "event",
        Q19276041: "event",
        Q19544614: "event",
        Q20541005: "event",
        Q20826105: "event",
        Q22661166: "book",
        Q22961568: "book",
        Q22986126: "event",
        Q23459413: "event",
        Q28136564: "event",
        Q28692991: "event",
        Q28922083: "event",
        Q30325245: "event",
        Q33117691: "event",
        Q56551134: "event",
        Q62071432: "standard",
        Q66317493: "event",
        Q83710044: "event",
        Q88545234: "event",
        Q90993570: "book",
        Q94997350: "book",
        Q94634713: "event",
        Q97770079: "event",
        Q99833900: "event",
        Q106227544: "event",
        Q107304995: "event",
        Q107305006: "event",
        Q640492: "map",
        Q690851: "manuscript",
        Q1060398: "motion_picture",
        Q1105486: "manuscript",
        Q1502766: "motion_picture",
        Q1501945: "map",
        Q1550537: "map",
        Q1974665: "map",
        Q2915844: "map",
        Q2940514: "map",
        Q5600411: "manuscript",
        Q1773817: "song",
        Q11548991: "report",
        Q11559530: "report",
        Q11574068: "report",
        Q11632361: "report",
        Q11988943: "report",
        Q18089587: "motion_picture",
        Q17232848: "report",
        Q18648407: "motion_picture",
        Q20089346: "motion_picture",
        Q18845742: "report",
        Q178285: "software",
        Q430253: "software",
        Q763151: "software",
        Q1202273: "software",
        Q1340793: "software",
        Q1444631: "software",
        Q1645952: "software",
        Q234280: "chapter",
        Q234300: "chapter",
        Q2383135: "software",
        Q2489117: "software",
        Q3512599: "software",
        Q25110269: "motion_picture",
        Q25305175: "map",
        Q5005843: "software",
        Q5530385: "software",
        Q27959357: "motion_picture",
        Q28968258: "motion_picture",
        Q28968511: "motion_picture",
        Q158075: "book",
        Q459123: "book",
        Q950683: "book",
        Q1031245: "book",
        Q1434296: "book",
        Q1473015: "book",
        Q1507066: "book",
        Q1040489: "event",
        Q1955049: "book",
        Q2070861: "book",
        Q3257388: "book",
        Q3322346: "book",
        Q3384380: "book",
        Q3043499: "event",
        Q5909575: "book",
        Q6413244: "book",
        Q6588074: "book",
        Q6723673: "book",
        Q12047006: "legislation",
        Q40877606: "report",
        Q19060922: "book",
        Q40039114: "song",
        Q2500107: "performance",
        Q2568341: "performance",
        Q2751794: "performance",
        Q22336062: "legislation",
        Q5449034: "performance",
        Q54298448: "map",
        Q48549789: "song",
        Q64100970: "motion_picture",
        Q64006483: "song",
        Q64137975: "song",
        Q64138939: "song",
        Q64139024: "song",
        Q64140669: "song",
        Q64152500: "song",
        Q64152543: "song",
        Q64152559: "song",
        Q64152582: "song",
        Q29354307: "performance",
        Q85632254: "motion_picture",
        Q40248002: "performance",
        Q40248880: "performance",
        Q40249084: "performance",
        Q40249579: "performance",
        Q47000326: "performance",
        Q66023226: "event",
        Q47466735: "performance",
        Q98807719: "motion_picture",
        Q105606055: "motion_picture",
        Q106728041: "motion_picture",
        Q106963809: "map",
        Q110854783: "motion_picture",
        Q110996871: "map",
        Q111953147: "motion_picture",
        Q110453587: "song",
        Q84080639: "performance",
        Q106651116: "book",
        Q108492102: "legislation",
        Q167772: "standard",
        Q223535: "standard",
        Q229762: "standard",
        Q243303: "standard",
        Q278934: "standard",
        Q285972: "standard",
        Q287067: "standard",
        Q290741: "standard",
        Q336705: "standard",
        Q379545: "standard",
        Q467454: "standard",
        Q497118: "standard",
        Q507860: "standard",
        Q527723: "standard",
        Q594447: "standard",
        Q682626: "standard",
        Q691652: "standard",
        Q863883: "standard",
        Q1056408: "standard",
        Q1135858: "standard",
        Q1224822: "standard",
        Q1343033: "standard",
        Q1351368: "standard",
        Q1363415: "standard",
        Q1485661: "standard",
        Q1572121: "standard",
        Q1727359: "standard",
        Q1840684: "standard",
        Q1931564: "standard",
        Q1955133: "standard",
        Q2206173: "standard",
        Q2720536: "standard",
        Q3077335: "standard",
        Q3498805: "standard",
        Q3502441: "standard",
        Q3930596: "standard",
        Q6746509: "book",
        Q6794707: "book",
        Q6794743: "book",
        Q6800582: "book",
        Q6803493: "book",
        Q6804403: "book",
        Q6805339: "book",
        Q6805774: "book",
        Q6805831: "book",
        Q6807281: "book",
        Q6809785: "book",
        Q6810132: "book",
        Q6811408: "book",
        Q4781113: "standard",
        Q4836790: "standard",
        Q5008632: "standard",
        Q5090461: "standard",
        Q5090500: "standard",
        Q5156830: "standard",
        Q5227180: "standard",
        Q5248648: "standard",
        Q5426535: "standard",
        Q6046575: "standard",
        Q7079133: "standard",
        Q7203483: "standard",
        Q7508366: "standard",
        Q12182134: "book",
        Q12186067: "book",
        Q12186236: "book",
        Q12186237: "book",
        Q12207307: "book",
        Q12207310: "book",
        Q12207315: "book",
        Q12207312: "book",
        Q12207316: "book",
        Q12238706: "book",
        Q16120791: "book",
        Q16361936: "standard",
        Q16545707: "standard",
        Q17042621: "dataset",
        Q17074854: "standard",
        Q17087630: "standard",
        Q17560478: "standard",
        Q17636230: "standard",
        Q20418717: "book",
        Q18011768: "standard",
        Q18359031: "standard",
        Q20155966: "standard",
        Q28715505: "book",
        Q26697935: "standard",
        Q27823178: "standard",
        Q27824058: "standard",
        Q27826463: "standard",
        Q27915156: "standard",
        Q27915171: "standard",
        Q27915174: "standard",
        Q27915172: "standard",
        Q27915173: "standard",
        Q27967078: "standard",
        Q27978793: "standard",
        Q54900434: "book",
        Q54965913: "book",
        Q68170326: "book",
        Q108407196: "standard",
        Q112094119: "book",
        Q2339879: "speech",
        Q2436140: "speech",
        Q3709942: "speech",
        Q9158386: "speech",
        Q11785243: "speech",
        Q282144: "dataset",
        Q472637: "motion_picture",
        Q595801: "book",
        Q862334: "book",
        Q631489: "event",
        Q1623175: "book",
        Q1667921: "book",
        Q1700470: "book",
        Q1900755: "event",
        Q182933: "standard",
        Q189376: "standard",
        Q249743: "standard",
        Q3045706: "book",
        Q837330: "standard",
        Q922381: "standard",
        Q2788117: "event",
        Q1466064: "standard",
        Q2365430: "standard",
        Q4992631: "review",
        Q5164285: "event",
        Q5430013: "event",
        Q3736059: "standard",
        Q5601809: "event",
        Q4043424: "standard",
        Q10428815: "book",
        Q11502500: "book",
        Q11995068: "book",
        Q13593966: "book",
        Q17710980: "book",
        Q17710986: "book",
        Q18242494: "book",
        Q16987893: "standard",
        Q20655472: "book",
        Q24944126: "book",
        Q109315237: "regulation",
        Q55815842: "speech",
        Q110793160: "regulation",
        Q56344032: "speech",
        Q28009469: "standard",
        Q28049484: "standard",
        Q28049572: "standard",
        Q28344234: "standard",
        Q28846068: "standard",
        Q28846076: "standard",
        Q28846144: "standard",
        Q28846213: "standard",
        Q28858032: "standard",
        Q29642901: "dataset",
        Q29644049: "standard",
        Q29651120: "standard",
        Q29904526: "standard",
        Q29905212: "standard",
        Q29943235: "standard",
        Q29943476: "standard",
        Q29944450: "standard",
        Q30167277: "standard",
        Q64760522: "speech",
        Q34274654: "standard",
        Q34289060: "standard",
        Q34735959: "standard",
        Q34739013: "standard",
        Q34746188: "standard",
        Q67934054: "speech",
        Q42573997: "standard",
        Q42574058: "standard",
        Q47068459: "book",
        Q45989477: "standard",
        Q48570159: "standard",
        Q52269333: "book",
        Q53843792: "book",
        Q53756508: "standard",
        Q1058762: "regulation",
        Q1946428: "regulation",
        Q55281818: "standard",
        Q2914988: "regulation",
        Q3536928: "treaty",
        Q57696248: "standard",
        Q58787678: "standard",
        Q60846411: "event",
        Q65091969: "book",
        Q65185088: "book",
        Q69560230: "book",
        Q105587404: "speech",
        Q108400705: "speech",
        Q81986407: "standard",
        Q30588063: "regulation",
        Q101246540: "book",
        Q100324157: "standard",
        Q104841732: "book",
        Q106755566: "book",
        Q106974458: "book",
        Q107458055: "motion_picture",
        Q261468: "map",
        Q819652: "motion_picture",
        Q1433443: "motion_picture",
        Q1615638: "motion_picture",
        Q2096633: "motion_picture",
        Q3352071: "motion_picture",
        Q3379447: "map",
        Q3442060: "motion_picture",
        Q3556751: "article-newspaper",
        Q6722594: "motion_picture",
        Q7251156: "report",
        Q10654943: "motion_picture",
        Q15898171: "motion_picture",
        Q22981906: "motion_picture",
        Q165851: "event",
        Q172582: "event",
        Q188914: "event",
        Q194285: "event",
        Q282295: "event",
        Q294238: "event",
        Q314183: "event",
        Q314967: "event",
        Q474956: "event",
        Q572811: "event",
        Q593216: "event",
        Q611475: "event",
        Q641415: "event",
        Q684073: "event",
        Q691086: "event",
        Q772801: "event",
        Q780251: "event",
        Q809002: "event",
        Q809006: "event",
        Q809004: "event",
        Q833633: "event",
        Q836554: "event",
        Q848963: "event",
        Q896092: "event",
        Q897214: "event",
        Q936683: "event",
        Q1056251: "event",
        Q1056265: "event",
        Q1078671: "event",
        Q1086189: "event",
        Q1097927: "event",
        Q1136336: "event",
        Q1146594: "event",
        Q1237928: "event",
        Q1240448: "event",
        Q1357041: "event",
        Q1357196: "event",
        Q1379623: "event",
        Q1451417: "event",
        Q1480130: "event",
        Q1505018: "event",
        Q1725370: "event",
        Q1844504: "event",
        Q1973859: "event",
        Q2016946: "event",
        Q2048495: "event",
        Q2049287: "event",
        Q2090893: "event",
        Q2108417: "event",
        Q2196626: "event",
        Q2198648: "event",
        Q2216207: "event",
        Q2230776: "event",
        Q2285862: "event",
        Q2407607: "event",
        Q2522668: "event",
        Q2574880: "event",
        Q2576795: "event",
        Q2577390: "event",
        Q2640154: "event",
        Q2793926: "event",
        Q2806409: "event",
        Q3004693: "event",
        Q3045385: "event",
        Q3326403: "event",
        Q3332225: "event",
        Q3399090: "event",
        Q3404487: "event",
        Q3404943: "event",
        Q3404950: "event",
        Q3405076: "event",
        Q3405805: "event",
        Q3405829: "event",
        Q3405934: "event",
        Q3406037: "event",
        Q4354526: "legislation",
        Q17067381: "software",
        Q66914288: "motion_picture",
        Q78633775: "motion_picture",
        Q44174: "event",
        Q102245189: "motion_picture",
        Q104536870: "motion_picture",
        Q75837457: "book",
        Q100138714: "dataset",
        Q111146360: "software",
        Q3406039: "event",
        Q3406043: "event",
        Q3406041: "event",
        Q3910557: "event",
        Q4099217: "event",
        Q4377073: "event",
        Q4756548: "event",
        Q5243548: "event",
        Q6084386: "event",
        Q6084526: "event",
        Q6084941: "event",
        Q6084946: "event",
        Q6084961: "event",
        Q6084968: "event",
        Q6499703: "event",
        Q6565342: "event",
        Q6712059: "event",
        Q6759681: "event",
        Q6974707: "event",
        Q7011765: "event",
        Q7046412: "event",
        Q7240422: "event",
        Q7270981: "event",
        Q7739692: "event",
        Q7987535: "event",
        Q8057845: "event",
        Q9062227: "event",
        Q9062246: "event",
        Q9062280: "event",
        Q9062301: "event",
        Q9062304: "event",
        Q9062308: "event",
        Q9062375: "event",
        Q9062378: "event",
        Q9062380: "event",
        Q9062385: "event",
        Q10277408: "event",
        Q10336568: "event",
        Q10680224: "event",
        Q10685950: "event",
        Q11078174: "event",
        Q11124699: "event",
        Q11182893: "event",
        Q11700281: "event",
        Q11700344: "event",
        Q11722414: "event",
        Q11942605: "event",
        Q11942636: "event",
        Q11942643: "event",
        Q11942653: "event",
        Q12113171: "event",
        Q12398121: "event",
        Q13724713: "event",
        Q15846573: "event",
        Q16515422: "event",
        Q16520161: "event",
        Q16621554: "event",
        Q17008964: "event",
        Q17008972: "event",
        Q17008985: "event",
        Q17113356: "event",
        Q17122124: "event",
        Q19275707: "event",
        Q19275704: "event",
        Q19275705: "event",
        Q19275710: "event",
        Q19275708: "event",
        Q20016803: "event",
        Q20543658: "event",
        Q21126541: "event",
        Q21197397: "event",
        Q23042540: "event",
        Q23915027: "event",
        Q25421476: "event",
        Q27480982: "event",
        Q27496509: "event",
        Q28869447: "event",
        Q29478502: "event",
        Q29478547: "event",
        Q29479284: "event",
        Q30693950: "event",
        Q31189007: "event",
        Q31840600: "event",
        Q35230755: "event",
        Q37245682: "event",
        Q43814368: "event",
        Q47085949: "event",
        Q52434604: "event",
        Q52805003: "event",
        Q54824268: "event",
        Q55590479: "event",
        Q55992286: "event",
        Q57316691: "event",
        Q57316825: "event",
        Q57316828: "event",
        Q58706689: "event",
        Q58838460: "event",
        Q59241275: "event",
        Q59309547: "event",
        Q60666433: "event",
        Q108782497: "event",
        Q653916: "motion_picture",
        Q1108032: "motion_picture",
        Q1949797: "legal_case",
        Q111588511: "event",
        Q111589016: "event",
        Q3149408: "legal_case",
        Q111829178: "event",
        Q111829354: "event",
        Q111833200: "event",
        Q111974160: "event",
        Q111974184: "event",
        Q3731370: "legal_case",
        Q4340041: "legal_case",
        Q4453959: "motion_picture",
        Q6431798: "motion_picture",
        Q112762: "song",
        Q541947: "song",
        Q919516: "song",
        Q1123037: "song",
        Q1136047: "song",
        Q1365534: "song",
        Q1366983: "song",
        Q1460239: "song",
        Q11618908: "map",
        Q11859599: "motion_picture",
        Q1969410: "song",
        Q4202963: "song",
        Q4666464: "song",
        Q15055012: "motion_picture",
        Q6116724: "song",
        Q17003182: "legal_case",
        Q7535807: "song",
        Q9184793: "song",
        Q10811025: "song",
        Q1758389: "software",
        Q2252405: "software",
        Q25422198: "legal_case",
        Q17070464: "song",
        Q17629911: "song",
        Q574707: "periodical",
        Q296560: "event",
        Q1612881: "legislation",
        Q828468: "standard",
        Q5160964: "legislation",
        Q7101797: "legislation",
        Q17051057: "software",
        Q16089878: "legislation",
        Q16089882: "legislation",
        Q55262446: "legal_case",
        Q48727903: "song",
        Q63203971: "song",
        Q79637782: "motion_picture",
        Q79638554: "motion_picture",
        Q79639691: "motion_picture",
        Q79640397: "motion_picture",
        Q81718895: "motion_picture",
        Q81719416: "motion_picture",
        Q61778507: "event",
        Q65150778: "event",
        Q98701476: "motion_picture",
        Q98802676: "motion_picture",
        Q101071244: "motion_picture",
        Q71289841: "event",
        Q105320378: "legal_case",
        Q85029180: "software",
        Q78621336: "event",
        Q81819973: "event",
        Q84081134: "event",
        Q84081135: "event",
        Q84081132: "event",
        Q84081138: "event",
        Q84081137: "event",
        Q84081140: "event",
        Q85876530: "event",
        Q100518757: "software",
        Q93316217: "event",
        Q93316492: "event",
        Q96483070: "event",
        Q97172115: "event",
        Q97172130: "event",
        Q107209417: "software",
        Q98915287: "event",
        Q110619974: "software",
        Q104568744: "event",
        Q104597667: "event",
        Q105810971: "event",
        Q106197109: "event",
        Q106197608: "event",
        Q106547379: "event",
        Q106907673: "event",
        Q106978266: "event",
        Q106978537: "event",
        Q107463000: "event",
        Q107580405: "event",
        Q107581694: "event",
        Q107581778: "event",
        Q107627866: "event",
        Q108459688: "event",
        Q171341: "periodical",
        Q181298: "periodical",
        Q110067968: "legislation",
        Q1675302: "map",
        Q1826720: "map",
        Q110955674: "event",
        Q2861506: "periodical",
        Q7260412: "periodical",
        Q7620972: "map",
        Q7927945: "dataset",
        Q10283140: "periodical",
        Q12021575: "periodical",
        Q2625206: "song",
        Q570871: "software",
        Q846998: "software",
        Q912105: "software",
        Q918090: "software",
        Q1046926: "software",
        Q1307466: "software",
        Q1397896: "software",
        Q1399850: "software",
        Q1466095: "software",
        Q2462003: "software",
        Q2979024: "software",
        Q3367807: "software",
        Q3503189: "software",
        Q3774272: "software",
        Q4887690: "software",
        Q5018891: "software",
        Q5519927: "software",
        Q5976745: "software",
        Q28870025: "periodical",
        Q558939: "event",
        Q1133763: "legislation",
        Q926186: "event",
        Q10743690: "software",
        Q2111539: "event",
        Q3228788: "event",
        Q4129844: "legislation",
        Q4551312: "legislation",
        Q7094094: "event",
        Q7305681: "event",
        Q16920687: "software",
        Q17042339: "software",
        Q17042740: "software",
        Q17048758: "software",
        Q11498766: "legislation",
        Q11508806: "event",
        Q21295041: "software",
        Q29558845: "software",
        Q23058816: "event",
        Q24352765: "legislation",
        Q26202706: "event",
        Q111188815: "treaty",
        Q322943: "treaty",
        Q407954: "regulation",
        Q595819: "treaty",
        Q1003870: "treaty",
        Q1378084: "treaty",
        Q1412901: "treaty",
        Q66475733: "software",
        Q66481903: "software",
        Q64605569: "legislation",
        Q66986906: "event",
        Q67600422: "legislation",
        Q543: "legislation",
        Q46388: "legislation",
        Q75122566: "performance",
        Q108783313: "periodical",
        Q110163480: "periodical",
        Q100315040: "song",
        Q96252740: "software",
        Q96252759: "software",
        Q99937696: "software",
        Q112043170: "song",
        Q112043174: "song",
        Q94993180: "legislation",
        Q96798109: "legislation",
        Q96640732: "event",
        Q106531811: "software",
        Q106532218: "software",
        Q106532274: "software",
        Q106654545: "software",
        Q106654621: "software",
        Q106654631: "software",
        Q106654690: "software",
        Q106654990: "software",
        Q106655103: "software",
        Q106658276: "software",
        Q106658497: "software",
        Q106658823: "software",
        Q106666009: "software",
        Q106666040: "software",
        Q107049524: "software",
        Q107049586: "software",
        Q104153449: "legislation",
        Q122119: "event",
        Q184937: "event",
        Q189021: "event",
        Q304240: "event",
        Q483279: "event",
        Q516804: "event",
        Q640954: "event",
        Q668984: "event",
        Q851758: "event",
        Q856568: "event",
        Q896903: "event",
        Q1009287: "event",
        Q1077012: "event",
        Q1129398: "event",
        Q1154693: "event",
        Q1154933: "event",
        Q1204890: "event",
        Q1204926: "event",
        Q1205026: "event",
        Q1235095: "event",
        Q1415084: "event",
        Q1575381: "event",
        Q1683527: "event",
        Q1728972: "event",
        Q1781367: "event",
        Q1912415: "event",
        Q1947751: "event",
        Q1958056: "event",
        Q2020153: "event",
        Q2102897: "event",
        Q2288051: "event",
        Q2360207: "event",
        Q2449124: "event",
        Q2508813: "event",
        Q2558569: "event",
        Q2742150: "event",
        Q3070242: "event",
        Q3148252: "event",
        Q3150549: "event",
        Q3187082: "event",
        Q3686605: "event",
        Q3747527: "event",
        Q4382012: "event",
        Q5157579: "event",
        Q5332264: "event",
        Q5381332: "event",
        Q5433139: "event",
        Q5453473: "event",
        Q5535518: "event",
        Q5905214: "event",
        Q6555053: "event",
        Q6598853: "event",
        Q6730910: "event",
        Q6909498: "event",
        Q7688461: "event",
        Q7888355: "event",
        Q10853354: "event",
        Q12033571: "event",
        Q12060019: "event",
        Q13733193: "event",
        Q13783717: "event",
        Q15231127: "event",
        Q17034787: "event",
        Q17149596: "event",
        Q17195514: "event",
        Q18564543: "event",
        Q20052006: "event",
        Q22680699: "event",
        Q24406303: "event",
        Q27030777: "event",
        Q27150036: "event",
        Q29129469: "event",
        Q30545022: "event",
        Q31157300: "event",
        Q37807168: "event",
        Q37937330: "event",
        Q37940671: "event",
        Q37942728: "event",
        Q40692185: "event",
        Q42308998: "event",
        Q42406391: "event",
        Q43325366: "event",
        Q47697311: "event",
        Q52045923: "event",
        Q52261146: "event",
        Q54805501: "event",
        Q54848714: "event",
        Q54849282: "event",
        Q54856399: "event",
        Q54868442: "event",
        Q55775846: "event",
        Q55999548: "event",
        Q56220509: "event",
        Q56370415: "event",
        Q60030312: "event",
        Q60727631: "event",
        Q61728467: "event",
        Q61754086: "event",
        Q22678: "event",
        Q108654909: "event",
        Q312083: "map",
        Q109127478: "event",
        Q1030329: "dataset",
        Q1048515: "map",
        Q1667520: "map",
        Q1813543: "dataset",
        Q1869909: "dataset",
        Q110733760: "event",
        Q111019485: "event",
        Q2723202: "map",
        Q3072024: "motion_picture",
        Q111799602: "event",
        Q4984974: "motion_picture",
        Q5442753: "motion_picture",
        Q5449041: "motion_picture",
        Q146768: "software",
        Q216653: "software",
        Q312466: "software",
        Q605708: "software",
        Q610425: "software",
        Q628760: "software",
        Q628906: "software",
        Q782543: "software",
        Q1033951: "software",
        Q22908155: "dataset",
        Q5455479: "software",
        Q176497: "event",
        Q358576: "event",
        Q1117946: "event",
        Q1182673: "event",
        Q1413045: "event",
        Q1472255: "event",
        Q1568076: "event",
        Q1572731: "event",
        Q1734134: "event",
        Q1737226: "event",
        Q31836066: "motion_picture",
        Q1962255: "event",
        Q11833112: "software",
        Q2873953: "event",
        Q3043178: "event",
        Q4942772: "event",
        Q5281177: "event",
        Q5503489: "event",
        Q6804324: "event",
        Q7099782: "event",
        Q7227436: "event",
        Q17298682: "software",
        Q10394367: "event",
        Q11378372: "event",
        Q11608012: "event",
        Q11609513: "event",
        Q11960275: "event",
        Q12056872: "event",
        Q14806537: "event",
        Q16002495: "event",
        Q17014215: "event",
        Q48781895: "dataset",
        Q19562604: "event",
        Q20948892: "event",
        Q28052871: "event",
        Q28469958: "event",
        Q59688552: "dataset",
        Q33093659: "event",
        Q73403617: "dataset",
        Q81635374: "motion_picture",
        Q9135: "software",
        Q61858413: "event",
        Q61952495: "event",
        Q65549814: "event",
        Q66087801: "event",
        Q66801314: "event",
        Q68103526: "event",
        Q68691239: "event",
        Q51404: "event",
        Q75171163: "event",
        Q76650418: "event",
        Q106841600: "dataset",
        Q80593337: "event",
        Q85443050: "event",
        Q86935657: "event",
        Q98400269: "software",
        Q90285444: "event",
        Q93763662: "event",
        Q96203973: "event",
        Q97307251: "event",
        Q97594670: "event",
        Q97595211: "event",
        Q97613857: "event",
        Q97621215: "event",
        Q98593889: "event",
        Q98617807: "event",
        Q98741945: "event",
        Q105592411: "event",
        Q105703712: "event",
        Q105992668: "event",
        Q107285205: "event",
        Q109020948: "software",
        Q266680: "map",
        Q451584: "legal_case",
        Q627517: "periodical",
        Q676027: "legal_case",
        Q746654: "periodical",
        Q773668: "periodical",
        Q1056489: "legal_case",
        Q1288220: "legal_case",
        Q1355509: "map",
        Q1702772: "map",
        Q2035351: "map",
        Q2073537: "manuscript",
        Q2206565: "legal_case",
        Q2204393: "map",
        Q2325507: "map",
        Q2444392: "legal_case",
        Q2783852: "legal_case",
        Q2308891: "report",
        Q5500839: "legal_case",
        Q5504094: "legal_case",
        Q5633421: "periodical",
        Q6296062: "periodical",
        Q5469880: "report",
        Q5469893: "report",
        Q5469912: "report",
        Q7113774: "periodical",
        Q7318362: "periodical",
        Q9311507: "manuscript",
        Q10438653: "map",
        Q11356864: "motion_picture",
        Q11605103: "periodical",
        Q11626120: "legal_case",
        Q10714197: "report",
        Q16024164: "periodical",
        Q17093751: "motion_picture",
        Q19969434: "manuscript",
        Q20064845: "legal_case",
        Q19393197: "speech",
        Q597685: "legislation",
        Q1417548: "regulation",
        Q843065: "event",
        Q1298239: "legislation",
        Q1700962: "book",
        Q1126049: "event",
        Q2933856: "manuscript",
        Q2795484: "legislation",
        Q2479310: "event",
        Q2629979: "event",
        Q2653314: "event",
        Q3160852: "event",
        Q6406128: "legislation",
        Q7309699: "legislation",
        Q12163592: "legislation",
        Q11859675: "event",
        Q13093494: "event",
        Q11492817: "standard",
        Q16958989: "event",
        Q48415888: "periodical",
        Q51135530: "periodical",
        Q3042307: "performance",
        Q5209084: "performance",
        Q5805204: "performance",
        Q25432626: "legislation",
        Q56317484: "periodical",
        Q28148017: "event",
        Q59156245: "dataset",
        Q11611846: "performance",
        Q11649847: "performance",
        Q11649873: "performance",
        Q65770378: "periodical",
        Q17211407: "performance",
        Q17229171: "performance",
        Q3407263: "thesis",
        Q73364223: "periodical",
        Q73365221: "periodical",
        Q73365499: "periodical",
        Q73897617: "periodical",
        Q100162344: "report",
        Q102229379: "report",
        Q75029410: "legislation",
        Q104883495: "report",
        Q105650940: "report",
        Q108202210: "periodical",
        Q106941010: "report",
        Q107963213: "report",
        Q111324928: "manuscript",
        Q111709234: "report",
        Q90568342: "legislation",
        Q93698766: "legislation",
        Q93727012: "legislation",
        Q93788070: "legislation",
        Q93788815: "legislation",
        Q93789467: "legislation",
        Q93868967: "legislation",
        Q93916684: "legislation",
        Q94527229: "legislation",
        Q101073581: "legislation",
        Q105984528: "legislation",
        Q108066346: "legislation",
        Q643684: "motion_picture",
        Q1344642: "map",
        Q110055606: "event",
        Q814294: "report",
        Q2518205: "motion_picture",
        Q2665960: "report",
        Q4839755: "motion_picture",
        Q4118620: "report",
        Q5400070: "motion_picture",
        Q7097859: "motion_picture",
        Q11631240: "report",
        Q12805134: "report",
        Q17056655: "report",
        Q18030695: "report",
        Q274079: "event",
        Q322832: "event",
        Q500834: "event",
        Q599999: "event",
        Q956247: "event",
        Q1341622: "event",
        Q1436257: "event",
        Q1469424: "event",
        Q1520733: "event",
        Q1752292: "event",
        Q1836494: "event",
        Q2112179: "event",
        Q2176276: "event",
        Q2304125: "event",
        Q2446500: "event",
        Q4220917: "event",
        Q2507578: "standard",
        Q5157412: "event",
        Q5347841: "event",
        Q5505236: "event",
        Q6027235: "event",
        Q6887795: "event",
        Q7229766: "event",
        Q7404314: "event",
        Q7561653: "event",
        Q8047675: "standard",
        Q10883561: "event",
        Q11232199: "standard",
        Q11232203: "standard",
        Q11232214: "standard",
        Q11703801: "standard",
        Q12744912: "standard",
        Q16543246: "event",
        Q16940891: "event",
        Q17040469: "event",
        Q16082754: "standard",
        Q47512784: "report",
        Q20054762: "event",
        Q107093144: "regulation",
        Q24945394: "event",
        Q28666752: "event",
        Q1935048: "interview",
        Q7696504: "interview",
        Q65494947: "report",
        Q66686000: "report",
        Q11670583: "interview",
        Q47492618: "event",
        Q426759: "regulation",
        Q1454154: "regulation",
        Q56683522: "event",
        Q55682466: "standard",
        Q60191832: "event",
        Q60793682: "event",
        Q71817238: "event",
        Q107614552: "report",
        Q108624651: "report",
        Q109041551: "report",
        Q109041554: "report",
        Q86740154: "event",
        Q92885393: "event",
        Q99538912: "event",
        Q100707160: "event",
        Q107243326: "event",
        Q5465504: "patent",
        Q658334: "song",
        Q1162461: "song",
        Q1195630: "song",
        Q188558: "software",
        Q4272073: "software",
        Q628080: "legislation",
        Q670787: "book",
        Q699907: "legislation",
        Q731236: "legislation",
        Q1014906: "legislation",
        Q1358138: "book",
        Q1497584: "book",
        Q1068013: "event",
        Q1923776: "legislation",
        Q1462418: "event",
        Q2333573: "legislation",
        Q374911: "standard",
        Q3357101: "legislation",
        Q4690955: "book",
        Q7502092: "book",
        Q9197378: "book",
        Q11689371: "book",
        Q12041885: "legislation",
        Q17001582: "legislation",
        Q18378849: "event",
        Q21002890: "book",
        Q34311120: "standard",
        Q56309057: "manuscript",
        Q30941805: "legislation",
        Q38161310: "standard",
        Q50380591: "legislation",
        Q51881567: "legislation",
        Q56330488: "legislation",
        Q19705: "legislation",
        Q98400282: "software",
        Q105395504: "software",
        Q100165902: "standard",
        Q212781: "motion_picture",
        Q496523: "motion_picture",
        Q535518: "motion_picture",
        Q580013: "motion_picture",
        Q583768: "motion_picture",
        Q586250: "motion_picture",
        Q883179: "motion_picture",
        Q1092361: "motion_picture",
        Q1377546: "motion_picture",
        Q1474387: "motion_picture",
        Q1941707: "motion_picture",
        Q2101714: "motion_picture",
        Q2254193: "motion_picture",
        Q2273331: "motion_picture",
        Q2292320: "motion_picture",
        Q2445146: "motion_picture",
        Q2642760: "motion_picture",
        Q1427258: "report",
        Q1541065: "report",
        Q3677202: "motion_picture",
        Q4044177: "motion_picture",
        Q4047254: "motion_picture",
        Q4075563: "motion_picture",
        Q4875794: "motion_picture",
        Q5032666: "motion_picture",
        Q5897543: "motion_picture",
        Q7444356: "motion_picture",
        Q7063014: "report",
        Q1051575: "song",
        Q1206090: "song",
        Q1785243: "song",
        Q12049743: "motion_picture",
        Q1939197: "song",
        Q2138543: "song",
        Q2278881: "song",
        Q11552358: "report",
        Q2894547: "song",
        Q2956172: "song",
        Q3334664: "song",
        Q3542334: "song",
        Q3656521: "song",
        Q5639330: "song",
        Q5640528: "song",
        Q5716336: "song",
        Q5934478: "song",
        Q6348907: "song",
        Q6430313: "song",
        Q6480726: "song",
        Q7059159: "song",
        Q16664076: "report",
        Q8261759: "song",
        Q9031318: "song",
        Q9034560: "song",
        Q19367312: "motion_picture",
        Q10743749: "song",
        Q842193: "software",
        Q11989328: "song",
        Q12010046: "song",
        Q12135013: "song",
        Q12159910: "song",
        Q12623540: "song",
        Q12817895: "song",
        Q13025595: "song",
        Q13036970: "song",
        Q13114060: "song",
        Q25230421: "motion_picture",
        Q25533274: "motion_picture",
        Q15839077: "song",
        Q16304401: "song",
        Q16535861: "song",
        Q17009228: "song",
        Q17598653: "song",
        Q18534490: "song",
        Q18702741: "song",
        Q2026749: "standard",
        Q25537138: "song",
        Q25620807: "song",
        Q25629962: "song",
        Q4033930: "standard",
        Q31444443: "song",
        Q39774781: "song",
        Q31841064: "software",
        Q60477130: "song",
        Q63064412: "song",
        Q65211748: "song",
        Q65212418: "song",
        Q104536771: "motion_picture",
        Q109733630: "motion_picture",
        Q106654149: "song",
        Q107044696: "song",
        Q107356948: "song",
        Q108821603: "song",
        Q108833878: "song",
        Q108866112: "song",
        Q109559272: "song",
        Q110548351: "song",
        Q111042466: "song",
        Q111186968: "song",
        Q109358035: "book",
        Q5413472: "motion_picture",
        Q5578091: "motion_picture",
        Q5768328: "motion_picture",
        Q5872891: "motion_picture",
        Q6926334: "motion_picture",
        Q7116678: "motion_picture",
        Q7542092: "motion_picture",
        Q8038643: "legal_case",
        Q267136: "dataset",
        Q324254: "dataset",
        Q624546: "dataset",
        Q1147639: "dataset",
        Q1397073: "dataset",
        Q1662581: "dataset",
        Q1754331: "dataset",
        Q11631566: "legal_case",
        Q2262868: "dataset",
        Q2268965: "dataset",
        Q2285054: "dataset",
        Q3406872: "dataset",
        Q5033354: "dataset",
        Q5227322: "dataset",
        Q5378800: "dataset",
        Q5532670: "dataset",
        Q6410349: "song",
        Q7189593: "dataset",
        Q16984663: "motion_picture",
        Q7449052: "dataset",
        Q7598341: "dataset",
        Q7995661: "dataset",
        Q207170: "software",
        Q955452: "software",
        Q2276335: "software",
        Q24905792: "motion_picture",
        Q17050075: "dataset",
        Q17146953: "dataset",
        Q6821796: "software",
        Q128093: "book",
        Q632346: "book",
        Q776248: "book",
        Q856054: "book",
        Q1503133: "book",
        Q1503147: "book",
        Q1601744: "book",
        Q2004748: "legislation",
        Q1770563: "event",
        Q185149: "standard",
        Q2745914: "book",
        Q289038: "standard",
        Q300080: "standard",
        Q2043676: "standard",
        Q2043680: "standard",
        Q5571907: "book",
        Q6113985: "book",
        Q11505973: "book",
        Q11820947: "book",
        Q17321463: "legislation",
        Q19816504: "book",
        Q29642842: "software",
        Q20857758: "event",
        Q41623316: "dataset",
        Q26234050: "legislation",
        Q11694007: "performance",
        Q56297582: "dataset",
        Q66425231: "motion_picture",
        Q38647918: "book",
        Q22283598: "performance",
        Q81746082: "motion_picture",
        Q56293795: "legislation",
        Q60829836: "book",
        Q96405489: "motion_picture",
        Q97191621: "motion_picture",
        Q37484: "book",
        Q47148: "book",
        Q108084492: "motion_picture",
        Q95987576: "standard",
        Q99602118: "standard",
        Q99602591: "standard",
        Q105450799: "book",
        Q108302776: "performance",
        Q108404216: "performance",
        Q223770: "motion_picture",
        Q1117103: "motion_picture",
        Q108599373: "standard",
        Q108599417: "standard",
        Q111439107: "standard",
        Q111439112: "standard",
        Q111439204: "standard",
        Q111440435: "standard",
        Q111440514: "standard",
        Q1344700: "software",
        Q4781631: "software",
        Q4856363: "software",
        Q7156793: "software",
        Q911470: "standard",
        Q1114525: "standard",
        Q1329540: "standard",
        Q1340688: "standard",
        Q1372376: "standard",
        Q2920790: "standard",
        Q3393258: "standard",
        Q18357595: "software",
        Q7021281: "standard",
        Q21015577: "software",
        Q21031275: "software",
        Q15087423: "standard",
        Q28057030: "software",
        Q19428116: "standard",
        Q52162262: "motion_picture",
        Q21705905: "standard",
        Q56304998: "motion_picture",
        Q26234134: "standard",
        Q28324852: "standard",
        Q55935585: "standard",
        Q73213465: "standard",
        Q108921056: "motion_picture",
        Q108804797: "book",
        Q895583: "motion_picture",
        Q249697: "speech",
        Q2281511: "motion_picture",
        Q3076696: "motion_picture",
        Q7645884: "motion_picture",
        Q6549529: "book",
        Q4130722: "standard",
        Q4172733: "standard",
        Q4173959: "standard",
        Q4173961: "standard",
        Q19146569: "standard",
        Q19146573: "standard",
        Q19146577: "standard",
        Q19146581: "standard",
        Q19146586: "standard",
        Q19146594: "standard",
        Q19146598: "standard",
        Q19146602: "standard",
        Q19146608: "standard",
        Q19146612: "standard",
        Q19146626: "standard",
        Q19146631: "standard",
        Q19146635: "standard",
        Q19146639: "standard",
        Q19146649: "standard",
        Q19146655: "standard",
        Q19146662: "standard",
        Q19146666: "standard",
        Q19146670: "standard",
        Q19146676: "standard",
        Q19146683: "standard",
        Q19146680: "standard",
        Q19146687: "standard",
        Q19146690: "standard",
        Q19146694: "standard",
        Q19146705: "standard",
        Q19146714: "standard",
        Q19146719: "standard",
        Q19146724: "standard",
        Q19146728: "standard",
        Q19146736: "standard",
        Q19146750: "standard",
        Q19146754: "standard",
        Q19146758: "standard",
        Q19146763: "standard",
        Q19146768: "standard",
        Q19146772: "standard",
        Q19146776: "standard",
        Q19146780: "standard",
        Q19146784: "standard",
        Q19146789: "standard",
        Q19146797: "standard",
        Q19146806: "standard",
        Q19146811: "standard",
        Q19146814: "standard",
        Q19146818: "standard",
        Q19146822: "standard",
        Q19146826: "standard",
        Q19146831: "standard",
        Q19146834: "standard",
        Q19146839: "standard",
        Q19146850: "standard",
        Q19146854: "standard",
        Q19146858: "standard",
        Q19146864: "standard",
        Q19146875: "standard",
        Q19146873: "standard",
        Q19146881: "standard",
        Q19146885: "standard",
        Q19146889: "standard",
        Q19146894: "standard",
        Q19146898: "standard",
        Q19146901: "standard",
        Q19146905: "standard",
        Q19146909: "standard",
        Q19146921: "standard",
        Q19146925: "standard",
        Q19146930: "standard",
        Q19146934: "standard",
        Q19146943: "standard",
        Q19146940: "standard",
        Q19146951: "standard",
        Q19146956: "standard",
        Q19146960: "standard",
        Q55937426: "standard",
        Q58482603: "book",
        Q58806721: "book",
        Q67574925: "standard",
        Q108202392: "motion_picture",
        Q108212954: "motion_picture",
        Q108258724: "motion_picture",
        Q111278985: "motion_picture",
        Q111279477: "motion_picture",
        Q82813203: "book",
        Q86687516: "book",
        Q88306017: "software",
        Q87592808: "standard",
        Q71550: "software",
        Q76320: "software",
        Q186849: "software",
        Q230966: "software",
        Q336601: "software",
        Q513349: "software",
        Q745602: "software",
        Q784561: "software",
        Q859477: "software",
        Q1162303: "software",
        Q1315933: "software",
        Q1645817: "software",
        Q1892116: "software",
        Q1978818: "software",
        Q2021268: "software",
        Q3958017: "software",
        Q19146964: "standard",
        Q19146968: "standard",
        Q19146983: "standard",
        Q19146986: "standard",
        Q19146990: "standard",
        Q19146995: "standard",
        Q19146999: "standard",
        Q19147003: "standard",
        Q19147007: "standard",
        Q19147017: "standard",
        Q19147021: "standard",
        Q19147025: "standard",
        Q19147029: "standard",
        Q19147035: "standard",
        Q19147042: "standard",
        Q19147046: "standard",
        Q19147050: "standard",
        Q19147058: "standard",
        Q19147062: "standard",
        Q19147066: "standard",
        Q19147070: "standard",
        Q19147079: "standard",
        Q19147084: "standard",
        Q19147088: "standard",
        Q19147093: "standard",
        Q19147098: "standard",
        Q19147102: "standard",
        Q19147106: "standard",
        Q19147116: "standard",
        Q19147130: "standard",
        Q19147139: "standard",
        Q19147143: "standard",
        Q19147146: "standard",
        Q19147151: "standard",
        Q19147155: "standard",
        Q19147160: "standard",
        Q19147171: "standard",
        Q19147178: "standard",
        Q19147182: "standard",
        Q19147187: "standard",
        Q19147192: "standard",
        Q19147197: "standard",
        Q19147202: "standard",
        Q19147206: "standard",
        Q19147214: "standard",
        Q19147219: "standard",
        Q19147223: "standard",
        Q19147227: "standard",
        Q19147231: "standard",
        Q19147235: "standard",
        Q19147245: "standard",
        Q19147251: "standard",
        Q19147254: "standard",
        Q19153084: "standard",
        Q19153088: "standard",
        Q19153093: "standard",
        Q19153099: "standard",
        Q19153108: "standard",
        Q19153112: "standard",
        Q19414650: "standard",
        Q19414779: "standard",
        Q19414785: "standard",
        Q19588174: "standard",
        Q19588175: "standard",
        Q19588190: "standard",
        Q19669998: "standard",
        Q19669999: "standard",
        Q19670003: "standard",
        Q19670001: "standard",
        Q19800367: "standard",
        Q19800374: "standard",
        Q19857619: "standard",
        Q19857617: "standard",
        Q19857620: "standard",
        Q19857621: "standard",
        Q19857638: "standard",
        Q19967179: "standard",
        Q20204586: "standard",
        Q20204584: "standard",
        Q20204585: "standard",
        Q20204588: "standard",
        Q11189: "software",
        Q11288: "software",
        Q55541: "software",
        Q193842: "map",
        Q336371: "map",
        Q459798: "map",
        Q831939: "map",
        Q865144: "map",
        Q889561: "map",
        Q1152543: "map",
        Q1281814: "map",
        Q1403728: "map",
        Q1674401: "map",
        Q1688818: "map",
        Q1800237: "map",
        Q2126801: "map",
        Q2298569: "map",
        Q111302423: "event",
        Q1673963: "dataset",
        Q1711400: "broadcast",
        Q6006264: "software",
        Q17152639: "dataset",
        Q6546621: "review",
        Q17113138: "broadcast",
        Q471894: "book",
        Q586744: "book",
        Q181817: "event",
        Q216584: "event",
        Q956165: "book",
        Q483226: "event",
        Q599470: "event",
        Q655743: "event",
        Q744759: "event",
        Q838921: "event",
        Q1569753: "book",
        Q1154888: "event",
        Q1197685: "event",
        Q1238731: "event",
        Q1401461: "event",
        Q1897717: "event",
        Q2559933: "event",
        Q2583345: "event",
        Q112046597: "entry",
        Q2916333: "event",
        Q3104369: "event",
        Q3187076: "event",
        Q3322950: "event",
        Q3394418: "event",
        Q3776406: "event",
        Q4158203: "event",
        Q5242917: "event",
        Q5281906: "event",
        Q5368985: "event",
        Q15077416: "software",
        Q6508605: "event",
        Q16676491: "software",
        Q7295710: "event",
        Q7295709: "event",
        Q18511644: "software",
        Q9805074: "review",
        Q9385304: "event",
        Q11133386: "book",
        Q12040484: "book",
        Q12758917: "event",
        Q13079179: "event",
        Q13475159: "event",
        Q97378230: "map",
        Q98503814: "map",
        Q99414314: "manuscript",
        Q92248322: "broadcast",
        Q104079854: "manuscript",
        Q104079920: "manuscript",
        Q104080182: "manuscript",
        Q104080231: "manuscript",
        Q104080293: "manuscript",
        Q104080336: "manuscript",
        Q104086307: "manuscript",
        Q104376649: "manuscript",
        Q105709609: "manuscript",
        Q105709627: "manuscript",
        Q105709646: "manuscript",
        Q105709668: "manuscript",
        Q105709691: "manuscript",
        Q105830123: "manuscript",
        Q107107578: "map",
        Q108525371: "map",
        Q109568261: "map",
        Q104439055: "broadcast",
        Q106878632: "broadcast",
        Q104438917: "book",
        Q104438920: "book",
        Q104438925: "book",
        Q106603810: "event",
        Q16207587: "event",
        Q26261192: "software",
        Q18507466: "event",
        Q20900468: "event",
        Q21971577: "event",
        Q34044154: "software",
        Q1646902: "entry",
        Q41590688: "software",
        Q7132715: "entry",
        Q7180622: "entry",
        Q55069667: "software",
        Q56369138: "software",
        Q36524: "dataset",
        Q28801354: "entry",
        Q61020892: "book",
        Q61441268: "event",
        Q64214312: "event",
        Q65921414: "event",
        Q4618: "event",
        Q11269: "event",
        Q130: "event",
        Q131: "event",
        Q132: "event",
        Q79700418: "legislation",
        Q81859300: "event",
        Q102430381: "broadcast",
        Q89128237: "event",
        Q108857012: "broadcast",
        Q105518754: "event",
        Q815382: "article-journal",
        Q2940611: "map",
        Q2940627: "map",
        Q4201337: "manuscript",
        Q4903803: "map",
        Q5687679: "map",
        Q6484285: "map",
        Q10480692: "map",
        Q10604395: "map",
        Q11960416: "map",
        Q12008992: "map",
        Q502319: "broadcast",
        Q1187667: "broadcast",
        Q1742009: "broadcast",
        Q2125867: "broadcast",
        Q3237931: "broadcast",
        Q3956369: "broadcast",
        Q17074865: "map",
        Q17086104: "map",
        Q17147147: "map",
        Q6912943: "broadcast",
        Q7050677: "broadcast",
        Q19393521: "map",
        Q12049949: "broadcast",
        Q14623351: "broadcast",
        Q337055: "book",
        Q18311760: "broadcast",
        Q352581: "event",
        Q431867: "event",
        Q489644: "event",
        Q800193: "event",
        Q851387: "event",
        Q906066: "event",
        Q1405217: "event",
        Q1741806: "event",
        Q1847746: "event",
        Q2285545: "event",
        Q2436389: "event",
        Q3558006: "event",
        Q4613441: "event",
        Q6147123: "event",
        Q7239040: "event",
        Q9353932: "book",
        Q11263449: "event",
        Q11410140: "event",
        Q11762000: "event",
        Q12041674: "event",
        Q12042863: "event",
        Q12046411: "event",
        Q13077211: "event",
        Q15726071: "event",
        Q17051500: "event",
        Q17051602: "event",
        Q17068807: "event",
        Q19275772: "book",
        Q20205194: "event",
        Q28225716: "event",
        Q183169: "webpage",
        Q56240541: "broadcast",
        Q57608327: "broadcast",
        Q64617471: "song",
        Q55356330: "event",
        Q216297: "periodical",
        Q825914: "periodical",
        Q882682: "manuscript",
        Q933530: "periodical",
        Q1862738: "periodical",
        Q3088767: "periodical",
        Q4804740: "periodical",
        Q3564515: "speech",
        Q5374928: "map",
        Q5974932: "manuscript",
        Q5391567: "speech",
        Q7444692: "map",
        Q8036547: "map",
        Q10889286: "periodical",
        Q12076696: "motion_picture",
        Q1257934: "broadcast",
        Q3246768: "broadcast",
        Q105684597: "performance",
        Q4949058: "broadcast",
        Q17121221: "map",
        Q12912493: "broadcast",
        Q5145870: "software",
        Q5969903: "software",
        Q316025: "legislation",
        Q728629: "book",
        Q1027825: "book",
        Q1516252: "book",
        Q1006494: "event",
        Q1064441: "event",
        Q1133236: "event",
        Q1136723: "event",
        Q1899048: "legislation",
        Q1595680: "event",
        Q2139499: "legislation",
        Q1726671: "event",
        Q31898054: "motion_picture",
        Q176831: "standard",
        Q330153: "standard",
        Q2323817: "event",
        Q846292: "standard",
        Q932442: "standard",
        Q3993012: "book",
        Q5162726: "legislation",
        Q4048749: "standard",
        Q8019724: "book",
        Q7892471: "standard",
        Q10688394: "book",
        Q11292115: "standard",
        Q16240886: "standard",
        Q46992920: "speech",
        Q29051497: "software",
        Q29642950: "standard",
        Q1501912: "performance",
        Q21009694: "book",
        Q21013896: "legislation",
        Q2461853: "performance",
        Q3055151: "performance",
        Q23888763: "book",
        Q5309605: "performance",
        Q43178228: "broadcast",
        Q56028349: "periodical",
        Q56318478: "manuscript",
        Q56697520: "periodical",
        Q26849155: "event",
        Q61855877: "broadcast",
        Q63143903: "broadcast",
        Q57590076: "software",
        Q70589944: "dataset",
        Q61671409: "event",
        Q73539779: "software",
        Q41075: "legislation",
        Q10931: "event",
        Q45382: "event",
        Q90181054: "broadcast",
        Q97052294: "broadcast",
        Q111147075: "motion_picture",
        Q51282626: "thesis",
        Q51283070: "thesis",
        Q51283092: "thesis",
        Q51283110: "thesis",
        Q51283164: "thesis",
        Q51283181: "thesis",
        Q51283199: "thesis",
        Q51283219: "thesis",
        Q51283231: "thesis",
        Q51283362: "thesis",
        Q110920134: "broadcast",
        Q111723127: "broadcast",
        Q100235853: "book",
        Q110900077: "book",
        Q110903035: "dataset",
        Q1957385: "motion_picture",
        Q2135500: "manuscript",
        Q2302208: "periodical",
        Q5894660: "periodical",
        Q97293109: "performance",
        Q201456: "dataset",
        Q220393: "dataset",
        Q319949: "dataset",
        Q327349: "dataset",
        Q367035: "dataset",
        Q605175: "dataset",
        Q675474: "dataset",
        Q718744: "dataset",
        Q811443: "dataset",
        Q815410: "dataset",
        Q819688: "dataset",
        Q843152: "dataset",
        Q854459: "dataset",
        Q856638: "dataset",
        Q897682: "dataset",
        Q579955: "song",
        Q1006160: "dataset",
        Q1114135: "dataset",
        Q1283247: "dataset",
        Q1328072: "dataset",
        Q1347359: "dataset",
        Q1392703: "dataset",
        Q1400059: "dataset",
        Q1665882: "dataset",
        Q1754061: "dataset",
        Q1787111: "dataset",
        Q1789446: "dataset",
        Q1789476: "dataset",
        Q1807746: "dataset",
        Q1915979: "dataset",
        Q1988927: "dataset",
        Q1991865: "dataset",
        Q2038458: "dataset",
        Q2210505: "dataset",
        Q2249973: "dataset",
        Q2376426: "dataset",
        Q2534157: "dataset",
        Q2538912: "dataset",
        Q2597555: "dataset",
        Q745818: "broadcast",
        Q2235992: "song",
        Q1259376: "broadcast",
        Q3346024: "dataset",
        Q3348095: "dataset",
        Q17541977: "periodical",
        Q6495397: "broadcast",
        Q214932: "software",
        Q10671076: "song",
        Q333299: "software",
        Q778022: "software",
        Q1339469: "software",
        Q2081815: "software",
        Q5157524: "software",
        Q6290007: "software",
        Q215495: "book",
        Q220935: "book",
        Q558325: "book",
        Q728121: "book",
        Q1954906: "software",
        Q2022945: "book",
        Q2619673: "book",
        Q11774715: "software",
        Q4873075: "book",
        Q18350054: "software",
        Q19680204: "software",
        Q28216744: "software",
        Q19364663: "book",
        Q22938710: "book",
        Q31837551: "software",
        Q51719975: "broadcast",
        Q65128560: "software",
        Q1298958: "treaty",
        Q87527714: "periodical",
        Q86832479: "speech",
        Q91106056: "motion_picture",
        Q71177199: "software",
        Q63107117: "book",
        Q92581970: "periodical",
        Q65596220: "book",
        Q65598254: "book",
        Q65598475: "book",
        Q107803469: "periodical",
        Q77762853: "event",
        Q98047893: "software",
        Q105627212: "software",
        Q105723400: "software",
        Q98091669: "book",
        Q107710019: "software",
        Q107528347: "book",
        Q108346556: "book",
        Q108352496: "book",
        Q108352648: "book",
        Q111818121: "book",
        Q2750442: "manuscript",
        Q111522339: "event",
        Q3786423: "motion_picture",
        Q6899707: "map",
        Q2259405: "song",
        Q12488525: "manuscript",
        Q13094371: "manuscript",
        Q13095680: "manuscript",
        Q3404298: "dataset",
        Q3878797: "dataset",
        Q3932009: "dataset",
        Q4907362: "dataset",
        Q5123546: "dataset",
        Q5141544: "dataset",
        Q5146094: "dataset",
        Q5465083: "dataset",
        Q6982656: "dataset",
        Q7096331: "dataset",
        Q16879683: "manuscript",
        Q7455731: "dataset",
        Q10413470: "dataset",
        Q10624528: "dataset",
        Q176165: "software",
        Q469558: "software",
        Q11439867: "dataset",
        Q11581608: "dataset",
        Q11722865: "dataset",
        Q1059251: "software",
        Q1428723: "software",
        Q12617436: "dataset",
        Q2652378: "software",
        Q2713600: "software",
        Q3257930: "software",
        Q14760101: "dataset",
        Q15097084: "dataset",
        Q5133853: "software",
        Q16832380: "dataset",
        Q16956681: "dataset",
        Q7301504: "software",
        Q19386377: "dataset",
        Q125375: "event",
        Q138567: "event",
        Q167407: "event",
        Q209715: "event",
        Q20771519: "dataset",
        Q422695: "event",
        Q661950: "event",
        Q1962297: "book",
        Q22692845: "dataset",
        Q3287501: "event",
        Q4887449: "event",
        Q5938084: "performance",
        Q38608778: "motion_picture",
        Q29937289: "dataset",
        Q18369361: "event",
        Q1800684: "performance",
        Q28924364: "book",
        Q52666561: "dataset",
        Q59156121: "dataset",
        Q59157818: "dataset",
        Q59818481: "dataset",
        Q59977151: "dataset",
        Q60644424: "dataset",
        Q60686104: "dataset",
        Q62404897: "dataset",
        Q62680221: "dataset",
        Q62686468: "dataset",
        Q62809234: "dataset",
        Q63161834: "dataset",
        Q63539029: "dataset",
        Q64222248: "dataset",
        Q64620541: "dataset",
        Q71470157: "dataset",
        Q58471241: "event",
        Q65767991: "event",
        Q49836: "event",
        Q90076236: "dataset",
        Q91169544: "dataset",
        Q92206266: "dataset",
        Q104623069: "motion_picture",
        Q99515455: "dataset",
        Q109733294: "motion_picture",
        Q109733304: "motion_picture",
        Q109733333: "motion_picture",
        Q101191533: "dataset",
        Q101523329: "dataset",
        Q102700083: "dataset",
        Q103915590: "dataset",
        Q104450703: "dataset",
        Q85751523: "event",
        Q106206185: "dataset",
        Q106241443: "dataset",
        Q109730522: "dataset",
        Q109913439: "dataset",
        Q97940470: "event",
        Q108046453: "book",
        Q108808103: "event",
        Q108808120: "event",
        Q109767751: "event",
        Q110041043: "event",
        Q110732759: "event",
        Q110732756: "event",
        Q110733918: "event",
        Q110918239: "event",
        Q111161: "event",
        Q127807: "event",
        Q152263: "event",
        Q319024: "event",
        Q370149: "event",
        Q426394: "event",
        Q596643: "event",
        Q653079: "event",
        Q681204: "event",
        Q685639: "event",
        Q716770: "event",
        Q751892: "event",
        Q758824: "event",
        Q811671: "event",
        Q831942: "event",
        Q835941: "event",
        Q894615: "event",
        Q1067715: "event",
        Q1068633: "event",
        Q1075723: "event",
        Q1308126: "event",
        Q1359655: "event",
        Q1380982: "event",
        Q1549117: "event",
        Q1623327: "event",
        Q1671499: "event",
        Q1878381: "event",
        Q1905393: "event",
        Q1959157: "event",
        Q2050944: "event",
        Q2083964: "event",
        Q2146944: "event",
        Q2324916: "event",
        Q2879429: "event",
        Q3010392: "event",
        Q3276932: "event",
        Q3534263: "event",
        Q4202178: "event",
        Q4504495: "event",
        Q5032270: "event",
        Q5033350: "event",
        Q5072702: "event",
        Q5602431: "event",
        Q6359606: "event",
        Q6359604: "event",
        Q7447128: "event",
        Q7512982: "event",
        Q7519600: "event",
        Q8184060: "event",
        Q8344142: "event",
        Q10551803: "event",
        Q10655255: "event",
        Q10889547: "event",
        Q11407181: "event",
        Q11500844: "event",
        Q11581030: "event",
        Q11603432: "event",
        Q11658210: "event",
        Q12398174: "event",
        Q13096308: "event",
        Q13537604: "event",
        Q14475832: "event",
        Q16571590: "event",
        Q16635429: "event",
        Q18114433: "event",
        Q20004056: "event",
        Q20041008: "event",
        Q21490601: "event",
        Q41154026: "event",
        Q56424918: "event",
        Q63430831: "event",
        Q65681220: "event",
        Q66242135: "event",
        Q29710: "event",
        Q70004722: "event",
        Q85883975: "event",
        Q87355382: "event",
        Q93398711: "event",
        Q101584228: "event",
        Q104214305: "event",
        Q105030293: "event",
        Q105883653: "event",
        Q108045199: "event",
        Q108151198: "event",
        Q108151420: "event",
        Q108164916: "event",
        Q108178885: "event",
        Q108188863: "event",
        Q108196311: "event",
        Q108215655: "event",
        Q157394: "motion_picture",
        Q200092: "motion_picture",
        Q471839: "motion_picture",
        Q109829176: "event",
        Q1342372: "motion_picture",
        Q1535153: "motion_picture",
        Q110886414: "event",
        Q111039992: "event",
        Q1458153: "report",
        Q7551110: "motion_picture",
        Q20443008: "motion_picture",
        Q20656352: "motion_picture",
        Q12408875: "song",
        Q4819859: "software",
        Q1196060: "event",
        Q1325214: "event",
        Q1334097: "event",
        Q1459915: "event",
        Q1466789: "event",
        Q1518315: "event",
        Q1526506: "event",
        Q1543677: "event",
        Q1929797: "event",
        Q1952123: "event",
        Q2021351: "event",
        Q2045234: "event",
        Q2100614: "event",
        Q2172087: "event",
        Q2242213: "event",
        Q2281546: "event",
        Q2380882: "event",
        Q2411248: "event",
        Q2466596: "event",
        Q2495862: "event",
        Q2548750: "event",
        Q2557194: "event",
        Q2633882: "event",
        Q2684021: "event",
        Q2692421: "event",
        Q2714602: "event",
        Q2761621: "event",
        Q2849429: "event",
        Q2949435: "event",
        Q3117735: "event",
        Q3214682: "event",
        Q3315415: "event",
        Q3400581: "event",
        Q3458196: "event",
        Q3804071: "event",
        Q3816943: "event",
        Q4014799: "event",
        Q4228029: "event",
        Q4346052: "event",
        Q4355821: "event",
        Q4504516: "event",
        Q5188112: "event",
        Q5422235: "event",
        Q5463077: "event",
        Q5934865: "event",
        Q7137437: "event",
        Q7248067: "event",
        Q7646193: "event",
        Q10541153: "book",
        Q10900851: "event",
        Q11895625: "event",
        Q11999880: "event",
        Q12031382: "event",
        Q12046407: "event",
        Q13475282: "event",
        Q13734585: "event",
        Q16302720: "event",
        Q18087945: "event",
        Q18207781: "event",
        Q18482853: "event",
        Q18655582: "event",
        Q21198407: "book",
        Q20826063: "event",
        Q21087619: "event",
        Q22956392: "event",
        Q24669521: "event",
        Q25450912: "event",
        Q27556165: "event",
        Q28039691: "event",
        Q28753859: "event",
        Q66948581: "motion_picture",
        Q50877551: "event",
        Q52253007: "event",
        Q54877479: "event",
        Q61949333: "event",
        Q76835641: "event",
        Q77454117: "event",
        Q78187883: "event",
        Q86667968: "event",
        Q89029815: "event",
        Q97145754: "event",
        Q97478799: "event",
        Q104533918: "event",
        Q1228945: "report",
        Q101086122: "performance",
        Q1763023: "song",
        Q9049284: "song",
        Q10933254: "song",
        Q11722315: "song",
        Q12338005: "song",
        Q2429834: "software",
        Q4103363: "software",
        Q103076: "book",
        Q225672: "book",
        Q263790: "book",
        Q284465: "book",
        Q431193: "book",
        Q452961: "book",
        Q616622: "book",
        Q634123: "book",
        Q877342: "book",
        Q1000492: "book",
        Q806993: "legislation",
        Q1146822: "book",
        Q1208461: "book",
        Q1505819: "book",
        Q1483984: "legislation",
        Q1722157: "book",
        Q1530782: "legislation",
        Q1547724: "legislation",
        Q1758354: "book",
        Q1790314: "book",
        Q1671012: "legislation",
        Q1936984: "book",
        Q1486618: "event",
        Q1969688: "legislation",
        Q2138076: "legislation",
        Q2783529: "book",
        Q2894685: "book",
        Q3026054: "book",
        Q3423645: "dataset",
        Q4198569: "book",
        Q4726529: "legislation",
        Q4857264: "legislation",
        Q4921200: "legislation",
        Q5166475: "book",
        Q5149230: "legislation",
        Q5421946: "legislation",
        Q5479761: "legislation",
        Q5531999: "legislation",
        Q5611123: "legislation",
        Q5504093: "event",
        Q6015842: "legislation",
        Q6967951: "legislation",
        Q6973906: "legislation",
        Q6979928: "legislation",
        Q6980029: "legislation",
        Q6980034: "legislation",
        Q6980035: "legislation",
        Q6980109: "legislation",
        Q6980112: "legislation",
        Q7249895: "book",
        Q7260336: "book",
        Q7248917: "legislation",
        Q7335464: "legislation",
        Q7703913: "legislation",
        Q7835390: "legislation",
        Q7897001: "legislation",
        Q7899857: "legislation",
        Q9001409: "book",
        Q20706831: "software",
        Q14496600: "book",
        Q43911809: "motion_picture",
        Q14932089: "legislation",
        Q16259573: "legislation",
        Q17055932: "legislation",
        Q17084199: "legislation",
        Q17991521: "book",
        Q772257: "performance",
        Q21027567: "dataset",
        Q22908608: "legislation",
        Q22909191: "legislation",
        Q27036528: "book",
        Q28518359: "book",
        Q61032574: "article-newspaper",
        Q53746253: "broadcast",
        Q67497694: "report",
        Q46087746: "book",
        Q30922066: "performance",
        Q56315484: "book",
        Q1973500: "treaty",
        Q77659262: "legislation",
        Q106152295: "report",
        Q83708009: "dataset",
        Q108136244: "event",
        Q5563391: "map",
        Q4951617: "report",
        Q461183: "dataset",
        Q407916: "song",
        Q599510: "song",
        Q11812518: "map",
        Q2265295: "song",
        Q2312959: "song",
        Q2737175: "song",
        Q5581134: "song",
        Q8083433: "song",
        Q183065: "software",
        Q591919: "software",
        Q845900: "software",
        Q1341685: "software",
        Q4462013: "software",
        Q6470767: "software",
        Q16988763: "broadcast",
        Q118015: "book",
        Q142872: "book",
        Q173287: "book",
        Q178902: "book",
        Q178985: "book",
        Q193121: "book",
        Q204698: "book",
        Q332472: "book",
        Q338699: "book",
        Q497976: "book",
        Q537198: "book",
        Q570948: "book",
        Q686027: "book",
        Q715697: "book",
        Q781402: "book",
        Q20076760: "song",
        Q817063: "book",
        Q833590: "book",
        Q834060: "book",
        Q848577: "book",
        Q856713: "song",
        Q878026: "book",
        Q951215: "book",
        Q1043605: "book",
        Q1100591: "book",
        Q1200554: "book",
        Q1207269: "book",
        Q1207406: "book",
        Q1226395: "book",
        Q1232283: "book",
        Q1270422: "book",
        Q1294238: "book",
        Q1328435: "book",
        Q1385360: "book",
        Q1503358: "book",
        Q1754581: "book",
        Q1780507: "song",
        Q1862119: "book",
        Q1870618: "book",
        Q1970664: "book",
        Q1996447: "book",
        Q1849028: "legislation",
        Q2114246: "book",
        Q2144117: "book",
        Q2165325: "book",
        Q2955456: "book",
        Q2641292: "event",
        Q3299129: "book",
        Q3411830: "book",
        Q4059355: "book",
        Q4203401: "book",
        Q5177953: "event",
        Q6548306: "book",
        Q16000499: "software",
        Q6658760: "event",
        Q12074823: "legislation",
        Q12765421: "book",
        Q15276670: "book",
        Q15627042: "book",
        Q16709869: "book",
        Q16715217: "legislation",
        Q16960707: "book",
        Q19941906: "book",
        Q21660824: "book",
        Q21818614: "book",
        Q57987419: "interview",
        Q57987455: "interview",
        Q57987589: "interview",
        Q54592743: "event",
        Q40056: "software",
        Q47506: "software",
        Q5381350: "treaty",
        Q61725752: "book",
        Q65274471: "book",
        Q66018414: "book",
        Q37707: "book",
        Q106771533: "book",
        Q107639985: "legislation",
        Q109564886: "book",
        Q109643965: "book",
        Q1261319: "map",
        Q110714031: "book",
        Q110964185: "book",
        Q1321921: "dataset",
        Q2213077: "dataset",
        Q1461497: "broadcast",
        Q1130645: "software",
        Q3153714: "software",
        Q4746208: "software",
        Q2286290: "book",
        Q2307269: "book",
        Q2315500: "book",
        Q2455517: "book",
        Q2492025: "book",
        Q2572794: "book",
        Q2606238: "book",
        Q2634688: "book",
        Q2639708: "book",
        Q2660540: "book",
        Q2663701: "book",
        Q2790419: "book",
        Q2828776: "book",
        Q2921159: "book",
        Q3032156: "book",
        Q3164714: "book",
        Q3177980: "book",
        Q3576459: "book",
        Q3607227: "book",
        Q3783057: "book",
        Q3858189: "book",
        Q4293467: "book",
        Q4404552: "book",
        Q4730259: "book",
        Q4800993: "book",
        Q4960364: "book",
        Q5177509: "book",
        Q5273654: "book",
        Q5808269: "book",
        Q6037100: "book",
        Q6051491: "book",
        Q6071395: "book",
        Q6126527: "book",
        Q6711235: "book",
        Q6728645: "book",
        Q6888589: "book",
        Q6933467: "book",
        Q7253053: "book",
        Q7269564: "book",
        Q7269575: "book",
        Q7561196: "book",
        Q8565136: "book",
        Q29167422: "dataset",
        Q10296750: "book",
        Q10332660: "book",
        Q10752663: "book",
        Q10882175: "book",
        Q11022340: "book",
        Q11072974: "book",
        Q11137584: "book",
        Q11703766: "book",
        Q11802763: "book",
        Q11879078: "book",
        Q12497663: "book",
        Q12775327: "book",
        Q15063503: "book",
        Q16309546: "book",
        Q17366837: "book",
        Q19571385: "book",
        Q20585651: "book",
        Q21532381: "book",
        Q21651866: "book",
        Q23988414: "book",
        Q24457184: "book",
        Q24932593: "book",
        Q25399066: "book",
        Q31093658: "book",
        Q56296830: "book",
        Q56313459: "book",
        Q72406516: "book",
        Q98163019: "software",
        Q89544921: "book",
        Q90573495: "book",
        Q96384423: "book",
        Q108822790: "standard",
        Q111847301: "book",
        Q280257: "dataset",
        Q599108: "dataset",
        Q703021: "dataset",
        Q908017: "dataset",
        Q1022155: "dataset",
        Q1821397: "dataset",
        Q11551080: "map",
        Q2875011: "song",
        Q4222379: "dataset",
        Q4824114: "dataset",
        Q5188913: "dataset",
        Q5449473: "dataset",
        Q5569988: "dataset",
        Q6537891: "dataset",
        Q7524126: "dataset",
        Q10392259: "dataset",
        Q10404143: "dataset",
        Q10621579: "dataset",
        Q10831886: "dataset",
        Q21167586: "map",
        Q11631534: "dataset",
        Q865493: "software",
        Q18156576: "dataset",
        Q384840: "legislation",
        Q899485: "legislation",
        Q178048: "standard",
        Q186886: "standard",
        Q219919: "standard",
        Q462926: "standard",
        Q849275: "standard",
        Q905488: "standard",
        Q23120437: "dataset",
        Q23208317: "dataset",
        Q23306635: "dataset",
        Q23406751: "dataset",
        Q23465173: "dataset",
        Q23537932: "dataset",
        Q23541343: "dataset",
        Q23541348: "dataset",
        Q23563948: "dataset",
        Q23589361: "dataset",
        Q23596184: "dataset",
        Q23647820: "dataset",
        Q23662408: "dataset",
        Q23666223: "dataset",
        Q23687324: "dataset",
        Q23698335: "dataset",
        Q24120178: "dataset",
        Q24121290: "dataset",
        Q24188426: "dataset",
        Q24188436: "dataset",
        Q24189020: "dataset",
        Q24202115: "dataset",
        Q24202792: "dataset",
        Q24202917: "dataset",
        Q24232043: "dataset",
        Q24238628: "dataset",
        Q24247613: "dataset",
        Q87866152: "regulation",
        Q2558763: "standard",
        Q4006940: "standard",
        Q6866483: "legislation",
        Q5655515: "standard",
        Q9067055: "legislation",
        Q40426579: "map",
        Q43026977: "map",
        Q43037778: "map",
        Q25053629: "dataset",
        Q16669008: "book",
        Q47008743: "map",
        Q18338424: "legislation",
        Q182832: "performance",
        Q270827: "performance",
        Q318973: "performance",
        Q504514: "performance",
        Q588666: "performance",
        Q918727: "performance",
        Q1049625: "performance",
        Q1344860: "performance",
        Q43290228: "article",
        Q56408521: "dataset",
        Q69866663: "map",
        Q8102: "dataset",
        Q55754272: "legislation",
        Q1646218: "treaty",
        Q65167069: "book",
        Q12143: "standard",
        Q16567729: "treaty",
        Q99231508: "dataset",
        Q81329277: "legislation",
        Q81329802: "legislation",
        Q6010: "performance",
        Q27939: "performance",
        Q106377149: "legislation",
        Q110251539: "legislation",
        Q110487867: "legislation",
        Q110598278: "legislation",
        Q110601245: "legislation",
        Q2412849: "article-journal",
        Q1802243: "song",
        Q103964477: "performance",
        Q104853682: "performance",
        Q104985225: "performance",
        Q104996128: "performance",
        Q104998020: "performance",
        Q104998197: "performance",
        Q105107179: "performance",
        Q105233699: "performance",
        Q105237946: "performance",
        Q105245071: "performance",
        Q105279242: "performance",
        Q105279359: "performance",
        Q105279810: "performance",
        Q105280408: "performance",
        Q105339166: "performance",
        Q105535151: "performance",
        Q106148843: "performance",
        Q106148879: "performance",
        Q106163201: "performance",
        Q106293524: "performance",
        Q106421780: "performance",
        Q106805967: "performance",
        Q106991653: "performance",
        Q107183471: "performance",
        Q107373802: "performance",
        Q107514431: "performance",
        Q109660485: "performance",
        Q20136634: "article-journal",
        Q10926108: "song",
        Q13409498: "dataset",
        Q4746213: "software",
        Q188522: "review",
        Q626700: "review",
        Q667421: "review",
        Q1076579: "legislation",
        Q1683320: "review",
        Q2011881: "review",
        Q3319996: "review",
        Q3519102: "review",
        Q4493432: "review",
        Q6518187: "legislation",
        Q6804197: "legislation",
        Q7048920: "review",
        Q7122892: "review",
        Q7189625: "review",
        Q7252753: "legislation",
        Q7705750: "review",
        Q7978067: "review",
        Q7456126: "event",
        Q12504875: "legislation",
        Q18287076: "event",
        Q1955127: "performance",
        Q3256972: "performance",
        Q5312202: "performance",
        Q25412283: "event",
        Q6989196: "performance",
        Q23691: "song",
        Q60793112: "review",
        Q95977810: "article-journal",
        Q95988187: "article-journal",
        Q30612: "review",
        Q74673301: "legislation",
        Q111985815: "song",
        Q88958818: "performance",
        Q110037853: "book",
        Q110887037: "legislation",
        Q6457531: "motion_picture",
        Q61019332: "regulation",
        Q10718812: "legal_case",
        Q829147: "song",
        Q1195253: "song",
        Q11455596: "manuscript",
        Q52389: "regulation",
        Q10498310: "song",
        Q906556: "software",
        Q10439361: "broadcast",
        Q6934955: "software",
        Q18451170: "song",
        Q187791: "book",
        Q28472638: "speech",
        Q28472722: "speech",
        Q422321: "book",
        Q576921: "book",
        Q814208: "book",
        Q860708: "book",
        Q982897: "book",
        Q1260812: "book",
        Q1077350: "legislation",
        Q1306119: "book",
        Q1439646: "book",
        Q1893957: "book",
        Q2515441: "book",
        Q2995556: "book",
        Q3148886: "book",
        Q3357530: "book",
        Q3403684: "book",
        Q4801213: "book",
        Q5177020: "book",
        Q5130968: "legislation",
        Q5431484: "book",
        Q5436787: "book",
        Q5357553: "legislation",
        Q7602996: "book",
        Q7645310: "book",
        Q7943312: "book",
        Q7777568: "event",
        Q11497036: "book",
        Q11835431: "book",
        Q11872745: "book",
        Q96177324: "regulation",
        Q96781565: "regulation",
        Q17053253: "book",
        Q18022772: "book",
        Q18218093: "book",
        Q19556951: "legislation",
        Q19882205: "book",
        Q21550731: "book",
        Q22004031: "book",
        Q22569957: "book",
        Q22669635: "book",
        Q22669664: "book",
        Q23657361: "book",
        Q25313175: "event",
        Q28913685: "book",
        Q55132886: "book",
        Q372012: "regulation",
        Q56296627: "book",
        Q1001032: "regulation",
        Q57239931: "book",
        Q4844067: "regulation",
        Q95988374: "article-journal",
        Q66970124: "book",
        Q67080576: "book",
        Q67080642: "book",
        Q68679574: "book",
        Q68680335: "book",
        Q24723: "book",
        Q100701573: "speech",
        Q73501142: "book",
        Q73501146: "book",
        Q76112498: "book",
        Q110665014: "article-journal",
        Q85612002: "book",
        Q108298447: "song",
        Q91865939: "book",
        Q95975418: "book",
        Q96761193: "book",
        Q96882631: "book",
        Q97489614: "book",
        Q97995738: "book",
        Q98074840: "book",
        Q98151500: "book",
        Q70470863: "interview",
        Q99890706: "book",
        Q100575647: "book",
        Q100942530: "book",
        Q100943156: "book",
        Q100973182: "book",
        Q100973183: "book",
        Q106572959: "book",
        Q107193931: "book",
        Q107193934: "book",
        Q107193932: "book",
        Q109361415: "book",
        Q110165194: "book",
        Q1193236: "periodical",
        Q2055205: "legal_case",
        Q111649497: "book",
        Q111885592: "book",
        Q3355734: "motion_picture",
        Q7551315: "motion_picture",
        Q11396811: "manuscript",
        Q11553412: "manuscript",
        Q11610716: "manuscript",
        Q11662768: "manuscript",
        Q65931730: "regulation",
        Q107198899: "broadcast",
        Q10394634: "song",
        Q7090372: "bill",
        Q28026639: "motion_picture",
        Q179461: "book",
        Q189279: "book",
        Q193934: "book",
        Q193955: "book",
        Q336073: "book",
        Q339380: "book",
        Q126701: "event",
        Q167170: "event",
        Q169956: "event",
        Q175275: "event",
        Q217308: "event",
        Q283085: "event",
        Q304311: "event",
        Q325674: "event",
        Q990683: "book",
        Q340186: "event",
        Q376222: "event",
        Q383936: "event",
        Q391983: "event",
        Q428960: "event",
        Q429399: "event",
        Q1084059: "book",
        Q440534: "event",
        Q459975: "event",
        Q548095: "event",
        Q559507: "event",
        Q586633: "event",
        Q1250390: "book",
        Q609685: "event",
        Q615994: "event",
        Q641060: "event",
        Q641083: "event",
        Q658986: "event",
        Q673368: "event",
        Q1366370: "book",
        Q1548123: "book",
        Q1886036: "book",
        Q1974131: "book",
        Q3427762: "book",
        Q3985225: "book",
        Q4328808: "event",
        Q7246538: "book",
        Q11372298: "book",
        Q11410724: "book",
        Q11411421: "book",
        Q11428310: "book",
        Q11513646: "book",
        Q11519255: "book",
        Q11673118: "book",
        Q16854100: "book",
        Q16929794: "book",
        Q17006151: "book",
        Q18358220: "standard",
        Q2749069: "performance",
        Q5197782: "performance",
        Q11266252: "performance",
        Q11377624: "performance",
        Q11400631: "performance",
        Q11665098: "performance",
        Q12058791: "performance",
        Q22004354: "performance",
        Q55017318: "book",
        Q2289350: "regulation",
        Q61715571: "book",
        Q67142991: "book",
        Q90257546: "book",
        Q107193935: "book",
        Q107193938: "book",
        Q107193936: "book",
        Q107193942: "book",
        Q107193943: "book",
        Q107193940: "book",
        Q107193946: "book",
        Q107193947: "book",
        Q107193945: "book",
        Q107193951: "book",
        Q107193952: "book",
        Q107194326: "book",
        Q107426373: "book",
        Q107426381: "book",
        Q695012: "event",
        Q696031: "event",
        Q776773: "event",
        Q786414: "event",
        Q821580: "event",
        Q844685: "event",
        Q912171: "event",
        Q927363: "event",
        Q938096: "event",
        Q952053: "event",
        Q992060: "event",
        Q1005849: "event",
        Q1006461: "event",
        Q1038558: "event",
        Q1054417: "event",
        Q1079023: "event",
        Q1092604: "event",
        Q1095053: "event",
        Q1137275: "event",
        Q1144648: "event",
        Q1147475: "event",
        Q1164275: "event",
        Q1165405: "event",
        Q1165421: "event",
        Q1170410: "event",
        Q1206071: "event",
        Q1257258: "event",
        Q1298292: "event",
        Q1302645: "event",
        Q1349088: "event",
        Q1375512: "event",
        Q1384134: "event",
        Q1411929: "event",
        Q1415139: "event",
        Q1418201: "event",
        Q1439959: "event",
        Q1470460: "event",
        Q1476232: "event",
        Q1502193: "event",
        Q1517334: "event",
        Q1542723: "event",
        Q1542755: "event",
        Q1542872: "event",
        Q1571193: "event",
        Q1619812: "event",
        Q1677094: "event",
        Q1813328: "event",
        Q1824378: "event",
        Q1866538: "event",
        Q1879388: "event",
        Q1890914: "event",
        Q1936368: "event",
        Q1950504: "event",
        Q2000491: "event",
        Q2004950: "event",
        Q2006622: "event",
        Q2008904: "event",
        Q2035243: "event",
        Q2045861: "event",
        Q2054251: "event",
        Q2056451: "event",
        Q2062651: "event",
        Q2100967: "event",
        Q2190296: "event",
        Q2190746: "event",
        Q2209331: "event",
        Q2210277: "event",
        Q2250962: "event",
        Q2270306: "event",
        Q2280986: "event",
        Q2286694: "event",
        Q2293105: "event",
        Q2300449: "event",
        Q2312427: "event",
        Q2327575: "event",
        Q2347925: "event",
        Q2353497: "event",
        Q2404861: "event",
        Q2408469: "event",
        Q2410002: "event",
        Q2452319: "event",
        Q2459434: "event",
        Q2461450: "event",
        Q2474467: "event",
        Q2493694: "event",
        Q2507865: "event",
        Q2536619: "event",
        Q2541750: "event",
        Q2574170: "event",
        Q2608069: "event",
        Q2616886: "event",
        Q2618686: "event",
        Q2626253: "event",
        Q2632641: "event",
        Q2664186: "event",
        Q2688597: "event",
        Q2693408: "event",
        Q2698184: "event",
        Q2735683: "event",
        Q2755211: "event",
        Q2796048: "event",
        Q2836962: "event",
        Q2910684: "event",
        Q2948826: "event",
        Q2954930: "event",
        Q2955173: "event",
        Q2955182: "event",
        Q2955393: "event",
        Q2955743: "event",
        Q2990963: "event",
        Q2999425: "event",
        Q2999793: "event",
        Q3008684: "event",
        Q3072863: "event",
        Q3141859: "event",
        Q3173989: "event",
        Q3300730: "event",
        Q3329708: "event",
        Q3329729: "event",
        Q3354007: "event",
        Q3405564: "event",
        Q3414487: "event",
        Q3444554: "event",
        Q3467389: "event",
        Q3485623: "event",
        Q3485630: "event",
        Q3485629: "event",
        Q3485635: "event",
        Q3485632: "event",
        Q3485633: "event",
        Q3485638: "event",
        Q3485636: "event",
        Q3485642: "event",
        Q3485643: "event",
        Q3485640: "event",
        Q3534194: "event",
        Q3534195: "event",
        Q3534198: "event",
        Q3534196: "event",
        Q3543765: "event",
        Q3595175: "event",
        Q3653353: "event",
        Q3696168: "event",
        Q3854433: "event",
        Q4167714: "event",
        Q4243717: "event",
        Q4243782: "event",
        Q4272782: "event",
        Q4510080: "event",
        Q4639035: "event",
        Q4674589: "event",
        Q4713212: "event",
        Q4852696: "event",
        Q4867756: "event",
        Q4873000: "event",
        Q4894842: "event",
        Q4942597: "event",
        Q4948028: "event",
        Q4951251: "event",
        Q5029340: "event",
        Q5136168: "event",
        Q5209301: "event",
        Q5261453: "event",
        Q5311005: "event",
        Q5324645: "event",
        Q5412849: "event",
        Q5455087: "event",
        Q5470293: "event",
        Q5569597: "event",
        Q5787643: "event",
        Q6313377: "event",
        Q6315526: "event",
        Q6322015: "event",
        Q6383498: "event",
        Q6547925: "event",
        Q6747099: "event",
        Q7240344: "event",
        Q7605743: "event",
        Q7906416: "event",
        Q8035852: "event",
        Q10260884: "event",
        Q10577782: "event",
        Q10666337: "event",
        Q11235352: "event",
        Q11267643: "event",
        Q11370195: "event",
        Q11471159: "event",
        Q11488716: "event",
        Q11777151: "event",
        Q11783626: "event",
        Q12038182: "event",
        Q12307297: "event",
        Q13219666: "event",
        Q13357858: "event",
        Q13732546: "event",
        Q14547231: "event",
        Q15055391: "event",
        Q15588699: "event",
        Q15782487: "event",
        Q16455611: "event",
        Q16466010: "event",
        Q16648230: "event",
        Q16680659: "event",
        Q16680753: "event",
        Q16975526: "event",
        Q17024704: "event",
        Q17143991: "event",
        Q17299750: "event",
        Q17623620: "event",
        Q18161922: "event",
        Q18343977: "event",
        Q18536800: "event",
        Q18573266: "event",
        Q18632975: "event",
        Q18814828: "event",
        Q19393726: "event",
        Q20019127: "event",
        Q20160732: "event",
        Q20797921: "event",
        Q21013809: "event",
        Q21163347: "event",
        Q21163366: "event",
        Q21935543: "event",
        Q22029360: "event",
        Q22807283: "event",
        Q24840633: "event",
        Q26861438: "event",
        Q27020041: "event",
        Q27031975: "event",
        Q27927857: "event",
        Q28033877: "event",
        Q28089258: "event",
        Q28106029: "event",
        Q29121355: "event",
        Q30006753: "event",
        Q30232507: "event",
        Q31096609: "event",
        Q37803643: "event",
        Q38216979: "event",
        Q41479544: "event",
        Q41691580: "event",
        Q43767888: "event",
        Q45897039: "event",
        Q47009563: "event",
        Q47450331: "event",
        Q47459169: "event",
        Q48759219: "event",
        Q48865320: "event",
        Q48977160: "event",
        Q49480704: "event",
        Q50846264: "event",
        Q51031626: "event",
        Q51104681: "event",
        Q51931416: "event",
        Q53945096: "event",
        Q54967487: "event",
        Q55261073: "event",
        Q55393057: "event",
        Q55654379: "event",
        Q56199072: "event",
        Q56321344: "event",
        Q56683030: "event",
        Q56683160: "event",
        Q56829666: "event",
        Q56835059: "event",
        Q57494273: "event",
        Q58212491: "event",
        Q59134440: "event",
        Q60147807: "event",
        Q60515518: "event",
        Q60860371: "event",
        Q60926489: "event",
        Q61054255: "event",
        Q61314656: "event",
        Q61337521: "event",
        Q61983760: "event",
        Q62970974: "event",
        Q63385995: "event",
        Q64626740: "event",
        Q66239912: "event",
        Q71860259: "event",
        Q76998317: "event",
        Q79120925: "event",
        Q88976016: "event",
        Q92602118: "event",
        Q96679888: "event",
        Q98686973: "event",
        Q99346550: "event",
        Q99352691: "event",
        Q99383433: "event",
        Q99430142: "event",
        Q99430249: "event",
        Q99430281: "event",
        Q99430529: "event",
        Q99430785: "event",
        Q99430803: "event",
        Q99431617: "event",
        Q99432107: "event",
        Q99441928: "event",
        Q99441941: "event",
        Q109646550: "event",
        Q109646600: "event",
        Q109646805: "event",
        Q110087118: "event",
        Q110226979: "event",
        Q9137321: "webpage",
        Q184940: "event",
        Q211586: "event",
        Q256869: "event",
        Q380051: "event",
        Q627933: "event",
        Q835466: "event",
        Q846436: "event",
        Q1062672: "event",
        Q1136999: "event",
        Q1349214: "event",
        Q2062321: "event",
        Q2369189: "event",
        Q2497657: "event",
        Q2557639: "event",
        Q3920446: "event",
        Q4257172: "event",
        Q15056699: "webpage",
        Q5455176: "event",
        Q5879438: "event",
        Q16222597: "webpage",
        Q6723631: "event",
        Q17362920: "webpage",
        Q7920564: "event",
        Q18707678: "webpage",
        Q20160182: "webpage",
        Q20870830: "webpage",
        Q21163207: "webpage",
        Q21167453: "webpage",
        Q11820949: "book",
        Q17143271: "event",
        Q17990096: "event",
        Q18105680: "event",
        Q19396147: "event",
        Q30279428: "webpage",
        Q20827292: "event",
        Q26928600: "book",
        Q50081413: "webpage",
        Q55510433: "webpage",
        Q65010179: "webpage",
        Q59779792: "event",
        Q72044830: "webpage",
        Q80096233: "webpage",
        Q94574287: "webpage",
        Q85475422: "event",
        Q99441965: "event",
        Q99441984: "event",
        Q99442286: "event",
        Q99443664: "event",
        Q99444029: "event",
        Q99472025: "event",
        Q100621746: "event",
        Q102276098: "event",
        Q102292481: "event",
        Q104218430: "event",
        Q104224089: "event",
        Q104224112: "event",
        Q105855428: "event",
        Q106253544: "event",
        Q106394420: "event",
        Q106411217: "event",
        Q106603744: "event",
        Q106635272: "event",
        Q106762533: "event",
        Q107140138: "event",
        Q108118070: "event",
        Q108125464: "event",
        Q108741439: "event",
        Q132241: "event",
        Q152450: "event",
        Q182653: "event",
        Q193145: "event",
        Q225917: "event",
        Q299359: "event",
        Q299491: "event",
        Q315469: "event",
        Q431360: "event",
        Q459528: "event",
        Q745709: "event",
        Q773620: "event",
        Q850336: "event",
        Q979730: "event",
        Q1076105: "event",
        Q1107771: "event",
        Q1152956: "event",
        Q1153162: "event",
        Q1168476: "event",
        Q1196722: "event",
        Q1225911: "event",
        Q1392552: "event",
        Q1433642: "event",
        Q1469546: "event",
        Q1627140: "event",
        Q1630979: "event",
        Q1661095: "event",
        Q1895274: "event",
        Q1911797: "event",
        Q2127334: "event",
        Q2214911: "event",
        Q2300494: "event",
        Q2412808: "event",
        Q2418025: "event",
        Q2468447: "event",
        Q2547976: "event",
        Q2658935: "event",
        Q2795827: "event",
        Q3046190: "event",
        Q3186692: "event",
        Q3251043: "event",
        Q3299434: "event",
        Q3325889: "event",
        Q3478346: "event",
        Q3551559: "event",
        Q3617607: "event",
        Q3956822: "event",
        Q4317295: "event",
        Q4967142: "event",
        Q4994929: "event",
        Q5481153: "event",
        Q5781225: "event",
        Q5860910: "event",
        Q5888304: "event",
        Q6085164: "event",
        Q6460735: "event",
        Q6765524: "event",
        Q6952431: "event",
        Q21094819: "event",
        Q21095053: "event",
        Q21115902: "event",
        Q21128169: "event",
        Q28531312: "event",
        Q28976135: "event",
        Q29001044: "event",
        Q29471082: "event",
        Q33088985: "event",
        Q42555207: "event",
        Q43792361: "event",
        Q45380910: "event",
        Q45767416: "event",
        Q46582859: "event",
        Q46952859: "event",
        Q47015876: "event",
        Q47517941: "event",
        Q47986635: "event",
        Q51295770: "event",
        Q51657839: "event",
        Q51831744: "event",
        Q57085779: "event",
        Q57867143: "event",
        Q58454964: "event",
        Q61659880: "event",
        Q64504529: "event",
        Q65561661: "event",
        Q34812: "event",
        Q45774: "event",
        Q46525: "event",
        Q57305: "event",
        Q72284369: "event",
        Q96314922: "event",
        Q107723093: "webpage",
        Q98103264: "event",
        Q100251218: "event",
        Q105362186: "event",
        Q106450751: "event",
        Q107598520: "event",
        Q7058657: "event",
        Q7565760: "event",
        Q8054831: "event",
        Q9018710: "broadcast",
        Q9062329: "event",
        Q10550013: "event",
        Q11284768: "event",
        Q11483816: "event",
        Q11487032: "event",
        Q11511492: "event",
        Q11586679: "event",
        Q12121663: "event",
        Q12259614: "event",
        Q12359579: "event",
        Q12398164: "event",
        Q12826913: "event",
        Q13134791: "event",
        Q13134878: "event",
        Q13135724: "event",
        Q13135731: "event",
        Q13135932: "event",
        Q13137190: "event",
        Q13137353: "event",
        Q13443059: "event",
        Q13510387: "event",
        Q13632977: "event",
        Q13734483: "event",
        Q14517045: "event",
        Q14622356: "event",
        Q14942355: "event",
        Q15063219: "event",
        Q15874109: "event",
        Q15900616: "event",
        Q16023945: "event",
        Q16420501: "event",
        Q17092603: "event",
        Q18033462: "event",
        Q18202029: "event",
        Q18333232: "event",
        Q18560545: "event",
        Q18579323: "event",
        Q18579325: "event",
        Q18608583: "event",
        Q19859887: "event",
        Q20618240: "event",
        Q21281822: "event",
        Q21540023: "event",
        Q22981519: "event",
        Q23687335: "event",
        Q23755142: "event",
        Q24060841: "event",
        Q26234155: "event",
        Q27349622: "event",
        Q27649668: "event",
        Q27768253: "event",
        Q27839452: "event",
        Q27940535: "event",
        Q27995495: "event",
        Q28103027: "event",
        Q30088075: "event",
        Q51696175: "event",
        Q54802199: "event",
        Q54935318: "event",
        Q55426287: "event",
        Q56113378: "event",
        Q57775861: "event",
        Q59210717: "event",
        Q59296933: "event",
        Q59297078: "event",
        Q60197152: "event",
        Q61130878: "event",
        Q61719494: "event",
        Q61740765: "event",
        Q62737750: "event",
        Q63068285: "event",
        Q64364625: "event",
        Q65617121: "event",
        Q66458824: "event",
        Q70460346: "event",
        Q70629395: "event",
        Q72732806: "event",
        Q73012175: "event",
        Q77805379: "event",
        Q85625819: "event",
        Q87476385: "event",
        Q87477513: "event",
        Q87747932: "event",
        Q88672834: "event",
        Q97445956: "event",
        Q98216781: "event",
        Q99737532: "event",
        Q99739404: "event",
        Q103882295: "event",
        Q104700480: "event",
        Q104767140: "event",
        Q105439592: "event",
        Q106518893: "event",
        Q106547367: "event",
        Q108509955: "event",
        Q109331363: "event",
        Q109569970: "event",
        Q110197878: "event",
        Q110289243: "event",
        Q110392395: "event",
        Q110665091: "event",
        Q110665174: "event",
        Q110710079: "event",
        Q110763545: "event",
        Q110996190: "event",
        Q1249224: "report",
        Q111290996: "event",
        Q112079833: "event",
        Q3209941: "report",
        Q4575034: "report",
        Q11078958: "report",
        Q1064733: "software",
        Q179304: "event",
        Q252717: "event",
        Q271725: "event",
        Q489219: "event",
        Q493386: "event",
        Q842203: "event",
        Q1317101: "event",
        Q1366722: "event",
        Q1478437: "event",
        Q1574715: "event",
        Q1789999: "event",
        Q1817141: "event",
        Q1840742: "event",
        Q1910276: "event",
        Q1999120: "event",
        Q2031615: "event",
        Q2080304: "event",
        Q2122052: "event",
        Q2150335: "event",
        Q2296723: "event",
        Q2447666: "event",
        Q2468952: "event",
        Q2488604: "event",
        Q2558821: "event",
        Q2623547: "event",
        Q2683596: "event",
        Q2837389: "event",
        Q3305655: "event",
        Q3496570: "event",
        Q1774365: "standard",
        Q4288793: "event",
        Q4336440: "event",
        Q4353956: "event",
        Q4380246: "event",
        Q4380244: "event",
        Q5157463: "event",
        Q5245513: "event",
        Q5603591: "event",
        Q15593589: "software",
        Q15618646: "software",
        Q7079589: "event",
        Q7720582: "event",
        Q9344824: "event",
        Q12354782: "event",
        Q12362855: "event",
        Q13034996: "event",
        Q13403102: "event",
        Q13779455: "event",
        Q14931534: "event",
        Q15140166: "event",
        Q15140175: "event",
        Q16023776: "event",
        Q16033371: "event",
        Q16680663: "event",
        Q16680723: "event",
        Q16997177: "event",
        Q17194091: "event",
        Q18431960: "event",
        Q18536594: "event",
        Q18918137: "event",
        Q19753730: "event",
        Q20020588: "event",
        Q20647964: "event",
        Q20723111: "event",
        Q21140826: "event",
        Q21246076: "event",
        Q22774124: "event",
        Q22938576: "event",
        Q65173475: "song",
        Q47647413: "event",
        Q55806536: "event",
        Q84612307: "report",
        Q25847: "event",
        Q31645: "event",
        Q60617: "event",
        Q110826093: "report",
        Q95115361: "event",
        Q106606770: "event",
        Q106628113: "event",
        Q107238721: "event",
        Q107587273: "event",
        Q108063424: "event",
        Q576131: "motion_picture",
        Q1390819: "motion_picture",
        Q1718627: "legal_case",
        Q110290988: "event",
        Q110291794: "event",
        Q110373479: "event",
        Q2223653: "legal_case",
        Q4249087: "legal_case",
        Q7611274: "map",
        Q11070774: "legal_case",
        Q2983424: "broadcast",
        Q18609332: "legal_case",
        Q20014303: "article-newspaper",
        Q20267837: "motion_picture",
        Q21044347: "legal_case",
        Q1229611: "software",
        Q1602447: "software",
        Q2359689: "software",
        Q3814081: "software",
        Q5165404: "bill",
        Q388834: "event",
        Q1170725: "book",
        Q2055725: "book",
        Q2066703: "book",
        Q19969268: "broadcast",
        Q45182324: "article-journal",
        Q16505090: "book",
        Q16517254: "book",
        Q17277646: "book",
        Q19895101: "book",
        Q21211790: "book",
        Q21212164: "book",
        Q21212442: "book",
        Q21212446: "book",
        Q24273299: "book",
        Q23893804: "event",
        Q26225470: "book",
        Q26279855: "event",
        Q26279902: "event",
        Q27031964: "event",
        Q27600974: "event",
        Q27889498: "event",
        Q28800950: "event",
        Q30277550: "book",
        Q60848413: "motion_picture",
        Q67912210: "legal_case",
        Q38066778: "event",
        Q41479621: "event",
        Q15726909: "interview",
        Q46190676: "event",
        Q56056731: "software",
        Q47089371: "event",
        Q50393057: "event",
        Q50846468: "event",
        Q51590703: "event",
        Q51590770: "event",
        Q51591612: "event",
        Q51931369: "event",
        Q63241860: "software",
        Q55074672: "event",
        Q55097374: "event",
        Q55118684: "event",
        Q56274260: "event",
        Q56276798: "event",
        Q56850939: "event",
        Q57540859: "event",
        Q57542735: "event",
        Q57550169: "event",
        Q57550650: "event",
        Q57609296: "event",
        Q57609313: "event",
        Q57733494: "event",
        Q63254865: "event",
        Q64250307: "event",
        Q84491920: "event",
        Q88660792: "event",
        Q89033277: "event",
        Q93207256: "event",
        Q93233984: "event",
        Q93234631: "event",
        Q94484766: "event",
        Q94484833: "event",
        Q94484893: "event",
        Q94484982: "event",
        Q94485157: "event",
        Q94485173: "event",
        Q98448954: "event",
        Q98609858: "event",
        Q99564787: "event",
        Q100843605: "event",
        Q102076434: "book",
        Q104537405: "event",
        Q106179662: "event",
        Q108329152: "book",
        Q108329788: "book",
        Q220898: "motion_picture",
        Q425382: "manuscript",
        Q891235: "manuscript",
        Q1011299: "broadcast",
        Q1344426: "manuscript",
        Q110987317: "book",
        Q3276244: "broadcast",
        Q3461321: "broadcast",
        Q2297189: "report",
        Q7533316: "manuscript",
        Q503354: "song",
        Q16147871: "legal_case",
        Q19359000: "report",
        Q920890: "software",
        Q13016974: "song",
        Q13025584: "song",
        Q13025592: "song",
        Q13025598: "song",
        Q13025599: "song",
        Q24633474: "broadcast",
        Q16304469: "song",
        Q384515: "book",
        Q636946: "book",
        Q1047074: "book",
        Q1491125: "book",
        Q1813223: "book",
        Q1371453: "event",
        Q2233389: "book",
        Q2326951: "book",
        Q2500820: "book",
        Q2804309: "book",
        Q2980995: "book",
        Q539558: "standard",
        Q917805: "standard",
        Q1143530: "standard",
        Q1417378: "standard",
        Q1419905: "standard",
        Q1458121: "standard",
        Q4363806: "book",
        Q2069335: "standard",
        Q2293706: "standard",
        Q2636061: "standard",
        Q5209391: "book",
        Q3487109: "standard",
        Q3560970: "standard",
        Q4647007: "standard",
        Q7433672: "book",
        Q10493645: "book",
        Q10916116: "book",
        Q43096126: "motion_picture",
        Q11787920: "standard",
        Q48743931: "manuscript",
        Q18081961: "standard",
        Q20631656: "book",
        Q20669574: "book",
        Q1363997: "performance",
        Q1650357: "performance",
        Q21683863: "book",
        Q21727724: "book",
        Q21875313: "book",
        Q21662139: "event",
        Q20820163: "standard",
        Q23824436: "standard",
        Q27850015: "standard",
        Q62724790: "broadcast",
        Q42723239: "software",
        Q17317604: "performance",
        Q39086821: "review",
        Q50320796: "webpage",
        Q51139628: "webpage",
        Q48028851: "book",
        Q51930650: "book",
        Q51953425: "book",
        Q56514665: "book",
        Q59259613: "standard",
        Q63533016: "book",
        Q97135699: "legal_case",
        Q36279: "book",
        Q102141681: "motion_picture",
        Q81989119: "software",
        Q82004331: "software",
        Q104097073: "motion_picture",
        Q105320349: "motion_picture",
        Q110876331: "motion_picture",
        Q97001446: "software",
        Q106323251: "webpage",
        Q96676787: "standard",
        Q104177180: "book",
        Q104243413: "book",
        Q105080687: "event",
        Q105080700: "event",
        Q93204: "motion_picture",
        Q109301270: "event",
        Q914242: "motion_picture",
        Q2023874: "motion_picture",
        Q111011066: "periodical",
        Q111501773: "event",
        Q3377903: "motion_picture",
        Q4677832: "motion_picture",
        Q5338721: "motion_picture",
        Q322229: "software",
        Q15909161: "post",
        Q26225765: "motion_picture",
        Q6559906: "chapter",
        Q316572: "legislation",
        Q548408: "book",
        Q253946: "event",
        Q850716: "legislation",
        Q557450: "event",
        Q797476: "event",
        Q1153401: "event",
        Q10850880: "software",
        Q2135494: "legislation",
        Q2137778: "event",
        Q3270247: "legislation",
        Q1023122: "standard",
        Q3813456: "event",
        Q5165903: "legislation",
        Q6517603: "legislation",
        Q6647678: "legislation",
        Q6880647: "legislation",
        Q6880644: "legislation",
        Q6880645: "legislation",
        Q7256536: "legislation",
        Q7355045: "legislation",
        Q7598349: "legislation",
        Q9367401: "legislation",
        Q9352238: "event",
        Q10872094: "legislation",
        Q11221622: "event",
        Q16024891: "legislation",
        Q17054088: "legislation",
        Q17077441: "legislation",
        Q22098766: "event",
        Q27787439: "event",
        Q27968043: "event",
        Q28928544: "event",
        Q28928785: "event",
        Q29642990: "event",
        Q66503284: "motion_picture",
        Q47345468: "event",
        Q47403752: "event",
        Q5266727: "treaty",
        Q7033567: "treaty",
        Q62391930: "event",
        Q3887: "event",
        Q99526021: "motion_picture",
        Q99526024: "motion_picture",
        Q104880835: "motion_picture",
        Q75694944: "event",
        Q105885059: "broadcast",
        Q106094709: "broadcast",
        Q106094879: "broadcast",
        Q106625351: "broadcast",
        Q106921023: "broadcast",
        Q107737653: "broadcast",
        Q109542175: "broadcast",
        Q109822700: "periodical",
        Q110485525: "broadcast",
        Q29883647: "treaty",
        Q111630723: "post",
        Q111691554: "post",
        Q42214612: "treaty",
        Q97011843: "event",
        Q97011844: "event",
        Q107110354: "software",
        Q100741823: "event",
        Q101246533: "event",
        Q106393876: "event",
        Q106594095: "event",
        Q107028274: "event",
        Q107474077: "event",
        Q107659169: "event",
        Q107659248: "event",
        Q108095628: "event",
        Q110013395: "event",
        Q110895855: "event",
        Q111837255: "book",
        Q8041497: "patent",
        Q67230438: "regulation",
        Q8576: "treaty",
        Q909523: "software",
        Q12093963: "song",
        Q86860: "book",
        Q136472: "book",
        Q193606: "book",
        Q351718: "book",
        Q367591: "book",
        Q374466: "book",
        Q472808: "book",
        Q780816: "book",
        Q909887: "book",
        Q1057172: "book",
        Q1194480: "book",
        Q1236219: "book",
        Q1346592: "dataset",
        Q1498333: "book",
        Q1557877: "book",
        Q1250718: "event",
        Q2215170: "book",
        Q2387049: "book",
        Q1764062: "event",
        Q2681385: "book",
        Q2872516: "book",
        Q2915491: "book",
        Q616245: "standard",
        Q3238422: "book",
        Q758837: "standard",
        Q763131: "standard",
        Q796005: "standard",
        Q828287: "standard",
        Q1377447: "standard",
        Q1431617: "standard",
        Q1653434: "standard",
        Q1653437: "standard",
        Q1924747: "dataset",
        Q5457615: "book",
        Q25452063: "song",
        Q7005086: "book",
        Q7834250: "book",
        Q7834532: "book",
        Q8031151: "book",
        Q7777570: "event",
        Q11385322: "book",
        Q11509155: "book",
        Q12538685: "event",
        Q19710757: "book",
        Q599568: "performance",
        Q20664530: "book",
        Q2532894: "performance",
        Q50823049: "report",
        Q5450227: "performance",
        Q25493808: "event",
        Q26913402: "book",
        Q7596819: "performance",
        Q30110959: "event",
        Q11499497: "book",
        Q11502644: "book",
        Q33240030: "event",
        Q40444998: "event",
        Q60853089: "song",
        Q42609890: "event",
        Q43099869: "event",
        Q47451145: "book",
        Q51885719: "standard",
        Q55771109: "standard",
        Q55936923: "standard",
        Q55936932: "standard",
        Q55937502: "standard",
        Q766366: "regulation",
        Q1582778: "regulation",
        Q2043282: "regulation",
        Q3754526: "regulation",
        Q59163902: "event",
        Q5166307: "treaty",
        Q8187836: "treaty",
        Q61782522: "dataset",
        Q65926499: "book",
        Q59126: "book",
        Q14658: "standard",
        Q20874666: "treaty",
        Q65271226: "performance",
        Q110263559: "dataset",
        Q39233713: "treaty",
        Q110313265: "bill",
        Q110487819: "bill",
        Q110488086: "bill",
        Q102250949: "event",
        Q104100753: "book",
        Q104828091: "standard",
        Q104948406: "book",
        Q107432485: "book",
        Q109699239: "event",
        Q110103887: "event",
        Q1651804: "song",
        Q1989725: "song",
        Q3897519: "song",
        Q4528554: "song",
        Q12983463: "song",
        Q16927904: "motion_picture",
        Q4116861: "software",
        Q7575402: "software",
        Q18406550: "song",
        Q279272: "book",
        Q856058: "book",
        Q220505: "event",
        Q1249682: "book",
        Q3052748: "event",
        Q24840943: "song",
        Q4943143: "event",
        Q3146599: "standard",
        Q3146622: "standard",
        Q3146627: "standard",
        Q3146624: "standard",
        Q3487181: "standard",
        Q4041015: "standard",
        Q4386278: "standard",
        Q5906783: "standard",
        Q5906785: "standard",
        Q5906790: "standard",
        Q5970231: "standard",
        Q5970233: "standard",
        Q5970239: "standard",
        Q5970237: "standard",
        Q5970246: "standard",
        Q5970244: "standard",
        Q5970248: "standard",
        Q5970256: "standard",
        Q5970270: "standard",
        Q5970268: "standard",
        Q5970274: "standard",
        Q5970299: "standard",
        Q28135297: "song",
        Q12047175: "book",
        Q11223934: "standard",
        Q11223933: "standard",
        Q16941296: "event",
        Q17322391: "standard",
        Q17679554: "standard",
        Q22678605: "standard",
        Q28501089: "event",
        Q61868326: "map",
        Q30590703: "standard",
        Q30715976: "standard",
        Q62706465: "post-weblog",
        Q31073483: "standard",
        Q64727712: "post",
        Q63247669: "song",
        Q73738851: "article-journal",
        Q73744145: "article-journal",
        Q72180513: "post",
        Q61866692: "software",
        Q56365375: "book",
        Q55755869: "standard",
        Q58483088: "book",
        Q90490140: "article-journal",
        Q62085959: "book",
        Q64272108: "event",
        Q65773873: "book",
        Q66370783: "book",
        Q86735980: "song",
        Q1344: "book",
        Q102054386: "post-weblog",
        Q111653018: "post-weblog",
        Q105967840: "motion_picture",
        Q108296569: "post",
        Q108354410: "post",
        Q108354415: "post",
        Q86082198: "review",
        Q108970344: "post",
        Q111590483: "post",
        Q111590519: "post",
        Q102314626: "software",
        Q96604496: "software",
        Q107355827: "software",
        Q101238296: "book",
        Q101552184: "software",
        Q105760475: "software",
        Q108028700: "software",
        Q108028709: "software",
        Q108308863: "software",
        Q1241342: "map",
        Q1684600: "periodical",
        Q2865639: "legal_case",
        Q3402495: "periodical",
        Q11539885: "map",
        Q11626042: "map",
        Q1519864: "song",
        Q1484397: "broadcast",
        Q4056436: "song",
        Q4400497: "song",
        Q18001677: "map",
        Q9391553: "song",
        Q174989: "software",
        Q188506: "software",
        Q11590393: "song",
        Q11817196: "song",
        Q12983425: "song",
        Q22682013: "report",
        Q106633152: "interview",
        Q106697982: "interview",
        Q106747061: "interview",
        Q7565159: "software",
        Q83790: "book",
        Q155171: "book",
        Q918038: "book",
        Q1173065: "book",
        Q1414013: "book",
        Q1728555: "book",
        Q2150516: "book",
        Q2901352: "book",
        Q2972936: "book",
        Q3752011: "book",
        Q23072435: "song",
        Q3831821: "book",
        Q87073833: "regulation",
        Q5091196: "book",
        Q5093326: "book",
        Q88222337: "regulation",
        Q88319982: "regulation",
        Q88704770: "regulation",
        Q88706840: "regulation",
        Q25407651: "song",
        Q8034663: "book",
        Q7887959: "legislation",
        Q30682836: "post",
        Q27981708: "song",
        Q27981857: "song",
        Q28666961: "song",
        Q15528609: "standard",
        Q18744387: "book",
        Q18694092: "event",
        Q29364197: "software",
        Q105635725: "regulation",
        Q105635730: "regulation",
        Q107523873: "regulation",
        Q107524042: "regulation",
        Q7207537: "performance",
        Q30009376: "book",
        Q54621475: "post",
        Q65071384: "periodical",
        Q70471362: "article-journal",
        Q50965914: "book",
        Q48739515: "standard",
        Q55442722: "book",
        Q55442818: "book",
        Q647266: "regulation",
        Q847919: "regulation",
        Q907246: "regulation",
        Q1269627: "regulation",
        Q29581299: "interview",
        Q59466328: "event",
        Q5546654: "legislation",
        Q91901000: "article-journal",
        Q91985448: "map",
        Q7611327: "regulation",
        Q11555036: "regulation",
        Q67212770: "legislation",
        Q60520: "book",
        Q107197551: "manuscript",
        Q107268222: "speech",
        Q99230875: "song",
        Q99230884: "song",
        Q89288125: "software",
        Q90790055: "software",
        Q101515433: "song",
        Q30314010: "regulation",
        Q108673968: "collection",
        Q92257756: "book",
        Q92259219: "book",
        Q92275689: "book",
        Q92275705: "book",
        Q96106854: "event",
        Q106377252: "legislation",
        Q106747100: "review",
        Q111823430: "event",
        Q5985066: "song",
        Q7179597: "song",
        Q16682190: "song",
        Q108577034: "interview",
        Q624669: "book",
        Q86483: "event",
        Q153308: "event",
        Q231833: "event",
        Q1150253: "event",
        Q1523556: "event",
        Q1960124: "event",
        Q2032224: "event",
        Q2033651: "event",
        Q2376952: "event",
        Q2466190: "event",
        Q2546404: "event",
        Q2547181: "event",
        Q2547212: "event",
        Q2547256: "event",
        Q2547285: "event",
        Q2609861: "event",
        Q2818097: "event",
        Q3680691: "event",
        Q4047994: "event",
        Q4048027: "event",
        Q4920810: "event",
        Q5253380: "event",
        Q7299950: "book",
        Q10002682: "event",
        Q15140182: "event",
        Q15992351: "event",
        Q15992355: "event",
        Q15992407: "event",
        Q15992410: "event",
        Q15992408: "event",
        Q16025335: "event",
        Q16025333: "event",
        Q16025336: "event",
        Q16025347: "event",
        Q16025353: "event",
        Q16025356: "event",
        Q16025357: "event",
        Q16025370: "event",
        Q16025369: "event",
        Q16025382: "event",
        Q16025380: "event",
        Q16025381: "event",
        Q16025386: "event",
        Q16025387: "event",
        Q16025388: "event",
        Q16025406: "event",
        Q16025410: "event",
        Q17020734: "event",
        Q17620735: "event",
        Q15841472: "standard",
        Q22930958: "event",
        Q22930969: "event",
        Q22930997: "event",
        Q25203386: "book",
        Q26160672: "book",
        Q109934449: "legislation",
        Q15474042: "webpage",
        Q64140571: "song",
        Q21528878: "webpage",
        Q51119344: "event",
        Q51119363: "event",
        Q51119367: "event",
        Q51119381: "event",
        Q51119398: "event",
        Q51119402: "event",
        Q51119427: "event",
        Q51119425: "event",
        Q51120563: "event",
        Q51120565: "event",
        Q72862526: "song",
        Q328798: "regulation",
        Q55530927: "event",
        Q55530936: "event",
        Q919526: "regulation",
        Q56612794: "book",
        Q86726484: "legal_case",
        Q60809954: "book",
        Q67175826: "book",
        Q693: "book",
        Q699: "book",
        Q27283: "event",
        Q40317: "event",
        Q42236: "event",
        Q74551327: "book",
        Q84252804: "book",
        Q84253146: "book",
        Q85215989: "book",
        Q108744576: "dataset",
        Q111709174: "post",
        Q136277: "software",
        Q170378: "software",
        Q305873: "software",
        Q893210: "software",
        Q947369: "software",
        Q950981: "software",
        Q977076: "software",
        Q2174007: "software",
        Q2531940: "software",
        Q3600969: "software",
        Q3848426: "software",
        Q3926208: "software",
        Q4441598: "software",
        Q5991258: "software",
        Q6163847: "software",
        Q7715973: "software",
        Q8026703: "software",
        Q189835: "legislation",
        Q189837: "legislation",
        Q189845: "legislation",
        Q223590: "legislation",
        Q9427662: "software",
        Q449150: "legislation",
        Q492610: "legislation",
        Q603299: "legislation",
        Q604188: "legislation",
        Q691424: "legislation",
        Q862207: "legislation",
        Q915060: "legislation",
        Q1148232: "legislation",
        Q1185409: "legislation",
        Q1353859: "legislation",
        Q2028541: "legislation",
        Q2104464: "legislation",
        Q2385874: "legislation",
        Q2416319: "legislation",
        Q2944268: "legislation",
        Q2944277: "legislation",
        Q3664422: "legislation",
        Q4114390: "legislation",
        Q4115775: "legislation",
        Q4357923: "legislation",
        Q4503886: "legislation",
        Q4503884: "legislation",
        Q4503885: "legislation",
        Q4503889: "legislation",
        Q4503897: "legislation",
        Q4817455: "legislation",
        Q4925942: "legislation",
        Q5058912: "legislation",
        Q5058913: "legislation",
        Q5058918: "legislation",
        Q5058919: "legislation",
        Q5058916: "legislation",
        Q5058926: "legislation",
        Q5058924: "legislation",
        Q5058925: "legislation",
        Q5058930: "legislation",
        Q5058935: "legislation",
        Q5058933: "legislation",
        Q5058939: "legislation",
        Q5058937: "legislation",
        Q5421766: "legislation",
        Q5706946: "legislation",
        Q7210265: "legislation",
        Q18601928: "software",
        Q10598112: "legislation",
        Q19715216: "software",
        Q13424629: "legislation",
        Q16025403: "event",
        Q16025400: "event",
        Q16025409: "event",
        Q16956312: "legislation",
        Q16524890: "event",
        Q17144862: "legislation",
        Q17988485: "legislation",
        Q23048056: "legislation",
        Q22930956: "event",
        Q22931015: "event",
        Q23642670: "event",
        Q24961230: "event",
        Q25377603: "event",
        Q27897473: "legislation",
        Q28197261: "legislation",
        Q51119350: "event",
        Q51119369: "event",
        Q51119383: "event",
        Q51119404: "event",
        Q51119429: "event",
        Q51120567: "event",
        Q55530949: "event",
        Q16691: "software",
        Q48267: "software",
        Q60981963: "event",
        Q22696: "legislation",
        Q22759: "legislation",
        Q96631869: "software",
        Q106253790: "software",
        Q106880300: "software",
        Q1033573: "dataset",
        Q1205607: "dataset",
        Q1667884: "dataset",
        Q2145124: "dataset",
        Q2819247: "dataset",
        Q3570413: "dataset",
        Q4685824: "dataset",
        Q7002108: "dataset",
        Q7200622: "dataset",
        Q18609754: "dataset",
        Q119272: "book",
        Q148163: "book",
        Q148453: "book",
        Q208080: "book",
        Q210675: "book",
        Q253137: "book",
        Q377258: "book",
        Q470610: "book",
        Q599099: "book",
        Q602708: "book",
        Q662073: "book",
        Q674448: "book",
        Q785479: "book",
        Q785522: "book",
        Q915591: "book",
        Q1084127: "book",
        Q584659: "event",
        Q1255689: "book",
        Q1255726: "book",
        Q1474463: "book",
        Q1485271: "book",
        Q906363: "event",
        Q1742962: "book",
        Q1954953: "book",
        Q1497671: "event",
        Q2349495: "book",
        Q2522999: "book",
        Q3775629: "book",
        Q3883891: "book",
        Q4164367: "book",
        Q3577561: "event",
        Q4744117: "book",
        Q5100366: "book",
        Q5158398: "book",
        Q6027927: "book",
        Q5681048: "event",
        Q5691927: "event",
        Q6417435: "book",
        Q7293812: "book",
        Q7354827: "book",
        Q7534220: "book",
        Q7573432: "book",
        Q7556682: "event",
        Q7556683: "event",
        Q7556685: "event",
        Q10313304: "book",
        Q10830180: "book",
        Q11946197: "book",
        Q12578980: "book",
        Q13220650: "book",
        Q13582776: "event",
        Q18071186: "book",
        Q18689772: "book",
        Q19602704: "book",
        Q21086501: "book",
        Q24255634: "book",
        Q24842448: "book",
        Q24944707: "book",
        Q24943218: "event",
        Q47500192: "dataset",
        Q27866133: "book",
        Q28220756: "legislation",
        Q29887223: "legislation",
        Q30935481: "book",
        Q31842628: "legislation",
        Q42402646: "book",
        Q55622691: "book",
        Q59056824: "legislation",
        Q62782177: "legislation",
        Q31918: "book",
        Q70791907: "legislation",
        Q97229550: "book",
        Q97597112: "book",
        Q104439053: "book",
        Q105906205: "book",
        Q106124032: "book",
        Q106393147: "book",
        Q107177810: "book",
        Q108293881: "book",
        Q111394772: "event",
        Q101552821: "performance",
        Q116634: "software",
        Q208850: "software",
        Q209163: "software",
        Q266990: "software",
        Q270948: "software",
        Q467880: "software",
        Q472055: "software",
        Q584105: "software",
        Q744038: "software",
        Q839777: "software",
        Q845620: "software",
        Q848991: "software",
        Q858523: "software",
        Q900604: "software",
        Q958821: "software",
        Q1015325: "software",
        Q1041225: "software",
        Q1050023: "software",
        Q1121542: "software",
        Q1192658: "software",
        Q7708379: "software",
        Q153134: "event",
        Q205097: "event",
        Q537225: "event",
        Q815872: "event",
        Q1241858: "event",
        Q1328521: "event",
        Q11187440: "software",
        Q1813574: "event",
        Q1879352: "event",
        Q2110027: "event",
        Q2147804: "event",
        Q2265649: "event",
        Q2390665: "event",
        Q2425012: "event",
        Q2505543: "event",
        Q2710193: "event",
        Q2753995: "event",
        Q2836675: "event",
        Q2922227: "event",
        Q2939692: "event",
        Q2939693: "event",
        Q3889661: "event",
        Q13733263: "software",
        Q5044124: "event",
        Q5639717: "event",
        Q5752804: "event",
        Q5752855: "event",
        Q5752946: "event",
        Q15477174: "software",
        Q18156733: "software",
        Q18348827: "software",
        Q10273189: "event",
        Q13509947: "event",
        Q13571350: "event",
        Q15809323: "event",
        Q15961911: "event",
        Q141459: "performance",
        Q384181: "performance",
        Q438503: "performance",
        Q601235: "performance",
        Q877693: "performance",
        Q965635: "performance",
        Q1166726: "performance",
        Q21008098: "event",
        Q21011266: "event",
        Q21035151: "event",
        Q21035155: "event",
        Q21035156: "event",
        Q21035166: "event",
        Q21035176: "event",
        Q2352315: "performance",
        Q21971834: "event",
        Q5072880: "performance",
        Q5799402: "performance",
        Q25906521: "event",
        Q9334632: "performance",
        Q28339379: "event",
        Q28339417: "event",
        Q29050586: "event",
        Q29425176: "event",
        Q29466507: "event",
        Q12302979: "performance",
        Q12983518: "performance",
        Q15697534: "performance",
        Q9732903: "webpage",
        Q11002482: "webpage",
        Q12096573: "webpage",
        Q16059585: "webpage",
        Q16059613: "webpage",
        Q16059624: "webpage",
        Q19208935: "webpage",
        Q21450877: "webpage",
        Q23916: "software",
        Q27291: "software",
        Q54767: "software",
        Q63974574: "event",
        Q35232: "event",
        Q429083: "dataset",
        Q540264: "dataset",
        Q906648: "dataset",
        Q1478823: "dataset",
        Q1584044: "dataset",
        Q2537421: "dataset",
        Q3163116: "dataset",
        Q1223895: "software",
        Q1224999: "software",
        Q1327648: "software",
        Q1395577: "software",
        Q1425505: "software",
        Q1493064: "software",
        Q1506693: "software",
        Q1610017: "software",
        Q1635956: "software",
        Q1755420: "software",
        Q1823737: "software",
        Q2910554: "software",
        Q3257925: "software",
        Q3288281: "software",
        Q3362070: "software",
        Q3495514: "software",
        Q3739535: "software",
        Q4393107: "software",
        Q4449864: "software",
        Q4485157: "software",
        Q4704404: "software",
        Q5647425: "software",
        Q6561427: "software",
        Q6895044: "software",
        Q6955546: "software",
        Q7230210: "software",
        Q7766240: "software",
        Q7832342: "software",
        Q7888616: "software",
        Q7927920: "software",
        Q9318902: "software",
        Q10714182: "software",
        Q11297254: "software",
        Q11446445: "software",
        Q14411698: "software",
        Q15613992: "software",
        Q16021388: "software",
        Q16070115: "software",
        Q17042291: "software",
        Q17049225: "software",
        Q17992502: "software",
        Q21087661: "software",
        Q22974170: "software",
        Q25397095: "software",
        Q26692802: "software",
        Q28004621: "software",
        Q29471320: "software",
        Q29867401: "software",
        Q25508849: "book",
        Q37813767: "book",
        Q48835388: "software",
        Q50572288: "software",
        Q55588631: "software",
        Q43747: "dataset",
        Q60617825: "software",
        Q60617897: "software",
        Q60617909: "software",
        Q60617933: "software",
        Q60617940: "software",
        Q60617948: "software",
        Q60617960: "software",
        Q60777418: "software",
        Q61475894: "software",
        Q61642128: "software",
        Q61838206: "software",
        Q64170203: "software",
        Q64641660: "software",
        Q64692685: "software",
        Q65073088: "software",
        Q65963104: "software",
        Q67016067: "software",
        Q73548809: "software",
        Q73626664: "software",
        Q78444225: "software",
        Q85341917: "software",
        Q85422949: "software",
        Q85637992: "software",
        Q87741364: "software",
        Q89691527: "software",
        Q101900049: "software",
        Q104438884: "software",
        Q105488936: "software",
        Q105675772: "software",
        Q106542313: "software",
        Q107486718: "software",
        Q109115381: "software",
        Q109553454: "software",
        Q110817849: "software",
        Q110948671: "software",
        Q111223304: "software",
        Q109923223: "software",
        Q111520556: "software",
        Q3239011: "dataset",
        Q4971453: "dataset",
        Q5275636: "dataset",
        Q7658822: "dataset",
        Q9372631: "dataset",
        Q174666: "software",
        Q213666: "software",
        Q226264: "software",
        Q282080: "software",
        Q290196: "software",
        Q588145: "software",
        Q600659: "software",
        Q720353: "software",
        Q931140: "software",
        Q1053058: "software",
        Q1077480: "software",
        Q1139923: "software",
        Q1192309: "software",
        Q1198514: "software",
        Q2597557: "software",
        Q3030796: "software",
        Q3480046: "software",
        Q3496028: "software",
        Q3496042: "software",
        Q3900494: "software",
        Q4119202: "software",
        Q4162386: "software",
        Q16325412: "dataset",
        Q7005105: "software",
        Q7075017: "software",
        Q7300019: "software",
        Q7393022: "software",
        Q7643164: "software",
        Q231302: "book",
        Q237338: "book",
        Q242492: "book",
        Q382236: "book",
        Q438533: "book",
        Q470137: "book",
        Q478804: "book",
        Q503106: "book",
        Q865484: "book",
        Q751967: "event",
        Q819264: "event",
        Q1499199: "book",
        Q874579: "event",
        Q875948: "event",
        Q2279967: "event",
        Q2357104: "event",
        Q2415843: "event",
        Q12307966: "software",
        Q3909444: "software",
        Q4047260: "software",
        Q3827292: "event",
        Q5366097: "book",
        Q5636103: "software",
        Q5255897: "event",
        Q6013084: "software",
        Q5959004: "event",
        Q7142882: "software",
        Q16632299: "software",
        Q7927948: "software",
        Q11080558: "book",
        Q11304780: "book",
        Q11320378: "software",
        Q13512320: "software",
        Q28933703: "software",
        Q28933701: "software",
        Q28933706: "software",
        Q28933708: "software",
        Q28933712: "software",
        Q28933719: "software",
        Q20057018: "software",
        Q21198342: "book",
        Q21202185: "periodical",
        Q21997246: "motion_picture",
        Q60227597: "dataset",
        Q62414839: "legislation",
        Q66823362: "software",
        Q14656: "software",
        Q43627: "software",
        Q66800798: "event",
        Q29502: "event",
        Q85299672: "software",
        Q76160314: "event",
        Q108615611: "dataset",
        Q111904334: "dataset",
        Q106920999: "software",
        Q104536775: "book",
        Q104536849: "book",
        Q104536877: "book",
        Q104536908: "book",
        Q104536976: "book",
        Q104537024: "book",
        Q106231889: "book",
        Q107408274: "book",
        Q107413638: "book",
        Q106963495: "event",
        Q111181669: "review",
        Q1684595: "dataset",
        Q109584422: "performance",
        Q110279610: "performance",
        Q278610: "software",
        Q893147: "software",
        Q1239207: "software",
        Q5007725: "software",
        Q5323032: "software",
        Q6008645: "software",
        Q7950616: "software",
        Q166788: "event",
        Q181789: "event",
        Q818574: "review",
        Q307439: "event",
        Q452172: "event",
        Q1436668: "review",
        Q2245461: "review",
        Q2207867: "event",
        Q2265647: "event",
        Q2453094: "event",
        Q2801174: "event",
        Q3813242: "review",
        Q3956596: "legislation",
        Q5154588: "review",
        Q5160138: "review",
        Q5937746: "review",
        Q4127125: "standard",
        Q6934595: "review",
        Q6956315: "review",
        Q7907956: "review",
        Q8068723: "review",
        Q18287040: "software",
        Q11387009: "event",
        Q21283449: "software",
        Q16324744: "book",
        Q17637777: "review",
        Q179465: "performance",
        Q248255: "performance",
        Q17272482: "standard",
        Q17272692: "standard",
        Q17280916: "standard",
        Q20012720: "legislation",
        Q691771: "performance",
        Q20011486: "review",
        Q820922: "performance",
        Q1497328: "performance",
        Q1498088: "performance",
        Q1500983: "performance",
        Q1553339: "performance",
        Q1803735: "performance",
        Q2373914: "performance",
        Q2447826: "performance",
        Q2706051: "performance",
        Q2956237: "performance",
        Q3077527: "performance",
        Q3083000: "performance",
        Q3240930: "performance",
        Q3495144: "performance",
        Q22909167: "review",
        Q3655696: "performance",
        Q4408537: "performance",
        Q5396690: "performance",
        Q24255328: "event",
        Q5552415: "performance",
        Q5663801: "performance",
        Q27070652: "legislation",
        Q12336368: "performance",
        Q42342966: "software",
        Q15990884: "song",
        Q18822510: "performance",
        Q19973796: "performance",
        Q42824069: "review",
        Q42824440: "review",
        Q42824827: "review",
        Q42825046: "review",
        Q25616123: "performance",
        Q47462314: "event",
        Q48996431: "review",
        Q63563749: "software",
        Q70191115: "software",
        Q2150: "event",
        Q70447452: "review",
        Q78089383: "review",
        Q78093526: "review",
        Q66098673: "performance",
        Q96003705: "review",
        Q79054127: "performance",
        Q98446308: "review",
        Q108064715: "software",
        Q99672520: "review",
        Q100699183: "review",
        Q105762635: "event",
        Q107302128: "review",
        Q107302258: "review",
        Q108305133: "review",
        Q110856497: "book",
        Q110738072: "event",
        Q119191: "software",
        Q164274: "software",
        Q166514: "software",
        Q183427: "software",
        Q184609: "software",
        Q184748: "software",
        Q191865: "software",
        Q202871: "software",
        Q271680: "software",
        Q283770: "software",
        Q308980: "software",
        Q467707: "software",
        Q537993: "software",
        Q574582: "software",
        Q625518: "software",
        Q633182: "software",
        Q778586: "software",
        Q836795: "software",
        Q849945: "software",
        Q865817: "software",
        Q908242: "software",
        Q959462: "software",
        Q1047886: "software",
        Q1065980: "software",
        Q1070421: "software",
        Q1074173: "software",
        Q1122588: "software",
        Q1152477: "software",
        Q1156049: "software",
        Q1186978: "software",
        Q1220872: "software",
        Q1248874: "software",
        Q1623338: "software",
        Q1663795: "software",
        Q1949698: "software",
        Q208628: "book",
        Q446523: "book",
        Q651019: "book",
        Q419441: "event",
        Q1193421: "book",
        Q1436115: "book",
        Q1521512: "book",
        Q1601740: "book",
        Q1872234: "book",
        Q1956258: "book",
        Q1957413: "book",
        Q1347838: "event",
        Q2252176: "book",
        Q2583965: "book",
        Q1944136: "event",
        Q2072215: "event",
        Q2673302: "event",
        Q2855282: "event",
        Q3589331: "book",
        Q3534698: "event",
        Q4243465: "book",
        Q4263008: "book",
        Q4071451: "event",
        Q4326869: "event",
        Q4326886: "event",
        Q4832957: "event",
        Q6391136: "book",
        Q6021105: "event",
        Q7187715: "book",
        Q7672908: "book",
        Q7426562: "event",
        Q7561276: "event",
        Q9207029: "book",
        Q11362827: "book",
        Q11588264: "book",
        Q11612940: "book",
        Q12404438: "dataset",
        Q14333796: "book",
        Q16626925: "book",
        Q17118115: "book",
        Q18339531: "book",
        Q19602791: "book",
        Q19893409: "event",
        Q25831177: "book",
        Q28407836: "book",
        Q28682619: "book",
        Q28686106: "book",
        Q60557971: "dataset",
        Q18109: "software",
        Q65067294: "book",
        Q4184: "book",
        Q34274: "book",
        Q92915890: "book",
        Q98596704: "book",
        Q105609506: "book",
        Q106689897: "event",
        Q108304511: "book",
        Q1964195: "software",
        Q2102665: "software",
        Q2114277: "software",
        Q2257348: "software",
        Q2293691: "software",
        Q2297769: "software",
        Q2537171: "software",
        Q2578744: "software",
        Q2641372: "software",
        Q2706314: "software",
        Q2717852: "software",
        Q2831043: "software",
        Q4112099: "software",
        Q4154431: "software",
        Q4292129: "software",
        Q4810567: "software",
        Q5071882: "software",
        Q6486632: "software",
        Q6553536: "software",
        Q6665305: "software",
        Q6914653: "software",
        Q7302709: "software",
        Q7504648: "software",
        Q7544035: "software",
        Q139060: "event",
        Q250496: "event",
        Q257262: "event",
        Q269616: "event",
        Q277924: "event",
        Q279283: "event",
        Q327765: "event",
        Q373956: "event",
        Q377889: "event",
        Q481394: "event",
        Q489532: "event",
        Q509581: "event",
        Q526530: "event",
        Q573613: "event",
        Q645225: "event",
        Q669262: "event",
        Q765896: "event",
        Q832043: "event",
        Q832107: "event",
        Q858439: "event",
        Q877353: "event",
        Q917269: "event",
        Q931687: "event",
        Q1116750: "event",
        Q1142770: "event",
        Q1156016: "event",
        Q1196663: "event",
        Q1196727: "event",
        Q1252747: "event",
        Q1292614: "event",
        Q1333366: "event",
        Q1376777: "event",
        Q11238306: "software",
        Q1769698: "event",
        Q1914150: "event",
        Q1953538: "event",
        Q2055296: "event",
        Q2062518: "event",
        Q11774664: "software",
        Q2276065: "event",
        Q2300361: "event",
        Q2412015: "event",
        Q2439355: "event",
        Q2533468: "event",
        Q2534750: "event",
        Q2540467: "event",
        Q2644795: "event",
        Q2991470: "event",
        Q3026458: "event",
        Q3068523: "event",
        Q3117951: "event",
        Q3123403: "event",
        Q13563219: "software",
        Q15975283: "software",
        Q17176533: "software",
        Q18392997: "software",
        Q20826962: "software",
        Q21013268: "software",
        Q21055608: "software",
        Q25313447: "software",
        Q28031555: "software",
        Q30077597: "software",
        Q30581237: "software",
        Q37307899: "software",
        Q47525747: "software",
        Q55106975: "software",
        Q62651817: "software",
        Q70383937: "software",
        Q48968: "event",
        Q100508790: "software",
        Q104764409: "software",
        Q105103015: "software",
        Q105526153: "software",
        Q106391210: "software",
        Q107829364: "software",
        Q107829622: "software",
        Q109682730: "event",
        Q109860356: "event",
        Q109936365: "event",
        Q110192585: "event",
        Q680913: "legislation",
        Q978539: "legislation",
        Q3398563: "event",
        Q3563181: "event",
        Q3586695: "event",
        Q3586859: "event",
        Q3650619: "event",
        Q4128634: "event",
        Q5261563: "event",
        Q5354600: "event",
        Q5354619: "event",
        Q5354625: "event",
        Q5354656: "event",
        Q5354662: "event",
        Q5354663: "event",
        Q5354660: "event",
        Q5354692: "event",
        Q5354731: "event",
        Q5354734: "event",
        Q5354743: "event",
        Q5354744: "event",
        Q5354750: "event",
        Q5354752: "event",
        Q5354797: "event",
        Q5354802: "event",
        Q5354828: "event",
        Q5354829: "event",
        Q5354847: "event",
        Q5354859: "event",
        Q5354887: "event",
        Q5354893: "event",
        Q5354902: "event",
        Q5354906: "event",
        Q5452198: "event",
        Q5456339: "event",
        Q5827614: "event",
        Q6129823: "event",
        Q6508670: "event",
        Q6800733: "event",
        Q6936337: "event",
        Q6980735: "event",
        Q7305543: "event",
        Q7442979: "event",
        Q7596928: "event",
        Q8424783: "event",
        Q8774620: "event",
        Q10312794: "event",
        Q10430113: "event",
        Q10956631: "event",
        Q11394707: "event",
        Q11775075: "event",
        Q12195172: "event",
        Q12237967: "event",
        Q13012970: "event",
        Q13256577: "event",
        Q14006248: "event",
        Q14362442: "event",
        Q14513611: "event",
        Q15261477: "event",
        Q15857735: "event",
        Q15885655: "event",
        Q16482341: "event",
        Q16957500: "event",
        Q16983162: "event",
        Q18657746: "event",
        Q18915465: "event",
        Q21087349: "event",
        Q24097670: "event",
        Q24910722: "event",
        Q25548647: "event",
        Q26260699: "event",
        Q27242623: "event",
        Q28122293: "event",
        Q28152015: "event",
        Q28363647: "event",
        Q28404720: "event",
        Q28404971: "event",
        Q28453929: "event",
        Q29102902: "event",
        Q35647389: "webpage",
        Q38080355: "event",
        Q47239206: "event",
        Q55315853: "event",
        Q61051482: "event",
        Q61964017: "event",
        Q62019864: "event",
        Q65041937: "event",
        Q65210722: "event",
        Q71989553: "event",
        Q73283366: "event",
        Q74212708: "event",
        Q76853179: "event",
        Q85811908: "event",
        Q97185204: "event",
        Q101421918: "event",
        Q107394355: "event",
        Q81304: "software",
        Q110546: "software",
        Q180760: "software",
        Q400185: "software",
        Q1076785: "software",
        Q1325106: "software",
        Q1416699: "software",
        Q399999: "legislation",
        Q431226: "event",
        Q573790: "event",
        Q1060617: "legislation",
        Q1113097: "legislation",
        Q705043: "event",
        Q1163060: "event",
        Q1219394: "event",
        Q1279357: "event",
        Q1458216: "event",
        Q1935121: "event",
        Q2047421: "event",
        Q2670332: "legislation",
        Q2260870: "event",
        Q2412191: "event",
        Q2515494: "event",
        Q2531579: "event",
        Q2684556: "event",
        Q3813313: "legislation",
        Q3449092: "event",
        Q3454916: "event",
        Q3454917: "event",
        Q3518511: "event",
        Q3931571: "event",
        Q3931603: "event",
        Q4127618: "event",
        Q2553286: "standard",
        Q4393807: "event",
        Q4393809: "event",
        Q4460509: "event",
        Q5267359: "legislation",
        Q5021202: "event",
        Q7302614: "legislation",
        Q7302617: "legislation",
        Q7302625: "legislation",
        Q7307167: "event",
        Q7307171: "event",
        Q7307169: "event",
        Q7307172: "event",
        Q7658986: "event",
        Q8964629: "event",
        Q9305214: "event",
        Q10290435: "event",
        Q10290447: "event",
        Q10750394: "legislation",
        Q12292328: "event",
        Q16250608: "legislation",
        Q15923787: "event",
        Q16061631: "event",
        Q19387509: "event",
        Q20199086: "event",
        Q20720731: "event",
        Q25044704: "event",
        Q25906438: "event",
        Q33103999: "event",
        Q48995961: "software",
        Q48806007: "event",
        Q54086790: "event",
        Q56300805: "legislation",
        Q56298560: "event",
        Q56304426: "event",
        Q59824867: "event",
        Q60189435: "event",
        Q60364778: "event",
        Q60832313: "event",
        Q60832352: "event",
        Q60835687: "event",
        Q60835756: "event",
        Q60835763: "event",
        Q60835775: "event",
        Q60835779: "event",
        Q60835781: "event",
        Q60835788: "event",
        Q60835874: "event",
        Q60835880: "event",
        Q60835964: "event",
        Q60836037: "event",
        Q60836058: "event",
        Q60836063: "event",
        Q60836061: "event",
        Q60836068: "event",
        Q60836069: "event",
        Q60836079: "event",
        Q60836077: "event",
        Q60836546: "event",
        Q60841354: "event",
        Q59164118: "standard",
        Q65128545: "event",
        Q65154340: "event",
        Q65156136: "event",
        Q65156193: "event",
        Q88680860: "legislation",
        Q99659193: "event",
        Q2990416: "software",
        Q3081213: "software",
        Q3529432: "software",
        Q3614994: "software",
        Q6015444: "software",
        Q6934486: "software",
        Q9356612: "software",
        Q170063: "event",
        Q564478: "event",
        Q829768: "event",
        Q836738: "event",
        Q1069363: "event",
        Q1255251: "event",
        Q1319165: "event",
        Q1898928: "event",
        Q2294927: "event",
        Q4752855: "event",
        Q4816014: "event",
        Q4843072: "event",
        Q4887699: "event",
        Q4892460: "event",
        Q4922330: "event",
        Q4968978: "event",
        Q5035518: "event",
        Q5035639: "event",
        Q5121403: "event",
        Q5124643: "event",
        Q5146194: "event",
        Q5327560: "event",
        Q5530386: "event",
        Q5629055: "event",
        Q6457810: "event",
        Q6630631: "event",
        Q6672304: "event",
        Q6728070: "event",
        Q6815393: "event",
        Q6840806: "event",
        Q6904305: "event",
        Q7068355: "event",
        Q7242731: "event",
        Q7242733: "event",
        Q7242773: "event",
        Q7242784: "event",
        Q7242791: "event",
        Q7260359: "event",
        Q7306874: "event",
        Q7413706: "event",
        Q7589672: "event",
        Q7633517: "event",
        Q7832310: "event",
        Q7902389: "event",
        Q7917993: "event",
        Q7995719: "event",
        Q11571371: "event",
        Q11795794: "event",
        Q16467590: "event",
        Q16841169: "event",
        Q16850489: "event",
        Q16979257: "event",
        Q17013377: "event",
        Q17017230: "event",
        Q17023293: "event",
        Q17056240: "event",
        Q17512396: "event",
        Q18215243: "event",
        Q19365525: "event",
        Q20709277: "event",
        Q31302964: "software",
        Q22812496: "event",
        Q24190332: "event",
        Q25104624: "event",
        Q28449529: "event",
        Q29561166: "event",
        Q30675417: "event",
        Q30905514: "event",
        Q42377496: "event",
        Q56249071: "software",
        Q55075493: "event",
        Q63442071: "event",
        Q106199835: "event",
        Q106204678: "event",
        Q106491674: "event",
        Q107183265: "event",
        Q754584: "software",
        Q4866353: "software",
        Q7439078: "software",
        Q623703: "book",
        Q655192: "book",
        Q1047433: "book",
        Q1081564: "book",
        Q446643: "event",
        Q1581176: "book",
        Q998672: "event",
        Q1746029: "book",
        Q1156329: "event",
        Q2025786: "book",
        Q2065131: "book",
        Q1520423: "event",
        Q2250844: "book",
        Q2250960: "book",
        Q1604562: "event",
        Q1738761: "event",
        Q1875610: "event",
        Q2552040: "book",
        Q2083629: "event",
        Q2188449: "event",
        Q2443567: "event",
        Q647229: "standard",
        Q2556222: "event",
        Q2558300: "event",
        Q2613738: "event",
        Q3434123: "book",
        Q3434454: "book",
        Q3536411: "book",
        Q3740879: "book",
        Q1345102: "standard",
        Q3917426: "book",
        Q3997226: "book",
        Q3997225: "book",
        Q4010242: "book",
        Q4034405: "book",
        Q3428525: "event",
        Q2161334: "standard",
        Q5276199: "book",
        Q4670142: "event",
        Q4931516: "event",
        Q5446981: "event",
        Q7246954: "book",
        Q16167709: "software",
        Q9378888: "book",
        Q7851772: "standard",
        Q10874566: "book",
        Q11191558: "book",
        Q11638380: "book",
        Q12347562: "event",
        Q98103963: "regulation",
        Q16000421: "book",
        Q15874031: "event",
        Q16832430: "event",
        Q18629280: "event",
        Q19900542: "event",
        Q29584836: "event",
        Q28864053: "standard",
        Q55637909: "software",
        Q1660368: "regulation",
        Q57936091: "book",
        Q3039667: "regulation",
        Q58902997: "book",
        Q3405526: "regulation",
        Q3536685: "regulation",
        Q3577418: "regulation",
        Q59565144: "event",
        Q11261: "software",
        Q4820592: "regulation",
        Q6000409: "regulation",
        Q61961946: "event",
        Q62839381: "event",
        Q64605573: "event",
        Q64876314: "event",
        Q74541288: "event",
        Q84756370: "event",
        Q29932790: "regulation",
        Q85794472: "event",
        Q85816294: "event",
        Q85846981: "event",
        Q100510764: "webpage",
        Q101107078: "book",
        Q50335907: "regulation",
        Q106201964: "book",
        Q106632483: "event",
        Q107177091: "event",
        Q459435: "motion_picture",
        Q596138: "motion_picture",
        Q1092621: "motion_picture",
        Q1234018: "motion_picture",
        Q1271310: "motion_picture",
        Q1323308: "motion_picture",
        Q1352102: "motion_picture",
        Q1371394: "motion_picture",
        Q1464369: "motion_picture",
        Q1480924: "motion_picture",
        Q1760864: "motion_picture",
        Q1800833: "motion_picture",
        Q2084909: "motion_picture",
        Q2096046: "motion_picture",
        Q111317987: "book",
        Q2670855: "motion_picture",
        Q3566966: "motion_picture",
        Q6839279: "periodical",
        Q7858627: "periodical",
        Q4259672: "book",
        Q4566090: "book",
        Q4903138: "book",
        Q4903139: "book",
        Q4903142: "book",
        Q4903143: "book",
        Q4903140: "book",
        Q4903141: "book",
        Q4903147: "book",
        Q4903144: "book",
        Q4903150: "book",
        Q4903148: "book",
        Q4903149: "book",
        Q4903155: "book",
        Q4903152: "book",
        Q4903156: "book",
        Q4903161: "book",
        Q4903166: "book",
        Q4903167: "book",
        Q4903165: "book",
        Q4903170: "book",
        Q4903168: "book",
        Q4903174: "book",
        Q4903175: "book",
        Q4903173: "book",
        Q4903178: "book",
        Q4903176: "book",
        Q4903177: "book",
        Q4903183: "book",
        Q4903181: "book",
        Q4903186: "book",
        Q4903187: "book",
        Q4903184: "book",
        Q4903185: "book",
        Q4903190: "book",
        Q4903191: "book",
        Q4903188: "book",
        Q4903198: "book",
        Q4903199: "book",
        Q4903202: "book",
        Q4903200: "book",
        Q4903201: "book",
        Q4903207: "book",
        Q4903210: "book",
        Q4903209: "book",
        Q4903215: "book",
        Q4903213: "book",
        Q4903216: "book",
        Q4903222: "book",
        Q4903221: "book",
        Q4903226: "book",
        Q4903225: "book",
        Q4903231: "book",
        Q4903229: "book",
        Q4903234: "book",
        Q4903232: "book",
        Q4903233: "book",
        Q4903238: "book",
        Q4903239: "book",
        Q4903237: "book",
        Q4903242: "book",
        Q4903243: "book",
        Q4903240: "book",
        Q4903241: "book",
        Q4903246: "book",
        Q4903245: "book",
        Q4903289: "book",
        Q6821974: "book",
        Q7251597: "book",
        Q12038416: "book",
        Q16841483: "book",
        Q17005487: "book",
        Q17009357: "book",
        Q21995289: "dataset",
        Q25473994: "book",
        Q62582641: "book",
        Q63443310: "book",
        Q63652138: "book",
        Q64026048: "book",
        Q106650169: "book",
        Q7301269: "motion_picture",
        Q184900: "software",
        Q189722: "software",
        Q20732395: "motion_picture",
        Q522972: "software",
        Q21028464: "motion_picture",
        Q27697957: "motion_picture",
        Q7889336: "software",
        Q356055: "book",
        Q154012: "event",
        Q154502: "event",
        Q254279: "event",
        Q257717: "event",
        Q444456: "event",
        Q1114458: "book",
        Q461917: "event",
        Q633181: "event",
        Q673514: "event",
        Q804560: "event",
        Q866210: "event",
        Q911924: "event",
        Q986161: "event",
        Q1116333: "event",
        Q1137923: "event",
        Q1152364: "event",
        Q1253480: "event",
        Q1264256: "event",
        Q1298953: "event",
        Q2008684: "book",
        Q1367629: "event",
        Q1406271: "event",
        Q1435951: "event",
        Q1511361: "event",
        Q1615460: "event",
        Q1712663: "event",
        Q1741789: "event",
        Q1762010: "event",
        Q1886706: "event",
        Q2743287: "book",
        Q2180970: "event",
        Q2181014: "event",
        Q2258086: "event",
        Q2304773: "event",
        Q3027814: "book",
        Q2387523: "event",
        Q2530662: "event",
        Q2655298: "event",
        Q2699757: "event",
        Q3491290: "book",
        Q2919327: "event",
        Q2972879: "event",
        Q3070310: "event",
        Q3070846: "event",
        Q3092946: "event",
        Q3206529: "event",
        Q3508866: "event",
        Q3819721: "event",
        Q4191987: "event",
        Q4955683: "book",
        Q4457169: "event",
        Q5197887: "book",
        Q4801521: "event",
        Q4838683: "event",
        Q4851250: "event",
        Q4931260: "event",
        Q4986276: "event",
        Q5151487: "event",
        Q5192915: "event",
        Q5193357: "event",
        Q5408063: "event",
        Q6071891: "book",
        Q5445835: "event",
        Q6149972: "book",
        Q5783621: "event",
        Q6447416: "book",
        Q17167101: "software",
        Q10551516: "event",
        Q10679874: "event",
        Q11565570: "book",
        Q13137923: "event",
        Q16840211: "book",
        Q20081479: "book",
        Q21224061: "event",
        Q29011550: "book",
        Q10253: "event",
        Q51645: "event",
        Q80592893: "software",
        Q106117184: "motion_picture",
        Q78788577: "software",
        Q107671265: "event",
        Q111144728: "book",
        Q111718195: "event",
        Q111718669: "event",
        Q146923: "software",
        Q193564: "software",
        Q538556: "software",
        Q1366152: "software",
        Q1551207: "software",
        Q5563000: "software",
        Q7170392: "software",
        Q1035220: "event",
        Q1264973: "event",
        Q2518231: "book",
        Q2273734: "event",
        Q2995599: "book",
        Q3561987: "book",
        Q3855510: "book",
        Q3423767: "event",
        Q3586483: "event",
        Q3722112: "event",
        Q5827511: "event",
        Q5894489: "event",
        Q6071389: "event",
        Q6664348: "event",
        Q6936317: "event",
        Q7061379: "event",
        Q7131232: "event",
        Q7281155: "performance",
        Q7433676: "event",
        Q7852059: "event",
        Q10271409: "event",
        Q10271630: "event",
        Q10271631: "event",
        Q11122993: "book",
        Q10845458: "event",
        Q11612941: "book",
        Q11232701: "event",
        Q11525676: "event",
        Q11864382: "event",
        Q11890047: "event",
        Q11918760: "event",
        Q11918790: "event",
        Q11918792: "event",
        Q11922114: "event",
        Q12131668: "event",
        Q12131669: "event",
        Q12322522: "event",
        Q12371153: "event",
        Q12387676: "event",
        Q12388486: "event",
        Q12406392: "event",
        Q13102763: "event",
        Q14215493: "event",
        Q15154951: "event",
        Q15264058: "event",
        Q15280243: "event",
        Q15974353: "event",
        Q16361655: "event",
        Q16883908: "event",
        Q16964284: "event",
        Q17071919: "event",
        Q17075010: "event",
        Q17496410: "event",
        Q18355162: "event",
        Q19883750: "event",
        Q20106847: "event",
        Q20203428: "event",
        Q20546236: "event",
        Q21281445: "book",
        Q20650615: "event",
        Q20791519: "event",
        Q21044497: "event",
        Q21506111: "event",
        Q23660852: "event",
        Q23925671: "event",
        Q24228675: "event",
        Q24896646: "event",
        Q24911873: "event",
        Q25504574: "event",
        Q26714979: "event",
        Q29053679: "event",
        Q29934288: "event",
        Q47196900: "event",
        Q48757176: "event",
        Q48968718: "event",
        Q50730773: "event",
        Q51028723: "event",
        Q53866594: "event",
        Q52233158: "standard",
        Q62027749: "event",
        Q64015453: "event",
        Q67002968: "book",
        Q76415672: "event",
        Q77131799: "event",
        Q85855017: "event",
        Q86157788: "event",
        Q96877897: "event",
        Q98417129: "event",
        Q106077542: "event",
        Q108167473: "event",
        Q107300839: "standard",
        Q109924177: "event",
        Q110408266: "event",
        Q110408267: "event",
        Q110408268: "event",
        Q110408269: "event",
        Q111292310: "standard",
        Q5769663: "motion_picture",
        Q5855976: "motion_picture",
        Q73633: "event",
        Q114699: "event",
        Q137161: "event",
        Q150147: "event",
        Q167071: "event",
        Q167824: "event",
        Q178340: "event",
        Q186196: "event",
        Q188158: "event",
        Q189994: "event",
        Q230186: "event",
        Q272090: "event",
        Q277069: "event",
        Q311466: "event",
        Q391394: "event",
        Q483463: "event",
        Q523511: "event",
        Q623708: "event",
        Q624968: "event",
        Q641572: "event",
        Q673097: "event",
        Q674435: "event",
        Q675510: "event",
        Q773129: "event",
        Q818463: "event",
        Q843360: "event",
        Q845262: "event",
        Q849939: "event",
        Q861883: "event",
        Q877484: "event",
        Q882761: "event",
        Q917575: "event",
        Q31086090: "motion_picture",
        Q1057000: "event",
        Q1060449: "event",
        Q1074009: "event",
        Q1075259: "event",
        Q127879: "standard",
        Q557770: "standard",
        Q927521: "standard",
        Q1110221: "standard",
        Q1172367: "standard",
        Q1323676: "standard",
        Q2739642: "standard",
        Q4392311: "standard",
        Q4672467: "standard",
        Q7095934: "standard",
        Q17148351: "book",
        Q25304621: "book",
        Q22937314: "standard",
        Q63860397: "motion_picture",
        Q41707512: "event",
        Q47012533: "event",
        Q47981644: "event",
        Q51172766: "event",
        Q56023992: "event",
        Q56024035: "event",
        Q56024038: "event",
        Q56024039: "event",
        Q56024037: "event",
        Q56024042: "event",
        Q56024043: "event",
        Q56024040: "event",
        Q56024041: "event",
        Q56583453: "event",
        Q56676100: "event",
        Q56254915: "standard",
        Q60009059: "event",
        Q61989916: "event",
        Q64778850: "event",
        Q64918845: "event",
        Q65152203: "event",
        Q65205015: "event",
        Q65205682: "event",
        Q65209646: "event",
        Q5389: "event",
        Q31909: "event",
        Q104536896: "motion_picture",
        Q75476195: "event",
        Q75951701: "event",
        Q76621956: "event",
        Q85547059: "event",
        Q85547214: "event",
        Q96747290: "event",
        Q97190544: "event",
        Q105580505: "event",
        Q107434480: "book",
        Q107434597: "book",
        Q105548196: "standard",
        Q1087613: "event",
        Q1117077: "event",
        Q1134131: "event",
        Q1140610: "event",
        Q1150550: "event",
        Q1155411: "event",
        Q1191392: "event",
        Q1196475: "event",
        Q1207799: "event",
        Q1216498: "event",
        Q1267445: "event",
        Q1269315: "event",
        Q1328412: "event",
        Q1358264: "event",
        Q1360658: "event",
        Q1366374: "event",
        Q1377066: "event",
        Q1628831: "event",
        Q1687964: "event",
        Q1741857: "event",
        Q1779835: "event",
        Q1859105: "event",
        Q2226020: "event",
        Q2231681: "event",
        Q2398220: "event",
        Q2495164: "event",
        Q2665176: "event",
        Q2900586: "event",
        Q3074026: "event",
        Q3178313: "event",
        Q3178363: "event",
        Q3178414: "event",
        Q3496987: "event",
        Q3735842: "event",
        Q3757977: "event",
        Q3909866: "event",
        Q3968473: "event",
        Q4288127: "event",
        Q4534009: "event",
        Q4583737: "event",
        Q4690165: "event",
        Q4806779: "event",
        Q4906371: "event",
        Q5008726: "event",
        Q5013660: "event",
        Q5100561: "event",
        Q5138229: "event",
        Q5146967: "event",
        Q5153819: "event",
        Q5185108: "event",
        Q5320207: "event",
        Q5566841: "event",
        Q5568541: "event",
        Q5577290: "event",
        Q5598051: "event",
        Q5759296: "event",
        Q5954294: "event",
        Q5954306: "event",
        Q6045582: "event",
        Q6060246: "event",
        Q6406489: "event",
        Q6496189: "event",
        Q6522578: "event",
        Q6671040: "event",
        Q6809912: "event",
        Q6972844: "event",
        Q6978652: "event",
        Q7015825: "event",
        Q7210011: "event",
        Q7320524: "event",
        Q7362553: "event",
        Q7435636: "event",
        Q7437755: "event",
        Q7450693: "event",
        Q7502893: "event",
        Q7522912: "event",
        Q7573872: "event",
        Q7585971: "event",
        Q7602628: "event",
        Q7987664: "event",
        Q8026289: "event",
        Q8035821: "event",
        Q10307706: "event",
        Q10387951: "event",
        Q10387949: "event",
        Q10891647: "event",
        Q11328791: "event",
        Q11389697: "event",
        Q12505307: "event",
        Q14489467: "event",
        Q15056133: "event",
        Q16056693: "event",
        Q16329755: "event",
        Q16585566: "event",
        Q16987323: "event",
        Q17012060: "event",
        Q17012083: "event",
        Q17055683: "event",
        Q17085818: "event",
        Q17635744: "event",
        Q108579428: "event",
        Q752001: "periodical",
        Q109315275: "event",
        Q110653130: "event",
        Q80689: "software",
        Q82231: "software",
        Q339678: "software",
        Q425567: "software",
        Q579047: "software",
        Q595971: "software",
        Q1050734: "software",
        Q1103464: "software",
        Q1142282: "software",
        Q1235236: "software",
        Q1307492: "software",
        Q1572823: "software",
        Q3251008: "software",
        Q3836406: "software",
        Q3932296: "software",
        Q4822779: "software",
        Q5254115: "software",
        Q5457555: "software",
        Q6031185: "software",
        Q7005136: "software",
        Q7302818: "software",
        Q7606661: "software",
        Q7662753: "software",
        Q7805429: "software",
        Q318247: "book",
        Q9295717: "software",
        Q2940408: "book",
        Q677818: "standard",
        Q742323: "standard",
        Q758851: "standard",
        Q911682: "standard",
        Q1320152: "standard",
        Q1428261: "standard",
        Q12847068: "software",
        Q1718036: "standard",
        Q2023100: "standard",
        Q2235486: "standard",
        Q2377054: "standard",
        Q2928673: "standard",
        Q4038774: "standard",
        Q4524036: "standard",
        Q5514543: "standard",
        Q6664300: "standard",
        Q7168699: "standard",
        Q7269014: "standard",
        Q7797281: "standard",
        Q7827452: "standard",
        Q7918427: "standard",
        Q22907102: "software",
        Q12352853: "standard",
        Q12356320: "standard",
        Q25099437: "software",
        Q16671949: "standard",
        Q28380029: "standard",
        Q28451968: "software",
        Q28600423: "software",
        Q28600424: "software",
        Q19646251: "event",
        Q19952464: "event",
        Q29904506: "software",
        Q19358669: "standard",
        Q21234868: "event",
        Q21411001: "event",
        Q24060932: "event",
        Q24871078: "event",
        Q34736746: "software",
        Q35687049: "software",
        Q28187305: "event",
        Q28447912: "event",
        Q27894992: "standard",
        Q28379876: "standard",
        Q48734839: "event",
        Q48781998: "event",
        Q50329691: "event",
        Q52158514: "event",
        Q53074392: "event",
        Q55394477: "event",
        Q55400435: "event",
        Q55671632: "event",
        Q65951343: "software",
        Q57913760: "event",
        Q59616856: "book",
        Q58756: "software",
        Q60492646: "event",
        Q96758034: "periodical",
        Q67862373: "event",
        Q101094203: "periodical",
        Q77036421: "event",
        Q108101999: "periodical",
        Q110589054: "periodical",
        Q86518131: "event",
        Q102111921: "event",
        Q106635331: "event",
        Q106875443: "event",
        Q108172239: "event",
        Q203081: "software",
        Q241411: "software",
        Q340002: "software",
        Q598063: "software",
        Q646029: "software",
        Q647710: "software",
        Q721332: "software",
        Q799930: "software",
        Q837942: "software",
        Q901705: "software",
        Q911654: "software",
        Q1048338: "software",
        Q1322529: "software",
        Q1454900: "software",
        Q1635613: "software",
        Q3133994: "software",
        Q3410013: "software",
        Q3434387: "software",
        Q3487336: "software",
        Q3496143: "software",
        Q3504297: "software",
        Q3504702: "software",
        Q3504854: "software",
        Q3571452: "software",
        Q3904937: "software",
        Q4052822: "software",
        Q4713382: "software",
        Q4774495: "software",
        Q4839596: "software",
        Q4923654: "software",
        Q4939411: "software",
        Q4997161: "software",
        Q5014646: "software",
        Q5221809: "software",
        Q5267627: "software",
        Q5297093: "software",
        Q5437580: "software",
        Q5578038: "software",
        Q5710220: "software",
        Q170207: "book",
        Q191825: "book",
        Q209719: "book",
        Q265461: "book",
        Q337921: "book",
        Q1001051: "book",
        Q1430953: "book",
        Q1960426: "book",
        Q1975029: "book",
        Q1999584: "book",
        Q2049690: "book",
        Q2350579: "book",
        Q2375917: "book",
        Q2111319: "event",
        Q3246385: "book",
        Q4119762: "book",
        Q5118086: "book",
        Q5509136: "book",
        Q7831615: "book",
        Q10552833: "book",
        Q10397458: "event",
        Q11588760: "book",
        Q12406664: "book",
        Q21078287: "standard",
        Q21078294: "standard",
        Q26261145: "book",
        Q28158818: "event",
        Q28158823: "event",
        Q28171454: "event",
        Q29851044: "book",
        Q28456370: "standard",
        Q53679891: "software",
        Q10267: "software",
        Q64689000: "book",
        Q64693901: "standard",
        Q4577: "book",
        Q51623: "book",
        Q51632: "book",
        Q68232326: "standard",
        Q68246256: "standard",
        Q68246374: "standard",
        Q68246797: "standard",
        Q68246894: "standard",
        Q68248543: "standard",
        Q68248690: "standard",
        Q68248916: "standard",
        Q106959691: "book",
        Q106959701: "book",
        Q106960366: "book",
        Q107471791: "book",
        Q3066678: "periodical",
        Q7433680: "periodical",
        Q288608: "broadcast",
        Q338632: "broadcast",
        Q3421644: "broadcast",
        Q5465514: "broadcast",
        Q5812300: "broadcast",
        Q7135559: "broadcast",
        Q6349088: "software",
        Q6355192: "software",
        Q6509902: "software",
        Q6849475: "software",
        Q6861969: "software",
        Q6982414: "software",
        Q7005124: "software",
        Q7289782: "software",
        Q27897977: "periodical",
        Q7398010: "software",
        Q7413163: "software",
        Q7530055: "software",
        Q7581717: "software",
        Q7622212: "software",
        Q7830347: "software",
        Q7898262: "software",
        Q7942447: "software",
        Q7946179: "software",
        Q7946177: "software",
        Q7969410: "software",
        Q8042478: "software",
        Q174864: "book",
        Q9304228: "software",
        Q830634: "book",
        Q339152: "performance",
        Q359414: "performance",
        Q362925: "performance",
        Q1118771: "book",
        Q1355393: "book",
        Q725169: "event",
        Q1497442: "book",
        Q1549585: "book",
        Q1551978: "book",
        Q1741846: "book",
        Q1813873: "book",
        Q1970381: "book",
        Q1993385: "book",
        Q1446621: "performance",
        Q1573906: "performance",
        Q1631023: "performance",
        Q2457695: "book",
        Q1850936: "performance",
        Q2095399: "performance",
        Q2296786: "performance",
        Q2329639: "performance",
        Q2427056: "performance",
        Q2466454: "performance",
        Q2574013: "performance",
        Q21232614: "broadcast",
        Q3833332: "book",
        Q3853151: "book",
        Q23199326: "broadcast",
        Q5556711: "book",
        Q5987973: "book",
        Q5987987: "book",
        Q5987989: "book",
        Q5987995: "book",
        Q5987992: "book",
        Q7315424: "performance",
        Q17125946: "software",
        Q17141457: "software",
        Q9339163: "book",
        Q10444893: "book",
        Q11757815: "book",
        Q11757816: "book",
        Q11816927: "book",
        Q22907913: "software",
        Q14831027: "book",
        Q16572301: "book",
        Q19385747: "book",
        Q31839056: "book",
        Q65028757: "broadcast",
        Q63860309: "book",
        Q86924676: "event",
        Q98398434: "software",
        Q109265150: "broadcast",
        Q109611288: "performance",
        Q109875869: "performance",
        Q110908540: "performance",
        Q97501753: "performance",
        Q1195197: "software",
        Q1368899: "software",
        Q6822248: "software",
        Q442770: "review",
        Q782466: "review",
        Q879969: "review",
        Q907375: "review",
        Q917415: "review",
        Q1066228: "review",
        Q1189053: "review",
        Q1305405: "review",
        Q1399743: "review",
        Q1550400: "review",
        Q1675637: "review",
        Q1744617: "review",
        Q1749668: "review",
        Q1810071: "review",
        Q1982529: "review",
        Q2024680: "review",
        Q2109237: "review",
        Q11311509: "software",
        Q1778149: "event",
        Q262238: "standard",
        Q271868: "standard",
        Q272629: "standard",
        Q2640883: "event",
        Q2882324: "event",
        Q3532236: "review",
        Q2937260: "event",
        Q3001425: "event",
        Q3001431: "event",
        Q3345493: "event",
        Q3502977: "event",
        Q3532270: "event",
        Q4308623: "review",
        Q4456475: "review",
        Q4986414: "review",
        Q5073782: "review",
        Q5135723: "review",
        Q5227098: "review",
        Q5227414: "review",
        Q5266714: "review",
        Q3879961: "standard",
        Q3991473: "standard",
        Q6149124: "event",
        Q4653329: "standard",
        Q5322571: "standard",
        Q7354800: "performance",
        Q7210023: "standard",
        Q8024464: "standard",
        Q11637096: "performance",
        Q11703975: "event",
        Q12031733: "performance",
        Q13751606: "performance",
        Q24081315: "software",
        Q16616368: "event",
        Q19844197: "event",
        Q19949956: "event",
        Q32024778: "event",
        Q32028215: "event",
        Q41734983: "standard",
        Q52314849: "performance",
        Q60214939: "performance",
        Q84052586: "performance",
        Q89822180: "event",
        Q90573599: "event",
        Q97960925: "event",
        Q1147986: "motion_picture",
        Q1428934: "map",
        Q2258523: "map",
        Q4342538: "map",
        Q327618: "software",
        Q20871935: "motion_picture",
        Q575771: "software",
        Q580148: "software",
        Q725485: "software",
        Q938892: "software",
        Q1502803: "software",
        Q1990286: "software",
        Q2273119: "software",
        Q2415400: "software",
        Q2858839: "software",
        Q3754919: "software",
        Q5422764: "software",
        Q6012283: "software",
        Q178519: "book",
        Q216507: "event",
        Q1425557: "book",
        Q852569: "event",
        Q1589214: "book",
        Q1993117: "book",
        Q2374151: "book",
        Q2448865: "book",
        Q2725354: "book",
        Q3243552: "book",
        Q2617054: "event",
        Q3440984: "book",
        Q3940784: "book",
        Q3312908: "event",
        Q4914883: "book",
        Q5328438: "book",
        Q5421362: "review",
        Q3638583: "standard",
        Q15221050: "software",
        Q6752328: "review",
        Q6823025: "review",
        Q6902851: "book",
        Q6887052: "review",
        Q7012116: "review",
        Q7125125: "review",
        Q7308027: "book",
        Q7303026: "review",
        Q7336207: "review",
        Q7554226: "review",
        Q7978626: "review",
        Q18746518: "software",
        Q12566525: "book",
        Q12270117: "event",
        Q13368640: "book",
        Q23679990: "software",
        Q15295591: "book",
        Q14774083: "event",
        Q16656361: "book",
        Q16690155: "review",
        Q16697708: "review",
        Q17143088: "review",
        Q17146789: "review",
        Q19715429: "book",
        Q20667180: "book",
        Q22073956: "review",
        Q23058942: "event",
        Q23058943: "event",
        Q23058940: "event",
        Q23058941: "event",
        Q23058945: "event",
        Q23058964: "event",
        Q25052888: "review",
        Q25111322: "review",
        Q25303607: "review",
        Q25303630: "review",
        Q55960075: "motion_picture",
        Q26913057: "book",
        Q30594664: "review",
        Q63208582: "motion_picture",
        Q63352034: "map",
        Q64009834: "map",
        Q66344600: "map",
        Q56062141: "software",
        Q51953936: "review",
        Q54862604: "review",
        Q55069811: "review",
        Q87000729: "motion_picture",
        Q14663: "software",
        Q93376240: "motion_picture",
        Q98406740: "motion_picture",
        Q102133820: "motion_picture",
        Q102222054: "motion_picture",
        Q75790147: "event",
        Q111207730: "map",
        Q108299004: "software",
        Q102260654: "book",
        Q107356803: "book",
        Q108655216: "book",
        Q108655245: "book",
        Q108655406: "book",
        Q108655430: "book",
        Q798555: "motion_picture",
        Q853630: "motion_picture",
        Q909586: "motion_picture",
        Q1723850: "motion_picture",
        Q4925568: "motion_picture",
        Q5551875: "motion_picture",
        Q7256286: "motion_picture",
        Q8066387: "motion_picture",
        Q818391: "dataset",
        Q972090: "dataset",
        Q10674355: "motion_picture",
        Q1192634: "dataset",
        Q1353555: "dataset",
        Q16247268: "motion_picture",
        Q6967152: "dataset",
        Q18355406: "motion_picture",
        Q381983: "software",
        Q621196: "software",
        Q1121901: "software",
        Q1393965: "software",
        Q2092884: "software",
        Q23044991: "motion_picture",
        Q318140: "event",
        Q464122: "event",
        Q572421: "event",
        Q628007: "event",
        Q644077: "event",
        Q669329: "event",
        Q834550: "event",
        Q873501: "event",
        Q1543634: "book",
        Q1145419: "event",
        Q1940294: "book",
        Q1983504: "book",
        Q1358538: "event",
        Q1429194: "event",
        Q1443064: "event",
        Q1614639: "event",
        Q1964212: "event",
        Q2346003: "event",
        Q2429635: "event",
        Q12072005: "software",
        Q2615857: "event",
        Q2820185: "event",
        Q3547325: "event",
        Q3812488: "event",
        Q3881827: "event",
        Q24579448: "dataset",
        Q5035283: "book",
        Q5172238: "event",
        Q6038651: "event",
        Q15611243: "software",
        Q6961518: "event",
        Q11825891: "book",
        Q16583837: "event",
        Q16679275: "event",
        Q17637386: "event",
        Q18246596: "event",
        Q19389852: "book",
        Q20102893: "book",
        Q20664817: "book",
        Q21759196: "book",
        Q23498963: "event",
        Q26197794: "event",
        Q26936080: "event",
        Q28224582: "event",
        Q33113423: "event",
        Q39087739: "event",
        Q63524048: "dataset",
        Q48847692: "event",
        Q48965516: "event",
        Q102260466: "motion_picture",
        Q104902646: "motion_picture",
        Q108387267: "motion_picture",
        Q109626272: "motion_picture",
        Q109628205: "motion_picture",
        Q109628222: "motion_picture",
        Q109629396: "motion_picture",
        Q109653382: "motion_picture",
        Q109653402: "motion_picture",
        Q109653422: "motion_picture",
        Q110370447: "dataset",
        Q110370525: "dataset",
        Q91120774: "event",
        Q101048164: "book",
        Q109041634: "book",
        Q109594423: "event",
        Q262533: "speech",
        Q591055: "speech",
        Q1851305: "speech",
        Q2174013: "speech",
        Q4836991: "motion_picture",
        Q3588034: "speech",
        Q934552: "dataset",
        Q2277682: "dataset",
        Q4930138: "dataset",
        Q5319037: "software",
        Q783459: "book",
        Q141108: "event",
        Q205751: "event",
        Q1029945: "book",
        Q474265: "event",
        Q1312571: "book",
        Q1113829: "event",
        Q11201257: "software",
        Q1794431: "event",
        Q2446003: "event",
        Q3889367: "event",
        Q4763437: "book",
        Q4689559: "event",
        Q4689563: "event",
        Q4689561: "event",
        Q4892425: "event",
        Q5099677: "event",
        Q5168470: "event",
        Q5287670: "event",
        Q5710125: "event",
        Q5710494: "event",
        Q3943940: "standard",
        Q5856656: "event",
        Q5894534: "event",
        Q6010352: "event",
        Q6082069: "event",
        Q6120749: "event",
        Q6124460: "event",
        Q6367753: "event",
        Q6473368: "event",
        Q6815954: "event",
        Q7094028: "event",
        Q7119078: "event",
        Q7171374: "event",
        Q7826356: "event",
        Q9610154: "event",
        Q9696241: "event",
        Q10335626: "event",
        Q12055236: "book",
        Q11537266: "event",
        Q11821535: "event",
        Q11856211: "event",
        Q12127717: "event",
        Q13090411: "event",
        Q16060402: "event",
        Q16838050: "event",
        Q16952930: "event",
        Q18208274: "event",
        Q19894488: "book",
        Q62018250: "event",
        Q65211209: "event",
        Q110620022: "dataset",
        Q94238640: "event",
        Q100350675: "book",
        Q105091183: "event",
        Q106946577: "event",
        Q106946693: "event",
        Q106946746: "event",
        Q106946936: "event",
        Q106947025: "event",
        Q106947158: "event",
        Q106947493: "event",
        Q106949524: "event",
        Q106957967: "event",
        Q105854818: "standard",
        Q914229: "article-newspaper",
        Q1019996: "periodical",
        Q1061420: "map",
        Q2914518: "map",
        Q5465451: "article-newspaper",
        Q7033627: "periodical",
        Q97383183: "performance",
        Q10376670: "dataset",
        Q375580: "software",
        Q565428: "software",
        Q747948: "software",
        Q753486: "software",
        Q870898: "software",
        Q877886: "software",
        Q1077784: "software",
        Q1165574: "software",
        Q1208150: "software",
        Q1281199: "software",
        Q21816906: "article-newspaper",
        Q1464880: "software",
        Q2845269: "software",
        Q2990323: "software",
        Q3006107: "software",
        Q3248226: "software",
        Q3720681: "software",
        Q4044407: "software",
        Q4839801: "software",
        Q5134353: "software",
        Q5227383: "software",
        Q5282306: "software",
        Q5282304: "software",
        Q5282305: "software",
        Q5282310: "software",
        Q5448402: "software",
        Q5790483: "software",
        Q6815760: "software",
        Q7001229: "software",
        Q7246032: "software",
        Q7309457: "software",
        Q7663741: "software",
        Q7702738: "software",
        Q7705778: "software",
        Q7935198: "software",
        Q1431891: "event",
        Q11312455: "software",
        Q2609890: "book",
        Q2049337: "broadcast",
        Q3940778: "book",
        Q13224353: "software",
        Q1981678: "standard",
        Q34822698: "periodical",
        Q34886251: "periodical",
        Q4903135: "event",
        Q5756268: "event",
        Q15478230: "software",
        Q6983518: "book",
        Q7094118: "software",
        Q10499647: "event",
        Q10515305: "standard",
        Q18343749: "event",
        Q19384809: "event",
        Q20102416: "event",
        Q1889001: "performance",
        Q20708561: "event",
        Q2446979: "performance",
        Q22032108: "event",
        Q4176760: "performance",
        Q28229966: "event",
        Q28419214: "event",
        Q28455188: "event",
        Q28456437: "event",
        Q10349334: "performance",
        Q30970844: "event",
        Q63108743: "periodical",
        Q59139030: "dataset",
        Q59139047: "dataset",
        Q74596960: "article-newspaper",
        Q50825276: "event",
        Q54366: "software",
        Q60508070: "event",
        Q60762157: "event",
        Q60970062: "event",
        Q92334823: "periodical",
        Q65054598: "event",
        Q65250318: "event",
        Q108195060: "periodical",
        Q108386385: "article-newspaper",
        Q81460944: "event",
        Q98078079: "event",
        Q1437388: "dataset",
        Q1476656: "dataset",
        Q1925081: "dataset",
        Q940462: "broadcast",
        Q3882785: "dataset",
        Q15823625: "map",
        Q16824564: "motion_picture",
        Q7247296: "dataset",
        Q7554009: "dataset",
        Q7977959: "dataset",
        Q1917391: "software",
        Q2247481: "software",
        Q11492055: "broadcast",
        Q16354757: "dataset",
        Q74852: "event",
        Q94920: "event",
        Q162691: "event",
        Q1412138: "book",
        Q1308110: "event",
        Q1402000: "event",
        Q86920: "standard",
        Q184473: "standard",
        Q279979: "standard",
        Q2131698: "event",
        Q2941187: "legislation",
        Q12059961: "software",
        Q772992: "standard",
        Q3441003: "book",
        Q3536740: "book",
        Q2920389: "event",
        Q3307816: "event",
        Q3446130: "event",
        Q4363010: "book",
        Q1886335: "standard",
        Q25054829: "dataset",
        Q5550345: "event",
        Q5764313: "event",
        Q15544676: "software",
        Q15548044: "software",
        Q6484291: "event",
        Q7259584: "book",
        Q7708276: "book",
        Q7311364: "event",
        Q7121072: "standard",
        Q9561594: "event",
        Q10281773: "event",
        Q11558987: "book",
        Q12713932: "event",
        Q22665869: "software",
        Q25303924: "software",
        Q18649141: "event",
        Q17484151: "standard",
        Q28964688: "software",
        Q104844527: "regulation",
        Q106944204: "regulation",
        Q107910355: "regulation",
        Q25388072: "book",
        Q24905495: "event",
        Q110469028: "regulation",
        Q25103897: "standard",
        Q110795553: "regulation",
        Q26853769: "standard",
        Q28206733: "standard",
        Q54328426: "broadcast",
        Q56316739: "dataset",
        Q56316737: "dataset",
        Q56316745: "dataset",
        Q62210692: "dataset",
        Q62528509: "dataset",
        Q60776281: "broadcast",
        Q56298192: "event",
        Q27731: "software",
        Q60075825: "event",
        Q70385248: "software",
        Q81314568: "dataset",
        Q73899440: "software",
        Q65807770: "book",
        Q97170784: "map",
        Q44563: "book",
        Q587: "event",
        Q70345832: "book",
        Q42332: "standard",
        Q18201787: "regulation",
        Q19968154: "regulation",
        Q96626931: "dataset",
        Q91348108: "software",
        Q94208558: "software",
        Q105846678: "dataset",
        Q104767049: "broadcast",
        Q105971777: "broadcast",
        Q107984415: "dataset",
        Q104574429: "software",
        Q108394321: "software",
        Q100984126: "book",
        Q105300447: "legislation",
        Q108572645: "event",
        Q1341051: "motion_picture",
        Q2259701: "map",
        Q2514015: "legal_case",
        Q811525: "dataset",
        Q1291275: "dataset",
        Q2301073: "dataset",
        Q3509361: "software",
        Q5535082: "software",
        Q5915793: "software",
        Q329547: "event",
        Q330094: "event",
        Q698718: "event",
        Q1431020: "book",
        Q1150737: "event",
        Q1518216: "event",
        Q1519234: "event",
        Q1939218: "event",
        Q2294714: "event",
        Q3059309: "motion_picture",
        Q3044959: "legislation",
        Q2751586: "event",
        Q2880384: "event",
        Q2880395: "event",
        Q1140550: "standard",
        Q5263804: "book",
        Q4780960: "event",
        Q4863772: "event",
        Q5249494: "event",
        Q5326943: "event",
        Q6006149: "event",
        Q6839276: "book",
        Q6518229: "event",
        Q4866001: "standard",
        Q6792070: "event",
        Q6917734: "event",
        Q7261293: "event",
        Q17078319: "software",
        Q9160460: "book",
        Q10548388: "event",
        Q12592413: "event",
        Q13431159: "book",
        Q15806966: "book",
        Q15911176: "event",
        Q15911188: "event",
        Q15913221: "event",
        Q15913970: "event",
        Q15914386: "event",
        Q47009776: "motion_picture",
        Q19906929: "event",
        Q20057842: "event",
        Q109046280: "regulation",
        Q26248668: "event",
        Q29561638: "event",
        Q32194977: "book",
        Q31887391: "event",
        Q64705787: "motion_picture",
        Q48731269: "book",
        Q48896962: "event",
        Q59157831: "dataset",
        Q56250304: "book",
        Q56272651: "event",
        Q1876289: "regulation",
        Q86661322: "dataset",
        Q86661793: "dataset",
        Q67185648: "event",
        Q13102199: "regulation",
        Q31847: "event",
        Q57598: "event",
        Q16041022: "regulation",
        Q103925569: "motion_picture",
        Q104765957: "motion_picture",
        Q106671613: "periodical",
        Q107236680: "periodical",
        Q107259292: "periodical",
        Q109733685: "motion_picture",
        Q109733760: "motion_picture",
        Q81178297: "book",
        Q96739634: "event",
        Q97695005: "event",
        Q97695011: "event",
        Q97695021: "event",
        Q97695043: "event",
        Q102260188: "book",
        Q100737424: "standard",
        Q103413604: "event",
        Q105721759: "event",
        Q331810: "song",
        Q5163109: "broadcast",
        Q7248875: "broadcast",
        Q11741414: "song",
        Q16937368: "song",
        Q17058481: "broadcast",
        Q20589414: "song",
        Q678114: "event",
        Q20621902: "song",
        Q723835: "event",
        Q827135: "event",
        Q835803: "event",
        Q841144: "event",
        Q864897: "event",
        Q1002704: "event",
        Q1006326: "event",
        Q1251530: "event",
        Q1612155: "event",
        Q1707715: "event",
        Q1722653: "event",
        Q1778874: "event",
        Q1895928: "event",
        Q21848887: "song",
        Q1970362: "event",
        Q2011793: "event",
        Q2089242: "event",
        Q2195792: "event",
        Q2213936: "event",
        Q2315901: "event",
        Q2367194: "event",
        Q2377567: "event",
        Q2395474: "event",
        Q2559808: "event",
        Q2642253: "event",
        Q2643912: "event",
        Q2647651: "event",
        Q2990946: "event",
        Q3032333: "event",
        Q3113716: "event",
        Q3197054: "event",
        Q3665774: "event",
        Q3715313: "event",
        Q5399932: "event",
        Q5516520: "event",
        Q5569316: "event",
        Q7248116: "event",
        Q7382029: "event",
        Q7569793: "event",
        Q7963823: "event",
        Q8350616: "event",
        Q10383448: "event",
        Q11782814: "event",
        Q13357840: "event",
        Q13471788: "event",
        Q14505357: "event",
        Q16203068: "event",
        Q16481903: "event",
        Q16481910: "event",
        Q16846845: "event",
        Q17520343: "event",
        Q18325242: "event",
        Q18572872: "event",
        Q19611296: "event",
        Q19688404: "event",
        Q19899595: "event",
        Q19984095: "event",
        Q20182534: "event",
        Q20718275: "event",
        Q2048167: "performance",
        Q21006888: "event",
        Q21008603: "event",
        Q21013420: "event",
        Q21501489: "event",
        Q22691537: "event",
        Q22908614: "event",
        Q5156381: "performance",
        Q26156310: "event",
        Q28856262: "book",
        Q29383137: "event",
        Q38026890: "event",
        Q21998361: "performance",
        Q48004378: "event",
        Q51036091: "event",
        Q55131606: "event",
        Q55655315: "event",
        Q55807048: "event",
        Q57305027: "event",
        Q58109373: "event",
        Q61748301: "event",
        Q61748313: "event",
        Q67472109: "event",
        Q84263257: "event",
        Q97670872: "event",
        Q111735921: "software",
        Q104709550: "event",
        Q105412510: "event",
        Q587240: "manuscript",
        Q1473669: "manuscript",
        Q2981680: "manuscript",
        Q2981686: "manuscript",
        Q2981685: "manuscript",
        Q550089: "dataset",
        Q850950: "dataset",
        Q877050: "dataset",
        Q893139: "dataset",
        Q1134562: "song",
        Q1137588: "song",
        Q1973327: "dataset",
        Q2941628: "dataset",
        Q2997685: "song",
        Q5124548: "song",
        Q7448307: "dataset",
        Q7596498: "song",
        Q12353441: "dataset",
        Q2100811: "software",
        Q5155687: "software",
        Q15631798: "song",
        Q843096: "book",
        Q1124113: "book",
        Q1250905: "book",
        Q811531: "event",
        Q11236760: "software",
        Q193228: "standard",
        Q296277: "standard",
        Q2254537: "event",
        Q2292353: "event",
        Q492788: "standard",
        Q570951: "standard",
        Q913556: "standard",
        Q965758: "standard",
        Q1149757: "standard",
        Q12765697: "software",
        Q1531561: "standard",
        Q3587379: "event",
        Q2082387: "standard",
        Q2082398: "standard",
        Q4736179: "book",
        Q2471001: "standard",
        Q2598552: "standard",
        Q3267095: "standard",
        Q5424533: "event",
        Q6363219: "event",
        Q15968274: "software",
        Q7322429: "book",
        Q7978994: "software",
        Q5970295: "standard",
        Q17461444: "software",
        Q10826360: "book",
        Q10882176: "book",
        Q11356847: "book",
        Q9006368: "standard",
        Q11606415: "book",
        Q13125666: "book",
        Q13126435: "book",
        Q13146986: "legislation",
        Q13495699: "legislation",
        Q11189502: "standard",
        Q13626312: "event",
        Q16523070: "book",
        Q17500685: "book",
        Q18629653: "book",
        Q24890026: "book",
        Q9390711: "performance",
        Q63243358: "song",
        Q44854: "event",
        Q108832896: "map",
        Q106013762: "song",
        Q106013767: "song",
        Q86730311: "book",
        Q87433812: "book",
        Q87453264: "book",
        Q110231205: "song",
        Q104416770: "software",
        Q104704378: "event",
        Q856566: "periodical",
        Q965136: "map",
        Q1368848: "periodical",
        Q1413174: "map",
        Q110905237: "book",
        Q3428753: "periodical",
        Q4857987: "periodical",
        Q7572780: "periodical",
        Q11524690: "periodical",
        Q11540912: "map",
        Q1935626: "dataset",
        Q3546572: "broadcast",
        Q15206730: "periodical",
        Q6645282: "broadcast",
        Q18680105: "periodical",
        Q20183934: "motion_picture",
        Q21834496: "periodical",
        Q5157587: "software",
        Q846330: "event",
        Q1767217: "review",
        Q2380704: "book",
        Q300036: "standard",
        Q2874230: "book",
        Q2443004: "event",
        Q758853: "standard",
        Q3445262: "review",
        Q2943071: "event",
        Q4020880: "event",
        Q3415066: "standard",
        Q6045978: "book",
        Q15614021: "software",
        Q25360500: "broadcast",
        Q10920057: "book",
        Q11793314: "book",
        Q11985118: "event",
        Q25104632: "software",
        Q25421947: "software",
        Q28134845: "software",
        Q17144022: "standard",
        Q33100742: "event",
        Q33100743: "event",
        Q33100746: "event",
        Q33100744: "event",
        Q33100745: "event",
        Q33100750: "event",
        Q33100748: "event",
        Q65581442: "periodical",
        Q66465827: "periodical",
        Q60678830: "software",
        Q56599584: "book",
        Q58878072: "book",
        Q84368158: "software",
        Q106162750: "periodical",
        Q106661426: "periodical",
        Q107337277: "periodical",
        Q108886897: "periodical",
        Q88885188: "software",
        Q100266699: "broadcast",
        Q97357571: "software",
        Q88652774: "event",
        Q88787473: "event",
        Q99898668: "software",
        Q96405248: "book",
        Q106471136: "software",
        Q108273448: "software",
        Q100740737: "book",
        Q109946538: "software",
        Q100165244: "standard",
        Q100165439: "standard",
        Q100165480: "standard",
        Q100165626: "standard",
        Q100165780: "standard",
        Q100166033: "standard",
        Q102840250: "event",
        Q104213567: "book",
        Q106771443: "book",
        Q787397: "map",
        Q5953270: "periodical",
        Q6659258: "periodical",
        Q907054: "dataset",
        Q2678443: "dataset",
        Q3321854: "dataset",
        Q3655722: "song",
        Q3683985: "song",
        Q4567: "regulation",
        Q15715669: "map",
        Q17007303: "article-journal",
        Q205020: "software",
        Q213057: "software",
        Q365069: "software",
        Q645154: "software",
        Q1188200: "software",
        Q1190017: "software",
        Q1261854: "software",
        Q1326063: "software",
        Q3530050: "software",
        Q24035270: "report",
        Q5353026: "software",
        Q5988403: "software",
        Q448728: "book",
        Q79229: "event",
        Q1188882: "book",
        Q841817: "event",
        Q842208: "event",
        Q846240: "event",
        Q1572966: "book",
        Q10590816: "software",
        Q1072130: "event",
        Q10659464: "software",
        Q1517550: "event",
        Q1770557: "event",
        Q2880274: "book",
        Q951059: "standard",
        Q3376762: "event",
        Q4410904: "event",
        Q4578317: "event",
        Q4632203: "event",
        Q4632204: "event",
        Q4634325: "event",
        Q4639903: "event",
        Q5302213: "book",
        Q8142081: "event",
        Q13163313: "book",
        Q14943256: "book",
        Q17009185: "book",
        Q17354893: "book",
        Q14954905: "standard",
        Q16820803: "event",
        Q21007909: "event",
        Q21075974: "event",
        Q111594374: "regulation",
        Q39049594: "software",
        Q31197476: "book",
        Q66605818: "map",
        Q70470634: "article-journal",
        Q42891972: "event",
        Q73376505: "periodical",
        Q208679: "regulation",
        Q287831: "regulation",
        Q455282: "regulation",
        Q506630: "regulation",
        Q989473: "regulation",
        Q1117085: "regulation",
        Q1241195: "regulation",
        Q1317494: "regulation",
        Q1437487: "regulation",
        Q2180601: "regulation",
        Q3392263: "regulation",
        Q4062925: "regulation",
        Q4069739: "regulation",
        Q4212091: "regulation",
        Q4375882: "regulation",
        Q4400684: "regulation",
        Q4442868: "regulation",
        Q4492466: "regulation",
        Q5201823: "regulation",
        Q60995300: "book",
        Q6093162: "regulation",
        Q7228578: "regulation",
        Q16991622: "regulation",
        Q98382204: "dataset",
        Q108440863: "periodical",
        Q25389784: "regulation",
        Q102189017: "song",
        Q109350090: "song",
        Q99654400: "event",
        Q110402216: "dataset",
        Q110295041: "broadcast",
        Q3799185: "dataset",
        Q3942245: "periodical",
        Q7249835: "dataset",
        Q7905668: "dataset",
        Q190635: "dataset",
        Q526334: "dataset",
        Q1553298: "dataset",
        Q11669289: "map",
        Q1982918: "dataset",
        Q303064: "broadcast",
        Q2123557: "broadcast",
        Q5227671: "broadcast",
        Q18398246: "motion_picture",
        Q223653: "software",
        Q11581610: "dataset",
        Q860737: "software",
        Q19309746: "dataset",
        Q19312063: "dataset",
        Q211979: "song",
        Q18385907: "broadcast",
        Q844993: "song",
        Q909011: "book",
        Q1033831: "song",
        Q1087459: "song",
        Q1147354: "song",
        Q1191609: "book",
        Q1191618: "book",
        Q1246452: "song",
        Q1293057: "song",
        Q1337498: "song",
        Q1523875: "song",
        Q1533558: "book",
        Q1564657: "song",
        Q1823870: "book",
        Q2127044: "song",
        Q2263479: "book",
        Q2379556: "song",
        Q2478421: "song",
        Q3196335: "book",
        Q21190411: "broadcast",
        Q4083733: "song",
        Q4127418: "song",
        Q4138449: "song",
        Q4179926: "song",
        Q1777301: "standard",
        Q4700148: "book",
        Q25036778: "dataset",
        Q5956747: "song",
        Q5956766: "song",
        Q7786699: "book",
        Q11412438: "book",
        Q11424132: "event",
        Q21592115: "software",
        Q10860882: "standard",
        Q13403346: "event",
        Q15077373: "song",
        Q56683168: "map",
        Q30324607: "song",
        Q61314299: "dataset",
        Q42525933: "song",
        Q63254493: "dataset",
        Q65118638: "dataset",
        Q55694589: "book",
        Q56378186: "event",
        Q60021471: "event",
        Q92055857: "map",
        Q63243766: "song",
        Q64140460: "song",
        Q66341057: "song",
        Q36669: "standard",
        Q97495872: "dataset",
        Q96678733: "broadcast",
        Q99524531: "broadcast",
        Q97212046: "book",
        Q101525913: "song",
        Q107494231: "song",
        Q110598376: "legislation",
        Q110245716: "event",
        Q111286586: "event",
        Q7999883: "article-newspaper",
        Q221934: "song",
        Q6749508: "dataset",
        Q229371: "software",
        Q337820: "software",
        Q762157: "software",
        Q860760: "software",
        Q893012: "software",
        Q1155404: "software",
        Q13039854: "dataset",
        Q2351962: "software",
        Q5583816: "software",
        Q6694724: "software",
        Q6963607: "software",
        Q8039031: "software",
        Q477693: "book",
        Q524880: "book",
        Q622508: "book",
        Q376596: "event",
        Q751982: "event",
        Q774081: "event",
        Q784360: "event",
        Q1051792: "event",
        Q1143555: "event",
        Q1868607: "book",
        Q1310322: "event",
        Q1331385: "event",
        Q1381907: "event",
        Q1475455: "event",
        Q2090540: "event",
        Q2694643: "event",
        Q2787772: "event",
        Q3491001: "book",
        Q2946405: "event",
        Q3152904: "event",
        Q13101356: "software",
        Q4459737: "book",
        Q3818443: "event",
        Q3922366: "event",
        Q5044625: "event",
        Q5141248: "event",
        Q5199360: "event",
        Q15008073: "software",
        Q6487585: "book",
        Q6000326: "event",
        Q15590034: "software",
        Q15623421: "software",
        Q6901667: "book",
        Q6742759: "event",
        Q7191146: "event",
        Q7256463: "event",
        Q7295722: "event",
        Q7532159: "event",
        Q8422162: "event",
        Q10269946: "event",
        Q11410949: "book",
        Q11433354: "event",
        Q11589683: "event",
        Q11942845: "event",
        Q14404796: "event",
        Q17014283: "event",
        Q26726974: "software",
        Q20177666: "book",
        Q30716274: "software",
        Q26929719: "book",
        Q28415517: "event",
        Q38252996: "software",
        Q31836824: "event",
        Q47904718: "software",
        Q40693969: "book",
        Q43792381: "event",
        Q61456428: "software",
        Q63035828: "software",
        Q64139617: "dataset",
        Q54882043: "event",
        Q1538700: "regulation",
        Q66503439: "software",
        Q7033546: "regulation",
        Q61943417: "event",
        Q65089944: "event",
        Q65295320: "event",
        Q69886754: "event",
        Q86442388: "software",
        Q87906572: "software",
        Q95737275: "software",
        Q100744571: "software",
        Q107636679: "software",
        Q107636937: "software",
        Q107636953: "software",
        Q107636960: "software",
        Q108012985: "software",
        Q109417722: "software",
        Q111369260: "software",
        Q105194708: "event",
        Q948454: "dataset",
        Q4089698: "song",
        Q4217030: "song",
        Q69938020: "regulation",
        Q483318: "software",
        Q2141611: "software",
        Q4885200: "software",
        Q7784254: "software",
        Q382018: "book",
        Q1327461: "book",
        Q722029: "event",
        Q1535505: "book",
        Q1224988: "event",
        Q1508588: "performance",
        Q2449692: "book",
        Q5441632: "book",
        Q7321644: "book",
        Q28406796: "dataset",
        Q11497635: "event",
        Q11997713: "performance",
        Q12900222: "book",
        Q29535030: "event",
        Q41584545: "book",
        Q140182: "regulation",
        Q55713739: "book",
        Q55719253: "book",
        Q949149: "regulation",
        Q19576327: "regulation",
        Q87993016: "software",
        Q30589340: "regulation",
        Q96400880: "software",
        Q110614376: "song",
        Q106538545: "software",
        Q101068470: "book",
        Q105084871: "book",
        Q169672: "motion_picture",
        Q622310: "motion_picture",
        Q111972375: "book",
        Q111449198: "event",
        Q3072042: "motion_picture",
        Q3745429: "motion_picture",
        Q5104880: "motion_picture",
        Q1035228: "dataset",
        Q726761: "software",
        Q758870: "software",
        Q767899: "software",
        Q976308: "software",
        Q1373429: "software",
        Q1963488: "software",
        Q3696233: "software",
        Q4043482: "software",
        Q4052544: "software",
        Q5073739: "software",
        Q6078050: "software",
        Q7628422: "software",
        Q9371084: "software",
        Q500415: "event",
        Q10314140: "software",
        Q10391618: "software",
        Q1557252: "event",
        Q11243559: "software",
        Q11287765: "software",
        Q11373908: "software",
        Q11565508: "software",
        Q2753521: "book",
        Q2933082: "book",
        Q2600999: "event",
        Q2618461: "event",
        Q12313595: "software",
        Q3518969: "book",
        Q3287294: "event",
        Q3525798: "event",
        Q3586928: "event",
        Q3586936: "event",
        Q3586944: "event",
        Q3586951: "event",
        Q3586948: "event",
        Q3586952: "event",
        Q4128686: "event",
        Q4542969: "event",
        Q5255876: "event",
        Q14905958: "software",
        Q15079042: "software",
        Q7221392: "book",
        Q7890265: "book",
        Q7855108: "event",
        Q8436198: "standard",
        Q11774581: "event",
        Q12056881: "event",
        Q17808941: "event",
        Q18467373: "event",
        Q389993: "performance",
        Q624595: "performance",
        Q20202696: "book",
        Q1664535: "performance",
        Q3149508: "performance",
        Q6168370: "performance",
        Q56250671: "periodical",
        Q67414381: "motion_picture",
        Q54820068: "book",
        Q63951851: "software",
        Q66089259: "software",
        Q59342621: "book",
        Q64601: "software",
        Q71176790: "software",
        Q104176285: "motion_picture",
        Q106405444: "broadcast",
        Q106707362: "broadcast",
        Q106720947: "broadcast",
        Q106720951: "broadcast",
        Q106720953: "broadcast",
        Q106720957: "broadcast",
        Q106720962: "broadcast",
        Q106720960: "broadcast",
        Q106779416: "broadcast",
        Q106779606: "broadcast",
        Q106779676: "broadcast",
        Q79695687: "event",
        Q111306560: "motion_picture",
        Q111733012: "dataset",
        Q1006074: "legislation",
        Q1006079: "legislation",
        Q1006082: "legislation",
        Q1256685: "legislation",
        Q1307415: "legislation",
        Q3176490: "legislation",
        Q3258695: "legislation",
        Q4676706: "legislation",
        Q4677783: "legislation",
        Q4781740: "legislation",
        Q6560515: "legislation",
        Q10857741: "legislation",
        Q15983930: "legislation",
        Q15985269: "legislation",
        Q15985279: "legislation",
        Q15985276: "legislation",
        Q15985282: "legislation",
        Q17317625: "event",
        Q20085071: "event",
        Q22266214: "event",
        Q22276119: "event",
        Q22276208: "event",
        Q22276226: "event",
        Q22276331: "event",
        Q22276354: "event",
        Q22280976: "event",
        Q22283516: "event",
        Q22283753: "event",
        Q22333900: "event",
        Q22341315: "event",
        Q22341330: "event",
        Q22341433: "event",
        Q22342178: "event",
        Q22342312: "event",
        Q22343924: "event",
        Q22669526: "event",
        Q22669528: "event",
        Q22669535: "event",
        Q22669547: "event",
        Q22669552: "event",
        Q22669582: "event",
        Q22669591: "event",
        Q22669594: "event",
        Q22669611: "event",
        Q22669621: "event",
        Q22669627: "event",
        Q22696329: "event",
        Q22696370: "event",
        Q22696407: "event",
        Q22703240: "event",
        Q22703975: "event",
        Q22703997: "event",
        Q22704045: "event",
        Q24041602: "event",
        Q24045394: "event",
        Q24176839: "event",
        Q24178042: "event",
        Q24179252: "event",
        Q24180038: "event",
        Q24181434: "event",
        Q24183631: "event",
        Q24183876: "event",
        Q24292618: "event",
        Q24384357: "event",
        Q24451601: "event",
        Q24529773: "event",
        Q24713353: "event",
        Q24713572: "event",
        Q24714393: "event",
        Q24715318: "event",
        Q24715377: "event",
        Q24719004: "event",
        Q25343621: "event",
        Q25343642: "event",
        Q25343640: "event",
        Q25363097: "event",
        Q25363518: "event",
        Q25438796: "event",
        Q25449075: "event",
        Q25468000: "event",
        Q25476949: "event",
        Q25477438: "event",
        Q25530424: "event",
        Q25531065: "event",
        Q25534427: "event",
        Q25534840: "event",
        Q25544454: "event",
        Q25546358: "event",
        Q25547854: "event",
        Q25548020: "event",
        Q26252880: "event",
        Q26260402: "event",
        Q28333430: "event",
        Q41708957: "event",
        Q56188162: "event",
        Q56188227: "event",
        Q106145581: "event",
        Q106690375: "event",
        Q106691645: "event",
        Q107394349: "event",
        Q469510: "legislation",
        Q163313: "event",
        Q163696: "event",
        Q169359: "event",
        Q288066: "event",
        Q288079: "event",
        Q407991: "event",
        Q508051: "event",
        Q512129: "event",
        Q512963: "event",
        Q531635: "event",
        Q667997: "event",
        Q721063: "event",
        Q877671: "event",
        Q895534: "event",
        Q917566: "event",
        Q968639: "event",
        Q1032155: "event",
        Q1033744: "event",
        Q1059021: "event",
        Q1073723: "event",
        Q1077734: "event",
        Q1116814: "event",
        Q1120597: "event",
        Q1188726: "event",
        Q1189134: "event",
        Q1193854: "event",
        Q1203806: "event",
        Q1250656: "event",
        Q1273956: "event",
        Q1323147: "event",
        Q1327578: "event",
        Q1344963: "event",
        Q1346984: "event",
        Q1374588: "event",
        Q1374609: "event",
        Q1404060: "event",
        Q1468088: "event",
        Q1623569: "event",
        Q1750573: "event",
        Q1751126: "event",
        Q1897916: "event",
        Q2364787: "legislation",
        Q1970399: "event",
        Q2022394: "event",
        Q2036730: "event",
        Q2103991: "event",
        Q2269004: "event",
        Q2282372: "event",
        Q2318056: "event",
        Q2557059: "event",
        Q3241075: "legislation",
        Q3241095: "legislation",
        Q3241096: "legislation",
        Q3455841: "legislation",
        Q7345933: "legislation",
        Q7575531: "legislation",
        Q7575537: "legislation",
        Q7575552: "legislation",
        Q7575553: "legislation",
        Q7575560: "legislation",
        Q7575566: "legislation",
        Q7575567: "legislation",
        Q7575569: "legislation",
        Q10682995: "legislation",
        Q16117291: "legislation",
        Q16712433: "legislation",
        Q16892120: "legislation",
        Q16987235: "legislation",
        Q18009431: "legislation",
        Q18009506: "legislation",
        Q18009569: "legislation",
        Q18009587: "legislation",
        Q18009650: "legislation",
        Q18336255: "legislation",
        Q18673040: "legislation",
        Q20898399: "legislation",
        Q22995925: "legislation",
        Q22995958: "legislation",
        Q23000117: "legislation",
        Q23000122: "legislation",
        Q25041427: "legislation",
        Q28115446: "legislation",
        Q28963415: "event",
        Q33283984: "legislation",
        Q45753703: "legislation",
        Q55650344: "legislation",
        Q56731284: "legislation",
        Q10948: "event",
        Q28950: "event",
        Q33045: "event",
        Q91262953: "legislation",
        Q91267389: "legislation",
        Q91586285: "legislation",
        Q93945101: "legislation",
        Q96619653: "legislation",
        Q97480682: "legislation",
        Q100271152: "legislation",
        Q100324105: "legislation",
        Q105300221: "legislation",
        Q2565182: "event",
        Q2589882: "event",
        Q2617992: "event",
        Q2623334: "event",
        Q2690333: "event",
        Q2759944: "event",
        Q2796146: "event",
        Q2796173: "event",
        Q2948940: "event",
        Q2949278: "event",
        Q2949480: "event",
        Q2951201: "event",
        Q2953003: "event",
        Q2954080: "event",
        Q2954405: "event",
        Q2954411: "event",
        Q2999645: "event",
        Q3000564: "event",
        Q3046254: "event",
        Q3270632: "event",
        Q3334741: "event",
        Q3418219: "event",
        Q3436550: "event",
        Q3653318: "event",
        Q3653348: "event",
        Q3653602: "event",
        Q3653994: "event",
        Q3654440: "event",
        Q3700391: "event",
        Q3736900: "event",
        Q3736909: "event",
        Q3750874: "event",
        Q3824436: "event",
        Q4127374: "event",
        Q4179751: "event",
        Q4244129: "event",
        Q4264451: "event",
        Q4264454: "event",
        Q4489569: "event",
        Q4508905: "event",
        Q4508911: "event",
        Q4509265: "event",
        Q4509668: "event",
        Q4689962: "event",
        Q4689963: "event",
        Q4806587: "event",
        Q4806595: "event",
        Q4806598: "event",
        Q4806698: "event",
        Q4806699: "event",
        Q4806700: "event",
        Q4806704: "event",
        Q4806741: "event",
        Q4806752: "event",
        Q4806774: "event",
        Q4806775: "event",
        Q4845076: "event",
        Q4958733: "event",
        Q5153811: "event",
        Q5322959: "event",
        Q5324162: "event",
        Q5324163: "event",
        Q5324160: "event",
        Q5324164: "event",
        Q5324165: "event",
        Q5327742: "event",
        Q5412763: "event",
        Q5413069: "event",
        Q5413097: "event",
        Q5413386: "event",
        Q5413384: "event",
        Q5413391: "event",
        Q5413389: "event",
        Q5413394: "event",
        Q5413392: "event",
        Q5413398: "event",
        Q5413397: "event",
        Q5413403: "event",
        Q5413400: "event",
        Q5413404: "event",
        Q5413446: "event",
        Q5425586: "event",
        Q5425584: "event",
        Q5425585: "event",
        Q5425588: "event",
        Q5425593: "event",
        Q5637232: "event",
        Q5694546: "event",
        Q5969414: "event",
        Q5969429: "event",
        Q6026398: "event",
        Q6098635: "event",
        Q6098721: "event",
        Q6505941: "event",
        Q6952901: "event",
        Q7076181: "event",
        Q7076192: "event",
        Q7122265: "event",
        Q7378194: "event",
        Q7565965: "event",
        Q7575662: "event",
        Q8030888: "event",
        Q10685487: "event",
        Q10876319: "event",
        Q11291989: "event",
        Q11538952: "event",
        Q11588212: "event",
        Q12038186: "event",
        Q12299851: "event",
        Q12299908: "event",
        Q12770865: "event",
        Q14038357: "event",
        Q14623345: "event",
        Q14924306: "event",
        Q15067587: "event",
        Q15217470: "event",
        Q15781174: "event",
        Q16152180: "event",
        Q16245541: "event",
        Q16554971: "event",
        Q16716692: "event",
        Q16801223: "event",
        Q16834552: "event",
        Q16845090: "event",
        Q16954793: "event",
        Q16962038: "event",
        Q16962226: "event",
        Q16968229: "event",
        Q16975517: "event",
        Q17001339: "event",
        Q17003000: "event",
        Q17003082: "event",
        Q17003598: "event",
        Q17011181: "event",
        Q17075295: "event",
        Q17084760: "event",
        Q17087253: "event",
        Q17088907: "event",
        Q17092805: "event",
        Q17103014: "event",
        Q17131410: "event",
        Q17146534: "event",
        Q17146586: "event",
        Q17156776: "event",
        Q17624236: "event",
        Q18355710: "event",
        Q18469279: "event",
        Q19605480: "event",
        Q19803251: "event",
        Q19902252: "event",
        Q20012080: "event",
        Q20712914: "event",
        Q20804887: "event",
        Q21028314: "event",
        Q21282691: "event",
        Q21293376: "event",
        Q21520258: "event",
        Q22031906: "event",
        Q22032101: "event",
        Q22032208: "event",
        Q22570198: "event",
        Q22570231: "event",
        Q22833321: "event",
        Q22833327: "event",
        Q22987757: "event",
        Q23002101: "event",
        Q23308598: "event",
        Q24964541: "event",
        Q25038375: "event",
        Q25045203: "event",
        Q25051732: "event",
        Q25055084: "event",
        Q25055094: "event",
        Q25055098: "event",
        Q25110756: "event",
        Q25230508: "event",
        Q25404399: "event",
        Q28135573: "event",
        Q28403527: "event",
        Q28405922: "event",
        Q28448471: "event",
        Q28789901: "event",
        Q30274594: "event",
        Q30276524: "event",
        Q30323976: "event",
        Q30587802: "event",
        Q30634779: "event",
        Q30636248: "event",
        Q39054787: "event",
        Q39060746: "event",
        Q48817594: "event",
        Q48817599: "event",
        Q48817596: "event",
        Q48817644: "event",
        Q48817653: "event",
        Q48842375: "event",
        Q48844045: "event",
        Q48844054: "event",
        Q48847415: "event",
        Q48862207: "event",
        Q109660536: "event",
        Q1741521: "periodical",
        Q2108957: "periodical",
        Q2421910: "periodical",
        Q111076423: "event",
        Q2991565: "motion_picture",
        Q7019528: "periodical",
        Q441261: "dataset",
        Q457843: "dataset",
        Q193605: "song",
        Q783287: "dataset",
        Q1115961: "dataset",
        Q1713174: "dataset",
        Q11446810: "manuscript",
        Q13164421: "periodical",
        Q3656492: "song",
        Q4584145: "song",
        Q5160283: "dataset",
        Q17172633: "periodical",
        Q17232649: "periodical",
        Q11497177: "song",
        Q11674305: "song",
        Q12105422: "song",
        Q4229799: "software",
        Q488053: "book",
        Q914881: "book",
        Q933348: "book",
        Q1100405: "book",
        Q548126: "event",
        Q1675712: "book",
        Q3002658: "book",
        Q3292731: "book",
        Q900570: "standard",
        Q3831116: "book",
        Q4390543: "event",
        Q5109823: "book",
        Q4493539: "event",
        Q5310485: "book",
        Q6912675: "book",
        Q7515656: "book",
        Q7578116: "book",
        Q7939457: "book",
        Q11161560: "event",
        Q14523803: "book",
        Q14523556: "event",
        Q19724435: "event",
        Q25110279: "book",
        Q30008669: "book",
        Q60861390: "periodical",
        Q48862299: "event",
        Q48862310: "event",
        Q48862317: "event",
        Q48862325: "event",
        Q48862329: "event",
        Q48862332: "event",
        Q48862337: "event",
        Q48862345: "event",
        Q55639211: "event",
        Q56178068: "event",
        Q65807474: "software",
        Q56276268: "event",
        Q56291557: "event",
        Q56358929: "event",
        Q56526979: "event",
        Q58488048: "event",
        Q60772917: "event",
        Q61001459: "event",
        Q63578907: "book",
        Q63453754: "event",
        Q63642380: "performance",
        Q66155471: "book",
        Q66439822: "event",
        Q67478660: "event",
        Q89349829: "dataset",
        Q89374120: "dataset",
        Q89697681: "dataset",
        Q72115481: "event",
        Q73677564: "event",
        Q105372000: "periodical",
        Q76161101: "event",
        Q106247441: "periodical",
        Q81661501: "event",
        Q83476880: "event",
        Q84380012: "book",
        Q99569916: "book",
        Q100339660: "book",
        Q104595587: "event",
        Q105517027: "event",
        Q106603698: "event",
        Q106956751: "event",
        Q108209958: "event",
        Q109018775: "book",
        Q109018776: "book",
        Q109659723: "legislation",
        Q110707176: "event",
        Q247213: "dataset",
        Q658252: "dataset",
        Q2799345: "dataset",
        Q3820682: "dataset",
        Q5713169: "dataset",
        Q6002242: "dataset",
        Q53463: "regulation",
        Q3359857: "software",
        Q6055545: "software",
        Q265424: "legislation",
        Q454967: "legislation",
        Q277436: "event",
        Q843713: "legislation",
        Q458867: "event",
        Q488051: "event",
        Q618439: "event",
        Q649352: "event",
        Q802614: "event",
        Q838447: "event",
        Q877838: "event",
        Q981258: "event",
        Q1346367: "event",
        Q1401527: "event",
        Q1401550: "event",
        Q1401559: "event",
        Q1597273: "event",
        Q1674822: "event",
        Q2097974: "event",
        Q2438476: "event",
        Q3042975: "legislation",
        Q2667252: "event",
        Q3355475: "legislation",
        Q3092938: "event",
        Q3125354: "event",
        Q24839054: "dataset",
        Q4579115: "event",
        Q5378679: "book",
        Q5644122: "book",
        Q6081383: "book",
        Q5440532: "event",
        Q6806890: "book",
        Q7257831: "event",
        Q7257839: "event",
        Q7977019: "book",
        Q7458280: "event",
        Q7566622: "event",
        Q7942192: "event",
        Q10871996: "legislation",
        Q12218853: "book",
        Q11582668: "event",
        Q11588597: "event",
        Q12757709: "event",
        Q13125741: "event",
        Q14515312: "event",
        Q14914657: "event",
        Q16540254: "event",
        Q17210597: "book",
        Q16837407: "event",
        Q16948716: "event",
        Q20540663: "book",
        Q21971243: "event",
        Q22949068: "book",
        Q24023913: "book",
        Q110496930: "regulation",
        Q110496933: "regulation",
        Q27332385: "event",
        Q30694283: "legislation",
        Q48995725: "book",
        Q54965898: "book",
        Q61473833: "event",
        Q8037702: "regulation",
        Q85431214: "dataset",
        Q67992224: "book",
        Q67824596: "event",
        Q68010309: "event",
        Q70224924: "book",
        Q70228467: "book",
        Q17173058: "regulation",
        Q96375753: "dataset",
        Q85851440: "software",
        Q23001715: "regulation",
        Q99454767: "dataset",
        Q85988047: "book",
        Q85787994: "event",
        Q104775758: "broadcast",
        Q106772852: "broadcast",
        Q110184504: "dataset",
        Q100528793: "software",
        Q92036860: "legislation",
        Q95509700: "event",
        Q95998597: "legislation",
        Q97629621: "book",
        Q105984592: "legislation",
        Q108044854: "event",
        Q108490788: "event",
        Q1065444: "motion_picture",
        Q2137852: "motion_picture",
        Q3072049: "motion_picture",
        Q5258881: "motion_picture",
        Q6361539: "song",
        Q7892363: "broadcast",
        Q1245659: "software",
        Q3929429: "software",
        Q5357228: "software",
        Q7316614: "software",
        Q335414: "book",
        Q190344: "event",
        Q196761: "event",
        Q202298: "event",
        Q291768: "event",
        Q308678: "event",
        Q577698: "event",
        Q842375: "event",
        Q1616547: "dataset",
        Q1758719: "book",
        Q1292520: "event",
        Q1303602: "event",
        Q1374808: "event",
        Q1501560: "event",
        Q1714888: "event",
        Q1745996: "event",
        Q1798887: "event",
        Q1815895: "event",
        Q1897444: "event",
        Q136218: "standard",
        Q194831: "standard",
        Q270131: "standard",
        Q376762: "standard",
        Q2284382: "event",
        Q3166785: "book",
        Q2606657: "event",
        Q784695: "standard",
        Q2800920: "event",
        Q1320546: "standard",
        Q3553803: "event",
        Q4484477: "event",
        Q6082718: "book",
        Q5595257: "event",
        Q4298914: "standard",
        Q18206444: "software",
        Q10278592: "event",
        Q10567340: "event",
        Q10874739: "event",
        Q10915676: "event",
        Q18424480: "event",
        Q16910955: "standard",
        Q23008367: "standard",
        Q28065039: "event",
        Q27824016: "standard",
        Q35792653: "event",
        Q60393504: "broadcast",
        Q47405126: "event",
        Q47525586: "event",
        Q52495799: "event",
        Q52495817: "event",
        Q52495833: "event",
        Q52495848: "event",
        Q52495868: "event",
        Q52495889: "event",
        Q52495911: "event",
        Q52495931: "event",
        Q52495954: "event",
        Q52495976: "event",
        Q52496004: "event",
        Q52496024: "event",
        Q52496048: "event",
        Q52496070: "event",
        Q52496093: "event",
        Q52496122: "event",
        Q52496144: "event",
        Q52496166: "event",
        Q52496187: "event",
        Q52496205: "event",
        Q52496225: "event",
        Q52496248: "event",
        Q52496270: "event",
        Q52496292: "event",
        Q52496308: "event",
        Q52496323: "event",
        Q52496343: "event",
        Q52496363: "event",
        Q52496390: "event",
        Q52496410: "event",
        Q52496435: "event",
        Q52496456: "event",
        Q52496474: "event",
        Q27013: "event",
        Q108871626: "broadcast",
        Q109996742: "software",
        Q106762172: "standard",
        Q1519850: "report",
        Q111507776: "event",
        Q5100946: "periodical",
        Q632285: "dataset",
        Q1751819: "dataset",
        Q5903254: "software",
        Q255135: "book",
        Q375480: "book",
        Q134145: "event",
        Q169918: "event",
        Q194052: "event",
        Q223170: "event",
        Q304337: "event",
        Q330558: "event",
        Q478770: "event",
        Q482526: "event",
        Q508928: "event",
        Q528449: "event",
        Q1213555: "book",
        Q565657: "event",
        Q1227364: "regulation",
        Q1253136: "book",
        Q607965: "event",
        Q657438: "event",
        Q1347298: "book",
        Q1464287: "book",
        Q1591238: "book",
        Q2397155: "book",
        Q165678: "standard",
        Q206537: "standard",
        Q338702: "standard",
        Q621583: "standard",
        Q733507: "standard",
        Q859595: "standard",
        Q919509: "standard",
        Q1049168: "standard",
        Q1061159: "standard",
        Q1140942: "standard",
        Q1151063: "standard",
        Q21664088: "broadcast",
        Q1568240: "standard",
        Q4903126: "book",
        Q4941730: "book",
        Q2791193: "standard",
        Q4686339: "event",
        Q6806507: "book",
        Q7144987: "book",
        Q7523718: "book",
        Q7630614: "book",
        Q28455553: "dataset",
        Q6887219: "standard",
        Q18343316: "software",
        Q7598213: "standard",
        Q10527146: "book",
        Q11513787: "event",
        Q12311624: "book",
        Q13583784: "book",
        Q12355716: "standard",
        Q17561213: "standard",
        Q20181828: "standard",
        Q22947792: "event",
        Q25038259: "book",
        Q29032653: "event",
        Q16342: "dataset",
        Q52496497: "event",
        Q52496519: "event",
        Q52496540: "event",
        Q52496564: "event",
        Q52496587: "event",
        Q52496610: "event",
        Q73505550: "dataset",
        Q56408643: "book",
        Q56328566: "standard",
        Q59351530: "book",
        Q61748019: "event",
        Q65770283: "event",
        Q13394: "event",
        Q14930: "event",
        Q15804: "event",
        Q19317: "event",
        Q25020: "event",
        Q5297: "standard",
        Q5300: "standard",
        Q78794084: "book",
        Q78795953: "book",
        Q98388833: "event",
        Q98562826: "event",
        Q98116826: "standard",
        Q101509367: "standard",
        Q101533634: "standard",
        Q104223305: "event",
        Q105658571: "event",
        Q106656264: "standard",
        Q1898445: "map",
        Q110550201: "event",
        Q110886488: "event",
        Q110987275: "event",
        Q111089634: "event",
        Q587327: "book",
        Q617335: "event",
        Q646110: "event",
        Q648474: "event",
        Q663145: "event",
        Q1341659: "book",
        Q910542: "event",
        Q912165: "event",
        Q912933: "event",
        Q919472: "event",
        Q920397: "event",
        Q934724: "event",
        Q937649: "event",
        Q1643411: "book",
        Q1004054: "event",
        Q1024155: "event",
        Q1032086: "event",
        Q1061773: "event",
        Q1062311: "event",
        Q1075670: "event",
        Q1116662: "event",
        Q1129940: "event",
        Q1130031: "event",
        Q1133634: "event",
        Q1137641: "event",
        Q1138388: "event",
        Q1153109: "event",
        Q1154592: "event",
        Q1155117: "event",
        Q1190880: "event",
        Q1423881: "event",
        Q1547505: "event",
        Q1986705: "event",
        Q2005275: "event",
        Q2090583: "event",
        Q2790785: "book",
        Q2239275: "event",
        Q2465585: "event",
        Q2605489: "event",
        Q2952430: "event",
        Q3868655: "book",
        Q3239561: "event",
        Q4426598: "book",
        Q3911657: "event",
        Q5425721: "event",
        Q5647565: "event",
        Q6705667: "book",
        Q7439349: "book",
        Q9088760: "event",
        Q9675907: "event",
        Q10260007: "event",
        Q10383488: "event",
        Q11452214: "book",
        Q11390057: "event",
        Q11390066: "event",
        Q11390285: "event",
        Q13027880: "event",
        Q13636537: "event",
        Q15635954: "book",
        Q16056350: "event",
        Q16672878: "event",
        Q16837861: "event",
        Q16848281: "event",
        Q16850989: "event",
        Q16967821: "event",
        Q18088964: "event",
        Q19916292: "event",
        Q20988805: "book",
        Q24882750: "event",
        Q28792435: "book",
        Q28540863: "event",
        Q28540963: "event",
        Q29000951: "event",
        Q29423165: "event",
        Q34548322: "event",
        Q34548368: "event",
        Q41436524: "book",
        Q14717: "dataset",
        Q56063517: "event",
        Q59365764: "event",
        Q62819448: "event",
        Q63349193: "event",
        Q66362671: "book",
        Q66364343: "book",
        Q66368876: "book",
        Q102380136: "broadcast",
        Q106647671: "song",
        Q106603795: "broadcast",
        Q98095275: "event",
        Q98381855: "event",
        Q98381912: "event",
        Q104537401: "event",
        Q108535712: "event",
        Q1092846: "map",
        Q110994302: "event",
        Q110994327: "event",
        Q110994647: "event",
        Q110994669: "event",
        Q111755701: "standard",
        Q1149007: "dataset",
        Q3942677: "dataset",
        Q7797194: "dataset",
        Q587992: "software",
        Q2256933: "software",
        Q11935070: "broadcast",
        Q3458976: "software",
        Q737148: "book",
        Q746831: "book",
        Q199714: "event",
        Q856663: "book",
        Q985039: "book",
        Q997702: "book",
        Q1052496: "book",
        Q531156: "event",
        Q1274312: "book",
        Q1321402: "book",
        Q1506883: "book",
        Q906456: "event",
        Q1681086: "book",
        Q1711806: "book",
        Q1231564: "event",
        Q1936882: "review",
        Q2005755: "book",
        Q1640057: "event",
        Q11198093: "software",
        Q11224960: "software",
        Q1801602: "event",
        Q1908116: "event",
        Q1932115: "event",
        Q2124976: "event",
        Q3033681: "song",
        Q3109904: "book",
        Q3276281: "book",
        Q3533504: "review",
        Q1924634: "standard",
        Q2141903: "standard",
        Q5277221: "book",
        Q88307738: "regulation",
        Q4781363: "event",
        Q7313471: "book",
        Q8066481: "book",
        Q28786557: "dataset",
        Q11256364: "book",
        Q11353378: "book",
        Q11371981: "book",
        Q11377649: "book",
        Q11547089: "book",
        Q10658696: "standard",
        Q13103474: "event",
        Q17049321: "book",
        Q17217725: "book",
        Q16565592: "event",
        Q18351911: "event",
        Q24906154: "book",
        Q27996264: "standard",
        Q28049403: "standard",
        Q1506107: "entry",
        Q60846354: "map",
        Q61143605: "periodical",
        Q47491518: "event",
        Q58901591: "event",
        Q86585984: "book",
        Q96482969: "event",
        Q98713463: "standard",
        Q104526260: "book",
        Q104537001: "book",
        Q105599390: "standard",
        Q105599400: "standard",
        Q577487: "periodical",
        Q904678: "periodical",
        Q1662452: "dataset",
        Q1824338: "periodical",
        Q110372993: "event",
        Q111770833: "book",
        Q3391317: "map",
        Q4840473: "motion_picture",
        Q6729489: "motion_picture",
        Q1383152: "dataset",
        Q1499601: "dataset",
        Q11502292: "periodical",
        Q12357500: "map",
        Q3890208: "dataset",
        Q5029847: "dataset",
        Q15253354: "periodical",
        Q7304003: "dataset",
        Q167035: "software",
        Q305918: "software",
        Q330268: "software",
        Q1134817: "software",
        Q22575725: "periodical",
        Q2333087: "software",
        Q4088259: "software",
        Q5160310: "software",
        Q16141944: "song",
        Q17990546: "song",
        Q20043946: "song",
        Q778492: "book",
        Q380546: "event",
        Q21050458: "dataset",
        Q21050912: "dataset",
        Q2068526: "event",
        Q2981450: "legislation",
        Q2594068: "event",
        Q22808060: "song",
        Q3142557: "event",
        Q4096822: "book",
        Q3910891: "legislation",
        Q4646933: "book",
        Q4087270: "event",
        Q4231500: "event",
        Q5420592: "event",
        Q5453341: "event",
        Q26721650: "dataset",
        Q7643429: "book",
        Q18395582: "software",
        Q18844389: "software",
        Q18844946: "software",
        Q31841013: "dataset",
        Q14948388: "event",
        Q15804842: "event",
        Q25411809: "software",
        Q16000419: "event",
        Q16321184: "event",
        Q17624895: "event",
        Q18616720: "dataset",
        Q21040564: "event",
        Q21400465: "event",
        Q21994318: "event",
        Q22087418: "event",
        Q22583090: "event",
        Q28980408: "event",
        Q29650342: "standard",
        Q52506277: "dataset",
        Q56298002: "dataset",
        Q56303227: "song",
        Q59157227: "dataset",
        Q69662460: "periodical",
        Q65964019: "dataset",
        Q49000120: "event",
        Q61945149: "event",
        Q96630878: "dataset",
        Q106651444: "periodical",
        Q107181559: "periodical",
        Q107236883: "periodical",
        Q78904686: "book",
        Q78321781: "event",
        Q79257255: "event",
        Q106120739: "song",
        Q108066527: "dataset",
        Q93616224: "book",
        Q111670248: "software",
        Q104925455: "event",
        Q104925505: "event",
        Q107637812: "event",
        Q474157: "software",
        Q646683: "software",
        Q974828: "software",
        Q1153924: "software",
        Q143692: "event",
        Q263755: "event",
        Q617378: "event",
        Q662829: "event",
        Q856365: "event",
        Q887670: "event",
        Q1070962: "event",
        Q1117228: "event",
        Q1331607: "event",
        Q1530635: "event",
        Q1974959: "event",
        Q771510: "standard",
        Q2650249: "event",
        Q2879007: "event",
        Q3123196: "event",
        Q3510937: "event",
        Q3513877: "event",
        Q3552770: "event",
        Q3569782: "event",
        Q4175709: "event",
        Q2597575: "standard",
        Q4456967: "event",
        Q4686496: "event",
        Q4692204: "event",
        Q4708969: "event",
        Q4727824: "event",
        Q4765082: "event",
        Q4780260: "event",
        Q4785212: "event",
        Q4790906: "event",
        Q4792537: "event",
        Q4824472: "event",
        Q4826093: "event",
        Q4837688: "event",
        Q4852748: "event",
        Q4873895: "event",
        Q4947296: "event",
        Q4948389: "event",
        Q4982316: "event",
        Q5008697: "event",
        Q5013416: "event",
        Q5014594: "event",
        Q5034150: "event",
        Q5036248: "event",
        Q5087832: "event",
        Q5095554: "event",
        Q5138070: "event",
        Q5151802: "event",
        Q5157891: "event",
        Q5157894: "event",
        Q5157899: "event",
        Q5157902: "event",
        Q5157900: "event",
        Q5157901: "event",
        Q5157905: "event",
        Q5157911: "event",
        Q5157914: "event",
        Q5157912: "event",
        Q5159520: "event",
        Q5160222: "event",
        Q5165375: "event",
        Q5166126: "event",
        Q5170487: "event",
        Q5190775: "event",
        Q5209616: "event",
        Q5211295: "event",
        Q5250066: "event",
        Q5255323: "event",
        Q5266038: "event",
        Q5277252: "event",
        Q5281494: "event",
        Q5283926: "event",
        Q5305076: "event",
        Q5328323: "event",
        Q5329928: "event",
        Q5347112: "event",
        Q5424415: "event",
        Q5430495: "event",
        Q5433535: "event",
        Q5434248: "event",
        Q5442947: "event",
        Q5511895: "event",
        Q5519075: "event",
        Q5527037: "event",
        Q5528777: "event",
        Q5529780: "event",
        Q5532683: "event",
        Q16801521: "software",
        Q27959794: "standard",
        Q27959899: "standard",
        Q48956889: "event",
        Q85811481: "legal_case",
        Q72199233: "standard",
        Q23759369: "regulation",
        Q95988573: "software",
        Q96463181: "event",
        Q111171546: "event",
        Q111184234: "event",
        Q5640688: "event",
        Q5958068: "event",
        Q5969892: "event",
        Q5986585: "event",
        Q6008722: "event",
        Q6276334: "event",
        Q6506118: "event",
        Q6527812: "event",
        Q6544572: "event",
        Q6670410: "event",
        Q6703618: "event",
        Q6716948: "event",
        Q6743164: "event",
        Q6773082: "event",
        Q6773081: "event",
        Q6805421: "event",
        Q6808040: "event",
        Q6839383: "event",
        Q6840778: "event",
        Q6840891: "event",
        Q6843456: "event",
        Q6865209: "event",
        Q6897370: "event",
        Q6902646: "event",
        Q6918116: "event",
        Q6948909: "event",
        Q7015537: "event",
        Q7053866: "event",
        Q7060163: "event",
        Q7061444: "event",
        Q7064385: "event",
        Q7077014: "event",
        Q7105291: "event",
        Q7122554: "event",
        Q7162748: "event",
        Q7164699: "event",
        Q7182996: "event",
        Q7186818: "event",
        Q7199258: "event",
        Q7209118: "event",
        Q7209223: "event",
        Q7263612: "event",
        Q7279902: "event",
        Q7296383: "event",
        Q7300437: "event",
        Q7301343: "event",
        Q7310859: "event",
        Q7389889: "event",
        Q7389947: "event",
        Q7433375: "event",
        Q7562715: "event",
        Q7578762: "event",
        Q7605451: "event",
        Q7607205: "event",
        Q7641902: "event",
        Q7653412: "event",
        Q7670141: "event",
        Q7723696: "event",
        Q7843045: "event",
        Q7856635: "event",
        Q7857911: "event",
        Q7881914: "event",
        Q7884759: "event",
        Q7906631: "event",
        Q8023892: "event",
        Q8024867: "event",
        Q8027085: "event",
        Q8031746: "event",
        Q8035830: "event",
        Q8069136: "event",
        Q8077104: "event",
        Q12302690: "event",
        Q14686742: "event",
        Q15274619: "event",
        Q16898196: "event",
        Q16960864: "event",
        Q16982847: "event",
        Q16989031: "event",
        Q16991678: "event",
        Q16993114: "event",
        Q16996002: "event",
        Q16996486: "event",
        Q17081230: "event",
        Q17108233: "event",
        Q17119244: "event",
        Q17148787: "event",
        Q17153085: "event",
        Q18148290: "event",
        Q18160724: "event",
        Q19059464: "event",
        Q19899721: "event",
        Q20313154: "event",
        Q21015701: "event",
        Q21015803: "event",
        Q24910363: "event",
        Q30589254: "event",
        Q55610059: "event",
        Q56291777: "event",
        Q109450272: "event",
        Q1226505: "periodical",
        Q1303200: "periodical",
        Q111328625: "event",
        Q111439709: "event",
        Q111439723: "event",
        Q111439762: "event",
        Q111439782: "event",
        Q111439846: "event",
        Q111440226: "event",
        Q111440426: "event",
        Q111440769: "event",
        Q111440792: "event",
        Q111442198: "event",
        Q111442224: "event",
        Q111442284: "event",
        Q111442303: "event",
        Q111442314: "event",
        Q111442348: "event",
        Q111442412: "event",
        Q111682272: "event",
        Q111684737: "event",
        Q111722393: "event",
        Q111736824: "event",
        Q111974124: "event",
        Q112040106: "event",
        Q112040117: "event",
        Q112040121: "event",
        Q112040174: "event",
        Q112080263: "event",
        Q112080326: "event",
        Q4499034: "song",
        Q431790: "review",
        Q1326821: "book",
        Q823306: "event",
        Q908793: "event",
        Q1031998: "event",
        Q1124227: "event",
        Q2189757: "book",
        Q1801358: "event",
        Q1829369: "event",
        Q1949268: "event",
        Q1955280: "event",
        Q2083465: "event",
        Q2219726: "event",
        Q2510454: "event",
        Q2648125: "event",
        Q2737005: "event",
        Q2786642: "event",
        Q2827293: "event",
        Q2990952: "event",
        Q2992129: "event",
        Q2992152: "event",
        Q2992182: "event",
        Q2992200: "event",
        Q2992207: "event",
        Q2992205: "event",
        Q3114239: "event",
        Q3118018: "event",
        Q4714147: "event",
        Q4992592: "event",
        Q5159947: "event",
        Q5781213: "event",
        Q6745401: "event",
        Q6981253: "event",
        Q7191247: "event",
        Q7686644: "event",
        Q8024924: "event",
        Q10846717: "event",
        Q11681664: "event",
        Q11915199: "event",
        Q11915196: "event",
        Q16546149: "event",
        Q16551078: "event",
        Q17367286: "book",
        Q17370328: "book",
        Q17081602: "event",
        Q17306806: "event",
        Q18610962: "event",
        Q18812494: "event",
        Q20018876: "event",
        Q20097137: "event",
        Q20102884: "event",
        Q20104856: "event",
        Q20105343: "event",
        Q20107885: "event",
        Q20982552: "event",
        Q21006590: "event",
        Q26846554: "event",
        Q27074172: "event",
        Q30527924: "event",
        Q36458072: "event",
        Q45107397: "event",
        Q50996590: "event",
        Q65963008: "event",
        Q67200374: "book",
        Q97009790: "event",
        Q166489: "manuscript",
        Q108887209: "event",
        Q1059863: "periodical",
        Q2308189: "periodical",
        Q111470930: "event",
        Q111584826: "event",
        Q111584978: "event",
        Q3414785: "periodical",
        Q10280356: "motion_picture",
        Q11335135: "periodical",
        Q1352815: "broadcast",
        Q20820199: "periodical",
        Q21886169: "periodical",
        Q161981: "event",
        Q190042: "event",
        Q266098: "event",
        Q428303: "event",
        Q742584: "event",
        Q805775: "event",
        Q1776553: "book",
        Q1907293: "book",
        Q1477856: "event",
        Q1574438: "event",
        Q2178284: "event",
        Q2217238: "event",
        Q2220043: "event",
        Q2601792: "event",
        Q2668769: "event",
        Q3150530: "event",
        Q5032602: "legislation",
        Q5412886: "event",
        Q5583820: "event",
        Q7378254: "event",
        Q8026379: "event",
        Q18340254: "software",
        Q10340636: "event",
        Q10340641: "event",
        Q11944179: "event",
        Q12028919: "event",
        Q12055493: "event",
        Q13746416: "event",
        Q14528267: "event",
        Q16838078: "event",
        Q16838082: "event",
        Q17084298: "event",
        Q17118636: "event",
        Q17147668: "event",
        Q17163260: "event",
        Q20888918: "event",
        Q21170330: "event",
        Q22119581: "event",
        Q24534551: "event",
        Q25112329: "event",
        Q25325299: "event",
        Q28404863: "legislation",
        Q66854024: "periodical",
        Q54856428: "event",
        Q294142: "regulation",
        Q55582398: "event",
        Q55611373: "event",
        Q55669384: "event",
        Q806718: "regulation",
        Q873442: "regulation",
        Q1268199: "regulation",
        Q1423657: "regulation",
        Q3606845: "regulation",
        Q59783540: "event",
        Q5001929: "regulation",
        Q61658758: "event",
        Q61983225: "event",
        Q66208038: "event",
        Q21489913: "regulation",
        Q79400253: "event",
        Q80623762: "event",
        Q88866968: "event",
        Q88867448: "event",
        Q88869722: "event",
        Q88889028: "event",
        Q88951478: "event",
        Q88952667: "event",
        Q88953162: "event",
        Q88954132: "event",
        Q88954519: "event",
        Q88965342: "event",
        Q88965366: "event",
        Q88966018: "event",
        Q91476283: "event",
        Q100799210: "event",
        Q100921020: "event",
        Q102378764: "event",
        Q104479499: "event",
        Q104722025: "event",
        Q104762205: "event",
        Q104766850: "event",
        Q105883338: "event",
        Q107011713: "event",
        Q108314610: "event",
        Q217327: "legal_case",
        Q897797: "legal_case",
        Q894351: "map",
        Q110226966: "legislation",
        Q110623113: "legislation",
        Q2145099: "motion_picture",
        Q2940455: "map",
        Q6813020: "legal_case",
        Q6901292: "legal_case",
        Q11116488: "motion_picture",
        Q17146139: "map",
        Q18711682: "legal_case",
        Q11304409: "song",
        Q25917154: "legal_case",
        Q25917186: "legal_case",
        Q28934204: "legal_case",
        Q160225: "event",
        Q183482: "event",
        Q460132: "event",
        Q611855: "event",
        Q694766: "event",
        Q784007: "event",
        Q884125: "event",
        Q969079: "event",
        Q1138456: "event",
        Q1278424: "event",
        Q1388456: "event",
        Q1388468: "event",
        Q1399129: "event",
        Q1413715: "event",
        Q1471955: "event",
        Q1641088: "event",
        Q1723677: "event",
        Q1812995: "event",
        Q1828204: "event",
        Q1933172: "event",
        Q1972122: "event",
        Q2128113: "event",
        Q2134841: "event",
        Q2186869: "event",
        Q2271146: "event",
        Q2358030: "event",
        Q2379395: "event",
        Q2415599: "event",
        Q2574384: "event",
        Q2601944: "event",
        Q2753135: "event",
        Q2993180: "event",
        Q3102259: "event",
        Q3699282: "event",
        Q4229161: "event",
        Q4231782: "event",
        Q4719013: "event",
        Q6888313: "legislation",
        Q6773189: "event",
        Q11430090: "event",
        Q12270042: "book",
        Q12899761: "book",
        Q12868195: "event",
        Q13737219: "event",
        Q13872840: "event",
        Q15079132: "event",
        Q15908445: "event",
        Q16541389: "event",
        Q16724349: "event",
        Q17665272: "event",
        Q19394118: "event",
        Q19771501: "event",
        Q20921574: "event",
        Q20921589: "event",
        Q21936902: "event",
        Q61037469: "legal_case",
        Q47508301: "event",
        Q59633182: "event",
        Q110350343: "legal_case",
        Q112044283: "legal_case",
        Q86660706: "event",
        Q87648606: "event",
        Q87743864: "event",
        Q87743931: "event",
        Q96141142: "event",
        Q96472992: "event",
        Q98456674: "event",
        Q99345851: "event",
        Q101584341: "event",
        Q105966326: "event",
        Q107226630: "event",
        Q2155304: "broadcast",
        Q2333839: "broadcast",
        Q2621422: "broadcast",
        Q2645569: "broadcast",
        Q2687765: "broadcast",
        Q3071014: "broadcast",
        Q3443665: "broadcast",
        Q4506063: "broadcast",
        Q240831: "software",
        Q734413: "software",
        Q7392071: "software",
        Q80056: "book",
        Q572371: "book",
        Q735234: "book",
        Q910109: "book",
        Q1053849: "book",
        Q1093232: "book",
        Q1360742: "book",
        Q1412196: "book",
        Q1417272: "book",
        Q10417670: "software",
        Q1542815: "book",
        Q1006442: "event",
        Q1141458: "event",
        Q1628553: "event",
        Q1638500: "event",
        Q1989519: "event",
        Q2200779: "event",
        Q2914610: "book",
        Q2966817: "book",
        Q3433066: "book",
        Q2993090: "event",
        Q3001563: "event",
        Q3157041: "event",
        Q4070685: "event",
        Q4843065: "event",
        Q6045975: "book",
        Q5454025: "event",
        Q15548100: "software",
        Q10957735: "book",
        Q11123640: "book",
        Q13128271: "book",
        Q13128274: "book",
        Q13128275: "book",
        Q13128278: "book",
        Q13128279: "book",
        Q13128276: "book",
        Q13128277: "book",
        Q13128281: "book",
        Q13635864: "book",
        Q13742394: "book",
        Q14380772: "book",
        Q15923205: "book",
        Q17630580: "book",
        Q17455048: "event",
        Q28094186: "software",
        Q18650988: "event",
        Q17042507: "standard",
        Q17042510: "standard",
        Q20594633: "book",
        Q20601974: "book",
        Q25554162: "book",
        Q27044174: "event",
        Q47214765: "broadcast",
        Q64152667: "broadcast",
        Q60345396: "software",
        Q81529267: "periodical",
        Q58197759: "event",
        Q59108305: "event",
        Q58542: "software",
        Q60614585: "event",
        Q63100559: "event",
        Q63100584: "event",
        Q63100595: "event",
        Q63100601: "event",
        Q63100611: "event",
        Q74516302: "event",
        Q109653474: "motion_picture",
        Q106559863: "broadcast",
        Q107404540: "broadcast",
        Q109042540: "broadcast",
        Q105832563: "event",
        Q106215748: "event",
        Q350514: "map",
        Q357674: "map",
        Q56304507: "regulation",
        Q3391101: "map",
        Q12046416: "map",
        Q21936939: "map",
        Q4165150: "software",
        Q746727: "book",
        Q93842: "event",
        Q285389: "event",
        Q760113: "legislation",
        Q393189: "event",
        Q552161: "event",
        Q594812: "event",
        Q622016: "event",
        Q649749: "event",
        Q746474: "event",
        Q747696: "event",
        Q818714: "event",
        Q869121: "event",
        Q884370: "event",
        Q1338798: "legislation",
        Q933785: "event",
        Q1141402: "event",
        Q1144157: "event",
        Q1144163: "event",
        Q1318642: "event",
        Q1537360: "event",
        Q1671798: "event",
        Q1851677: "event",
        Q1851685: "event",
        Q2552561: "book",
        Q2025421: "event",
        Q2041991: "event",
        Q2087386: "event",
        Q2090627: "event",
        Q2882217: "book",
        Q2320317: "event",
        Q2342543: "event",
        Q2470247: "event",
        Q2471205: "event",
        Q2613104: "event",
        Q2707928: "event",
        Q1053358: "standard",
        Q2913890: "event",
        Q2913892: "event",
        Q2988192: "event",
        Q3305012: "event",
        Q4274450: "event",
        Q4354501: "event",
        Q4806634: "event",
        Q4819187: "event",
        Q4852697: "event",
        Q4907414: "event",
        Q4929940: "event",
        Q5168499: "event",
        Q5177995: "event",
        Q5191359: "event",
        Q5330437: "event",
        Q5448074: "event",
        Q5448075: "event",
        Q5522435: "event",
        Q5594924: "event",
        Q5925944: "event",
        Q5930430: "event",
        Q5931621: "event",
        Q5965161: "event",
        Q5974544: "event",
        Q6736813: "book",
        Q6356595: "event",
        Q7604692: "legislation",
        Q7604693: "legislation",
        Q9640316: "book",
        Q12347305: "book",
        Q12347316: "book",
        Q12347324: "book",
        Q12347403: "book",
        Q16143346: "book",
        Q16546417: "book",
        Q16657177: "book",
        Q16832389: "book",
        Q21401869: "book",
        Q25313319: "event",
        Q26211781: "event",
        Q48800459: "legislation",
        Q86671429: "legal_case",
        Q2708301: "regulation",
        Q58863414: "event",
        Q107569113: "map",
        Q91834932: "book",
        Q100532772: "legislation",
        Q101073445: "legislation",
        Q108072825: "event",
        Q109045853: "book",
        Q5974546: "event",
        Q5974551: "event",
        Q5974549: "event",
        Q5974555: "event",
        Q5974553: "event",
        Q5974558: "event",
        Q5974559: "event",
        Q5974556: "event",
        Q5974561: "event",
        Q5974566: "event",
        Q5974564: "event",
        Q5974565: "event",
        Q5974570: "event",
        Q5974568: "event",
        Q5974574: "event",
        Q5974572: "event",
        Q5974573: "event",
        Q5974576: "event",
        Q5974583: "event",
        Q5974581: "event",
        Q5974587: "event",
        Q5974585: "event",
        Q5974591: "event",
        Q5974589: "event",
        Q5974593: "event",
        Q5974598: "event",
        Q5974596: "event",
        Q5974602: "event",
        Q5974607: "event",
        Q5974605: "event",
        Q5985363: "event",
        Q6128710: "event",
        Q6136640: "event",
        Q6145647: "event",
        Q6148624: "event",
        Q6149606: "event",
        Q6710131: "event",
        Q6843472: "event",
        Q6903035: "event",
        Q6955214: "event",
        Q7053735: "event",
        Q7122390: "event",
        Q7155745: "event",
        Q7198123: "event",
        Q7419363: "event",
        Q7588376: "event",
        Q7809247: "event",
        Q7889632: "event",
        Q10290398: "event",
        Q10327191: "event",
        Q10385004: "event",
        Q11284681: "event",
        Q11311600: "event",
        Q11320867: "event",
        Q11323009: "event",
        Q11324638: "event",
        Q11336664: "event",
        Q11338803: "event",
        Q11343183: "event",
        Q11343714: "event",
        Q11421054: "event",
        Q11510125: "event",
        Q12060810: "event",
        Q12060811: "event",
        Q12060812: "event",
        Q15894752: "event",
        Q16933460: "event",
        Q16953232: "event",
        Q16955370: "event",
        Q16968401: "event",
        Q16971599: "event",
        Q17039073: "event",
        Q17098985: "event",
        Q17099499: "event",
        Q17100126: "event",
        Q17101864: "event",
        Q17149933: "event",
        Q17193933: "event",
        Q17991075: "event",
        Q17994901: "event",
        Q18355257: "event",
        Q18359247: "event",
        Q18470637: "event",
        Q18474372: "event",
        Q18700516: "event",
        Q20038989: "event",
        Q20040886: "event",
        Q20041674: "event",
        Q21154276: "event",
        Q23034407: "event",
        Q23048889: "event",
        Q24859934: "event",
        Q24860246: "event",
        Q24868735: "event",
        Q24871095: "event",
        Q24895314: "event",
        Q24897039: "event",
        Q24897674: "event",
        Q24900121: "event",
        Q24901654: "event",
        Q111972381: "book",
        Q839475: "book",
        Q235729: "event",
        Q245169: "event",
        Q288826: "event",
        Q672461: "event",
        Q707597: "event",
        Q814491: "event",
        Q30900100: "motion_picture",
        Q1544219: "book",
        Q1392762: "event",
        Q1932471: "event",
        Q2278062: "event",
        Q3026037: "book",
        Q2378962: "event",
        Q3440942: "book",
        Q3868755: "book",
        Q3270414: "event",
        Q4178674: "book",
        Q3899741: "event",
        Q4146861: "event",
        Q5484460: "periodical",
        Q5057655: "event",
        Q5792893: "periodical",
        Q5883078: "book",
        Q7311362: "book",
        Q7106348: "event",
        Q11391941: "event",
        Q12132683: "book",
        Q12719146: "book",
        Q15296520: "periodical",
        Q17157034: "standard",
        Q20443047: "book",
        Q25212097: "event",
        Q25315520: "event",
        Q25315524: "event",
        Q25315541: "event",
        Q25418927: "event",
        Q25419103: "event",
        Q25419101: "event",
        Q25419104: "event",
        Q26221084: "event",
        Q28056128: "event",
        Q28056136: "event",
        Q28056161: "event",
        Q28056178: "event",
        Q28056177: "event",
        Q28689743: "event",
        Q28689756: "event",
        Q29168234: "event",
        Q29964144: "event",
        Q30913161: "event",
        Q30927659: "event",
        Q30927662: "event",
        Q45045456: "event",
        Q48744481: "event",
        Q48995876: "event",
        Q48995910: "event",
        Q53889489: "event",
        Q56290623: "event",
        Q56338790: "event",
        Q57608780: "event",
        Q57611756: "event",
        Q57612023: "event",
        Q58622526: "event",
        Q58868610: "event",
        Q59544693: "event",
        Q59624231: "event",
        Q60473775: "event",
        Q60550377: "event",
        Q59053570: "standard",
        Q59057709: "standard",
        Q61763401: "event",
        Q61860767: "event",
        Q63076647: "event",
        Q63372996: "event",
        Q64605380: "event",
        Q64712054: "event",
        Q65954323: "book",
        Q65721197: "event",
        Q67467614: "book",
        Q7408: "event",
        Q19809: "event",
        Q19828: "event",
        Q51617: "event",
        Q69992216: "event",
        Q69992378: "event",
        Q74802306: "event",
        Q74803629: "event",
        Q108202384: "motion_picture",
        Q84312768: "event",
        Q84418196: "event",
        Q96757081: "event",
        Q98480259: "event",
        Q103880535: "event",
        Q107584900: "event",
        Q1324620: "motion_picture",
        Q56395994: "regulation",
        Q369074: "dataset",
        Q373853: "dataset",
        Q11330880: "periodical",
        Q5148657: "dataset",
        Q31728: "regulation",
        Q7935164: "broadcast",
        Q615985: "software",
        Q718969: "software",
        Q1186723: "software",
        Q1418000: "software",
        Q3307487: "software",
        Q5420063: "software",
        Q5772565: "software",
        Q7144983: "software",
        Q7692326: "software",
        Q7695873: "software",
        Q366176: "book",
        Q471194: "book",
        Q608971: "book",
        Q334113: "event",
        Q370553: "event",
        Q1230235: "book",
        Q1416320: "book",
        Q1426213: "book",
        Q844017: "event",
        Q848599: "event",
        Q879634: "event",
        Q10871684: "software",
        Q1977520: "book",
        Q2732056: "book",
        Q3199214: "book",
        Q2603340: "event",
        Q3320346: "event",
        Q3394366: "event",
        Q4205512: "event",
        Q4877154: "book",
        Q4903301: "book",
        Q4686251: "event",
        Q24886171: "broadcast",
        Q6560903: "event",
        Q7311227: "book",
        Q7574827: "book",
        Q7308127: "event",
        Q91138683: "regulation",
        Q11868106: "book",
        Q23442338: "software",
        Q23442766: "software",
        Q15918533: "book",
        Q16933744: "book",
        Q107471270: "regulation",
        Q45115695: "software",
        Q61130948: "broadcast",
        Q55680343: "software",
        Q55686778: "software",
        Q78898322: "periodical",
        Q239463: "regulation",
        Q1137608: "regulation",
        Q56683247: "review",
        Q56400596: "event",
        Q56403010: "event",
        Q2519258: "regulation",
        Q2578338: "regulation",
        Q3116860: "regulation",
        Q3480499: "regulation",
        Q5062052: "regulation",
        Q60753268: "event",
        Q35760: "book",
        Q69942561: "event",
        Q15835243: "regulation",
        Q15852746: "regulation",
        Q100269041: "broadcast",
        Q104978998: "dataset",
        Q106159499: "broadcast",
        Q107640824: "broadcast",
        Q110616917: "broadcast",
        Q98456209: "book",
        Q4078107: "song",
        Q538812: "book",
        Q110145: "event",
        Q163569: "event",
        Q174389: "event",
        Q182728: "event",
        Q194258: "event",
        Q212828: "event",
        Q223740: "event",
        Q268200: "event",
        Q279820: "event",
        Q286069: "event",
        Q290568: "event",
        Q306143: "event",
        Q311836: "event",
        Q317057: "event",
        Q341302: "event",
        Q369606: "event",
        Q382780: "event",
        Q384139: "event",
        Q431668: "event",
        Q453745: "event",
        Q483826: "event",
        Q496411: "event",
        Q496730: "event",
        Q497324: "event",
        Q501058: "event",
        Q538661: "event",
        Q566905: "event",
        Q580231: "event",
        Q594504: "event",
        Q655089: "event",
        Q685037: "event",
        Q693797: "event",
        Q708135: "event",
        Q708731: "event",
        Q732997: "event",
        Q785070: "event",
        Q795848: "event",
        Q844232: "event",
        Q845877: "event",
        Q873842: "event",
        Q889842: "event",
        Q891480: "event",
        Q910360: "event",
        Q915280: "event",
        Q919525: "event",
        Q979103: "event",
        Q1011547: "event",
        Q1011572: "event",
        Q1061172: "event",
        Q1075347: "event",
        Q10722474: "software",
        Q2084705: "book",
        Q2117603: "book",
        Q2781249: "book",
        Q2221327: "event",
        Q3256810: "book",
        Q5575435: "book",
        Q12188186: "event",
        Q13131052: "book",
        Q13131053: "book",
        Q30902188: "book",
        Q30738156: "event",
        Q58962661: "book",
        Q59601511: "book",
        Q13254: "book",
        Q19020: "event",
        Q19409: "event",
        Q24616: "event",
        Q31579: "event",
        Q37049: "event",
        Q40024: "event",
        Q40237: "event",
        Q49025: "event",
        Q94153037: "book",
        Q94947558: "book",
        Q97177085: "event",
        Q108852932: "book",
        Q1111310: "event",
        Q1186171: "event",
        Q1205048: "event",
        Q1205107: "event",
        Q1242148: "event",
        Q1258149: "event",
        Q1293276: "event",
        Q1321674: "event",
        Q1340271: "event",
        Q1350697: "event",
        Q1359606: "event",
        Q1381877: "event",
        Q1439650: "event",
        Q1444982: "event",
        Q1453733: "event",
        Q1502249: "event",
        Q1508179: "event",
        Q1538791: "event",
        Q1546403: "event",
        Q1604012: "event",
        Q1636955: "event",
        Q1662330: "event",
        Q1713744: "event",
        Q1762822: "event",
        Q1794567: "event",
        Q2004138: "event",
        Q2004286: "event",
        Q2024454: "event",
        Q2111259: "event",
        Q2223318: "event",
        Q2639596: "event",
        Q2652698: "event",
        Q2742209: "event",
        Q2819590: "event",
        Q2972198: "event",
        Q3000849: "event",
        Q3063242: "event",
        Q3077281: "event",
        Q3117505: "event",
        Q3394495: "event",
        Q3406648: "event",
        Q3411002: "event",
        Q3459735: "event",
        Q3492224: "event",
        Q3497114: "event",
        Q3524248: "event",
        Q3557042: "event",
        Q3595200: "event",
        Q3610287: "event",
        Q3664509: "event",
        Q4092704: "event",
        Q4887617: "event",
        Q4986375: "event",
        Q5029994: "event",
        Q5116459: "event",
        Q5338360: "event",
        Q5528416: "event",
        Q5579711: "event",
        Q5584324: "event",
        Q5781223: "event",
        Q6105667: "event",
        Q6372905: "event",
        Q7016062: "event",
        Q7032808: "event",
        Q7562850: "event",
        Q7567536: "event",
        Q7585305: "event",
        Q7681353: "event",
        Q7685420: "event",
        Q7743963: "event",
        Q7813994: "event",
        Q8964906: "event",
        Q9062425: "event",
        Q10873938: "event",
        Q10905949: "event",
        Q11024975: "event",
        Q11506265: "event",
        Q11700336: "event",
        Q11860564: "event",
        Q12004746: "event",
        Q12682760: "event",
        Q13057942: "event",
        Q13601550: "event",
        Q14094507: "event",
        Q15728786: "event",
        Q15728919: "event",
        Q16168215: "event",
        Q16184868: "event",
        Q16286298: "event",
        Q16621657: "event",
        Q16621678: "event",
        Q16825873: "event",
        Q16827140: "event",
        Q16941354: "event",
        Q17004976: "event",
        Q17629159: "event",
        Q17855191: "event",
        Q18015677: "event",
        Q18206005: "event",
        Q18344366: "event",
        Q172067: "motion_picture",
        Q108719793: "event",
        Q108776412: "event",
        Q109012141: "event",
        Q110426704: "event",
        Q110537409: "event",
        Q110738365: "event",
        Q836225: "dataset",
        Q17110220: "dataset",
        Q1310686: "event",
        Q3149792: "event",
        Q4438157: "event",
        Q4536542: "event",
        Q5445656: "event",
        Q5985273: "event",
        Q18345192: "event",
        Q18350834: "event",
        Q18640780: "event",
        Q18681625: "event",
        Q18712434: "event",
        Q18772252: "event",
        Q19360743: "event",
        Q19850992: "event",
        Q20744362: "event",
        Q21484313: "event",
        Q21509286: "event",
        Q21509433: "event",
        Q21521989: "event",
        Q21522006: "event",
        Q21705016: "event",
        Q21774045: "event",
        Q21844795: "event",
        Q21866930: "event",
        Q21866939: "event",
        Q21866936: "event",
        Q21898124: "event",
        Q22074863: "event",
        Q22175212: "event",
        Q23688051: "event",
        Q24256194: "event",
        Q24885747: "event",
        Q25341611: "event",
        Q25630923: "event",
        Q25713816: "event",
        Q26340132: "event",
        Q28053864: "event",
        Q28054019: "event",
        Q28054047: "event",
        Q28056433: "event",
        Q28147399: "event",
        Q28343115: "event",
        Q28343261: "event",
        Q28382046: "event",
        Q28382054: "event",
        Q28444913: "event",
        Q28468130: "event",
        Q28792027: "event",
        Q28820074: "event",
        Q28822711: "event",
        Q29980402: "event",
        Q30106378: "event",
        Q30588247: "event",
        Q30751050: "event",
        Q33540215: "event",
        Q39372459: "event",
        Q51885519: "event",
        Q56276961: "event",
        Q56741171: "event",
        Q60122889: "event",
        Q61744628: "event",
        Q65780861: "event",
        Q65782856: "event",
        Q69574974: "event",
        Q74066919: "event",
        Q78220196: "event",
        Q81427797: "event",
        Q81427806: "event",
        Q81565646: "event",
        Q84306075: "event",
        Q85584573: "event",
        Q85760823: "event",
        Q86664707: "event",
        Q87827974: "event",
        Q87841959: "event",
        Q96206874: "event",
        Q96619694: "event",
        Q97016080: "event",
        Q97355587: "event",
        Q97355606: "event",
        Q98090825: "event",
        Q100158614: "event",
        Q106352030: "event",
        Q106920872: "event",
        Q106921005: "event",
        Q106937985: "event",
        Q106938089: "event",
        Q106948920: "event",
        Q106949044: "event",
        Q107009012: "event",
        Q107507525: "event",
        Q109340006: "standard",
        Q111302296: "performance",
        Q112075105: "book",
        Q111890974: "event",
        Q3527765: "song",
        Q5227321: "dataset",
        Q6594074: "dataset",
        Q5243464: "broadcast",
        Q279650: "software",
        Q5978554: "software",
        Q6839216: "software",
        Q213369: "software",
        Q591016: "book",
        Q193141: "event",
        Q483271: "event",
        Q527207: "event",
        Q571381: "event",
        Q604109: "event",
        Q684138: "event",
        Q1334350: "review",
        Q726492: "event",
        Q996954: "event",
        Q1338948: "event",
        Q1339121: "event",
        Q1659242: "event",
        Q2062594: "event",
        Q2749428: "book",
        Q430140: "standard",
        Q2928770: "book",
        Q2593659: "event",
        Q2704778: "event",
        Q1059963: "standard",
        Q1109589: "standard",
        Q3653936: "event",
        Q5120692: "event",
        Q5146309: "event",
        Q5594802: "event",
        Q5903448: "event",
        Q7397922: "event",
        Q7946342: "event",
        Q7142872: "standard",
        Q7878662: "standard",
        Q11895140: "event",
        Q22909598: "software",
        Q16168861: "event",
        Q16191899: "event",
        Q19311591: "event",
        Q20749438: "event",
        Q23878304: "event",
        Q23978180: "event",
        Q24569309: "event",
        Q25302965: "event",
        Q27308875: "event",
        Q27308988: "event",
        Q28044810: "event",
        Q28057489: "event",
        Q28854537: "event",
        Q28913516: "event",
        Q27959500: "standard",
        Q27959524: "standard",
        Q30245758: "event",
        Q35222554: "event",
        Q40659951: "event",
        Q43150790: "event",
        Q45308090: "event",
        Q47455701: "event",
        Q47505518: "event",
        Q47533055: "event",
        Q47533067: "event",
        Q51019263: "event",
        Q63646250: "software",
        Q56751411: "event",
        Q59428876: "event",
        Q60302161: "event",
        Q65501526: "legislation",
        Q81427813: "event",
        Q81427817: "event",
        Q81427821: "event",
        Q81427827: "event",
        Q81427831: "event",
        Q81428011: "event",
        Q87830406: "event",
        Q91001695: "event",
        Q91248609: "standard",
        Q93211279: "event",
        Q93817540: "event",
        Q95612266: "event",
        Q100769007: "event",
        Q100796287: "event",
        Q101244755: "event",
        Q472298: "legal_case",
        Q2360559: "periodical",
        Q111972467: "book",
        Q111972478: "book",
        Q111972495: "book",
        Q3428685: "periodical",
        Q4835951: "periodical",
        Q5253501: "periodical",
        Q178840: "broadcast",
        Q12021525: "periodical",
        Q482612: "broadcast",
        Q581714: "broadcast",
        Q662197: "broadcast",
        Q3120825: "dataset",
        Q1273568: "broadcast",
        Q1366112: "broadcast",
        Q1676730: "broadcast",
        Q1802588: "broadcast",
        Q3951815: "broadcast",
        Q4783297: "broadcast",
        Q5455086: "broadcast",
        Q5778915: "broadcast",
        Q7185299: "broadcast",
        Q7603925: "broadcast",
        Q7724161: "broadcast",
        Q20055188: "periodical",
        Q9335576: "broadcast",
        Q9335577: "broadcast",
        Q16889492: "broadcast",
        Q80973: "event",
        Q177115: "event",
        Q209253: "event",
        Q245009: "event",
        Q333203: "event",
        Q558298: "event",
        Q1221272: "book",
        Q568285: "event",
        Q586615: "event",
        Q657221: "event",
        Q980035: "event",
        Q1065241: "event",
        Q1113192: "event",
        Q1131897: "event",
        Q1139315: "event",
        Q1195832: "event",
        Q19772367: "broadcast",
        Q1520293: "event",
        Q1605306: "event",
        Q1790659: "event",
        Q1835902: "event",
        Q1841993: "event",
        Q1897524: "event",
        Q230360: "standard",
        Q2293045: "event",
        Q2295197: "event",
        Q3178617: "book",
        Q3201017: "book",
        Q21188110: "broadcast",
        Q21191019: "broadcast",
        Q21191068: "broadcast",
        Q2746144: "event",
        Q21233490: "broadcast",
        Q2794178: "event",
        Q3420088: "event",
        Q7388865: "event",
        Q7572570: "event",
        Q26644852: "broadcast",
        Q27868077: "broadcast",
        Q10513545: "book",
        Q12218859: "book",
        Q17217514: "book",
        Q22025254: "book",
        Q3491297: "performance",
        Q4019680: "performance",
        Q53952740: "periodical",
        Q24902889: "book",
        Q56279868: "legal_case",
        Q64426019: "periodical",
        Q55082620: "broadcast",
        Q66759360: "periodical",
        Q56320653: "broadcast",
        Q56878968: "broadcast",
        Q62389259: "broadcast",
        Q62573441: "broadcast",
        Q74161894: "broadcast",
        Q60828138: "event",
        Q85133165: "broadcast",
        Q98526245: "broadcast",
        Q110896015: "periodical",
        Q100707163: "broadcast",
        Q101761418: "broadcast",
        Q104438889: "broadcast",
        Q106363897: "broadcast",
        Q108674843: "broadcast",
        Q108872880: "broadcast",
        Q109981780: "broadcast",
        Q110263445: "broadcast",
        Q111241100: "broadcast",
        Q110324480: "event",
        Q110515773: "event",
        Q6706470: "periodical",
        Q1799894: "broadcast",
        Q4039528: "software",
        Q6158458: "software",
        Q1407190: "event",
        Q3042344: "event",
        Q3436327: "event",
        Q4180394: "legislation",
        Q3787044: "event",
        Q4192299: "event",
        Q4202016: "event",
        Q4205456: "event",
        Q4272221: "event",
        Q4741441: "event",
        Q5146004: "event",
        Q5764649: "event",
        Q5803827: "event",
        Q6404879: "event",
        Q6866481: "legislation",
        Q6514389: "event",
        Q6962185: "event",
        Q7127953: "event",
        Q7204354: "event",
        Q16927924: "software",
        Q7439701: "event",
        Q7979074: "event",
        Q10715009: "event",
        Q11352926: "event",
        Q11387026: "event",
        Q11481730: "event",
        Q21087159: "software",
        Q11915198: "event",
        Q11926271: "event",
        Q11955723: "event",
        Q11966595: "event",
        Q12011440: "event",
        Q12495292: "event",
        Q12516001: "event",
        Q12516006: "event",
        Q12896105: "event",
        Q13093120: "event",
        Q13093505: "event",
        Q13097938: "event",
        Q14437429: "event",
        Q14947832: "event",
        Q15935644: "book",
        Q15974948: "legislation",
        Q17070134: "event",
        Q17175691: "event",
        Q19703493: "event",
        Q19738539: "event",
        Q19978226: "event",
        Q20427131: "event",
        Q20988817: "event",
        Q24895127: "event",
        Q25421222: "legislation",
        Q25466760: "event",
        Q27796293: "event",
        Q43304555: "event",
        Q43702513: "event",
        Q55884772: "legislation",
        Q55606888: "event",
        Q56232060: "event",
        Q58867915: "event",
        Q60823329: "event",
        Q63203764: "event",
        Q72192529: "event",
        Q96754171: "event",
        Q97230633: "event",
        Q98279051: "event",
        Q105480600: "event",
        Q107695269: "event",
        Q731194: "motion_picture",
        Q1250909: "periodical",
        Q111514738: "event",
        Q4689686: "periodical",
        Q6351976: "periodical",
        Q9311486: "periodical",
        Q99536154: "performance",
        Q380319: "dataset",
        Q10677794: "periodical",
        Q881912: "broadcast",
        Q899203: "broadcast",
        Q80998: "software",
        Q10672625: "song",
        Q4182287: "software",
        Q25040622: "periodical",
        Q210112: "review",
        Q786961: "review",
        Q419529: "event",
        Q547403: "event",
        Q1392117: "review",
        Q782864: "event",
        Q1755587: "book",
        Q1131276: "event",
        Q1812889: "event",
        Q2598929: "review",
        Q20652466: "broadcast",
        Q2877361: "review",
        Q2995465: "book",
        Q2935206: "event",
        Q33130924: "motion_picture",
        Q3504613: "event",
        Q4938353: "review",
        Q5896938: "book",
        Q5367041: "event",
        Q7100855: "event",
        Q7157511: "event",
        Q11582340: "book",
        Q13140991: "book",
        Q13424265: "review",
        Q13930359: "event",
        Q16255517: "book",
        Q17276616: "event",
        Q18405553: "event",
        Q196750: "performance",
        Q685123: "performance",
        Q26225493: "book",
        Q30242829: "review",
        Q30325164: "event",
        Q12051030: "performance",
        Q40092973: "event",
        Q41463713: "event",
        Q47467768: "event",
        Q63082925: "standard",
        Q75179330: "event",
        Q106651343: "periodical",
        Q106651395: "periodical",
        Q106664402: "periodical",
        Q89641294: "review",
        Q111292287: "dataset",
        Q108810446: "software",
        Q107212338: "event",
        Q108172332: "event",
        Q7864671: "broadcast",
        Q845636: "software",
        Q5416720: "software",
        Q7353436: "software",
        Q192782: "book",
        Q123524: "event",
        Q794357: "book",
        Q259977: "event",
        Q333016: "event",
        Q455674: "event",
        Q860005: "event",
        Q866427: "event",
        Q1619411: "book",
        Q1055047: "event",
        Q1062856: "event",
        Q1151125: "event",
        Q1278513: "event",
        Q1472650: "event",
        Q1750982: "event",
        Q1758841: "event",
        Q1918135: "event",
        Q2190103: "event",
        Q2573466: "event",
        Q2696609: "event",
        Q3481043: "book",
        Q3009014: "event",
        Q3074244: "event",
        Q3078662: "event",
        Q3107490: "event",
        Q3404834: "event",
        Q3470130: "event",
        Q4465563: "book",
        Q4045950: "event",
        Q4050586: "event",
        Q5368745: "book",
        Q4769686: "event",
        Q4769687: "event",
        Q4769684: "event",
        Q4826999: "event",
        Q4836792: "event",
        Q5045293: "event",
        Q5278260: "event",
        Q5295187: "event",
        Q5337997: "event",
        Q5643104: "event",
        Q5874489: "event",
        Q6124476: "event",
        Q6606006: "event",
        Q6606005: "event",
        Q7113940: "event",
        Q7892194: "event",
        Q7971665: "event",
        Q7977811: "event",
        Q7994532: "event",
        Q9378549: "book",
        Q11080698: "book",
        Q10680973: "event",
        Q11381119: "book",
        Q11477317: "book",
        Q11385469: "event",
        Q11492812: "event",
        Q11514338: "event",
        Q11705312: "event",
        Q12750036: "event",
        Q11292145: "standard",
        Q13533951: "event",
        Q17050763: "event",
        Q17145579: "event",
        Q18127275: "event",
        Q18574943: "event",
        Q18694077: "event",
        Q19851407: "event",
        Q21616374: "book",
        Q21931667: "book",
        Q26928598: "book",
        Q27020789: "book",
        Q27022970: "book",
        Q28521056: "event",
        Q28870211: "event",
        Q28870290: "event",
        Q28870398: "event",
        Q28870399: "event",
        Q28870409: "event",
        Q32845660: "event",
        Q43516519: "event",
        Q63952888: "broadcast",
        Q47076664: "event",
        Q53490595: "event",
        Q54913642: "event",
        Q59779546: "event",
        Q61014588: "event",
        Q1315: "event",
        Q26139: "event",
        Q31489: "event",
        Q97160212: "book",
        Q98459187: "book",
        Q109337002: "software",
        Q108884831: "event",
        Q3407067: "periodical",
        Q11410671: "legal_case",
        Q11498393: "speech",
        Q11606878: "speech",
        Q11660318: "report",
        Q210707: "event",
        Q277875: "event",
        Q320803: "event",
        Q428792: "event",
        Q620932: "event",
        Q694874: "event",
        Q739227: "event",
        Q765982: "event",
        Q772787: "event",
        Q778559: "event",
        Q791183: "event",
        Q926006: "event",
        Q951799: "event",
        Q983696: "event",
        Q1043345: "event",
        Q1135337: "event",
        Q1154703: "event",
        Q1161047: "event",
        Q1250640: "event",
        Q1417217: "event",
        Q1426540: "event",
        Q1585186: "event",
        Q1630626: "event",
        Q1681685: "event",
        Q2400279: "book",
        Q1814442: "event",
        Q1822326: "event",
        Q1995157: "event",
        Q2068688: "event",
        Q2202034: "event",
        Q2228810: "event",
        Q2297714: "event",
        Q2371046: "event",
        Q2575989: "event",
        Q2596525: "event",
        Q2954231: "event",
        Q2954234: "event",
        Q2954235: "event",
        Q2954328: "event",
        Q2954343: "event",
        Q2954437: "event",
        Q2954804: "event",
        Q2955753: "event",
        Q2999641: "event",
        Q3031465: "event",
        Q3492700: "event",
        Q3600404: "event",
        Q3691184: "event",
        Q4351908: "event",
        Q4354709: "event",
        Q4689729: "event",
        Q5060322: "event",
        Q5060326: "event",
        Q5060327: "event",
        Q5060330: "event",
        Q5954321: "event",
        Q7308029: "book",
        Q6952135: "event",
        Q7129610: "event",
        Q7565954: "event",
        Q7565966: "event",
        Q7565973: "event",
        Q7565978: "event",
        Q8035929: "event",
        Q10392399: "event",
        Q10685395: "event",
        Q10685482: "event",
        Q11390231: "event",
        Q11404432: "event",
        Q11446405: "event",
        Q11612512: "event",
        Q11708504: "event",
        Q11777258: "event",
        Q14867489: "event",
        Q16002008: "event",
        Q16961825: "event",
        Q16982514: "event",
        Q17009195: "event",
        Q17083199: "event",
        Q17143639: "event",
        Q18289615: "event",
        Q22130753: "book",
        Q63980799: "event",
        Q90483854: "dataset",
        Q93431056: "broadcast",
        Q78493655: "event",
        Q84027730: "event",
        Q96664258: "event",
        Q106592862: "event",
        Q106594041: "event",
        Q109423255: "event",
        Q5431448: "song",
        Q10951437: "song",
        Q12001523: "song",
        Q17048822: "song",
        Q17048829: "song",
        Q610406: "book",
        Q74705: "event",
        Q93565: "event",
        Q121702: "event",
        Q798415: "book",
        Q1277508: "book",
        Q1563294: "book",
        Q936821: "event",
        Q1119215: "event",
        Q1370156: "event",
        Q2305716: "legislation",
        Q2943319: "event",
        Q3400492: "event",
        Q4829850: "event",
        Q10605380: "book",
        Q11820946: "book",
        Q11913319: "event",
        Q11948067: "event",
        Q13165711: "book",
        Q15123870: "book",
        Q16129284: "event",
        Q16129305: "event",
        Q16879633: "manuscript",
        Q16879696: "manuscript",
        Q16338694: "event",
        Q17096546: "event",
        Q17147746: "event",
        Q18219090: "book",
        Q18887969: "book",
        Q19336875: "event",
        Q20102358: "event",
        Q20648996: "event",
        Q20715885: "event",
        Q20728678: "event",
        Q20804886: "event",
        Q22060043: "book",
        Q22669539: "book",
        Q22669546: "book",
        Q22080014: "event",
        Q23657281: "book",
        Q25382039: "book",
        Q25483388: "book",
        Q25402731: "event",
        Q26263367: "event",
        Q29346471: "event",
        Q30102663: "book",
        Q60982020: "report",
        Q40008090: "event",
        Q46999879: "event",
        Q49546289: "event",
        Q55279953: "event",
        Q55533811: "event",
        Q55625390: "event",
        Q55625388: "event",
        Q56231107: "event",
        Q56231148: "event",
        Q56648044: "event",
        Q59613404: "event",
        Q59710393: "event",
        Q61126943: "event",
        Q66330372: "event",
        Q8500: "event",
        Q12776: "event",
        Q24384: "event",
        Q41520: "event",
        Q43605: "event",
        Q60874: "event",
        Q64313: "event",
        Q64795: "event",
        Q70990126: "event",
        Q76394137: "legislation",
        Q98807065: "book",
        Q99430861: "manuscript",
        Q99471867: "manuscript",
        Q99471961: "manuscript",
        Q99472047: "manuscript",
        Q99472115: "manuscript",
        Q104805122: "legislation",
        Q107579084: "book",
        Q107171265: "event",
        Q107410905: "event",
        Q123577: "event",
        Q129535: "event",
        Q129532: "event",
        Q130222: "event",
        Q132373: "event",
        Q133547: "event",
        Q137959: "event",
        Q168582: "event",
        Q169947: "event",
        Q172760: "event",
        Q194976: "event",
        Q195125: "event",
        Q199356: "event",
        Q203273: "event",
        Q206984: "event",
        Q239103: "event",
        Q242052: "event",
        Q248952: "event",
        Q264806: "event",
        Q265609: "event",
        Q286203: "event",
        Q299126: "event",
        Q299125: "event",
        Q299128: "event",
        Q299163: "event",
        Q299178: "event",
        Q299180: "event",
        Q299186: "event",
        Q299187: "event",
        Q299189: "event",
        Q299198: "event",
        Q299202: "event",
        Q299206: "event",
        Q299235: "event",
        Q299241: "event",
        Q299248: "event",
        Q299254: "event",
        Q299256: "event",
        Q299263: "event",
        Q299264: "event",
        Q299269: "event",
        Q299274: "event",
        Q299279: "event",
        Q299277: "event",
        Q299281: "event",
        Q299287: "event",
        Q299289: "event",
        Q299299: "event",
        Q299296: "event",
        Q299332: "event",
        Q299362: "event",
        Q299382: "event",
        Q299402: "event",
        Q299409: "event",
        Q299423: "event",
        Q299425: "event",
        Q299432: "event",
        Q299439: "event",
        Q299437: "event",
        Q299459: "event",
        Q299473: "event",
        Q299499: "event",
        Q299496: "event",
        Q299506: "event",
        Q299511: "event",
        Q299516: "event",
        Q299526: "event",
        Q299531: "event",
        Q299532: "event",
        Q299543: "event",
        Q299541: "event",
        Q299561: "event",
        Q299582: "event",
        Q299603: "event",
        Q299634: "event",
        Q299640: "event",
        Q299651: "event",
        Q299658: "event",
        Q299664: "event",
        Q299668: "event",
        Q299701: "event",
        Q299706: "event",
        Q299714: "event",
        Q299719: "event",
        Q299729: "event",
        Q299740: "event",
        Q299745: "event",
        Q299783: "event",
        Q299802: "event",
        Q299814: "event",
        Q299818: "event",
        Q299821: "event",
        Q299914: "event",
        Q299931: "event",
        Q299939: "event",
        Q299950: "event",
        Q299948: "event",
        Q299963: "event",
        Q300009: "event",
        Q300027: "event",
        Q300031: "event",
        Q319496: "event",
        Q323824: "event",
        Q331570: "event",
        Q427873: "event",
        Q428394: "event",
        Q431569: "event",
        Q461834: "event",
        Q491853: "event",
        Q497769: "event",
        Q526017: "event",
        Q535453: "event",
        Q539495: "event",
        Q539784: "event",
        Q540920: "event",
        Q555063: "event",
        Q557099: "event",
        Q557548: "event",
        Q557814: "event",
        Q558006: "event",
        Q558656: "event",
        Q559476: "event",
        Q559650: "event",
        Q560080: "event",
        Q584646: "event",
        Q595467: "event",
        Q596990: "event",
        Q605286: "event",
        Q606172: "event",
        Q616701: "event",
        Q627279: "event",
        Q633933: "event",
        Q634567: "event",
        Q684730: "event",
        Q696794: "event",
        Q716601: "event",
        Q716644: "event",
        Q716678: "event",
        Q716943: "event",
        Q735402: "event",
        Q739665: "event",
        Q743453: "event",
        Q760716: "event",
        Q768991: "event",
        Q769417: "event",
        Q769431: "event",
        Q775471: "event",
        Q779922: "event",
        Q796569: "event",
        Q796839: "event",
        Q800121: "event",
        Q886270: "event",
        Q890516: "event",
        Q890882: "event",
        Q903729: "event",
        Q929574: "event",
        Q941398: "event",
        Q945967: "event",
        Q954590: "event",
        Q965607: "event",
        Q974505: "event",
        Q1025949: "event",
        Q1044168: "event",
        Q1091028: "event",
        Q1103815: "event",
        Q1103842: "event",
        Q1117449: "event",
        Q1119295: "event",
        Q1119578: "event",
        Q1122524: "event",
        Q1134214: "event",
        Q1151287: "event",
        Q1161519: "event",
        Q1204262: "event",
        Q1388797: "event",
        Q1393324: "event",
        Q1393450: "event",
        Q1393456: "event",
        Q1393508: "event",
        Q1426603: "event",
        Q1442756: "event",
        Q1442932: "event",
        Q1443177: "event",
        Q1443908: "event",
        Q1486923: "event",
        Q1559570: "event",
        Q1615988: "event",
        Q1634719: "event",
        Q1638045: "event",
        Q1653961: "event",
        Q1654339: "event",
        Q1654545: "event",
        Q1729493: "event",
        Q1765968: "event",
        Q1765987: "event",
        Q1765993: "event",
        Q1766004: "event",
        Q1766027: "event",
        Q1767359: "event",
        Q1767608: "event",
        Q1768061: "event",
        Q1770734: "event",
        Q1770736: "event",
        Q1770747: "event",
        Q1770744: "event",
        Q1770751: "event",
        Q1777029: "event",
        Q1783626: "event",
        Q1960810: "event",
        Q1961253: "event",
        Q1961762: "event",
        Q1966034: "event",
        Q1981381: "event",
        Q1995680: "event",
        Q2004692: "event",
        Q2016020: "event",
        Q2018057: "event",
        Q2065854: "event",
        Q2074452: "event",
        Q2080820: "event",
        Q2205905: "event",
        Q2244936: "event",
        Q2371030: "event",
        Q2371222: "event",
        Q2415348: "event",
        Q2420534: "event",
        Q2421258: "event",
        Q2423399: "event",
        Q2423417: "event",
        Q2425642: "event",
        Q2537839: "event",
        Q2616055: "event",
        Q2632546: "event",
        Q2657736: "event",
        Q2694093: "event",
        Q2830532: "event",
        Q2866098: "event",
        Q2872166: "event",
        Q2896105: "event",
        Q2937459: "event",
        Q2949523: "event",
        Q2963330: "event",
        Q2975162: "event",
        Q2976234: "event",
        Q2976273: "event",
        Q2976341: "event",
        Q2976449: "event",
        Q2999429: "event",
        Q2999810: "event",
        Q2999845: "event",
        Q3000131: "event",
        Q3042549: "event",
        Q3083292: "event",
        Q3083527: "event",
        Q3083653: "event",
        Q3083763: "event",
        Q3087335: "event",
        Q3087459: "event",
        Q3088894: "event",
        Q3089208: "event",
        Q3106786: "event",
        Q3153340: "event",
        Q3177909: "event",
        Q3257647: "event",
        Q3324280: "event",
        Q3353485: "event",
        Q3353595: "event",
        Q3353780: "event",
        Q3353913: "event",
        Q3353917: "event",
        Q3354028: "event",
        Q3377484: "event",
        Q3495290: "event",
        Q3497987: "event",
        Q3506485: "event",
        Q3534237: "event",
        Q3534294: "event",
        Q3534292: "event",
        Q3534358: "event",
        Q3534566: "event",
        Q3534612: "event",
        Q3534675: "event",
        Q3534676: "event",
        Q3534722: "event",
        Q3534725: "event",
        Q3534738: "event",
        Q3534814: "event",
        Q3534817: "event",
        Q3534865: "event",
        Q3534932: "event",
        Q3534993: "event",
        Q3535034: "event",
        Q3535035: "event",
        Q3535049: "event",
        Q3535077: "event",
        Q3535082: "event",
        Q3535088: "event",
        Q3535243: "event",
        Q3540474: "event",
        Q3540489: "event",
        Q3540525: "event",
        Q3597331: "event",
        Q3600432: "event",
        Q3600649: "event",
        Q3600718: "event",
        Q3600739: "event",
        Q3600751: "event",
        Q3600805: "event",
        Q3600843: "event",
        Q3600847: "event",
        Q3600856: "event",
        Q3600884: "event",
        Q3600903: "event",
        Q3600948: "event",
        Q3601327: "event",
        Q3601330: "event",
        Q3601347: "event",
        Q3601638: "event",
        Q3601887: "event",
        Q3601888: "event",
        Q3601990: "event",
        Q3601994: "event",
        Q3602132: "event",
        Q3602149: "event",
        Q3602256: "event",
        Q3603058: "event",
        Q3603490: "event",
        Q3603520: "event",
        Q3603907: "event",
        Q3604223: "event",
        Q3605142: "event",
        Q3605923: "event",
        Q3606309: "event",
        Q3606853: "event",
        Q3606912: "event",
        Q3606917: "event",
        Q3607004: "event",
        Q3607245: "event",
        Q3609725: "event",
        Q3610771: "event",
        Q3611654: "event",
        Q3611701: "event",
        Q3612542: "event",
        Q3612735: "event",
        Q3612771: "event",
        Q3613041: "event",
        Q3613656: "event",
        Q3614074: "event",
        Q3614110: "event",
        Q3614697: "event",
        Q3615237: "event",
        Q3615379: "event",
        Q3615406: "event",
        Q3616311: "event",
        Q3617962: "event",
        Q3620171: "event",
        Q3620457: "event",
        Q3621067: "event",
        Q3621221: "event",
        Q3623162: "event",
        Q3624633: "event",
        Q3624843: "event",
        Q3624984: "event",
        Q3625000: "event",
        Q3627426: "event",
        Q3627461: "event",
        Q3627687: "event",
        Q3627921: "event",
        Q3628224: "event",
        Q3629454: "event",
        Q3629473: "event",
        Q3629939: "event",
        Q3630094: "event",
        Q3631082: "event",
        Q3631557: "event",
        Q3631712: "event",
        Q3631856: "event",
        Q3631948: "event",
        Q3632102: "event",
        Q3632207: "event",
        Q3632289: "event",
        Q3632701: "event",
        Q3632713: "event",
        Q3632952: "event",
        Q3632956: "event",
        Q3632966: "event",
        Q3632973: "event",
        Q3632987: "event",
        Q3633572: "event",
        Q3634125: "event",
        Q3634142: "event",
        Q3634199: "event",
        Q3634380: "event",
        Q3634483: "event",
        Q3634815: "event",
        Q3634870: "event",
        Q3634976: "event",
        Q3635079: "event",
        Q3636208: "event",
        Q3636890: "event",
        Q3637504: "event",
        Q3637509: "event",
        Q3637575: "event",
        Q3637701: "event",
        Q3637844: "event",
        Q3637894: "event",
        Q3638210: "event",
        Q3638307: "event",
        Q3638528: "event",
        Q3638539: "event",
        Q3638580: "event",
        Q3638594: "event",
        Q3638593: "event",
        Q3639471: "event",
        Q3639751: "event",
        Q3640336: "event",
        Q3640695: "event",
        Q3641012: "event",
        Q3641088: "event",
        Q3641095: "event",
        Q3641441: "event",
        Q3641448: "event",
        Q3641513: "event",
        Q3641604: "event",
        Q3641859: "event",
        Q3641916: "event",
        Q3642936: "event",
        Q3643010: "event",
        Q3643283: "event",
        Q3643851: "event",
        Q3643894: "event",
        Q3643975: "event",
        Q3643984: "event",
        Q3644325: "event",
        Q3644342: "event",
        Q3644801: "event",
        Q3644842: "event",
        Q3645279: "event",
        Q3645520: "event",
        Q3645563: "event",
        Q3646016: "event",
        Q3646238: "event",
        Q3646273: "event",
        Q3646350: "event",
        Q3646356: "event",
        Q3646483: "event",
        Q3646516: "event",
        Q3646730: "event",
        Q3646751: "event",
        Q3646808: "event",
        Q3646940: "event",
        Q3647225: "event",
        Q3649463: "event",
        Q3649547: "event",
        Q3649879: "event",
        Q3649903: "event",
        Q3649998: "event",
        Q3650525: "event",
        Q3650660: "event",
        Q3650671: "event",
        Q3651832: "event",
        Q3651894: "event",
        Q3652027: "event",
        Q3653725: "event",
        Q3654748: "event",
        Q3655130: "event",
        Q3655294: "event",
        Q3656625: "event",
        Q3656772: "event",
        Q3656796: "event",
        Q3658127: "event",
        Q3658138: "event",
        Q3658445: "event",
        Q3658681: "event",
        Q3660576: "event",
        Q3661360: "event",
        Q3661371: "event",
        Q3661526: "event",
        Q3663286: "event",
        Q3663972: "event",
        Q3664140: "event",
        Q3664280: "event",
        Q3665269: "event",
        Q3665273: "event",
        Q3665766: "event",
        Q3665787: "event",
        Q3665857: "event",
        Q3665934: "event",
        Q3666008: "event",
        Q3666037: "event",
        Q3666105: "event",
        Q3666176: "event",
        Q3666713: "event",
        Q3666808: "event",
        Q3667771: "event",
        Q3674576: "event",
        Q3674597: "event",
        Q3675214: "event",
        Q3675598: "event",
        Q3677008: "event",
        Q3678553: "event",
        Q3678624: "event",
        Q3678641: "event",
        Q3678655: "event",
        Q3678714: "event",
        Q3678724: "event",
        Q3680362: "event",
        Q3680700: "event",
        Q3682571: "event",
        Q3682849: "event",
        Q3683335: "event",
        Q3683487: "event",
        Q3683613: "event",
        Q3683812: "event",
        Q3683866: "event",
        Q3684250: "event",
        Q3686296: "event",
        Q3686348: "event",
        Q3686362: "event",
        Q3686659: "event",
        Q3689188: "event",
        Q3689987: "event",
        Q3690315: "event",
        Q3690373: "event",
        Q3690473: "event",
        Q3690538: "event",
        Q3690645: "event",
        Q3690697: "event",
        Q3690726: "event",
        Q3690848: "event",
        Q3690973: "event",
        Q3693269: "event",
        Q3695077: "event",
        Q3695290: "event",
        Q3695673: "event",
        Q3695897: "event",
        Q3696159: "event",
        Q3696334: "event",
        Q3696508: "event",
        Q3696847: "event",
        Q3698733: "event",
        Q3699189: "event",
        Q3699404: "event",
        Q3699618: "event",
        Q3699955: "event",
        Q3699961: "event",
        Q3700797: "event",
        Q3702794: "event",
        Q3702866: "event",
        Q3703856: "event",
        Q3704859: "event",
        Q3705157: "event",
        Q3705562: "event",
        Q3705902: "event",
        Q3706160: "event",
        Q3706333: "event",
        Q3706372: "event",
        Q3707644: "event",
        Q3712550: "event",
        Q3714405: "event",
        Q3714412: "event",
        Q3714489: "event",
        Q3715761: "event",
        Q3715789: "event",
        Q3715936: "event",
        Q3716475: "event",
        Q3717008: "event",
        Q3717021: "event",
        Q3717680: "event",
        Q3717781: "event",
        Q3719180: "event",
        Q3720297: "event",
        Q3720663: "event",
        Q3720749: "event",
        Q3724053: "event",
        Q3724109: "event",
        Q3725435: "event",
        Q3726398: "event",
        Q3730949: "event",
        Q3733152: "event",
        Q3733267: "event",
        Q3733269: "event",
        Q3733487: "event",
        Q3735966: "event",
        Q3737344: "event",
        Q3738447: "event",
        Q3738448: "event",
        Q3742349: "event",
        Q3742740: "event",
        Q3743025: "event",
        Q3745746: "event",
        Q3746380: "event",
        Q3746685: "event",
        Q3746748: "event",
        Q3746863: "event",
        Q3747981: "event",
        Q3748002: "event",
        Q3748499: "event",
        Q3751985: "event",
        Q3752681: "event",
        Q3753107: "event",
        Q3754137: "event",
        Q3754141: "event",
        Q3756000: "event",
        Q3756044: "event",
        Q3757474: "event",
        Q3758388: "event",
        Q3758450: "event",
        Q3758455: "event",
        Q3760014: "event",
        Q3760037: "event",
        Q3760059: "event",
        Q3761543: "event",
        Q3771964: "event",
        Q3772825: "event",
        Q3772892: "event",
        Q3772944: "event",
        Q3773601: "event",
        Q3773610: "event",
        Q3774003: "event",
        Q3774233: "event",
        Q3775797: "event",
        Q3775969: "event",
        Q3776303: "event",
        Q3776626: "event",
        Q3776908: "event",
        Q3778037: "event",
        Q3778048: "event",
        Q3778065: "event",
        Q3778152: "event",
        Q3778186: "event",
        Q3778213: "event",
        Q3778410: "event",
        Q3780077: "event",
        Q3780296: "event",
        Q3782362: "event",
        Q3782574: "event",
        Q3782723: "event",
        Q3782793: "event",
        Q3782809: "event",
        Q3782846: "event",
        Q3782857: "event",
        Q3782895: "event",
        Q3782902: "event",
        Q3783058: "event",
        Q3783541: "event",
        Q3783549: "event",
        Q3783722: "event",
        Q3784068: "event",
        Q3784739: "event",
        Q3785650: "event",
        Q3785658: "event",
        Q3785678: "event",
        Q3785992: "event",
        Q3786453: "event",
        Q3786546: "event",
        Q3786855: "event",
        Q3787021: "event",
        Q3787550: "event",
        Q3787640: "event",
        Q3787667: "event",
        Q3787691: "event",
        Q3788665: "event",
        Q3788932: "event",
        Q3789032: "event",
        Q3789045: "event",
        Q3789162: "event",
        Q3789194: "event",
        Q3789244: "event",
        Q3789310: "event",
        Q3789328: "event",
        Q3789365: "event",
        Q3789370: "event",
        Q3789394: "event",
        Q3789434: "event",
        Q3789496: "event",
        Q3789528: "event",
        Q3789632: "event",
        Q3789674: "event",
        Q3789678: "event",
        Q3789703: "event",
        Q3789709: "event",
        Q3789718: "event",
        Q3789747: "event",
        Q3789754: "event",
        Q3789808: "event",
        Q3789812: "event",
        Q3789831: "event",
        Q3789839: "event",
        Q3789872: "event",
        Q3789878: "event",
        Q3789888: "event",
        Q3790340: "event",
        Q3796399: "event",
        Q3797954: "event",
        Q3797980: "event",
        Q3797988: "event",
        Q3798154: "event",
        Q3798590: "event",
        Q3799319: "event",
        Q3799525: "event",
        Q3799553: "event",
        Q3799599: "event",
        Q3799732: "event",
        Q3799913: "event",
        Q3799953: "event",
        Q3800174: "event",
        Q3800183: "event",
        Q3800198: "event",
        Q3800367: "event",
        Q3800418: "event",
        Q3801775: "event",
        Q3802402: "event",
        Q3803483: "event",
        Q3804562: "event",
        Q3804995: "event",
        Q3805009: "event",
        Q3805746: "event",
        Q3806198: "event",
        Q3806224: "event",
        Q3806774: "event",
        Q3808059: "event",
        Q3808966: "event",
        Q3808977: "event",
        Q3809508: "event",
        Q3809770: "event",
        Q3809992: "event",
        Q3811991: "event",
        Q3812427: "event",
        Q3812536: "event",
        Q3812703: "event",
        Q3812756: "event",
        Q3812760: "event",
        Q3812861: "event",
        Q3812873: "event",
        Q3813127: "event",
        Q3813144: "event",
        Q3813181: "event",
        Q3814044: "event",
        Q3814761: "event",
        Q3814967: "event",
        Q3815117: "event",
        Q3815639: "event",
        Q3815726: "event",
        Q3815931: "event",
        Q3815953: "event",
        Q3815974: "event",
        Q3816070: "event",
        Q3816522: "event",
        Q3816530: "event",
        Q3816545: "event",
        Q3816783: "event",
        Q3817247: "event",
        Q3817511: "event",
        Q3817559: "event",
        Q3817701: "event",
        Q3817814: "event",
        Q3820205: "event",
        Q3820336: "event",
        Q3820766: "event",
        Q3821202: "event",
        Q3825520: "event",
        Q3826095: "event",
        Q3826122: "event",
        Q3826129: "event",
        Q3826622: "event",
        Q3827535: "event",
        Q3827699: "event",
        Q3827705: "event",
        Q3828172: "event",
        Q3828437: "event",
        Q3829355: "event",
        Q3830229: "event",
        Q3830782: "event",
        Q3831285: "event",
        Q3831448: "event",
        Q3832105: "event",
        Q3832394: "event",
        Q3832447: "event",
        Q3832475: "event",
        Q3832572: "event",
        Q3833114: "event",
        Q3833141: "event",
        Q3833232: "event",
        Q3833375: "event",
        Q3833384: "event",
        Q3835058: "event",
        Q3835580: "event",
        Q3836476: "event",
        Q3837260: "event",
        Q3837390: "event",
        Q3837961: "event",
        Q3837971: "event",
        Q3838980: "event",
        Q3839218: "event",
        Q3840939: "event",
        Q3841562: "event",
        Q3841964: "event",
        Q3842052: "event",
        Q3842154: "event",
        Q3842339: "event",
        Q3842781: "event",
        Q3842806: "event",
        Q3842916: "event",
        Q3843106: "event",
        Q3843487: "event",
        Q3843957: "event",
        Q3844000: "event",
        Q3844082: "event",
        Q3844090: "event",
        Q3844309: "event",
        Q3844406: "event",
        Q3844686: "event",
        Q3844927: "event",
        Q3845224: "event",
        Q3845232: "event",
        Q3845317: "event",
        Q3846880: "event",
        Q3847060: "event",
        Q3849409: "event",
        Q3849820: "event",
        Q3849907: "event",
        Q3850218: "event",
        Q3850663: "event",
        Q3850837: "event",
        Q3852387: "event",
        Q3852477: "event",
        Q3853662: "event",
        Q3853831: "event",
        Q3854045: "event",
        Q3854131: "event",
        Q3854150: "event",
        Q3854393: "event",
        Q3854557: "event",
        Q3854635: "event",
        Q3854804: "event",
        Q3855370: "event",
        Q3855787: "event",
        Q3855791: "event",
        Q3855800: "event",
        Q3855807: "event",
        Q3856003: "event",
        Q3856009: "event",
        Q3857794: "event",
        Q3857832: "event",
        Q3858175: "event",
        Q3859501: "event",
        Q3859787: "event",
        Q3859891: "event",
        Q3860600: "event",
        Q3861045: "event",
        Q3861130: "event",
        Q3861310: "event",
        Q3862191: "event",
        Q3862336: "event",
        Q3862352: "event",
        Q3862360: "event",
        Q3862413: "event",
        Q3862419: "event",
        Q3862423: "event",
        Q3862506: "event",
        Q3862513: "event",
        Q3862871: "event",
        Q3863083: "event",
        Q3863112: "event",
        Q3867068: "event",
        Q3867125: "event",
        Q3867138: "event",
        Q3867219: "event",
        Q3867375: "event",
        Q3868522: "event",
        Q3869473: "event",
        Q3869907: "event",
        Q3869921: "event",
        Q3869966: "event",
        Q3870037: "event",
        Q3870180: "event",
        Q3870211: "event",
        Q3870225: "event",
        Q3870318: "event",
        Q3870591: "event",
        Q3874950: "event",
        Q3874973: "event",
        Q3875018: "event",
        Q3875024: "event",
        Q3875200: "event",
        Q3875235: "event",
        Q3875302: "event",
        Q3875329: "event",
        Q3875340: "event",
        Q3875621: "event",
        Q3875920: "event",
        Q3876603: "event",
        Q3876655: "event",
        Q3878533: "event",
        Q3878542: "event",
        Q3878798: "event",
        Q3878876: "event",
        Q3878897: "event",
        Q3879299: "event",
        Q3879897: "event",
        Q3879981: "event",
        Q3879986: "event",
        Q3880040: "event",
        Q3880501: "event",
        Q3880726: "event",
        Q3880964: "event",
        Q3881071: "event",
        Q3881249: "event",
        Q3881328: "event",
        Q3881483: "event",
        Q3882045: "event",
        Q3882927: "event",
        Q3883099: "event",
        Q3883111: "event",
        Q3883123: "event",
        Q3883130: "event",
        Q3883137: "event",
        Q3883169: "event",
        Q3883186: "event",
        Q3883193: "event",
        Q3883208: "event",
        Q3883215: "event",
        Q3883233: "event",
        Q3883251: "event",
        Q3883337: "event",
        Q3883377: "event",
        Q3883492: "event",
        Q3883592: "event",
        Q3884193: "event",
        Q3885939: "event",
        Q3886256: "event",
        Q3886348: "event",
        Q3886871: "event",
        Q3886886: "event",
        Q3888758: "event",
        Q3892716: "event",
        Q3892721: "event",
        Q3892726: "event",
        Q3892916: "event",
        Q3895234: "event",
        Q3895943: "event",
        Q3896910: "event",
        Q3898348: "event",
        Q3898885: "event",
        Q3898992: "event",
        Q3899121: "event",
        Q3899293: "event",
        Q3899422: "event",
        Q3900013: "event",
        Q3900553: "event",
        Q3900676: "event",
        Q3901601: "event",
        Q3905055: "event",
        Q3906301: "event",
        Q3906890: "event",
        Q3907679: "event",
        Q3908048: "event",
        Q3908655: "event",
        Q3909130: "event",
        Q3909332: "event",
        Q3909344: "event",
        Q3909705: "event",
        Q3909829: "event",
        Q3910963: "event",
        Q3911280: "event",
        Q3922259: "event",
        Q3925401: "event",
        Q3925427: "event",
        Q3925433: "event",
        Q3925440: "event",
        Q3926163: "event",
        Q3926228: "event",
        Q3928022: "event",
        Q3928171: "event",
        Q3929662: "event",
        Q3929735: "event",
        Q3929996: "event",
        Q3931236: "event",
        Q3931294: "event",
        Q3931297: "event",
        Q3931553: "event",
        Q3931782: "event",
        Q3932235: "event",
        Q3932963: "event",
        Q3933265: "event",
        Q3933868: "event",
        Q3933882: "event",
        Q3934241: "event",
        Q3935265: "event",
        Q3935780: "event",
        Q3936165: "event",
        Q3936227: "event",
        Q3936244: "event",
        Q3937969: "event",
        Q3938141: "event",
        Q3939694: "event",
        Q3939782: "event",
        Q3939832: "event",
        Q3940066: "event",
        Q3940383: "event",
        Q3940421: "event",
        Q3940804: "event",
        Q3941758: "event",
        Q3942056: "event",
        Q3942084: "event",
        Q3942628: "event",
        Q3943452: "event",
        Q3943519: "event",
        Q3943551: "event",
        Q3943731: "event",
        Q3943760: "event",
        Q3944106: "event",
        Q3944531: "event",
        Q3944943: "event",
        Q3945028: "event",
        Q3945463: "event",
        Q3945558: "event",
        Q3945759: "event",
        Q3945806: "event",
        Q3945808: "event",
        Q3945885: "event",
        Q3946307: "event",
        Q3946397: "event",
        Q3946726: "event",
        Q3946803: "event",
        Q3946829: "event",
        Q3946929: "event",
        Q3947386: "event",
        Q3947444: "event",
        Q3947890: "event",
        Q3948547: "event",
        Q3948564: "event",
        Q3948987: "event",
        Q3949390: "event",
        Q3949413: "event",
        Q3949561: "event",
        Q3950151: "event",
        Q3950160: "event",
        Q3950209: "event",
        Q3950225: "event",
        Q3950389: "event",
        Q3950405: "event",
        Q3950522: "event",
        Q3950988: "event",
        Q3951540: "event",
        Q3951895: "event",
        Q3952225: "event",
        Q3953614: "event",
        Q3954177: "event",
        Q3954480: "event",
        Q3954502: "event",
        Q3954565: "event",
        Q3954695: "event",
        Q3958447: "event",
        Q3959117: "event",
        Q3959335: "event",
        Q3959398: "event",
        Q3959511: "event",
        Q3959810: "event",
        Q3959809: "event",
        Q3959814: "event",
        Q3959891: "event",
        Q3960070: "event",
        Q3961775: "event",
        Q3961985: "event",
        Q3961996: "event",
        Q3962843: "event",
        Q3962955: "event",
        Q3964332: "event",
        Q3964962: "event",
        Q3965577: "event",
        Q3965585: "event",
        Q3965602: "event",
        Q3965608: "event",
        Q3966937: "event",
        Q3967100: "event",
        Q3967179: "event",
        Q3967192: "event",
        Q3967241: "event",
        Q3967245: "event",
        Q3967270: "event",
        Q3967503: "event",
        Q3967576: "event",
        Q3967614: "event",
        Q3968691: "event",
        Q3973768: "event",
        Q3975857: "event",
        Q3975861: "event",
        Q3976378: "event",
        Q3976914: "event",
        Q3976995: "event",
        Q3977040: "event",
        Q3977051: "event",
        Q3978105: "event",
        Q3978181: "event",
        Q3978361: "event",
        Q3978613: "event",
        Q3979022: "event",
        Q3979145: "event",
        Q3979249: "event",
        Q3979433: "event",
        Q3979440: "event",
        Q3979465: "event",
        Q3980194: "event",
        Q3980649: "event",
        Q3980744: "event",
        Q3980818: "event",
        Q3980834: "event",
        Q3980840: "event",
        Q3981092: "event",
        Q3981179: "event",
        Q3981238: "event",
        Q3981270: "event",
        Q3981343: "event",
        Q3981383: "event",
        Q3981480: "event",
        Q3981715: "event",
        Q3982594: "event",
        Q3982649: "event",
        Q3982723: "event",
        Q3982733: "event",
        Q3983023: "event",
        Q3983444: "event",
        Q3983669: "event",
        Q3983710: "event",
        Q3983735: "event",
        Q3985275: "event",
        Q3987443: "event",
        Q3987749: "event",
        Q3990341: "event",
        Q3990362: "event",
        Q3991146: "event",
        Q3991309: "event",
        Q3991460: "event",
        Q3991630: "event",
        Q3992207: "event",
        Q3992290: "event",
        Q3992375: "event",
        Q3992425: "event",
        Q3993795: "event",
        Q3994402: "event",
        Q3994427: "event",
        Q3994450: "event",
        Q3994506: "event",
        Q3994517: "event",
        Q3994536: "event",
        Q3994548: "event",
        Q3994549: "event",
        Q3994559: "event",
        Q3994570: "event",
        Q3994581: "event",
        Q3994665: "event",
        Q3994691: "event",
        Q3995105: "event",
        Q3996962: "event",
        Q3997087: "event",
        Q3997430: "event",
        Q3998000: "event",
        Q3999222: "event",
        Q3999332: "event",
        Q3999351: "event",
        Q3999363: "event",
        Q3999376: "event",
        Q3999433: "event",
        Q3999595: "event",
        Q3999701: "event",
        Q4000382: "event",
        Q4000412: "event",
        Q4000453: "event",
        Q4001138: "event",
        Q4002130: "event",
        Q4002148: "event",
        Q4002185: "event",
        Q4002204: "event",
        Q4002238: "event",
        Q4002380: "event",
        Q4003083: "event",
        Q4007206: "event",
        Q4007618: "event",
        Q4007977: "event",
        Q4007990: "event",
        Q4008491: "event",
        Q4008505: "event",
        Q4008548: "event",
        Q4009335: "event",
        Q4009661: "event",
        Q4010154: "event",
        Q4011100: "event",
        Q4011460: "event",
        Q4011468: "event",
        Q4011580: "event",
        Q4011707: "event",
        Q4013959: "event",
        Q4013961: "event",
        Q4013974: "event",
        Q4014104: "event",
        Q4014335: "event",
        Q4014751: "event",
        Q4015767: "event",
        Q4016836: "event",
        Q4016887: "event",
        Q4016895: "event",
        Q4017093: "event",
        Q4017170: "event",
        Q4017354: "event",
        Q4017622: "event",
        Q4017666: "event",
        Q4017785: "event",
        Q4017825: "event",
        Q4018287: "event",
        Q4018384: "event",
        Q4018777: "event",
        Q4018790: "event",
        Q4018912: "event",
        Q4019086: "event",
        Q4019091: "event",
        Q4019107: "event",
        Q4019104: "event",
        Q4019130: "event",
        Q4019506: "event",
        Q4019713: "event",
        Q4020075: "event",
        Q4020461: "event",
        Q4020513: "event",
        Q4020717: "event",
        Q4020733: "event",
        Q4020740: "event",
        Q4021029: "event",
        Q4021433: "event",
        Q4022725: "event",
        Q4023183: "event",
        Q4023185: "event",
        Q4023309: "event",
        Q4023575: "event",
        Q4023674: "event",
        Q4023687: "event",
        Q4023857: "event",
        Q4024105: "event",
        Q4024108: "event",
        Q4024112: "event",
        Q4024918: "event",
        Q4025007: "event",
        Q4025012: "event",
        Q4025042: "event",
        Q4045891: "event",
        Q4050441: "event",
        Q4052770: "event",
        Q4224218: "event",
        Q4256960: "event",
        Q4288439: "event",
        Q4339756: "event",
        Q4366215: "event",
        Q4366218: "event",
        Q4366216: "event",
        Q4366217: "event",
        Q4454733: "event",
        Q4509271: "event",
        Q4510456: "event",
        Q4797848: "event",
        Q4836135: "event",
        Q4942801: "event",
        Q4957984: "event",
        Q4984045: "event",
        Q5068924: "event",
        Q5071577: "event",
        Q5082753: "event",
        Q5168153: "event",
        Q5168210: "event",
        Q5413401: "event",
        Q5490846: "event",
        Q5514875: "event",
        Q5551202: "event",
        Q5744971: "event",
        Q5787894: "event",
        Q5942858: "event",
        Q6005569: "event",
        Q6052577: "event",
        Q6053982: "event",
        Q6123948: "event",
        Q6417564: "event",
        Q6728095: "event",
        Q6785427: "event",
        Q6785432: "event",
        Q6819490: "event",
        Q6905402: "event",
        Q6952254: "event",
        Q6952263: "event",
        Q6952969: "event",
        Q6980868: "event",
        Q7023722: "event",
        Q7096050: "event",
        Q7127993: "event",
        Q7179488: "event",
        Q7269946: "event",
        Q7335177: "event",
        Q7426098: "event",
        Q7523148: "event",
        Q7607039: "event",
        Q7698261: "event",
        Q7700325: "event",
        Q7700459: "event",
        Q7700462: "event",
        Q7700460: "event",
        Q7700461: "event",
        Q7829347: "event",
        Q7832260: "event",
        Q7863693: "event",
        Q7889248: "event",
        Q7907578: "event",
        Q7992062: "event",
        Q8036294: "event",
        Q8349777: "event",
        Q9560694: "event",
        Q11090803: "event",
        Q11351733: "event",
        Q11362264: "event",
        Q11389224: "event",
        Q11389239: "event",
        Q11389359: "event",
        Q11419795: "event",
        Q11421030: "event",
        Q11421028: "event",
        Q13222050: "event",
        Q13360734: "event",
        Q13493441: "event",
        Q13526286: "event",
        Q13528155: "event",
        Q13582675: "event",
        Q13582710: "event",
        Q13583330: "event",
        Q13600685: "event",
        Q13861080: "event",
        Q14174007: "event",
        Q14320759: "event",
        Q14342109: "event",
        Q14395789: "event",
        Q14478218: "event",
        Q14514524: "event",
        Q14856072: "event",
        Q15041810: "event",
        Q15054936: "event",
        Q15069684: "event",
        Q15097531: "event",
        Q15131563: "event",
        Q15131574: "event",
        Q15144568: "event",
        Q15147839: "event",
        Q15211049: "event",
        Q15275875: "event",
        Q15295658: "event",
        Q15361334: "event",
        Q15502507: "event",
        Q15689750: "event",
        Q15729796: "event",
        Q15731893: "event",
        Q15735641: "event",
        Q15781230: "event",
        Q15781235: "event",
        Q15781242: "event",
        Q15781244: "event",
        Q15959551: "event",
        Q15974424: "event",
        Q16023722: "event",
        Q16054181: "event",
        Q16219512: "event",
        Q16274825: "event",
        Q16512362: "event",
        Q16529509: "event",
        Q16534435: "event",
        Q16546328: "event",
        Q16563995: "event",
        Q16564054: "event",
        Q16564136: "event",
        Q16580434: "event",
        Q16584404: "event",
        Q16613251: "event",
        Q16615810: "event",
        Q16618886: "event",
        Q16632531: "event",
        Q16680326: "event",
        Q16680679: "event",
        Q16680755: "event",
        Q16830262: "event",
        Q16830263: "event",
        Q16830264: "event",
        Q16850252: "event",
        Q16955406: "event",
        Q16956397: "event",
        Q16977292: "event",
        Q16981798: "event",
        Q16984643: "event",
        Q16987821: "event",
        Q17011128: "event",
        Q17011135: "event",
        Q17022891: "event",
        Q17151899: "event",
        Q17256963: "event",
        Q17270829: "event",
        Q17306815: "event",
        Q17310096: "event",
        Q17310097: "event",
        Q17333175: "event",
        Q17333181: "event",
        Q17333184: "event",
        Q17333197: "event",
        Q17333214: "event",
        Q17333223: "event",
        Q17361963: "event",
        Q17383767: "event",
        Q17461001: "event",
        Q17462082: "event",
        Q17462095: "event",
        Q17464028: "event",
        Q17489335: "event",
        Q17493278: "event",
        Q17620008: "event",
        Q17622371: "event",
        Q17622546: "event",
        Q17623114: "event",
        Q17624645: "event",
        Q17625497: "event",
        Q17628571: "event",
        Q17633105: "event",
        Q17633886: "event",
        Q17637042: "event",
        Q17637518: "event",
        Q17639419: "event",
        Q17639746: "event",
        Q17640525: "event",
        Q17747114: "event",
        Q17993729: "event",
        Q18018759: "event",
        Q18129441: "event",
        Q18159015: "event",
        Q18194670: "event",
        Q18202318: "event",
        Q18213482: "event",
        Q18213481: "event",
        Q18213488: "event",
        Q18287737: "event",
        Q18341693: "event",
        Q18377780: "event",
        Q18392682: "event",
        Q18396069: "event",
        Q18409973: "event",
        Q18412581: "event",
        Q18415531: "event",
        Q18418347: "event",
        Q18536387: "event",
        Q18544772: "event",
        Q18580167: "event",
        Q18604482: "event",
        Q18641731: "event",
        Q18698620: "event",
        Q18979560: "event",
        Q19160228: "event",
        Q19258246: "event",
        Q19428421: "event",
        Q19605869: "event",
        Q19606574: "event",
        Q19817651: "event",
        Q19833989: "event",
        Q19891914: "event",
        Q19892939: "event",
        Q19924530: "event",
        Q20010797: "event",
        Q20020843: "event",
        Q20127833: "event",
        Q20164838: "event",
        Q20312401: "event",
        Q20439575: "event",
        Q20647502: "event",
        Q20648829: "event",
        Q20713720: "event",
        Q20797926: "event",
        Q20804888: "event",
        Q20807181: "event",
        Q21010022: "event",
        Q21027485: "event",
        Q21030874: "event",
        Q21040127: "event",
        Q21055686: "event",
        Q21093703: "event",
        Q21093700: "event",
        Q21093701: "event",
        Q21093712: "event",
        Q21093723: "event",
        Q21093726: "event",
        Q21093725: "event",
        Q21234484: "event",
        Q21235476: "event",
        Q21235523: "event",
        Q21336943: "event",
        Q21395689: "event",
        Q21408242: "event",
        Q21476775: "event",
        Q22008239: "event",
        Q22026039: "event",
        Q22059426: "event",
        Q22079824: "event",
        Q22079845: "event",
        Q22079851: "event",
        Q22079858: "event",
        Q22086620: "event",
        Q22095418: "event",
        Q22095956: "event",
        Q22096122: "event",
        Q22096136: "event",
        Q22096406: "event",
        Q22096448: "event",
        Q22222885: "event",
        Q22235842: "event",
        Q22298555: "event",
        Q22683265: "event",
        Q22829012: "event",
        Q22919781: "event",
        Q22948449: "event",
        Q23018491: "event",
        Q23038902: "event",
        Q23039164: "event",
        Q23039200: "event",
        Q23039334: "event",
        Q23039397: "event",
        Q23039414: "event",
        Q23039600: "event",
        Q23785490: "event",
        Q23795293: "event",
        Q23797188: "event",
        Q23895149: "event",
        Q23956839: "event",
        Q24088385: "event",
        Q24197286: "event",
        Q24636970: "event",
        Q24699540: "event",
        Q24908119: "event",
        Q24911704: "event",
        Q24972047: "event",
        Q24993214: "event",
        Q24993217: "event",
        Q25247386: "event",
        Q25316304: "event",
        Q25350515: "event",
        Q25377940: "event",
        Q25378133: "event",
        Q25378153: "event",
        Q25378415: "event",
        Q25378540: "event",
        Q25378617: "event",
        Q25383755: "event",
        Q25384986: "event",
        Q25403316: "event",
        Q26268612: "event",
        Q26268650: "event",
        Q26307058: "event",
        Q26694763: "event",
        Q26722566: "event",
        Q26806402: "event",
        Q26836193: "event",
        Q26836508: "event",
        Q26863790: "event",
        Q26869510: "event",
        Q27220048: "event",
        Q27308030: "event",
        Q27517306: "event",
        Q27567168: "event",
        Q27888220: "event",
        Q27897066: "event",
        Q28003735: "event",
        Q28065175: "event",
        Q28071051: "event",
        Q28108951: "event",
        Q28141548: "event",
        Q28223971: "event",
        Q28224191: "event",
        Q28229057: "event",
        Q28230598: "event",
        Q28402654: "event",
        Q28434536: "event",
        Q28439721: "event",
        Q28446863: "event",
        Q28447931: "event",
        Q28449553: "event",
        Q28681433: "event",
        Q28739880: "event",
        Q28970885: "event",
        Q28976348: "event",
        Q29045824: "event",
        Q29111854: "event",
        Q29976438: "event",
        Q30056998: "event",
        Q30224302: "event",
        Q30329653: "event",
        Q30636372: "event",
        Q30640119: "event",
        Q30644035: "event",
        Q30644056: "event",
        Q30644268: "event",
        Q30899671: "event",
        Q30909403: "event",
        Q34802615: "event",
        Q34972831: "event",
        Q38184051: "event",
        Q39045340: "event",
        Q39056481: "event",
        Q39057700: "event",
        Q39061118: "event",
        Q39080169: "event",
        Q40445394: "event",
        Q41799397: "event",
        Q42531004: "event",
        Q43380317: "event",
        Q47006610: "event",
        Q47013041: "event",
        Q47117944: "event",
        Q47482648: "event",
        Q47487926: "event",
        Q47487925: "event",
        Q47487928: "event",
        Q47487971: "event",
        Q47487968: "event",
        Q47487973: "event",
        Q47488698: "event",
        Q47488699: "event",
        Q47488700: "event",
        Q47488701: "event",
        Q47488750: "event",
        Q47832385: "event",
        Q47841968: "event",
        Q47916304: "event",
        Q47921081: "event",
        Q48031037: "event",
        Q48133303: "event",
        Q48207643: "event",
        Q48261162: "event",
        Q48636487: "event",
        Q48673590: "event",
        Q48843043: "event",
        Q50185613: "event",
        Q50186904: "event",
        Q50384692: "event",
        Q50410412: "event",
        Q50418195: "event",
        Q50418202: "event",
        Q50470152: "event",
        Q50470240: "event",
        Q50470306: "event",
        Q50472085: "event",
        Q50472157: "event",
        Q50472800: "event",
        Q50476608: "event",
        Q50476661: "event",
        Q50476759: "event",
        Q50476812: "event",
        Q50476866: "event",
        Q50477552: "event",
        Q50477604: "event",
        Q50477754: "event",
        Q50477829: "event",
        Q50477931: "event",
        Q50477995: "event",
        Q50478097: "event",
        Q50479021: "event",
        Q50479069: "event",
        Q50479199: "event",
        Q50479241: "event",
        Q50479278: "event",
        Q50479308: "event",
        Q50479383: "event",
        Q50479631: "event",
        Q50547864: "event",
        Q50547896: "event",
        Q50547916: "event",
        Q50547939: "event",
        Q50547960: "event",
        Q50548026: "event",
        Q50548059: "event",
        Q50548110: "event",
        Q50548457: "event",
        Q50548533: "event",
        Q50548556: "event",
        Q50548710: "event",
        Q50548734: "event",
        Q50548757: "event",
        Q50548777: "event",
        Q50548802: "event",
        Q50548834: "event",
        Q50548865: "event",
        Q50548896: "event",
        Q50548930: "event",
        Q50548946: "event",
        Q50548968: "event",
        Q50549210: "event",
        Q50549208: "event",
        Q50549209: "event",
        Q50549215: "event",
        Q50549218: "event",
        Q50549222: "event",
        Q50549220: "event",
        Q50549221: "event",
        Q111187591: "event",
        Q120804: "event",
        Q141716: "event",
        Q145505: "event",
        Q149882: "event",
        Q175861: "event",
        Q203784: "event",
        Q209556: "event",
        Q245886: "event",
        Q245885: "event",
        Q245892: "event",
        Q257285: "event",
        Q301292: "event",
        Q303419: "event",
        Q303811: "event",
        Q314038: "event",
        Q324257: "event",
        Q328539: "event",
        Q375218: "event",
        Q375545: "event",
        Q443941: "event",
        Q474007: "event",
        Q474534: "event",
        Q524107: "event",
        Q540439: "event",
        Q608883: "event",
        Q616151: "event",
        Q628010: "event",
        Q645310: "event",
        Q645545: "event",
        Q653127: "event",
        Q655951: "event",
        Q656382: "event",
        Q663964: "event",
        Q683469: "event",
        Q683482: "event",
        Q684360: "event",
        Q688120: "event",
        Q689657: "event",
        Q689703: "event",
        Q692149: "event",
        Q694225: "event",
        Q695984: "event",
        Q696667: "event",
        Q696677: "event",
        Q696710: "event",
        Q724011: "event",
        Q724014: "event",
        Q724094: "event",
        Q727021: "event",
        Q727359: "event",
        Q729230: "event",
        Q735943: "event",
        Q747654: "event",
        Q758639: "event",
        Q773829: "event",
        Q781528: "event",
        Q783023: "event",
        Q792499: "event",
        Q797176: "event",
        Q797189: "event",
        Q799209: "event",
        Q799305: "event",
        Q799330: "event",
        Q799376: "event",
        Q799377: "event",
        Q799422: "event",
        Q799425: "event",
        Q799434: "event",
        Q799450: "event",
        Q50549223: "event",
        Q50549224: "event",
        Q50549228: "event",
        Q50549229: "event",
        Q50549232: "event",
        Q50549233: "event",
        Q50549237: "event",
        Q50549246: "event",
        Q50549247: "event",
        Q50549250: "event",
        Q50549251: "event",
        Q50549249: "event",
        Q50549257: "event",
        Q50549263: "event",
        Q50549266: "event",
        Q50842727: "event",
        Q56291178: "event",
        Q56378748: "event",
        Q60846927: "event",
        Q62666870: "event",
        Q64822995: "event",
        Q15222: "event",
        Q27450: "event",
        Q31345: "event",
        Q97670098: "event",
        Q99655727: "event",
        Q99656088: "event",
        Q99656421: "event",
        Q100786919: "event",
        Q106938984: "event",
        Q799469: "event",
        Q799591: "event",
        Q799594: "event",
        Q799593: "event",
        Q799633: "event",
        Q799644: "event",
        Q799658: "event",
        Q799659: "event",
        Q799657: "event",
        Q799661: "event",
        Q803628: "event",
        Q805057: "event",
        Q805144: "event",
        Q805762: "event",
        Q806492: "event",
        Q806493: "event",
        Q806528: "event",
        Q807299: "event",
        Q815487: "event",
        Q815488: "event",
        Q815500: "event",
        Q816076: "event",
        Q822054: "event",
        Q834406: "event",
        Q894458: "event",
        Q894457: "event",
        Q894470: "event",
        Q894571: "event",
        Q894853: "event",
        Q899204: "event",
        Q903055: "event",
        Q954074: "event",
        Q960248: "event",
        Q969090: "event",
        Q991734: "event",
        Q992559: "event",
        Q995595: "event",
        Q1003607: "event",
        Q1003631: "event",
        Q1003698: "event",
        Q1003701: "event",
        Q1003889: "event",
        Q1032264: "event",
        Q1032833: "event",
        Q1035830: "event",
        Q1043418: "event",
        Q1072807: "event",
        Q1073307: "event",
        Q1073355: "event",
        Q1073735: "event",
        Q1073977: "event",
        Q1110379: "event",
        Q1130994: "event",
        Q1131040: "event",
        Q1140677: "event",
        Q1149324: "event",
        Q1149395: "event",
        Q1152534: "event",
        Q1152533: "event",
        Q1152542: "event",
        Q1152547: "event",
        Q1152706: "event",
        Q1152708: "event",
        Q1152819: "event",
        Q1152836: "event",
        Q1162557: "event",
        Q1162560: "event",
        Q1169153: "event",
        Q1180970: "event",
        Q1188736: "event",
        Q1193650: "event",
        Q1194788: "event",
        Q1202091: "event",
        Q1203123: "event",
        Q1203198: "event",
        Q1203472: "event",
        Q1203591: "event",
        Q1203593: "event",
        Q1204142: "event",
        Q1233985: "event",
        Q1235427: "event",
        Q1240036: "event",
        Q1245467: "event",
        Q1246458: "event",
        Q1254649: "event",
        Q1255145: "event",
        Q1256690: "event",
        Q1262142: "event",
        Q1266209: "event",
        Q1267784: "event",
        Q1267829: "event",
        Q1270050: "event",
        Q1270143: "event",
        Q1274559: "event",
        Q1276626: "event",
        Q1277716: "event",
        Q1278396: "event",
        Q1279569: "event",
        Q1282002: "event",
        Q1282211: "event",
        Q1283160: "event",
        Q1290911: "event",
        Q1291694: "event",
        Q1307348: "event",
        Q1309521: "event",
        Q1315945: "event",
        Q1316180: "event",
        Q1321278: "event",
        Q1323243: "event",
        Q1325650: "event",
        Q1334737: "event",
        Q1341097: "event",
        Q1342577: "event",
        Q1342810: "event",
        Q1353734: "event",
        Q1358044: "event",
        Q1367044: "event",
        Q1370190: "event",
        Q1370189: "event",
        Q1370324: "event",
        Q1370420: "event",
        Q1370853: "event",
        Q1371249: "event",
        Q1375254: "event",
        Q1375518: "event",
        Q1376114: "event",
        Q1377363: "event",
        Q1385247: "event",
        Q1387258: "event",
        Q1387905: "event",
        Q1390124: "event",
        Q1390140: "event",
        Q1396170: "event",
        Q1401758: "event",
        Q1410316: "event",
        Q1412253: "event",
        Q1413731: "event",
        Q1417544: "event",
        Q1417794: "event",
        Q1417799: "event",
        Q1418147: "event",
        Q1418979: "event",
        Q1420655: "event",
        Q1428559: "event",
        Q1430384: "event",
        Q1433086: "event",
        Q1433192: "event",
        Q1450503: "event",
        Q1450505: "event",
        Q1450598: "event",
        Q1455275: "event",
        Q1456424: "event",
        Q1462977: "event",
        Q1465483: "event",
        Q1469053: "event",
        Q1469581: "event",
        Q1477055: "event",
        Q1478906: "event",
        Q1478904: "event",
        Q1484521: "event",
        Q1491833: "event",
        Q1502455: "event",
        Q1505582: "event",
        Q1505882: "event",
        Q1507281: "event",
        Q1509457: "event",
        Q1513289: "event",
        Q1515782: "event",
        Q1517150: "event",
        Q1521351: "event",
        Q1522958: "event",
        Q1522970: "event",
        Q1522968: "event",
        Q1522973: "event",
        Q1524526: "event",
        Q1526627: "event",
        Q1531252: "event",
        Q1531700: "event",
        Q1538381: "event",
        Q1544524: "event",
        Q1546327: "event",
        Q1546329: "event",
        Q1551665: "event",
        Q1551671: "event",
        Q1551668: "event",
        Q1551983: "event",
        Q1552924: "event",
        Q1556727: "event",
        Q1557948: "event",
        Q1562929: "event",
        Q1563114: "event",
        Q1563377: "event",
        Q1566376: "event",
        Q1572887: "event",
        Q1573963: "event",
        Q1574935: "event",
        Q1575199: "event",
        Q1576656: "event",
        Q1579590: "event",
        Q1586501: "event",
        Q1604564: "event",
        Q1608552: "event",
        Q1614032: "event",
        Q1617761: "event",
        Q1618143: "event",
        Q1626942: "event",
        Q1632327: "event",
        Q1632810: "event",
        Q1637740: "event",
        Q1644669: "event",
        Q1651180: "event",
        Q1652172: "event",
        Q1661179: "event",
        Q1661203: "event",
        Q1661253: "event",
        Q1661462: "event",
        Q1661461: "event",
        Q1661531: "event",
        Q1661706: "event",
        Q1661730: "event",
        Q1661757: "event",
        Q1661763: "event",
        Q1667712: "event",
        Q1667853: "event",
        Q1668185: "event",
        Q1668910: "event",
        Q1670208: "event",
        Q1672768: "event",
        Q1672769: "event",
        Q1672850: "event",
        Q1674279: "event",
        Q1674283: "event",
        Q1674634: "event",
        Q1674632: "event",
        Q1674669: "event",
        Q1675034: "event",
        Q1675067: "event",
        Q1675068: "event",
        Q1675123: "event",
        Q1679821: "event",
        Q1683169: "event",
        Q1683232: "event",
        Q1684034: "event",
        Q1685213: "event",
        Q1685869: "event",
        Q1687914: "event",
        Q1695924: "event",
        Q1703624: "event",
        Q1705940: "event",
        Q1711429: "event",
        Q1711454: "event",
        Q1711490: "event",
        Q1719131: "event",
        Q1723084: "event",
        Q1723513: "event",
        Q1731784: "event",
        Q1740580: "event",
        Q1741051: "event",
        Q1747348: "event",
        Q1749925: "event",
        Q1750264: "event",
        Q1750458: "event",
        Q1752398: "event",
        Q1755200: "event",
        Q1758889: "event",
        Q1780951: "event",
        Q1781629: "event",
        Q1784333: "event",
        Q1789594: "event",
        Q1789592: "event",
        Q1797308: "event",
        Q1803360: "event",
        Q1805717: "event",
        Q1810278: "event",
        Q1821179: "event",
        Q1821177: "event",
        Q1823166: "event",
        Q1824036: "event",
        Q1853314: "event",
        Q1864968: "event",
        Q1864969: "event",
        Q1878292: "event",
        Q1878314: "event",
        Q1882522: "event",
        Q1882589: "event",
        Q1883115: "event",
        Q1887081: "event",
        Q1887782: "event",
        Q1887862: "event",
        Q1887860: "event",
        Q1890454: "event",
        Q1891856: "event",
        Q1911518: "event",
        Q1914690: "event",
        Q1914688: "event",
        Q1918724: "event",
        Q1919760: "event",
        Q1926218: "event",
        Q1926589: "event",
        Q1943321: "event",
        Q1943330: "event",
        Q1944455: "event",
        Q1956478: "event",
        Q1956484: "event",
        Q1964273: "event",
        Q1977678: "event",
        Q1977689: "event",
        Q1981535: "event",
        Q1982890: "event",
        Q1983296: "event",
        Q1988018: "event",
        Q1989626: "event",
        Q2000667: "event",
        Q2000712: "event",
        Q2000899: "event",
        Q2000969: "event",
        Q2001330: "event",
        Q2001418: "event",
        Q2001423: "event",
        Q2034849: "event",
        Q2048934: "event",
        Q2065510: "event",
        Q2067749: "event",
        Q2070093: "event",
        Q2072630: "event",
        Q2087865: "event",
        Q2099680: "event",
        Q2102206: "event",
        Q2102204: "event",
        Q2104038: "event",
        Q2105303: "event",
        Q2105362: "event",
        Q2105361: "event",
        Q2108612: "event",
        Q2117459: "event",
        Q2152739: "event",
        Q2164862: "event",
        Q2175726: "event",
        Q2175869: "event",
        Q2177010: "event",
        Q2177019: "event",
        Q2177020: "event",
        Q2177040: "event",
        Q2205028: "event",
        Q2205295: "event",
        Q2216954: "event",
        Q2216952: "event",
        Q2223631: "event",
        Q2228875: "event",
        Q2249247: "event",
        Q2249252: "event",
        Q2249297: "event",
        Q2254761: "event",
        Q2254764: "event",
        Q2255260: "event",
        Q2255911: "event",
        Q2261202: "event",
        Q2271055: "event",
        Q2272115: "event",
        Q2272152: "event",
        Q2272156: "event",
        Q2272190: "event",
        Q2289123: "event",
        Q2289151: "event",
        Q2294542: "event",
        Q2294540: "event",
        Q2294583: "event",
        Q2295176: "event",
        Q2304242: "event",
        Q2304603: "event",
        Q2305039: "event",
        Q2315195: "event",
        Q2315299: "event",
        Q2353605: "event",
        Q2368560: "event",
        Q2368579: "event",
        Q2368577: "event",
        Q2368637: "event",
        Q2369781: "event",
        Q2372330: "event",
        Q2372973: "event",
        Q2376386: "event",
        Q2380385: "event",
        Q2380393: "event",
        Q2380447: "event",
        Q2380836: "event",
        Q2381177: "event",
        Q2388298: "event",
        Q2388904: "event",
        Q2392422: "event",
        Q2395088: "event",
        Q2457528: "event",
        Q2457619: "event",
        Q2457622: "event",
        Q2460806: "event",
        Q2464679: "event",
        Q2465009: "event",
        Q2467831: "event",
        Q2468228: "event",
        Q2472969: "event",
        Q2473864: "event",
        Q2473895: "event",
        Q2473892: "event",
        Q2474373: "event",
        Q2493431: "event",
        Q2522263: "event",
        Q2522738: "event",
        Q2540626: "event",
        Q2542334: "event",
        Q2550479: "event",
        Q2557307: "event",
        Q2564240: "event",
        Q2564374: "event",
        Q2564408: "event",
        Q2567276: "event",
        Q2593517: "event",
        Q2593712: "event",
        Q2600838: "event",
        Q2601690: "event",
        Q2604275: "event",
        Q2647774: "event",
        Q2660810: "event",
        Q2668171: "event",
        Q2673366: "event",
        Q2677993: "event",
        Q2678375: "event",
        Q2692250: "event",
        Q2692249: "event",
        Q2699419: "event",
        Q2708412: "event",
        Q2740408: "event",
        Q2791348: "event",
        Q2796024: "event",
        Q2920838: "event",
        Q2947213: "event",
        Q2947219: "event",
        Q2947670: "event",
        Q2947678: "event",
        Q5390385: "event",
        Q5481629: "event",
        Q6053670: "event",
        Q6952899: "event",
        Q10876320: "event",
        Q10888408: "event",
        Q11327932: "event",
        Q11389709: "event",
        Q11389738: "event",
        Q11390114: "event",
        Q11419798: "event",
        Q11421034: "event",
        Q12480205: "event",
        Q13425771: "event",
        Q13425769: "event",
        Q13425787: "event",
        Q13425794: "event",
        Q13425795: "event",
        Q13425807: "event",
        Q13425811: "event",
        Q13425813: "event",
        Q13425822: "event",
        Q13425820: "event",
        Q13425831: "event",
        Q13425838: "event",
        Q13425836: "event",
        Q13425842: "event",
        Q13425841: "event",
        Q13425845: "event",
        Q13425848: "event",
        Q13433401: "event",
        Q13440326: "event",
        Q13440635: "event",
        Q13476049: "event",
        Q13476139: "event",
        Q13481914: "event",
        Q13482000: "event",
        Q13482869: "event",
        Q13483119: "event",
        Q13486474: "event",
        Q13487266: "event",
        Q13487270: "event",
        Q13487282: "event",
        Q13504533: "event",
        Q13504537: "event",
        Q13505709: "event",
        Q13506458: "event",
        Q13506679: "event",
        Q13506957: "event",
        Q13506970: "event",
        Q13506974: "event",
        Q13507103: "event",
        Q13507290: "event",
        Q13507309: "event",
        Q13507314: "event",
        Q13507321: "event",
        Q13507326: "event",
        Q13507331: "event",
        Q13507387: "event",
        Q13507423: "event",
        Q13507585: "event",
        Q13518398: "event",
        Q13534150: "event",
        Q14191429: "event",
        Q14624995: "event",
        Q14627250: "event",
        Q14634758: "event",
        Q14646306: "event",
        Q14646316: "event",
        Q14646875: "event",
        Q14671734: "event",
        Q14702601: "event",
        Q14702604: "event",
        Q14719011: "event",
        Q14719014: "event",
        Q14847061: "event",
        Q14848223: "event",
        Q14848224: "event",
        Q14848225: "event",
        Q14920651: "event",
        Q14920652: "event",
        Q14924292: "event",
        Q14943523: "event",
        Q14943530: "event",
        Q15010886: "event",
        Q15012133: "event",
        Q15059709: "event",
        Q15059793: "event",
        Q15059798: "event",
        Q15059873: "event",
        Q15103181: "event",
        Q15244982: "event",
        Q15293777: "event",
        Q15293871: "event",
        Q15345977: "event",
        Q15346053: "event",
        Q15629323: "event",
        Q15730410: "event",
        Q15730408: "event",
        Q15784703: "event",
        Q15941614: "event",
        Q15941619: "event",
        Q15941628: "event",
        Q16325346: "event",
        Q16325350: "event",
        Q16548549: "event",
        Q16686153: "event",
        Q16725896: "event",
        Q16817374: "event",
        Q16872946: "event",
        Q17152453: "event",
        Q17166701: "event",
        Q17565737: "event",
        Q18171099: "event",
        Q18204130: "event",
        Q18342520: "event",
        Q18421661: "event",
        Q18524061: "event",
        Q18572173: "event",
        Q18638297: "event",
        Q18643370: "event",
        Q18643369: "event",
        Q18664082: "event",
        Q18668362: "event",
        Q18670367: "event",
        Q18713229: "event",
        Q18729894: "event",
        Q18759773: "event",
        Q18814377: "event",
        Q19118320: "event",
        Q19355314: "event",
        Q19467946: "event",
        Q20807089: "event",
        Q20807092: "event",
        Q20884549: "event",
        Q20884819: "event",
        Q22119585: "event",
        Q22120056: "event",
        Q22670106: "event",
        Q23687386: "event",
        Q23815643: "event",
        Q25468850: "event",
        Q26132559: "event",
        Q26206573: "event",
        Q26265941: "event",
        Q26265947: "event",
        Q26268654: "event",
        Q27118920: "event",
        Q27267358: "event",
        Q28090496: "event",
        Q28608792: "event",
        Q28920021: "event",
        Q29292973: "event",
        Q30093390: "event",
        Q30113252: "event",
        Q30143268: "event",
        Q33060692: "event",
        Q33076666: "event",
        Q33090228: "event",
        Q39995075: "event",
        Q39995177: "event",
        Q40287245: "event",
        Q40353592: "event",
        Q40353856: "event",
        Q40504484: "event",
        Q40733460: "event",
        Q41598960: "event",
        Q41633887: "event",
        Q41942238: "event",
        Q41946161: "event",
        Q41948885: "event",
        Q41952404: "event",
        Q42329067: "event",
        Q42614437: "event",
        Q42940471: "event",
        Q43289454: "event",
        Q44726365: "event",
        Q44845418: "event",
        Q45319806: "event",
        Q46219689: "event",
        Q46649143: "event",
        Q47045263: "event",
        Q47164937: "event",
        Q47407008: "event",
        Q47509275: "event",
        Q47509290: "event",
        Q47509294: "event",
        Q47509309: "event",
        Q49274380: "event",
        Q50074222: "event",
        Q50074494: "event",
        Q50298306: "event",
        Q50301923: "event",
        Q50301952: "event",
        Q50363106: "event",
        Q50363445: "event",
        Q50363453: "event",
        Q50363524: "event",
        Q50376394: "event",
        Q50381011: "event",
        Q50382567: "event",
        Q50382592: "event",
        Q50383283: "event",
        Q52734874: "event",
        Q52734927: "event",
        Q52735607: "event",
        Q53572574: "event",
        Q53572582: "event",
        Q53572691: "event",
        Q54196650: "event",
        Q55073977: "event",
        Q55691286: "event",
        Q55777361: "event",
        Q55971753: "event",
        Q56377965: "event",
        Q56422682: "event",
        Q56426226: "event",
        Q56492528: "event",
        Q56524515: "event",
        Q56545112: "event",
        Q56564298: "event",
        Q56564297: "event",
        Q56598959: "event",
        Q56598956: "event",
        Q56598970: "event",
        Q56605209: "event",
        Q56653854: "event",
        Q56809299: "event",
        Q56928388: "event",
        Q57003917: "event",
        Q57228612: "event",
        Q57450124: "event",
        Q57947373: "event",
        Q59181239: "event",
        Q59181274: "event",
        Q59555985: "event",
        Q62079816: "event",
        Q62081308: "event",
        Q62081740: "event",
        Q62985932: "event",
        Q63343131: "event",
        Q63845306: "event",
        Q63845307: "event",
        Q63845310: "event",
        Q63845311: "event",
        Q63845308: "event",
        Q63845309: "event",
        Q63845312: "event",
        Q63845313: "event",
        Q63845398: "event",
        Q63845399: "event",
        Q63845396: "event",
        Q63845397: "event",
        Q63845402: "event",
        Q63845403: "event",
        Q63845401: "event",
        Q63845405: "event",
        Q63845486: "event",
        Q63845487: "event",
        Q63845491: "event",
        Q63845488: "event",
        Q63845489: "event",
        Q63845494: "event",
        Q63845493: "event",
        Q63845496: "event",
        Q63845717: "event",
        Q63845721: "event",
        Q63845727: "event",
        Q63845724: "event",
        Q63845730: "event",
        Q63845733: "event",
        Q63845737: "event",
        Q63845743: "event",
        Q63845740: "event",
        Q63845942: "event",
        Q63845943: "event",
        Q63845941: "event",
        Q63845946: "event",
        Q63845947: "event",
        Q63845944: "event",
        Q63845945: "event",
        Q63845948: "event",
        Q63846030: "event",
        Q63846031: "event",
        Q63846029: "event",
        Q63846032: "event",
        Q63846033: "event",
        Q63846037: "event",
        Q63846040: "event",
        Q63846041: "event",
        Q63846135: "event",
        Q63846138: "event",
        Q63846136: "event",
        Q63846137: "event",
        Q63846191: "event",
        Q63846192: "event",
        Q63846193: "event",
        Q63854265: "event",
        Q63854272: "event",
        Q63925462: "event",
        Q64618050: "event",
        Q64875437: "event",
        Q64944636: "event",
        Q65048613: "event",
        Q65548946: "event",
        Q65548947: "event",
        Q65548945: "event",
        Q65552678: "event",
        Q65552679: "event",
        Q65552680: "event",
        Q65706137: "event",
        Q65725727: "event",
        Q65725724: "event",
        Q65725725: "event",
        Q65725729: "event",
        Q65735644: "event",
        Q65736363: "event",
        Q65736937: "event",
        Q65739095: "event",
        Q65739103: "event",
        Q65807190: "event",
        Q65807191: "event",
        Q65807194: "event",
        Q65807192: "event",
        Q65807193: "event",
        Q65807391: "event",
        Q65807394: "event",
        Q65807395: "event",
        Q65807392: "event",
        Q65807393: "event",
        Q65807398: "event",
        Q65807399: "event",
        Q65807396: "event",
        Q65807397: "event",
        Q65807400: "event",
        Q65807494: "event",
        Q65926798: "event",
        Q66023989: "event",
        Q66062438: "event",
        Q66127952: "event",
        Q66127959: "event",
        Q66127956: "event",
        Q66127957: "event",
        Q66127962: "event",
        Q66127963: "event",
        Q66127960: "event",
        Q66127961: "event",
        Q66127966: "event",
        Q66127967: "event",
        Q66127964: "event",
        Q66127965: "event",
        Q66207654: "event",
        Q67147038: "event",
        Q67147039: "event",
        Q67147043: "event",
        Q67147044: "event",
        Q67147067: "event",
        Q67147068: "event",
        Q67166219: "event",
        Q67166221: "event",
        Q67206715: "event",
        Q67491838: "event",
        Q109476821: "event",
        Q109859460: "event",
        Q109860089: "event",
        Q109860254: "event",
        Q110111868: "event",
        Q110385105: "event",
        Q110660804: "event",
        Q110818785: "event",
        Q110869635: "event",
        Q110939227: "event",
        Q111036119: "event",
        Q111036131: "event",
        Q111036132: "event",
        Q111036142: "event",
        Q111036146: "event",
        Q111036150: "event",
        Q111036151: "event",
        Q111036157: "event",
        Q111036162: "event",
        Q111036181: "event",
        Q111036189: "event",
        Q111036202: "event",
        Q111036219: "event",
        Q111036225: "event",
        Q111036229: "event",
        Q111036233: "event",
        Q111036237: "event",
        Q111036241: "event",
        Q111036245: "event",
        Q111036248: "event",
        Q111038586: "event",
        Q111038588: "event",
        Q111038594: "event",
        Q111038595: "event",
        Q111038596: "event",
        Q111038608: "event",
        Q111191574: "event",
        Q111191575: "event",
        Q67567806: "event",
        Q67567807: "event",
        Q67567805: "event",
        Q67567810: "event",
        Q67567809: "event",
        Q67567813: "event",
        Q67567816: "event",
        Q67567821: "event",
        Q67567826: "event",
        Q67567841: "event",
        Q67567845: "event",
        Q67567850: "event",
        Q68066457: "event",
        Q68066462: "event",
        Q68066468: "event",
        Q68066474: "event",
        Q68066493: "event",
        Q68066499: "event",
        Q69992823: "event",
        Q69993044: "event",
        Q71029213: "event",
        Q71363771: "event",
        Q71608701: "event",
        Q71609251: "event",
        Q71782233: "event",
        Q71788368: "event",
        Q72365643: "event",
        Q73989685: "event",
        Q75145522: "event",
        Q76386450: "event",
        Q76386460: "event",
        Q79132633: "event",
        Q79132790: "event",
        Q79132806: "event",
        Q79132828: "event",
        Q79313070: "event",
        Q79313616: "event",
        Q79967121: "event",
        Q79967943: "event",
        Q79978422: "event",
        Q80681226: "event",
        Q84068115: "event",
        Q86914384: "event",
        Q87086840: "event",
        Q94474207: "event",
        Q96880618: "event",
        Q100893968: "event",
        Q100977379: "event",
        Q101110957: "event",
        Q106653057: "event",
        Q106785811: "event",
        Q106785815: "event",
        Q106785813: "event",
        Q106785818: "event",
        Q106785819: "event",
        Q106854629: "event",
        Q107404408: "event",
        Q107410127: "event",
        Q107840466: "event",
        Q107843764: "event",
        Q108166416: "event",
        Q108324504: "event",
        Q108581862: "event",
        Q111191576: "event",
        Q111192678: "event",
        Q111192679: "event",
        Q111192681: "event",
        Q111192687: "event",
        Q111192684: "event",
        Q111201102: "event",
        Q111201276: "event",
        Q111217780: "event",
        Q111217789: "event",
        Q111217799: "event",
        Q111217796: "event",
        Q111217803: "event",
        Q111217805: "event",
        Q111217808: "event",
        Q111238705: "event",
        Q111238710: "event",
        Q111238714: "event",
        Q111238718: "event",
        Q111238716: "event",
        Q111238721: "event",
        Q111252395: "event",
        Q111252404: "event",
        Q111252405: "event",
        Q111252411: "event",
        Q111252414: "event",
        Q111252412: "event",
        Q111252419: "event",
        Q111252416: "event",
        Q111252417: "event",
        Q111267576: "event",
        Q111267581: "event",
        Q111267590: "event",
        Q111267588: "event",
        Q111279662: "event",
        Q111279667: "event",
        Q111279664: "event",
        Q111279669: "event",
        Q111281006: "event",
        Q111281004: "event",
        Q111281005: "event",
        Q111281011: "event",
        Q111281013: "event",
        Q111281018: "event",
        Q111285985: "event",
        Q111285993: "event",
        Q111286002: "event",
        Q111286003: "event",
        Q111286001: "event",
        Q111286006: "event",
        Q111286028: "event",
        Q111286029: "event",
        Q111291114: "event",
        Q111291115: "event",
        Q111291113: "event",
        Q111291118: "event",
        Q111291119: "event",
        Q111291116: "event",
        Q111291120: "event",
        Q111301343: "event",
        Q111301371: "event",
        Q111301373: "event",
        Q111305041: "event",
        Q111305062: "event",
        Q111305060: "event",
        Q111305065: "event",
        Q111305069: "event",
        Q111305240: "event",
        Q111305295: "event",
        Q111306282: "event",
        Q111306305: "event",
        Q111306310: "event",
        Q111306335: "event",
        Q111306351: "event",
        Q111310186: "event",
        Q111310191: "event",
        Q111310188: "event",
        Q111310192: "event",
        Q111310193: "event",
        Q111310217: "event",
        Q111364404: "event",
        Q111369405: "event",
        Q111837771: "event",
        Q66086: "event",
        Q132612: "event",
        Q1582987: "event",
        Q632343: "standard",
        Q2044498: "standard",
        Q10551470: "event",
        Q10869199: "event",
        Q16149104: "event",
        Q17990877: "event",
        Q55862681: "dataset",
        Q12561: "event",
        Q26706: "event",
        Q35856: "event",
        Q88173204: "event",
        Q98183947: "event",
        Q108581959: "event",
        Q111745047: "book",
        Q1003021: "dataset",
        Q526877: "broadcast",
        Q3511312: "broadcast",
        Q25670: "standard",
        Q7531819: "dataset",
        Q11971341: "dataset",
        Q12029619: "dataset",
        Q10685952: "broadcast",
        Q14324227: "dataset",
        Q16501309: "dataset",
        Q707372: "book",
        Q857836: "book",
        Q277222: "event",
        Q277768: "event",
        Q1003292: "book",
        Q506294: "event",
        Q586821: "event",
        Q626066: "event",
        Q742793: "event",
        Q847462: "event",
        Q851302: "event",
        Q207819: "standard",
        Q721667: "standard",
        Q795966: "standard",
        Q3297186: "book",
        Q852641: "standard",
        Q2992900: "event",
        Q1322065: "standard",
        Q2164287: "standard",
        Q3182386: "standard",
        Q3273017: "standard",
        Q15967335: "software",
        Q7093850: "book",
        Q5974436: "standard",
        Q8018402: "event",
        Q10869080: "event",
        Q10875631: "event",
        Q10926241: "event",
        Q12899593: "book",
        Q11224332: "standard",
        Q16688308: "event",
        Q17163851: "event",
        Q28168011: "software",
        Q21190961: "book",
        Q21191134: "book",
        Q20665106: "standard",
        Q20665104: "standard",
        Q20665174: "standard",
        Q24833906: "event",
        Q24887203: "event",
        Q25381816: "event",
        Q29178266: "standard",
        Q33113349: "event",
        Q37822576: "standard",
        Q50599084: "event",
        Q52681713: "event",
        Q52771586: "event",
        Q51686074: "standard",
        Q65230396: "event",
        Q90878157: "dataset",
        Q90878165: "dataset",
        Q74262765: "book",
        Q96106098: "dataset",
        Q104587594: "dataset",
        Q105921971: "dataset",
        Q106133829: "dataset",
        Q106257158: "dataset",
        Q98073985: "webpage",
        Q105834419: "software",
        Q103839756: "event",
        Q83378654: "webpage",
        Q10400522: "periodical",
        Q10400521: "periodical",
        Q10400525: "periodical",
        Q210337: "software",
        Q653475: "software",
        Q751850: "software",
        Q1050567: "software",
        Q1639024: "software",
        Q2467310: "software",
        Q2506554: "software",
        Q3653635: "software",
        Q4497736: "software",
        Q5738835: "software",
        Q7485604: "software",
        Q739672: "book",
        Q129372: "event",
        Q163243: "event",
        Q852395: "event",
        Q1519335: "book",
        Q1070156: "event",
        Q1105365: "event",
        Q1275557: "event",
        Q10852089: "software",
        Q1306889: "event",
        Q1473981: "event",
        Q11387554: "software",
        Q81414: "standard",
        Q126998: "standard",
        Q184230: "standard",
        Q203087: "standard",
        Q2176422: "event",
        Q2672785: "event",
        Q909736: "standard",
        Q957589: "standard",
        Q2913791: "event",
        Q1128629: "standard",
        Q1131705: "standard",
        Q1254335: "standard",
        Q1422324: "standard",
        Q1648707: "standard",
        Q1654055: "standard",
        Q3595351: "event",
        Q2044242: "standard",
        Q3978087: "event",
        Q2622793: "standard",
        Q5103581: "event",
        Q5121078: "event",
        Q3359815: "standard",
        Q3408089: "standard",
        Q5439557: "event",
        Q4112081: "standard",
        Q15548075: "software",
        Q15562063: "software",
        Q15614005: "software",
        Q5012982: "standard",
        Q5013874: "standard",
        Q7191343: "event",
        Q7193242: "event",
        Q7193247: "event",
        Q7309795: "event",
        Q7440363: "event",
        Q17138243: "software",
        Q7603676: "event",
        Q7676111: "event",
        Q24966456: "software",
        Q15900647: "event",
        Q28050159: "software",
        Q21886655: "event",
        Q25112226: "event",
        Q25685889: "event",
        Q24091098: "standard",
        Q28100410: "event",
        Q30589009: "event",
        Q11382506: "webpage",
        Q15475226: "webpage",
        Q15475319: "webpage",
        Q15633587: "webpage",
        Q47459256: "event",
        Q64769132: "software",
        Q66088840: "software",
        Q58743167: "event",
        Q31209114: "webpage",
        Q62505: "software",
        Q65048633: "event",
        Q65498626: "standard",
        Q65498858: "standard",
        Q65498884: "standard",
        Q65498996: "standard",
        Q10283: "event",
        Q42416093: "webpage",
        Q8777: "standard",
        Q8795: "standard",
        Q81881796: "event",
        Q58494026: "webpage",
        Q96473852: "standard",
        Q106169352: "event",
        Q104985816: "standard",
        Q109623729: "event",
        Q110729709: "event",
        Q111519484: "standard",
        Q8027877: "legal_case",
        Q2594143: "dataset",
        Q3918025: "song",
        Q4130112: "song",
        Q4329943: "song",
        Q4367044: "song",
        Q182495: "software",
        Q569915: "software",
        Q994121: "software",
        Q12090126: "song",
        Q12090507: "song",
        Q12104691: "song",
        Q12113375: "song",
        Q12115862: "song",
        Q12140332: "song",
        Q12149338: "song",
        Q12154183: "song",
        Q12168212: "song",
        Q2207210: "software",
        Q25324216: "periodical",
        Q16635474: "song",
        Q194796: "event",
        Q245512: "event",
        Q960511: "event",
        Q964741: "event",
        Q1072326: "event",
        Q30044873: "report",
        Q1477846: "event",
        Q1892297: "event",
        Q1931444: "event",
        Q2142757: "event",
        Q2346191: "event",
        Q2627841: "event",
        Q2629138: "event",
        Q2819305: "event",
        Q3023688: "event",
        Q3092943: "event",
        Q3107744: "event",
        Q3114398: "event",
        Q1384925: "standard",
        Q3524717: "event",
        Q7904542: "event",
        Q28704212: "song",
        Q29573701: "dataset",
        Q10895016: "legislation",
        Q26205359: "webpage",
        Q16637328: "event",
        Q16821191: "event",
        Q17315159: "event",
        Q18469476: "event",
        Q18521515: "event",
        Q20819742: "event",
        Q22907900: "standard",
        Q27832699: "event",
        Q27832702: "event",
        Q27832706: "event",
        Q27832704: "event",
        Q27832710: "event",
        Q27832715: "event",
        Q27832712: "event",
        Q27832718: "event",
        Q27832724: "event",
        Q27832728: "event",
        Q27832734: "event",
        Q27832732: "event",
        Q27832739: "event",
        Q27832737: "event",
        Q52087504: "song",
        Q17218112: "performance",
        Q56358499: "song",
        Q39081581: "event",
        Q57312861: "webpage",
        Q48855846: "event",
        Q48862300: "event",
        Q48872399: "event",
        Q51279780: "event",
        Q63968276: "event",
        Q63968290: "event",
        Q63968288: "event",
        Q63968955: "event",
        Q63969026: "event",
        Q63969031: "event",
        Q63969028: "event",
        Q63969035: "event",
        Q104867611: "legal_case",
        Q97574586: "dataset",
        Q105552696: "dataset",
        Q85341842: "event",
        Q86009876: "event",
        Q111600206: "song",
        Q99521375: "event",
        Q109615627: "webpage",
        Q106592283: "standard",
        Q106592291: "standard",
        Q106592289: "standard",
        Q289543: "event",
        Q303372: "event",
        Q375423: "event",
        Q500860: "event",
        Q502948: "event",
        Q603536: "event",
        Q642482: "event",
        Q773327: "event",
        Q781434: "event",
        Q892194: "event",
        Q919925: "event",
        Q958723: "event",
        Q973759: "event",
        Q979392: "event",
        Q1032219: "event",
        Q1096045: "event",
        Q1170415: "event",
        Q1204189: "event",
        Q1261456: "event",
        Q1285570: "event",
        Q1318363: "event",
        Q1330699: "event",
        Q1360577: "event",
        Q1376860: "event",
        Q1475171: "event",
        Q1529643: "event",
        Q1544612: "event",
        Q1548381: "event",
        Q1563816: "event",
        Q1579285: "event",
        Q1666410: "event",
        Q1672884: "event",
        Q1672910: "event",
        Q1789500: "event",
        Q2031197: "event",
        Q2037951: "event",
        Q2731488: "event",
        Q3306648: "event",
        Q3335008: "event",
        Q4035886: "event",
        Q4036033: "event",
        Q4036509: "event",
        Q4040830: "event",
        Q4042133: "event",
        Q4044273: "event",
        Q4045306: "event",
        Q4047234: "event",
        Q4047235: "event",
        Q4048102: "event",
        Q4048105: "event",
        Q4993329: "event",
        Q4993677: "event",
        Q10525929: "event",
        Q14405816: "event",
        Q15047133: "event",
        Q15176819: "event",
        Q15790888: "event",
        Q15848022: "event",
        Q16828501: "event",
        Q17507505: "event",
        Q17984898: "event",
        Q18432335: "event",
        Q19577175: "event",
        Q20747688: "event",
        Q21089539: "event",
        Q21999753: "event",
        Q22079925: "event",
        Q22336953: "event",
        Q23022267: "event",
        Q23072367: "event",
        Q24553364: "event",
        Q25172016: "event",
        Q25380042: "event",
        Q27212388: "event",
        Q27630808: "event",
        Q27676063: "event",
        Q28936398: "event",
        Q30334461: "event",
        Q30600938: "event",
        Q33311724: "event",
        Q42062109: "event",
        Q47831465: "event",
        Q48813387: "event",
        Q50358729: "event",
        Q50378024: "event",
        Q50385398: "event",
        Q55636069: "event",
        Q56383693: "event",
        Q56753361: "event",
        Q56753469: "event",
        Q57308278: "event",
        Q57470579: "event",
        Q57470646: "event",
        Q60041851: "event",
        Q60428654: "event",
        Q60617178: "event",
        Q60690987: "event",
        Q61412708: "event",
        Q62086468: "event",
        Q68919477: "event",
        Q849666: "motion_picture",
        Q110086297: "book",
        Q110425279: "book",
        Q110643319: "book",
        Q110718502: "event",
        Q111028916: "event",
        Q18089617: "motion_picture",
        Q5974118: "webpage",
        Q184740: "book",
        Q301671: "book",
        Q1221280: "book",
        Q615072: "event",
        Q623109: "event",
        Q637848: "event",
        Q1536279: "book",
        Q1539532: "book",
        Q938458: "event",
        Q1167252: "event",
        Q1344269: "event",
        Q1376770: "event",
        Q1563081: "event",
        Q1628661: "event",
        Q2383890: "book",
        Q11888968: "webpage",
        Q2558958: "book",
        Q2290593: "event",
        Q3109302: "book",
        Q3257804: "book",
        Q2806793: "event",
        Q2814440: "event",
        Q2817758: "event",
        Q4504462: "book",
        Q3892502: "event",
        Q3892574: "event",
        Q4364848: "event",
        Q4778419: "event",
        Q5793767: "book",
        Q5834682: "book",
        Q15883028: "webpage",
        Q7081172: "book",
        Q7102502: "book",
        Q7157512: "event",
        Q7295180: "event",
        Q11512680: "book",
        Q21286738: "webpage",
        Q15259995: "event",
        Q16954248: "book",
        Q16675435: "event",
        Q16764895: "event",
        Q18396864: "book",
        Q18033451: "event",
        Q18560568: "event",
        Q80353: "performance",
        Q278329: "performance",
        Q597009: "performance",
        Q17560541: "standard",
        Q865096: "performance",
        Q868250: "performance",
        Q1044551: "performance",
        Q1348595: "performance",
        Q20737410: "book",
        Q21007842: "book",
        Q21008249: "book",
        Q22669562: "book",
        Q3564871: "performance",
        Q4737503: "performance",
        Q23869445: "event",
        Q25999229: "event",
        Q26183114: "event",
        Q7843547: "performance",
        Q27954955: "event",
        Q9655765: "performance",
        Q28954851: "event",
        Q44198061: "event",
        Q56298568: "webpage",
        Q65137675: "book",
        Q66363341: "book",
        Q70106932: "event",
        Q74445032: "event",
        Q76826681: "event",
        Q36103: "performance",
        Q104829457: "event",
        Q105492335: "event",
        Q105492332: "event",
        Q106782362: "book",
        Q106453208: "event",
        Q106457682: "event",
        Q106541812: "event",
        Q106542375: "event",
        Q106600824: "event",
        Q106601420: "event",
        Q106612724: "event",
        Q106612926: "event",
        Q106613506: "event",
        Q107301475: "event",
        Q107407050: "event",
        Q107642314: "event",
        Q321745: "periodical",
        Q2188827: "manuscript",
        Q5647631: "manuscript",
        Q2138567: "dataset",
        Q2792831: "dataset",
        Q3456824: "dataset",
        Q4291954: "dataset",
        Q7309365: "dataset",
        Q9067655: "dataset",
        Q10649598: "dataset",
        Q10657704: "dataset",
        Q609331: "software",
        Q11452068: "dataset",
        Q864680: "software",
        Q2492841: "software",
        Q4677166: "software",
        Q16516429: "dataset",
        Q18694602: "dataset",
        Q28404878: "motion_picture",
        Q19381281: "dataset",
        Q206270: "book",
        Q1099524: "book",
        Q1159457: "book",
        Q543429: "event",
        Q1225344: "book",
        Q653604: "event",
        Q744040: "event",
        Q897119: "event",
        Q1057959: "event",
        Q1418168: "event",
        Q2142464: "event",
        Q576465: "standard",
        Q3424305: "book",
        Q3440922: "book",
        Q2819161: "event",
        Q2922711: "event",
        Q3310228: "event",
        Q3986798: "event",
        Q4906520: "event",
        Q5159882: "event",
        Q7208288: "book",
        Q7399161: "book",
        Q7122263: "event",
        Q7265401: "event",
        Q7432280: "event",
        Q7450654: "event",
        Q7503184: "event",
        Q7768411: "event",
        Q7987778: "event",
        Q19868416: "software",
        Q15726348: "book",
        Q16256406: "event",
        Q16969891: "event",
        Q16975506: "event",
        Q18166183: "event",
        Q20665028: "book",
        Q21683658: "book",
        Q22095332: "event",
        Q23662496: "event",
        Q27683265: "event",
        Q59157850: "dataset",
        Q39087320: "event",
        Q51937413: "book",
        Q51938153: "book",
        Q51954180: "book",
        Q55567596: "book",
        Q55569052: "book",
        Q55571976: "book",
        Q55007268: "event",
        Q61629906: "event",
        Q66623743: "book",
        Q29144: "event",
        Q32096: "event",
        Q56707: "event",
        Q71723427: "book",
        Q91500776: "dataset",
        Q107243694: "article-journal",
        Q102260507: "broadcast",
        Q104951794: "dataset",
        Q106892082: "dataset",
        Q111703312: "dataset",
        Q101067831: "event",
        Q104760099: "book",
        Q106027598: "book",
        Q106088788: "book",
        Q105445345: "event",
        Q106232233: "event",
        Q106616204: "event",
        Q106909852: "event",
        Q2290276: "broadcast",
        Q3252662: "broadcast",
        Q96286657: "webpage",
        Q5287435: "broadcast",
        Q7923105: "broadcast",
        Q1071233: "software",
        Q13359539: "broadcast",
        Q491053: "event",
        Q491505: "event",
        Q675180: "event",
        Q1905729: "event",
        Q2104048: "event",
        Q2203703: "event",
        Q21191265: "broadcast",
        Q2755354: "event",
        Q3264518: "event",
        Q3454043: "event",
        Q4160913: "event",
        Q4969278: "event",
        Q5071582: "event",
        Q5099539: "event",
        Q5270745: "event",
        Q5282202: "event",
        Q5299874: "event",
        Q5438764: "event",
        Q5928466: "event",
        Q5956294: "event",
        Q6137959: "event",
        Q6469427: "event",
        Q7243772: "event",
        Q7244376: "event",
        Q7244610: "event",
        Q7244625: "event",
        Q7244800: "event",
        Q7267967: "event",
        Q7270477: "event",
        Q7311750: "event",
        Q7332332: "event",
        Q7516042: "event",
        Q7615667: "event",
        Q7936339: "event",
        Q8039744: "event",
        Q10869075: "event",
        Q10873376: "event",
        Q10874846: "event",
        Q11065422: "event",
        Q29555881: "broadcast",
        Q11251820: "event",
        Q11261368: "event",
        Q11578736: "event",
        Q12323689: "event",
        Q14360312: "event",
        Q17051146: "event",
        Q17189483: "event",
        Q18121235: "event",
        Q22100745: "event",
        Q24839291: "event",
        Q30942770: "event",
        Q50062923: "broadcast",
        Q50914552: "broadcast",
        Q61220733: "broadcast",
        Q16869909: "webpage",
        Q16905922: "webpage",
        Q19648608: "webpage",
        Q21278897: "webpage",
        Q50584731: "event",
        Q29197: "broadcast",
        Q50820765: "event",
        Q72607030: "broadcast",
        Q55732365: "event",
        Q79766755: "broadcast",
        Q79768983: "broadcast",
        Q79769107: "broadcast",
        Q79769844: "broadcast",
        Q79770458: "broadcast",
        Q79770638: "broadcast",
        Q79848748: "broadcast",
        Q79848760: "broadcast",
        Q99079902: "broadcast",
        Q99296898: "broadcast",
        Q102364578: "broadcast",
        Q104438898: "broadcast",
        Q86737046: "event",
        Q86743033: "event",
        Q106082402: "broadcast",
        Q110288240: "broadcast",
        Q110372546: "broadcast",
        Q111660893: "broadcast",
        Q111805666: "broadcast",
        Q111829292: "broadcast",
        Q111851297: "broadcast",
        Q98806339: "event",
        Q98806373: "event",
        Q98806417: "event",
        Q98806455: "event",
        Q98806479: "event",
        Q98806494: "event",
        Q98806492: "event",
        Q244955: "song",
        Q265147: "song",
        Q582093: "song",
        Q604748: "song",
        Q849305: "song",
        Q867914: "song",
        Q965834: "song",
        Q1027114: "song",
        Q1490620: "dataset",
        Q1120530: "song",
        Q1320248: "song",
        Q2554974: "dataset",
        Q2707688: "song",
        Q2747852: "song",
        Q3307269: "dataset",
        Q2956242: "song",
        Q2956240: "song",
        Q2956246: "song",
        Q2997110: "song",
        Q3423635: "dataset",
        Q4067146: "song",
        Q4371786: "song",
        Q4444254: "song",
        Q5058545: "song",
        Q5725591: "song",
        Q5771033: "song",
        Q6084315: "song",
        Q6089610: "song",
        Q6105825: "song",
        Q6132291: "song",
        Q6160688: "song",
        Q97498045: "webpage",
        Q7663254: "song",
        Q7935998: "song",
        Q99264677: "webpage",
        Q13164291: "song",
        Q18324847: "song",
        Q339991: "book",
        Q798985: "event",
        Q953136: "event",
        Q1338800: "event",
        Q1367591: "event",
        Q21653515: "song",
        Q21654728: "song",
        Q2300997: "event",
        Q2308238: "event",
        Q2954322: "event",
        Q25386691: "song",
        Q25400286: "song",
        Q28163991: "song",
        Q11314585: "book",
        Q11999894: "book",
        Q14856232: "event",
        Q18748056: "book",
        Q19509393: "book",
        Q39046042: "song",
        Q23641696: "book",
        Q23011722: "event",
        Q23058950: "event",
        Q23058951: "event",
        Q23058954: "event",
        Q23058955: "event",
        Q23058952: "event",
        Q23058959: "event",
        Q24282796: "book",
        Q23719064: "event",
        Q23755128: "event",
        Q24457192: "book",
        Q24457232: "book",
        Q24050099: "event",
        Q25381170: "book",
        Q26204053: "book",
        Q56558213: "song",
        Q60792489: "song",
        Q47015434: "book",
        Q60566516: "book",
        Q64058005: "event",
        Q300: "book",
        Q74123387: "event",
        Q100321326: "song",
        Q108297178: "song",
        Q108297215: "song",
        Q109018310: "song",
        Q98758865: "event",
        Q100235041: "standard",
        Q100235128: "standard",
        Q104637634: "event",
        Q618254: "event",
        Q649930: "event",
        Q1059994: "event",
        Q1501660: "event",
        Q1661524: "event",
        Q2108803: "event",
        Q2301224: "event",
        Q3209535: "event",
        Q3389165: "event",
        Q4366088: "event",
        Q4735619: "event",
        Q4743621: "event",
        Q5029004: "event",
        Q5290181: "event",
        Q5448077: "event",
        Q5899429: "event",
        Q6313295: "event",
        Q6448126: "event",
        Q7542322: "event",
        Q7700500: "event",
        Q7856853: "event",
        Q10509145: "event",
        Q10715702: "event",
        Q11685509: "event",
        Q11968694: "event",
        Q17115912: "event",
        Q17624166: "event",
        Q18400581: "event",
        Q18890098: "event",
        Q18890124: "event",
        Q19118609: "event",
        Q19605587: "event",
        Q21511345: "event",
        Q22833318: "event",
        Q26897352: "event",
        Q47358534: "event",
        Q47465437: "event",
        Q49870668: "event",
        Q51624051: "event",
        Q56231131: "event",
        Q63874701: "event",
        Q84470557: "dataset",
        Q64641382: "event",
        Q64641394: "event",
        Q64657694: "event",
        Q64667852: "event",
        Q64681730: "event",
        Q64691832: "event",
        Q64706513: "event",
        Q64715490: "event",
        Q64741346: "event",
        Q64775779: "event",
        Q64784663: "event",
        Q64784716: "event",
        Q64786445: "event",
        Q64786527: "event",
        Q64788184: "event",
        Q64819746: "event",
        Q64825625: "event",
        Q64831519: "event",
        Q64831521: "event",
        Q64831583: "event",
        Q64847663: "event",
        Q64848420: "event",
        Q64848430: "event",
        Q64850498: "event",
        Q64850496: "event",
        Q64864971: "event",
        Q64912702: "event",
        Q64917162: "event",
        Q64944559: "event",
        Q64952244: "event",
        Q64994967: "event",
        Q64995931: "event",
        Q65013127: "event",
        Q65032927: "event",
        Q65044046: "event",
        Q65044048: "event",
        Q65048341: "event",
        Q65063969: "event",
        Q65065277: "event",
        Q65078705: "event",
        Q65088436: "event",
        Q65104958: "event",
        Q79539844: "event",
        Q104217129: "book",
        Q108611979: "event",
        Q108761755: "event",
        Q108858827: "event",
        Q108934264: "event",
        Q109302750: "event",
        Q109606336: "event",
        Q109619439: "event",
        Q110226279: "event",
        Q110226282: "event",
        Q111072137: "event",
        Q111274809: "event",
        Q111552269: "event",
        Q111552433: "event",
        Q111621266: "event",
        Q111628470: "event",
        Q109971736: "standard",
        Q109971762: "standard",
        Q111995276: "event",
        Q111496643: "standard",
        Q7434450: "software",
        Q429049: "event",
        Q458206: "event",
        Q1069698: "event",
        Q3070337: "event",
        Q3298291: "event",
        Q4732183: "event",
        Q5264306: "event",
        Q5573020: "event",
        Q6034714: "event",
        Q6212347: "event",
        Q7844979: "event",
        Q9031850: "event",
        Q10354901: "event",
        Q11410674: "event",
        Q11506025: "event",
        Q18907876: "event",
        Q20108719: "event",
        Q20429197: "event",
        Q28207296: "standard",
        Q41582469: "event",
        Q48879222: "event",
        Q48879225: "event",
        Q48879275: "event",
        Q48879277: "event",
        Q48879303: "event",
        Q48879306: "event",
        Q48879307: "event",
        Q48879327: "event",
        Q48879329: "event",
        Q52387412: "event",
        Q52387417: "event",
        Q55545766: "event",
        Q55631298: "event",
        Q59009655: "event",
        Q61350640: "event",
        Q61409194: "event",
        Q61409316: "event",
        Q61862142: "event",
        Q65148846: "event",
        Q65159055: "event",
        Q65159057: "event",
        Q65480326: "event",
        Q65507994: "event",
        Q65548297: "event",
        Q65553461: "event",
        Q65556452: "event",
        Q65598523: "event",
        Q65619883: "event",
        Q65620048: "event",
        Q65648686: "event",
        Q66311725: "event",
        Q66311885: "event",
        Q66313508: "event",
        Q67447052: "event",
        Q67447095: "event",
        Q76941636: "event",
        Q97361908: "broadcast",
        Q83507038: "event",
        Q97178504: "event",
        Q97276907: "event",
        Q98971225: "event",
        Q104525773: "event",
        Q104538110: "event",
        Q106043413: "event",
        Q106562461: "event",
        Q106644070: "event",
        Q106834892: "event",
        Q106978496: "event",
        Q107009735: "event",
        Q107118086: "event",
        Q107540719: "event",
        Q108141120: "event",
        Q108167569: "event",
        Q108337727: "event",
        Q110226297: "event",
        Q110226307: "event",
        Q110813292: "event",
        Q110814366: "event",
        Q110814403: "event",
        Q110815346: "event",
        Q110815347: "event",
        Q110815345: "event",
        Q110815348: "event",
        Q110857470: "event",
        Q110858542: "event",
        Q110858547: "event",
        Q110858544: "event",
        Q110858545: "event",
        Q110858549: "event",
        Q110858554: "event",
        Q110858552: "event",
        Q110858561: "event",
        Q110858566: "event",
        Q110858564: "event",
        Q110858571: "event",
        Q110858574: "event",
        Q110858572: "event",
        Q110858573: "event",
        Q110858576: "event",
        Q110858598: "event",
        Q110858613: "event",
        Q110997026: "event",
        Q110997027: "event",
        Q110997030: "event",
        Q110997031: "event",
        Q110997028: "event",
        Q110997029: "event",
        Q110997033: "event",
        Q110997080: "event",
        Q2584671: "motion_picture",
        Q3454252: "motion_picture",
        Q2357684: "dataset",
        Q17175676: "motion_picture",
        Q26196748: "motion_picture",
        Q7978623: "software",
        Q217192: "book",
        Q742460: "legislation",
        Q242068: "event",
        Q248554: "event",
        Q935780: "book",
        Q1494791: "book",
        Q1623122: "book",
        Q1678499: "event",
        Q1869055: "event",
        Q2966833: "book",
        Q777955: "standard",
        Q1480633: "standard",
        Q3540503: "event",
        Q88324033: "regulation",
        Q88324058: "regulation",
        Q89681240: "regulation",
        Q91104866: "regulation",
        Q11383281: "event",
        Q15138918: "event",
        Q16681240: "event",
        Q16681244: "event",
        Q37731261: "song",
        Q18411082: "event",
        Q20821966: "event",
        Q26819140: "event",
        Q29943361: "standard",
        Q29943364: "standard",
        Q35231018: "event",
        Q35231086: "event",
        Q41071806: "event",
        Q51052348: "event",
        Q223625: "regulation",
        Q562667: "treaty",
        Q2135443: "regulation",
        Q57980469: "event",
        Q6725585: "regulation",
        Q7251380: "regulation",
        Q67946764: "event",
        Q17037999: "regulation",
        Q93995803: "dataset",
        Q97449690: "song",
        Q99640601: "event",
        Q99654627: "event",
        Q99654739: "event",
        Q99654809: "event",
        Q99655046: "event",
        Q99655076: "event",
        Q99655647: "event",
        Q99655654: "event",
        Q99655660: "event",
        Q99655665: "event",
        Q99655670: "event",
        Q99655674: "event",
        Q99655684: "event",
        Q99735927: "event",
        Q107494071: "event",
        Q2973154: "motion_picture",
        Q5620056: "motion_picture",
        Q1966622: "song",
        Q212434: "event",
        Q426729: "event",
        Q589184: "event",
        Q622383: "event",
        Q666840: "event",
        Q1046221: "event",
        Q1046254: "event",
        Q1047162: "event",
        Q1133950: "event",
        Q1186515: "event",
        Q1193637: "event",
        Q1325137: "event",
        Q1363953: "event",
        Q1478081: "event",
        Q1478084: "event",
        Q1863006: "event",
        Q2057656: "event",
        Q2734141: "event",
        Q2869095: "event",
        Q2869225: "event",
        Q2887191: "event",
        Q2922871: "event",
        Q2922905: "event",
        Q3008386: "event",
        Q3057773: "event",
        Q3126700: "event",
        Q3440468: "event",
        Q3452924: "event",
        Q3641551: "event",
        Q3650366: "event",
        Q3892348: "event",
        Q3892442: "event",
        Q3952242: "event",
        Q3998588: "event",
        Q4366001: "event",
        Q4806651: "event",
        Q4815578: "event",
        Q4815583: "event",
        Q4867733: "event",
        Q4867739: "event",
        Q4867736: "event",
        Q4875783: "event",
        Q4931300: "event",
        Q4936994: "event",
        Q4951243: "event",
        Q5033154: "event",
        Q5153755: "event",
        Q5184997: "event",
        Q5192575: "event",
        Q5198622: "event",
        Q5198620: "event",
        Q5215424: "event",
        Q5284371: "event",
        Q5305318: "event",
        Q5443199: "event",
        Q5443202: "event",
        Q5447065: "event",
        Q5463571: "event",
        Q5466169: "event",
        Q5466173: "event",
        Q5624491: "event",
        Q5647309: "event",
        Q5732939: "event",
        Q5966065: "event",
        Q5966758: "event",
        Q5966840: "event",
        Q5966935: "event",
        Q6362591: "event",
        Q7782444: "event",
        Q11612178: "book",
        Q21484471: "webpage",
        Q30605374: "event",
        Q47351865: "event",
        Q47352001: "event",
        Q47352086: "event",
        Q47352170: "event",
        Q47352240: "event",
        Q47449779: "event",
        Q50843310: "event",
        Q109653432: "motion_picture",
        Q105770631: "webpage",
        Q98557322: "legislation",
        Q492951: "motion_picture",
        Q110969762: "event",
        Q111140972: "event",
        Q111141428: "event",
        Q1072356: "book",
        Q2122918: "book",
        Q3295609: "book",
        Q4200760: "event",
        Q5966998: "event",
        Q5967267: "event",
        Q5967351: "event",
        Q6123108: "event",
        Q6160041: "event",
        Q6304153: "event",
        Q6304156: "event",
        Q6304160: "event",
        Q6356041: "event",
        Q6368757: "event",
        Q7129601: "event",
        Q7361076: "event",
        Q7569301: "event",
        Q7658365: "event",
        Q7673414: "event",
        Q7894227: "event",
        Q8035768: "event",
        Q8038086: "event",
        Q10286747: "event",
        Q10367086: "event",
        Q10882647: "event",
        Q10882840: "event",
        Q14851978: "event",
        Q14855244: "event",
        Q14916389: "event",
        Q15978401: "event",
        Q16147222: "event",
        Q16166945: "event",
        Q16841345: "event",
        Q16851022: "event",
        Q16982887: "event",
        Q17125181: "event",
        Q17149468: "event",
        Q18216875: "event",
        Q19882131: "event",
        Q20713534: "event",
        Q20713549: "event",
        Q52207310: "motion_picture",
        Q52207399: "motion_picture",
        Q23356219: "book",
        Q24948032: "event",
        Q25042727: "event",
        Q25047428: "event",
        Q25220992: "event",
        Q26132862: "event",
        Q26996240: "event",
        Q27862684: "event",
        Q27962621: "event",
        Q30682355: "event",
        Q35718073: "event",
        Q39055625: "event",
        Q48781520: "event",
        Q50472594: "event",
        Q50686271: "event",
        Q53062420: "event",
        Q53967335: "event",
        Q56275855: "event",
        Q58867406: "event",
        Q58867834: "event",
        Q59699947: "event",
        Q65129733: "event",
        Q65202159: "event",
        Q72011280: "event",
        Q72011538: "event",
        Q72011642: "event",
        Q84476898: "event",
        Q85743991: "event",
        Q85743989: "event",
        Q85743995: "event",
        Q85743997: "event",
        Q85744000: "event",
        Q85745592: "event",
        Q85748479: "event",
        Q85754555: "event",
        Q85769951: "event",
        Q85782609: "event",
        Q85786015: "event",
        Q85804527: "event",
        Q85804530: "event",
        Q96371075: "event",
        Q98650163: "event",
        Q104835757: "event",
        Q104860438: "event",
        Q104863907: "event",
        Q104870655: "event",
        Q104871260: "event",
        Q104873856: "event",
        Q105320308: "event",
        Q105320442: "event",
        Q106015658: "event",
        Q107404398: "event",
        Q110135832: "book",
        Q216315: "event",
        Q221259: "event",
        Q270166: "event",
        Q277593: "event",
        Q304918: "event",
        Q376996: "event",
        Q511855: "event",
        Q522661: "event",
        Q522786: "event",
        Q527589: "event",
        Q537000: "event",
        Q547348: "event",
        Q565448: "event",
        Q586010: "event",
        Q613542: "event",
        Q651760: "event",
        Q698783: "event",
        Q743595: "event",
        Q766663: "event",
        Q843256: "event",
        Q869563: "event",
        Q891243: "event",
        Q908784: "event",
        Q908828: "event",
        Q908870: "event",
        Q1482264: "event",
        Q2072755: "event",
        Q300851: "standard",
        Q731128: "standard",
        Q2576723: "event",
        Q785247: "standard",
        Q2748086: "event",
        Q1206939: "standard",
        Q3712211: "book",
        Q1562489: "standard",
        Q3461863: "event",
        Q4423780: "book",
        Q2330096: "standard",
        Q4435061: "event",
        Q4999776: "event",
        Q6158568: "book",
        Q3788482: "standard",
        Q6648456: "book",
        Q6084623: "event",
        Q6084979: "event",
        Q7240444: "event",
        Q16856825: "software",
        Q12623394: "book",
        Q13135720: "book",
        Q30721375: "book",
        Q37784323: "book",
        Q56191922: "software",
        Q55443535: "book",
        Q55594100: "book",
        Q55594114: "book",
        Q55594143: "book",
        Q55594435: "book",
        Q55594452: "book",
        Q55619801: "book",
        Q55619935: "book",
        Q55620443: "book",
        Q55623087: "book",
        Q55623753: "book",
        Q55624423: "book",
        Q55625587: "book",
        Q55625828: "book",
        Q55633982: "book",
        Q55671315: "book",
        Q55693697: "book",
        Q55695009: "book",
        Q55739666: "book",
        Q55739723: "book",
        Q55758901: "book",
        Q55758954: "book",
        Q55759018: "book",
        Q55768581: "book",
        Q55768668: "book",
        Q55938552: "book",
        Q56012644: "book",
        Q56398267: "event",
        Q61752993: "book",
        Q63214346: "event",
        Q65090058: "standard",
        Q98277904: "periodical",
        Q29861: "event",
        Q77940145: "book",
        Q77942102: "book",
        Q77944268: "book",
        Q77944409: "book",
        Q77944785: "book",
        Q86598505: "book",
        Q87479384: "event",
        Q98539261: "event",
        Q98539274: "event",
        Q909952: "event",
        Q912196: "event",
        Q913252: "event",
        Q925355: "event",
        Q926026: "event",
        Q1050132: "event",
        Q1068673: "event",
        Q1071351: "event",
        Q1071357: "event",
        Q1080415: "event",
        Q1080427: "event",
        Q1080438: "event",
        Q1082815: "event",
        Q1179231: "event",
        Q1179427: "event",
        Q1510056: "event",
        Q1548839: "event",
        Q2037281: "event",
        Q2704271: "event",
        Q2815227: "event",
        Q3054061: "event",
        Q3505844: "event",
        Q3598049: "event",
        Q6843620: "event",
        Q7335381: "event",
        Q11481410: "event",
        Q11903556: "event",
        Q20972355: "event",
        Q42431080: "event",
        Q56353850: "event",
        Q74825616: "event",
        Q74831359: "event",
        Q74831402: "event",
        Q86731128: "event",
        Q96243426: "event",
        Q97165139: "event",
        Q97165154: "event",
        Q97171040: "event",
        Q98799820: "event",
        Q98803888: "event",
        Q98804452: "event",
        Q98843046: "event",
        Q98843068: "event",
        Q98843135: "event",
        Q98844607: "event",
        Q99343759: "event",
        Q99347157: "event",
        Q99347565: "event",
        Q99353255: "event",
        Q99354278: "event",
        Q99430206: "event",
        Q99430267: "event",
        Q99430287: "event",
        Q99430607: "event",
        Q99430799: "event",
        Q99430809: "event",
        Q99431720: "event",
        Q99432320: "event",
        Q99441932: "event",
        Q99441952: "event",
        Q99441974: "event",
        Q99441995: "event",
        Q99443044: "event",
        Q99443817: "event",
        Q99444147: "event",
        Q99472045: "event",
        Q99520829: "event",
        Q99540178: "event",
        Q99540822: "event",
        Q99540868: "event",
        Q99540889: "event",
        Q99540908: "event",
        Q99540929: "event",
        Q99654384: "event",
        Q99654458: "event",
        Q99662602: "event",
        Q99662712: "event",
        Q99662805: "event",
        Q99662853: "event",
        Q99663085: "event",
        Q99664737: "event",
        Q99688417: "event",
        Q99843977: "event",
        Q99844297: "event",
        Q99844568: "event",
        Q99844758: "event",
        Q99846300: "event",
        Q99846964: "event",
        Q99936871: "event",
        Q100137290: "event",
        Q100137363: "event",
        Q100137669: "event",
        Q100165583: "event",
        Q100165758: "event",
        Q100165793: "event",
        Q100165825: "event",
        Q100165898: "event",
        Q100166026: "event",
        Q104762953: "event",
        Q105676265: "event",
        Q108715248: "event",
        Q108732020: "event",
        Q108738628: "event",
        Q108738758: "event",
        Q108738891: "event",
        Q108748847: "event",
        Q108748998: "event",
        Q108759581: "event",
        Q108769188: "event",
        Q108769575: "event",
        Q108769634: "event",
        Q108769927: "event",
        Q108936089: "event",
        Q109233425: "event",
        Q109964663: "book",
        Q109471870: "event",
        Q109473326: "event",
        Q109984849: "event",
        Q110357911: "event",
        Q110358837: "event",
        Q111489136: "book",
        Q110887248: "event",
        Q110888093: "event",
        Q110888126: "event",
        Q111042820: "event",
        Q111050070: "event",
        Q1250520: "dataset",
        Q1394657: "dataset",
        Q303871: "event",
        Q587679: "event",
        Q635103: "event",
        Q836943: "event",
        Q1005339: "event",
        Q1005679: "event",
        Q1152266: "event",
        Q1152265: "event",
        Q1152270: "event",
        Q1152271: "event",
        Q1152273: "event",
        Q1188732: "event",
        Q1188737: "event",
        Q1188740: "event",
        Q1202088: "event",
        Q1202089: "event",
        Q1202094: "event",
        Q1202092: "event",
        Q1202093: "event",
        Q1205216: "event",
        Q1222273: "event",
        Q1222562: "event",
        Q1420666: "event",
        Q1548436: "event",
        Q2091206: "event",
        Q2516049: "event",
        Q3653440: "event",
        Q3748339: "event",
        Q7378519: "event",
        Q8228881: "event",
        Q12164334: "event",
        Q15079786: "book",
        Q20151226: "event",
        Q26887428: "event",
        Q28025056: "event",
        Q60536252: "dataset",
        Q59139015: "dataset",
        Q55140060: "event",
        Q57539893: "event",
        Q59134402: "event",
        Q57695955: "standard",
        Q60147786: "event",
        Q58787903: "standard",
        Q61630069: "event",
        Q7852: "event",
        Q88291753: "book",
        Q104636634: "software",
        Q98017851: "event",
        Q98017920: "event",
        Q99299800: "event",
        Q99617648: "event",
        Q106129926: "event",
        Q106345759: "event",
        Q106345798: "event",
        Q107435280: "book",
        Q106958550: "event",
        Q106959885: "event",
        Q107629937: "event",
        Q108159060: "event",
        Q108453748: "event",
        Q548206: "motion_picture",
        Q109969754: "book",
        Q385271: "dataset",
        Q762917: "song",
        Q1631107: "dataset",
        Q1905727: "song",
        Q1973860: "song",
        Q3976062: "song",
        Q5051330: "dataset",
        Q6941730: "dataset",
        Q17300027: "periodical",
        Q11418206: "song",
        Q209939: "book",
        Q368281: "book",
        Q260858: "event",
        Q963099: "book",
        Q385739: "event",
        Q459459: "event",
        Q670265: "event",
        Q1375427: "event",
        Q2409117: "event",
        Q2550299: "event",
        Q2949123: "event",
        Q4653676: "event",
        Q5278333: "event",
        Q5570217: "event",
        Q13360129: "event",
        Q14830021: "event",
        Q15111554: "event",
        Q16541164: "event",
        Q19384767: "event",
        Q20737336: "book",
        Q21884005: "standard",
        Q47114558: "dataset",
        Q30325538: "event",
        Q30681640: "event",
        Q65494848: "report",
        Q64224805: "broadcast",
        Q59152282: "software",
        Q58232557: "book",
        Q59854802: "book",
        Q60713210: "book",
        Q62019336: "book",
        Q59560196: "standard",
        Q7973721: "regulation",
        Q61782519: "dataset",
        Q64251310: "event",
        Q65596297: "book",
        Q65598315: "book",
        Q65598478: "book",
        Q65598493: "book",
        Q10898474: "regulation",
        Q106554914: "song",
        Q106797790: "broadcast",
        Q109501804: "broadcast",
        Q109654109: "broadcast",
        Q109677093: "broadcast",
        Q109684855: "broadcast",
        Q109750820: "broadcast",
        Q110438165: "broadcast",
        Q110730867: "broadcast",
        Q102336992: "software",
        Q102337068: "software",
        Q105038301: "software",
        Q105443475: "event",
        Q105443516: "event",
        Q105443545: "event",
        Q105452088: "event",
        Q105479764: "event",
        Q105589549: "event",
        Q108887198: "event",
        Q108454654: "standard",
        Q111421098: "event",
        Q11545359: "map",
        Q423189: "webpage",
        Q6542723: "software",
        Q7246937: "software",
        Q281829: "event",
        Q1392593: "event",
        Q1417098: "event",
        Q2127960: "dataset",
        Q1782935: "event",
        Q2583265: "book",
        Q2040963: "event",
        Q2777879: "event",
        Q2998897: "event",
        Q3092269: "event",
        Q3578301: "event",
        Q7278753: "book",
        Q10526654: "event",
        Q11411772: "event",
        Q95349143: "regulation",
        Q12949048: "event",
        Q17067427: "event",
        Q19952562: "event",
        Q73897568: "periodical",
        Q55426935: "event",
        Q56068367: "event",
        Q65150416: "event",
        Q72284214: "event",
        Q72591660: "event",
        Q72592003: "event",
        Q72601141: "event",
        Q72601146: "event",
        Q72601149: "event",
        Q72601153: "event",
        Q72601159: "event",
        Q72601161: "event",
        Q72601168: "event",
        Q72601172: "event",
        Q72601178: "event",
        Q72601181: "event",
        Q72601191: "event",
        Q72601197: "event",
        Q72601202: "event",
        Q72601208: "event",
        Q72601212: "event",
        Q72601217: "event",
        Q72601221: "event",
        Q72601226: "event",
        Q72601224: "event",
        Q72601231: "event",
        Q72601237: "event",
        Q72601244: "event",
        Q72601250: "event",
        Q72601254: "event",
        Q72601257: "event",
        Q72601261: "event",
        Q72601267: "event",
        Q72601271: "event",
        Q72601276: "event",
        Q72601283: "event",
        Q72601291: "event",
        Q72601297: "event",
        Q72601303: "event",
        Q72601311: "event",
        Q72601309: "event",
        Q72601318: "event",
        Q72601322: "event",
        Q72601327: "event",
        Q72601330: "event",
        Q72601340: "event",
        Q72601346: "event",
        Q72601351: "event",
        Q72601354: "event",
        Q72601358: "event",
        Q72607814: "event",
        Q76289061: "event",
        Q77454236: "event",
        Q78793696: "event",
        Q78794217: "event",
        Q78794597: "event",
        Q96602509: "webpage",
        Q89579780: "event",
        Q89580544: "event",
        Q89580727: "event",
        Q89582128: "event",
        Q89584514: "event",
        Q89584528: "event",
        Q89670486: "event",
        Q89671012: "event",
        Q95597105: "dataset",
        Q106036966: "webpage",
        Q104830881: "event",
        Q108264898: "event",
        Q108390245: "event",
        Q109044243: "event",
        Q931552: "motion_picture",
        Q109497724: "event",
        Q111539301: "event",
        Q3196405: "manuscript",
        Q2522949: "dataset",
        Q2553613: "dataset",
        Q775344: "broadcast",
        Q5282128: "dataset",
        Q5421240: "dataset",
        Q5500344: "dataset",
        Q859398: "software",
        Q12983462: "song",
        Q13582267: "dataset",
        Q179797: "book",
        Q818963: "event",
        Q819961: "event",
        Q2376111: "book",
        Q72415: "standard",
        Q2295790: "event",
        Q23058567: "dataset",
        Q2739382: "event",
        Q4351985: "event",
        Q88223288: "regulation",
        Q88320241: "regulation",
        Q25324511: "dataset",
        Q88705465: "regulation",
        Q88706341: "regulation",
        Q88707306: "regulation",
        Q88709702: "regulation",
        Q89061144: "regulation",
        Q5447138: "event",
        Q6084414: "event",
        Q6156617: "event",
        Q6359078: "event",
        Q29405157: "dataset",
        Q28225717: "broadcast",
        Q12035201: "event",
        Q17050828: "event",
        Q19860625: "event",
        Q23657366: "book",
        Q26185628: "event",
        Q10668278: "performance",
        Q38806003: "event",
        Q51675442: "software",
        Q67533191: "dataset",
        Q30894000: "performance",
        Q552461: "regulation",
        Q86833385: "broadcast",
        Q61002034: "event",
        Q7316326: "regulation",
        Q10282403: "regulation",
        Q105885086: "broadcast",
        Q105885166: "broadcast",
        Q106101379: "manuscript",
        Q97054320: "broadcast",
        Q99515493: "dataset",
        Q100139554: "dataset",
        Q100139796: "dataset",
        Q98526239: "broadcast",
        Q101856615: "broadcast",
        Q101893835: "broadcast",
        Q104539790: "dataset",
        Q104123273: "broadcast",
        Q106077699: "dataset",
        Q106425682: "dataset",
        Q106807531: "dataset",
        Q106878463: "dataset",
        Q110832804: "dataset",
        Q91865493: "book",
        Q92601632: "event",
        Q95116664: "event",
        Q96798209: "legislation",
        Q96372405: "event",
        Q96474700: "event",
        Q98745410: "event",
        Q99890588: "book",
        Q99738027: "event",
        Q99738092: "event",
        Q99738111: "event",
        Q100575346: "book",
        Q104537413: "event",
        Q105810973: "event",
        Q106752095: "book",
        Q107996504: "event",
        Q110022526: "book",
        Q110275985: "book",
        Q110541086: "book",
        Q106588852: "performance",
        Q28135032: "broadcast",
        Q322259: "event",
        Q332225: "event",
        Q594550: "event",
        Q1709894: "event",
        Q2005272: "event",
        Q18131152: "event",
        Q890206: "performance",
        Q1982463: "broadcast",
        Q107524369: "regulation",
        Q11931373: "performance",
        Q61856389: "periodical",
        Q74303978: "broadcast",
        Q446780: "regulation",
        Q4590027: "regulation",
        Q63068880: "book",
        Q64657836: "book",
        Q105011823: "broadcast",
        Q105440808: "broadcast",
        Q105580963: "broadcast",
        Q105882178: "broadcast",
        Q105908617: "broadcast",
        Q106070543: "broadcast",
        Q106393132: "broadcast",
        Q106462625: "broadcast",
        Q106625193: "broadcast",
        Q106625205: "broadcast",
        Q106625222: "broadcast",
        Q106625419: "broadcast",
        Q106635276: "periodical",
        Q106639851: "broadcast",
        Q106651148: "periodical",
        Q106664450: "periodical",
        Q106668702: "periodical",
        Q106677940: "periodical",
        Q106727606: "broadcast",
        Q106727619: "broadcast",
        Q106727696: "broadcast",
        Q106882658: "broadcast",
        Q106902380: "broadcast",
        Q106914760: "broadcast",
        Q107170524: "periodical",
        Q107171988: "periodical",
        Q107178411: "periodical",
        Q107179479: "periodical",
        Q107181855: "periodical",
        Q107182185: "periodical",
        Q107182376: "periodical",
        Q107182467: "periodical",
        Q107183126: "periodical",
        Q107236776: "periodical",
        Q107236966: "periodical",
        Q107442166: "broadcast",
        Q63481999: "performance",
        Q63483382: "performance",
        Q73067531: "performance",
        Q106255345: "software",
        Q107110391: "software",
        Q105104863: "book",
        Q106635228: "event",
        Q106635229: "event",
        Q106635287: "event",
        Q106640245: "event",
        Q107581015: "event",
        Q107628485: "event",
        Q107628488: "event",
        Q107628507: "event",
        Q107628546: "event",
        Q107745632: "event",
        Q108552900: "event",
        Q110025156: "book",
        Q110275970: "book",
        Q110313262: "legislation",
        Q110487796: "legislation",
        Q110902846: "dataset",
        Q110903048: "dataset",
        Q110903105: "dataset",
        Q1778220: "map",
        Q110373000: "event",
        Q111180384: "book",
        Q110996236: "event",
        Q111040000: "event",
        Q111818118: "book",
        Q111678621: "event",
        Q508790: "song",
        Q4470542: "song",
        Q6379472: "song",
        Q11655362: "song",
        Q12111341: "song",
        Q12274303: "song",
        Q12802984: "song",
        Q112983: "book",
        Q181275: "book",
        Q719645: "book",
        Q723362: "book",
        Q841983: "book",
        Q918887: "book",
        Q929047: "book",
        Q1279564: "book",
        Q2499142: "book",
        Q371805: "standard",
        Q3046922: "book",
        Q3056541: "book",
        Q3429239: "book",
        Q4735223: "book",
        Q4880745: "event",
        Q5806951: "book",
        Q5359685: "event",
        Q6124900: "book",
        Q6128115: "book",
        Q5879905: "event",
        Q6865030: "book",
        Q6938511: "event",
        Q12106333: "book",
        Q12250928: "event",
        Q12250944: "event",
        Q12250949: "event",
        Q12250958: "event",
        Q12250971: "event",
        Q12250993: "event",
        Q13632557: "book",
        Q16324495: "book",
        Q17518557: "book",
        Q17004607: "event",
        Q20024995: "book",
        Q24283984: "book",
        Q24965412: "event",
        Q24965482: "event",
        Q27560760: "book",
        Q59112725: "book",
        Q64445892: "book",
        Q64447045: "book",
        Q64682895: "book",
        Q64764212: "book",
        Q65234641: "event",
        Q66679998: "book",
        Q72857184: "book",
        Q75178934: "event",
        Q108202399: "motion_picture",
        Q109568295: "map",
        Q111280422: "motion_picture",
        Q101413630: "song",
        Q109470682: "song",
        Q109470683: "song",
        Q109470686: "song",
        Q109470687: "song",
        Q109470684: "song",
        Q109470685: "song",
        Q109470688: "song",
        Q91224525: "event",
        Q105753296: "legislation",
        Q107124972: "book",
        Q108329751: "book",
        Q108671830: "book",
        Q108135774: "event",
        Q18531: "regulation",
        Q83382: "standard",
        Q106370: "standard",
        Q129075: "standard",
        Q211063: "standard",
        Q221257: "standard",
        Q237757: "standard",
        Q255528: "standard",
        Q284810: "standard",
        Q296763: "standard",
        Q378761: "standard",
        Q406283: "standard",
        Q428486: "standard",
        Q483488: "standard",
        Q555032: "standard",
        Q628189: "standard",
        Q674007: "standard",
        Q749081: "standard",
        Q763656: "standard",
        Q767710: "standard",
        Q820586: "standard",
        Q849609: "standard",
        Q856732: "standard",
        Q916240: "standard",
        Q918409: "standard",
        Q922881: "standard",
        Q937498: "standard",
        Q950234: "standard",
        Q971102: "standard",
        Q1024934: "standard",
        Q1088832: "standard",
        Q1101415: "standard",
        Q1103055: "standard",
        Q1103058: "standard",
        Q1125051: "standard",
        Q1132453: "standard",
        Q1192691: "standard",
        Q1196571: "standard",
        Q1196777: "standard",
        Q1205020: "standard",
        Q1243971: "standard",
        Q1268094: "standard",
        Q1323830: "standard",
        Q1323895: "standard",
        Q1324028: "standard",
        Q1351277: "standard",
        Q1369202: "standard",
        Q1381151: "standard",
        Q1385264: "standard",
        Q1717522: "standard",
        Q1718805: "standard",
        Q1751334: "standard",
        Q1990952: "standard",
        Q2051580: "standard",
        Q2060802: "standard",
        Q2087344: "standard",
        Q2159612: "standard",
        Q2253011: "standard",
        Q4826265: "book",
        Q2458582: "standard",
        Q2635535: "standard",
        Q2641407: "standard",
        Q2755335: "standard",
        Q2819366: "standard",
        Q2819372: "standard",
        Q2837438: "standard",
        Q3066421: "standard",
        Q3601015: "standard",
        Q3601138: "standard",
        Q3979397: "standard",
        Q4024445: "standard",
        Q4273687: "standard",
        Q4273690: "standard",
        Q4273691: "standard",
        Q4273689: "standard",
        Q4273692: "standard",
        Q4306969: "standard",
        Q4652596: "standard",
        Q4653852: "standard",
        Q4733372: "standard",
        Q5204791: "standard",
        Q5653080: "standard",
        Q5968928: "standard",
        Q5992943: "standard",
        Q6043560: "standard",
        Q6716885: "standard",
        Q6717810: "standard",
        Q6805986: "standard",
        Q6918351: "standard",
        Q6953434: "standard",
        Q7391293: "standard",
        Q7435388: "standard",
        Q7948330: "standard",
        Q10927187: "book",
        Q8679274: "standard",
        Q54365951: "book",
        Q2473200: "regulation",
        Q97613710: "book",
        Q107422949: "book",
        Q107090790: "standard",
        Q107360661: "standard",
        Q108106607: "standard",
        Q108106614: "standard",
        Q108555967: "standard",
        Q108764898: "standard",
        Q133493: "standard",
        Q175848: "standard",
        Q203315: "standard",
        Q229932: "standard",
        Q294890: "standard",
        Q295060: "standard",
        Q295097: "standard",
        Q295109: "standard",
        Q296778: "standard",
        Q378246: "standard",
        Q433285: "standard",
        Q522233: "standard",
        Q614417: "standard",
        Q615955: "standard",
        Q719867: "standard",
        Q786183: "standard",
        Q850364: "standard",
        Q858314: "standard",
        Q863823: "standard",
        Q917228: "standard",
        Q957191: "standard",
        Q10748030: "standard",
        Q12047070: "standard",
        Q12047068: "standard",
        Q12047069: "standard",
        Q12349971: "standard",
        Q15104442: "standard",
        Q16519569: "standard",
        Q16656613: "standard",
        Q16683480: "standard",
        Q16722027: "standard",
        Q16722025: "standard",
        Q17112311: "standard",
        Q17637401: "standard",
        Q18651108: "standard",
        Q18669450: "standard",
        Q19606482: "standard",
        Q21660989: "standard",
        Q23017087: "standard",
        Q23308618: "standard",
        Q23308620: "standard",
        Q23308627: "standard",
        Q23308667: "standard",
        Q24910504: "standard",
        Q25047934: "standard",
        Q25393060: "standard",
        Q26122998: "standard",
        Q28848853: "standard",
        Q28849038: "standard",
        Q28859206: "standard",
        Q28936807: "standard",
        Q28936810: "standard",
        Q39052875: "standard",
        Q39052876: "standard",
        Q47088294: "standard",
        Q51290110: "standard",
        Q55099448: "standard",
        Q55663807: "standard",
        Q56752458: "standard",
        Q56752466: "standard",
        Q56752470: "standard",
        Q58820781: "standard",
        Q60523194: "standard",
        Q60523490: "standard",
        Q60969329: "standard",
        Q61016625: "standard",
        Q64003266: "standard",
        Q64821798: "standard",
        Q64822010: "standard",
        Q64827079: "standard",
        Q64840813: "standard",
        Q64840821: "standard",
        Q64840888: "standard",
        Q64842806: "standard",
        Q64845943: "standard",
        Q64852858: "standard",
        Q64859524: "standard",
        Q65047538: "standard",
        Q65643777: "standard",
        Q65659341: "standard",
        Q65951697: "standard",
        Q84308958: "standard",
        Q84312738: "standard",
        Q86460118: "standard",
        Q86460423: "standard",
        Q90882503: "standard",
        Q92206164: "standard",
        Q93563472: "standard",
        Q97482625: "standard",
        Q101517027: "standard",
        Q104889211: "standard",
        Q104889263: "standard",
        Q104889396: "standard",
        Q106221705: "standard",
        Q108732094: "event",
        Q107435420: "standard",
        Q110989701: "standard",
        Q79531: "software",
        Q131669: "software",
        Q269856: "software",
        Q930714: "software",
        Q959549: "software",
        Q1405638: "software",
        Q1475825: "software",
        Q1545398: "software",
        Q2871730: "software",
        Q3251801: "software",
        Q8465350: "software",
        Q82414: "event",
        Q159821: "event",
        Q188468: "event",
        Q988994: "event",
        Q277919: "standard",
        Q1066956: "standard",
        Q1074624: "standard",
        Q1092481: "standard",
        Q1126648: "standard",
        Q1193262: "standard",
        Q1233006: "standard",
        Q1545600: "standard",
        Q1665596: "standard",
        Q1760303: "standard",
        Q1890727: "standard",
        Q1997451: "standard",
        Q2042663: "standard",
        Q2467811: "standard",
        Q2470214: "standard",
        Q2477766: "standard",
        Q2505138: "standard",
        Q2602839: "standard",
        Q2713403: "standard",
        Q4936344: "event",
        Q3334337: "standard",
        Q3813277: "standard",
        Q4050793: "standard",
        Q4181187: "standard",
        Q15814161: "software",
        Q15980209: "software",
        Q6022524: "standard",
        Q18012472: "software",
        Q19683982: "software",
        Q12048403: "event",
        Q11239825: "standard",
        Q11252439: "standard",
        Q11764840: "standard",
        Q23665359: "software",
        Q12356809: "standard",
        Q13551274: "standard",
        Q15573179: "event",
        Q25429379: "software",
        Q15902424: "event",
        Q17280917: "standard",
        Q28718983: "software",
        Q28859989: "software",
        Q28861781: "software",
        Q20153891: "event",
        Q23045352: "standard",
        Q24875725: "standard",
        Q24893756: "standard",
        Q25021818: "standard",
        Q28721615: "standard",
        Q36398436: "standard",
        Q51906260: "standard",
        Q56063152: "standard",
        Q56808665: "standard",
        Q11368: "software",
        Q34182: "software",
        Q44571: "software",
        Q48464: "software",
        Q48493: "software",
        Q63098429: "standard",
        Q11089: "standard",
        Q44484: "standard",
        Q97782987: "software",
        Q96378808: "standard",
        Q98611686: "standard",
        Q98611991: "standard",
        Q99526991: "standard",
        Q99527014: "standard",
        Q110091424: "event",
        Q110680555: "legislation",
        Q189248: "software",
        Q343568: "software",
        Q1143118: "software",
        Q1395452: "software",
        Q2628513: "software",
        Q3093294: "software",
        Q5923736: "software",
        Q8018891: "software",
        Q146575: "event",
        Q214152: "event",
        Q217015: "event",
        Q217019: "event",
        Q217026: "event",
        Q217024: "event",
        Q217034: "event",
        Q217036: "event",
        Q217041: "event",
        Q836854: "legislation",
        Q839180: "legislation",
        Q632639: "event",
        Q1668046: "legislation",
        Q1252585: "event",
        Q1252596: "event",
        Q1254181: "event",
        Q1254184: "event",
        Q1661478: "event",
        Q2309297: "legislation",
        Q2494151: "legislation",
        Q2906787: "legislation",
        Q3117517: "event",
        Q3311614: "event",
        Q3345908: "event",
        Q4942972: "legislation",
        Q5058941: "legislation",
        Q5058949: "legislation",
        Q5111497: "event",
        Q5464060: "event",
        Q5671238: "event",
        Q6024584: "event",
        Q7462493: "event",
        Q11913426: "legislation",
        Q12353139: "event",
        Q13377536: "legislation",
        Q13099480: "event",
        Q15628675: "event",
        Q15628696: "event",
        Q16182777: "event",
        Q18208174: "legislation",
        Q18630286: "event",
        Q18633267: "event",
        Q18641061: "event",
        Q19853509: "legislation",
        Q21035141: "event",
        Q21035188: "event",
        Q27491541: "event",
        Q40720553: "event",
        Q40720559: "event",
        Q40720564: "event",
        Q40720568: "event",
        Q40720946: "event",
        Q40720950: "event",
        Q40720953: "event",
        Q40720956: "event",
        Q58857460: "event",
        Q22702: "legislation",
        Q1311: "event",
        Q1314: "event",
        Q1312: "event",
        Q1313: "event",
        Q73712380: "event",
        Q97957575: "software",
        Q100350715: "event",
        Q101545880: "event",
        Q103846501: "legislation",
        Q104819488: "event",
        Q56315911: "regulation",
        Q173904: "software",
        Q1137596: "software",
        Q80300407: "regulation",
        Q5323129: "standard",
        Q417633: "regulation",
        Q1009216: "regulation",
        Q1535576: "regulation",
        Q1816371: "regulation",
        Q1936399: "regulation",
        Q2354801: "regulation",
        Q2520750: "regulation",
        Q2824584: "regulation",
        Q2824642: "regulation",
        Q3199654: "regulation",
        Q5657860: "regulation",
        Q7257711: "regulation",
        Q11904181: "regulation",
        Q15141478: "regulation",
        Q20757173: "regulation",
        Q27631499: "regulation",
        Q27995043: "regulation",
        Q29575404: "regulation",
        Q109971781: "standard",
        Q6774739: "dataset",
        Q70437274: "regulation",
        Q372269: "software",
        Q11187442: "dataset",
        Q1137896: "software",
        Q5448778: "software",
        Q7700782: "software",
        Q7802107: "software",
        Q106046: "book",
        Q228675: "book",
        Q82866: "event",
        Q231659: "event",
        Q20645845: "dataset",
        Q693827: "event",
        Q1366376: "book",
        Q855067: "event",
        Q976547: "event",
        Q1675259: "book",
        Q1033140: "event",
        Q1142865: "event",
        Q1985913: "book",
        Q1415772: "event",
        Q1426764: "event",
        Q1431591: "event",
        Q2089875: "book",
        Q1532651: "event",
        Q1741926: "event",
        Q2484834: "book",
        Q85486397: "regulation",
        Q125650: "standard",
        Q1977131: "event",
        Q2164591: "event",
        Q2382560: "event",
        Q2429728: "event",
        Q2468444: "event",
        Q2648795: "event",
        Q2883697: "event",
        Q3592712: "book",
        Q1423339: "standard",
        Q3381319: "event",
        Q1547957: "standard",
        Q3517779: "event",
        Q3543393: "event",
        Q3618131: "event",
        Q3618134: "event",
        Q3618132: "event",
        Q3618133: "event",
        Q4305572: "book",
        Q3775029: "event",
        Q13522376: "software",
        Q13717398: "software",
        Q87895383: "regulation",
        Q4527099: "event",
        Q4804181: "event",
        Q4857582: "event",
        Q5053154: "event",
        Q6189715: "book",
        Q6334544: "event",
        Q9139154: "book",
        Q11410589: "book",
        Q21055677: "software",
        Q98017499: "legislation",
        Q25377002: "software",
        Q15943568: "event",
        Q15964720: "event",
        Q15080196: "standard",
        Q16989249: "event",
        Q18543102: "event",
        Q102410240: "regulation",
        Q105766512: "regulation",
        Q107549239: "regulation",
        Q108602895: "regulation",
        Q48559493: "software",
        Q55335263: "software",
        Q48773471: "book",
        Q60617925: "software",
        Q62591185: "software",
        Q314537: "legislation",
        Q467578: "regulation",
        Q862765: "regulation",
        Q3458253: "regulation",
        Q3633724: "regulation",
        Q14116: "software",
        Q6518453: "regulation",
        Q18838604: "regulation",
        Q72414054: "standard",
        Q99495581: "dataset",
        Q28147500: "regulation",
        Q104234001: "dataset",
        Q102040062: "software",
        Q94285357: "book",
        Q104760508: "software",
        Q108099476: "software",
        Q104156769: "book",
        Q106203422: "book",
        Q106645589: "book",
        Q106771604: "book",
        Q111671331: "event",
        Q451816: "software",
        Q831660: "software",
        Q1061460: "software",
        Q1102629: "software",
        Q1640628: "software",
        Q1784206: "software",
        Q1931790: "software",
        Q3086736: "software",
        Q3297989: "software",
        Q3765017: "software",
        Q5380395: "software",
        Q6821765: "software",
        Q7831460: "software",
        Q7935102: "software",
        Q73989: "event",
        Q82809: "event",
        Q121393: "event",
        Q201196: "event",
        Q207932: "event",
        Q327835: "event",
        Q686500: "event",
        Q734263: "event",
        Q814767: "event",
        Q964755: "event",
        Q1076567: "event",
        Q1194539: "event",
        Q2080435: "book",
        Q1517900: "event",
        Q1735829: "event",
        Q1783455: "event",
        Q11335799: "software",
        Q11376090: "software",
        Q2646388: "book",
        Q2064560: "event",
        Q2296224: "event",
        Q2339285: "event",
        Q2428577: "event",
        Q2456855: "event",
        Q2534205: "event",
        Q2534837: "event",
        Q2607189: "event",
        Q2736114: "event",
        Q2904535: "event",
        Q1421584: "standard",
        Q3277405: "event",
        Q3317976: "event",
        Q3322731: "event",
        Q3327913: "event",
        Q3512010: "event",
        Q3572511: "event",
        Q3855312: "event",
        Q3997308: "event",
        Q4178567: "event",
        Q4233956: "event",
        Q4264021: "event",
        Q5249063: "event",
        Q5405824: "event",
        Q5405829: "event",
        Q5614243: "event",
        Q6312465: "event",
        Q7362828: "book",
        Q6783971: "event",
        Q7810997: "book",
        Q7603898: "event",
        Q7690791: "event",
        Q9309947: "event",
        Q9395683: "event",
        Q9396701: "event",
        Q20706915: "software",
        Q11891940: "event",
        Q12351569: "event",
        Q12769647: "event",
        Q12981823: "event",
        Q13420159: "event",
        Q14549021: "event",
        Q15782928: "event",
        Q17004624: "book",
        Q17006274: "book",
        Q19131811: "book",
        Q21877233: "event",
        Q25302803: "event",
        Q27070651: "event",
        Q28757850: "standard",
        Q31398150: "standard",
        Q37760740: "standard",
        Q39170567: "standard",
        Q64584601: "event",
        Q65320687: "event",
        Q51616: "event",
        Q58263: "event",
        Q89448385: "book",
        Q110505373: "software",
        Q110874204: "software",
        Q111490490: "software",
        Q105288154: "event",
        Q107456893: "event",
        Q668312: "motion_picture",
        Q1046788: "motion_picture",
        Q1258565: "manuscript",
        Q109641075: "standard",
        Q109653775: "standard",
        Q110126851: "standard",
        Q8049065: "motion_picture",
        Q18655723: "motion_picture",
        Q477202: "software",
        Q1807085: "software",
        Q2062060: "software",
        Q2070573: "software",
        Q2298125: "software",
        Q4036754: "software",
        Q4228982: "software",
        Q4497428: "software",
        Q7894144: "software",
        Q8073201: "software",
        Q113497: "book",
        Q583236: "book",
        Q682198: "book",
        Q1054662: "book",
        Q1536561: "book",
        Q1429577: "event",
        Q82516: "standard",
        Q203257: "standard",
        Q216651: "standard",
        Q296760: "standard",
        Q330086: "standard",
        Q2279440: "event",
        Q640596: "standard",
        Q650553: "standard",
        Q694036: "standard",
        Q725524: "standard",
        Q2671658: "event",
        Q1028009: "standard",
        Q1334973: "standard",
        Q1486338: "standard",
        Q1630069: "standard",
        Q1640617: "standard",
        Q1662390: "standard",
        Q1753717: "standard",
        Q1881617: "standard",
        Q4457046: "book",
        Q2354396: "standard",
        Q2597531: "standard",
        Q2819531: "standard",
        Q5638059: "book",
        Q5153879: "event",
        Q3460082: "standard",
        Q3510146: "standard",
        Q4041447: "standard",
        Q6718887: "book",
        Q4654573: "standard",
        Q4676760: "standard",
        Q5276158: "standard",
        Q5322986: "standard",
        Q6956007: "standard",
        Q7394773: "standard",
        Q8071925: "standard",
        Q10332600: "event",
        Q10585097: "event",
        Q12110179: "event",
        Q11188258: "standard",
        Q11199722: "standard",
        Q12043459: "standard",
        Q12043462: "standard",
        Q12043460: "standard",
        Q16995226: "standard",
        Q193217: "performance",
        Q210854: "performance",
        Q442133: "performance",
        Q448738: "performance",
        Q599877: "performance",
        Q630161: "performance",
        Q704073: "performance",
        Q774475: "performance",
        Q988502: "performance",
        Q20055091: "event",
        Q1432540: "performance",
        Q1674378: "performance",
        Q1917591: "performance",
        Q3228974: "performance",
        Q3981262: "performance",
        Q21094865: "standard",
        Q5765288: "performance",
        Q27921668: "standard",
        Q19754215: "performance",
        Q41335025: "event",
        Q48999145: "book",
        Q56043054: "event",
        Q56194833: "standard",
        Q47112: "performance",
        Q98913323: "standard",
        Q110651451: "software",
        Q110651453: "software",
        Q110651967: "software",
        Q105626374: "standard",
        Q107581410: "event",
        Q2396005: "song",
        Q260080: "software",
        Q507703: "software",
        Q578173: "software",
        Q1066707: "software",
        Q1154770: "software",
        Q1187338: "software",
        Q1196126: "software",
        Q11792325: "song",
        Q2433210: "software",
        Q2481505: "software",
        Q2665141: "software",
        Q3687628: "software",
        Q3724887: "software",
        Q3866394: "software",
        Q4189732: "software",
        Q4634986: "software",
        Q4681865: "software",
        Q5161689: "software",
        Q5433600: "software",
        Q6133556: "software",
        Q9374948: "software",
        Q1195034: "book",
        Q10478832: "software",
        Q1958065: "book",
        Q11190216: "software",
        Q11305042: "software",
        Q180122: "standard",
        Q294889: "standard",
        Q294897: "standard",
        Q2180696: "event",
        Q492197: "standard",
        Q841708: "standard",
        Q1188495: "standard",
        Q1193354: "standard",
        Q3178415: "event",
        Q1421681: "standard",
        Q1653444: "standard",
        Q4017617: "event",
        Q2746589: "standard",
        Q2747387: "standard",
        Q15730690: "software",
        Q16178184: "software",
        Q17083583: "software",
        Q5970258: "standard",
        Q5970262: "standard",
        Q8035355: "event",
        Q10986174: "event",
        Q11781628: "book",
        Q11986043: "book",
        Q10566612: "standard",
        Q12512318: "event",
        Q12512320: "event",
        Q13096825: "event",
        Q13096834: "event",
        Q16878826: "event",
        Q15995158: "standard",
        Q15995156: "standard",
        Q15995157: "standard",
        Q28169064: "software",
        Q24534575: "standard",
        Q25100938: "standard",
        Q29167474: "standard",
        Q29167475: "standard",
        Q29167476: "standard",
        Q29167477: "standard",
        Q29167495: "standard",
        Q52229854: "software",
        Q56191369: "software",
        Q56196027: "software",
        Q48734573: "event",
        Q59138843: "software",
        Q59138899: "software",
        Q59138925: "software",
        Q59139052: "software",
        Q59154480: "software",
        Q59154494: "software",
        Q54953993: "standard",
        Q45842: "software",
        Q59326100: "standard",
        Q59851707: "standard",
        Q85815517: "software",
        Q105685577: "song",
        Q96882649: "software",
        Q100354072: "software",
        Q96791859: "book",
        Q106248240: "software",
        Q108480878: "software",
        Q108702521: "software",
        Q108702628: "software",
        Q111847169: "software",
        Q109406736: "song",
        Q109565888: "book",
        Q696497: "legal_case",
        Q109588571: "event",
        Q63226722: "regulation",
        Q63259138: "regulation",
        Q627181: "song",
        Q1151259: "song",
        Q4793302: "song",
        Q18493502: "legal_case",
        Q267151: "software",
        Q272597: "software",
        Q285237: "software",
        Q758895: "software",
        Q1545483: "software",
        Q1637192: "software",
        Q2560413: "software",
        Q4047728: "software",
        Q4048342: "software",
        Q5156020: "software",
        Q5906732: "software",
        Q7395272: "software",
        Q102843: "event",
        Q177275: "event",
        Q179226: "event",
        Q186190: "event",
        Q235670: "event",
        Q235673: "event",
        Q235676: "event",
        Q235680: "event",
        Q235687: "event",
        Q235684: "event",
        Q235690: "event",
        Q389654: "event",
        Q10397513: "software",
        Q906577: "event",
        Q1141850: "event",
        Q1984664: "review",
        Q11194160: "software",
        Q2665700: "review",
        Q2238822: "event",
        Q3058675: "review",
        Q12127664: "software",
        Q3494258: "software",
        Q3780403: "review",
        Q4367188: "review",
        Q4382347: "review",
        Q3846508: "event",
        Q13636504: "software",
        Q3548041: "standard",
        Q23930024: "software",
        Q16240947: "event",
        Q20089094: "book",
        Q19646375: "event",
        Q19731959: "event",
        Q19731962: "event",
        Q19731963: "event",
        Q19731964: "event",
        Q20427327: "event",
        Q104154380: "regulation",
        Q26835642: "review",
        Q28053962: "review",
        Q31173193: "event",
        Q31173508: "event",
        Q41798378: "event",
        Q54328396: "software",
        Q55739527: "software",
        Q48817613: "review",
        Q50079209: "event",
        Q56232277: "event",
        Q57981542: "event",
        Q58339033: "event",
        Q3769847: "regulation",
        Q3769851: "regulation",
        Q3814115: "regulation",
        Q5474477: "regulation",
        Q65208584: "event",
        Q65213454: "event",
        Q65213460: "event",
        Q542: "event",
        Q3930: "event",
        Q11420: "event",
        Q25424534: "regulation",
        Q26857436: "regulation",
        Q93440972: "software",
        Q93723008: "software",
        Q98391050: "review",
        Q98607365: "review",
        Q102352081: "event",
        Q105528979: "event",
        Q106676473: "event",
        Q7023411: "song",
        Q642215: "software",
        Q756637: "software",
        Q828322: "software",
        Q846224: "software",
        Q1186471: "software",
        Q1330336: "software",
        Q1422746: "software",
        Q2622299: "software",
        Q4282636: "software",
        Q5014368: "software",
        Q7265518: "software",
        Q7705752: "software",
        Q7935188: "software",
        Q1351781: "event",
        Q1895188: "event",
        Q2920383: "legislation",
        Q3586860: "event",
        Q3586864: "event",
        Q1758006: "standard",
        Q5354603: "event",
        Q5354658: "event",
        Q5354664: "event",
        Q5354677: "event",
        Q5354684: "event",
        Q5354694: "event",
        Q5354705: "event",
        Q5354710: "event",
        Q5354711: "event",
        Q5354708: "event",
        Q5354722: "event",
        Q5354741: "event",
        Q5354756: "event",
        Q5354762: "event",
        Q5354763: "event",
        Q5354761: "event",
        Q5354765: "event",
        Q5354770: "event",
        Q5354776: "event",
        Q5354777: "event",
        Q5354787: "event",
        Q5354788: "event",
        Q5354796: "event",
        Q5354804: "event",
        Q5354832: "event",
        Q5354848: "event",
        Q5354861: "event",
        Q5354870: "event",
        Q5354879: "event",
        Q5354876: "event",
        Q5354880: "event",
        Q5354901: "event",
        Q5354916: "event",
        Q6927120: "legislation",
        Q7002556: "legislation",
        Q7063753: "legislation",
        Q6936320: "event",
        Q7892462: "event",
        Q7892463: "event",
        Q7892466: "event",
        Q7892464: "event",
        Q7892465: "event",
        Q7892468: "event",
        Q21030988: "software",
        Q21169670: "software",
        Q12410259: "legislation",
        Q24789150: "software",
        Q16191258: "event",
        Q16974574: "event",
        Q16974580: "event",
        Q16974590: "event",
        Q15219210: "standard",
        Q16525012: "standard",
        Q18395045: "event",
        Q18589086: "event",
        Q21028317: "event",
        Q22019872: "event",
        Q24894176: "event",
        Q25022058: "event",
        Q67650225: "software",
        Q61125769: "legislation",
        Q96475230: "software",
        Q97185377: "legislation",
        Q108739976: "software",
        Q109496685: "software",
        Q109657450: "software",
        Q110647054: "software",
        Q111515096: "software",
        Q108311215: "legislation",
        Q884257: "map",
        Q111539646: "event",
        Q991335: "dataset",
        Q107415: "software",
        Q261918: "software",
        Q1193246: "software",
        Q1389380: "software",
        Q1632665: "software",
        Q1641902: "software",
        Q2368049: "software",
        Q3025858: "software",
        Q3715530: "software",
        Q5133829: "software",
        Q6044094: "software",
        Q6109327: "software",
        Q6165271: "software",
        Q6770906: "software",
        Q7574057: "software",
        Q486025: "book",
        Q83145: "event",
        Q177351: "event",
        Q208704: "event",
        Q719632: "event",
        Q896995: "event",
        Q901706: "event",
        Q1073526: "event",
        Q1158377: "event",
        Q1203320: "event",
        Q1327767: "event",
        Q1451837: "event",
        Q1499496: "event",
        Q1504429: "event",
        Q11224846: "software",
        Q1798173: "event",
        Q1801994: "event",
        Q1872987: "event",
        Q1879308: "event",
        Q11668228: "software",
        Q294956: "standard",
        Q2257070: "event",
        Q2314207: "event",
        Q2505535: "event",
        Q3143333: "event",
        Q3745603: "event",
        Q4336086: "event",
        Q4423961: "event",
        Q5250436: "event",
        Q5393721: "event",
        Q5797730: "event",
        Q5813725: "event",
        Q5813807: "event",
        Q6063435: "event",
        Q6150323: "event",
        Q6150714: "event",
        Q6784807: "event",
        Q7270559: "event",
        Q7270690: "event",
        Q7366192: "event",
        Q18156745: "software",
        Q9356162: "book",
        Q18377772: "software",
        Q20514253: "software",
        Q11284677: "event",
        Q25110971: "software",
        Q15824588: "event",
        Q19287565: "book",
        Q21050393: "event",
        Q25080094: "event",
        Q26772977: "event",
        Q28936291: "book",
        Q28368813: "event",
        Q28368897: "event",
        Q28402154: "event",
        Q28404860: "event",
        Q28404906: "event",
        Q28405010: "event",
        Q28405094: "event",
        Q39087072: "event",
        Q41707977: "event",
        Q41708808: "event",
        Q54593011: "event",
        Q55315917: "event",
        Q65682609: "event",
        Q85737192: "event",
        Q86755961: "event",
        Q97124825: "event",
        Q98381930: "event",
        Q98382194: "event",
        Q98382202: "event",
        Q98382211: "event",
        Q98382209: "event",
        Q98382216: "event",
        Q98382413: "event",
        Q108878058: "software",
        Q105476330: "event",
        Q105517947: "event",
        Q108657675: "event",
        Q112033376: "event",
        Q485228: "dataset",
        Q1359130: "dataset",
        Q3935817: "dataset",
        Q105637123: "performance",
        Q4765080: "broadcast",
        Q70373167: "regulation",
        Q7601206: "dataset",
        Q208189: "software",
        Q588289: "software",
        Q603555: "software",
        Q941283: "software",
        Q22575733: "periodical",
        Q2176159: "software",
        Q2454898: "software",
        Q2822898: "software",
        Q12485565: "broadcast",
        Q4375640: "software",
        Q16674705: "song",
        Q6886151: "software",
        Q7705753: "software",
        Q492175: "legislation",
        Q606639: "event",
        Q10334075: "software",
        Q11244274: "software",
        Q747499: "standard",
        Q2748940: "event",
        Q1208648: "standard",
        Q3351641: "event",
        Q1653454: "standard",
        Q1678488: "standard",
        Q2645429: "standard",
        Q4765148: "event",
        Q4851867: "event",
        Q4859824: "event",
        Q3146614: "standard",
        Q3146613: "standard",
        Q3146619: "standard",
        Q3146617: "standard",
        Q3146623: "standard",
        Q3146620: "standard",
        Q3146621: "standard",
        Q3146625: "standard",
        Q3146628: "standard",
        Q3146629: "standard",
        Q5449003: "legislation",
        Q5449006: "legislation",
        Q5449007: "legislation",
        Q5449005: "legislation",
        Q5449009: "legislation",
        Q25393087: "dataset",
        Q5185963: "event",
        Q89897004: "regulation",
        Q18822231: "software",
        Q12317905: "standard",
        Q18153387: "event",
        Q28135300: "software",
        Q1620079: "performance",
        Q20202982: "standard",
        Q30688666: "legislation",
        Q30672422: "event",
        Q54932319: "broadcast",
        Q60617834: "software",
        Q55226612: "event",
        Q1070654: "regulation",
        Q2111129: "regulation",
        Q2376629: "regulation",
        Q67650958: "software",
        Q56827160: "standard",
        Q56827161: "standard",
        Q77253697: "broadcast",
        Q61978471: "event",
        Q89273633: "broadcast",
        Q17004170: "regulation",
        Q108146417: "broadcast",
        Q110408389: "broadcast",
        Q110955215: "broadcast",
        Q92891824: "standard",
        Q100708729: "legislation",
        Q108444995: "event",
        Q7551149: "motion_picture",
        Q224377: "song",
        Q1331138: "dataset",
        Q1345076: "dataset",
        Q1786016: "song",
        Q5657245: "song",
        Q170434: "software",
        Q383826: "software",
        Q415298: "software",
        Q1047696: "software",
        Q1146030: "software",
        Q1326260: "software",
        Q1327157: "software",
        Q1369131: "software",
        Q2632782: "software",
        Q2990357: "software",
        Q2990366: "software",
        Q4751062: "software",
        Q4994515: "software",
        Q7360327: "software",
        Q7360332: "software",
        Q285320: "event",
        Q471881: "event",
        Q493742: "event",
        Q721067: "event",
        Q1053079: "event",
        Q1370066: "event",
        Q1474208: "event",
        Q1728634: "event",
        Q1757181: "event",
        Q2087929: "event",
        Q2413978: "event",
        Q22802895: "dataset",
        Q2899221: "event",
        Q2992826: "event",
        Q3126275: "event",
        Q3363711: "event",
        Q3642692: "event",
        Q2612841: "standard",
        Q25094598: "song",
        Q3513811: "standard",
        Q5508174: "event",
        Q6888651: "book",
        Q6631808: "event",
        Q5014995: "standard",
        Q7112919: "event",
        Q7622676: "standard",
        Q10382709: "event",
        Q10389571: "event",
        Q10938245: "event",
        Q11953147: "event",
        Q13744949: "event",
        Q15991290: "event",
        Q15991303: "event",
        Q25595203: "software",
        Q18536323: "event",
        Q28130009: "software",
        Q19704499: "event",
        Q20716290: "legislation",
        Q22251965: "event",
        Q26720971: "event",
        Q26857732: "event",
        Q28458043: "event",
        Q29224491: "event",
        Q30133162: "event",
        Q35069054: "event",
        Q42046473: "event",
        Q55621552: "software",
        Q51792175: "event",
        Q63067479: "software",
        Q60823510: "event",
        Q63349452: "event",
        Q75179210: "event",
        Q75179296: "event",
        Q108783737: "speech",
        Q92608103: "software",
        Q88358807: "event",
        Q111241357: "broadcast",
        Q110393272: "software",
        Q104537393: "event",
        Q106314805: "event",
        Q106725777: "event",
        Q106726544: "event",
        Q107579066: "event",
        Q512410: "song",
        Q854775: "song",
        Q1060750: "software",
        Q1076355: "software",
        Q1109779: "software",
        Q1265717: "software",
        Q1298366: "software",
        Q1397886: "software",
        Q1529437: "software",
        Q1882110: "software",
        Q12985461: "song",
        Q2641207: "software",
        Q3434466: "software",
        Q4042979: "software",
        Q4045294: "software",
        Q5923834: "software",
        Q170384: "book",
        Q258331: "book",
        Q9332384: "software",
        Q678489: "book",
        Q773298: "book",
        Q252496: "event",
        Q332814: "event",
        Q1190662: "book",
        Q567241: "event",
        Q736491: "event",
        Q1059464: "event",
        Q1414383: "event",
        Q2650956: "book",
        Q3084465: "book",
        Q3414877: "book",
        Q3246994: "legislation",
        Q2861432: "event",
        Q2916312: "event",
        Q1153410: "standard",
        Q3722602: "event",
        Q1952448: "standard",
        Q4482446: "event",
        Q4994137: "event",
        Q5513458: "event",
        Q5828909: "event",
        Q6024340: "event",
        Q7049544: "event",
        Q7096449: "event",
        Q7575667: "event",
        Q7575669: "event",
        Q7575672: "event",
        Q7575673: "event",
        Q7575676: "event",
        Q7575682: "event",
        Q6026738: "standard",
        Q10542416: "event",
        Q11267316: "book",
        Q11417718: "book",
        Q11489321: "book",
        Q11561935: "legislation",
        Q11656992: "book",
        Q17084138: "book",
        Q17146043: "event",
        Q22030032: "event",
        Q22266583: "event",
        Q4208567: "performance",
        Q4469861: "performance",
        Q25316241: "event",
        Q26885471: "event",
        Q28741065: "event",
        Q29976900: "book",
        Q50493233: "book",
        Q61654424: "software",
        Q457753: "regulation",
        Q674304: "regulation",
        Q746515: "regulation",
        Q941185: "regulation",
        Q1548025: "regulation",
        Q1751574: "regulation",
        Q61070574: "event",
        Q102430221: "broadcast",
        Q91021222: "event",
        Q105906396: "software",
        Q97487177: "event",
        Q97730452: "event",
        Q107631040: "software",
        Q111515094: "software",
        Q104715213: "event",
        Q105687604: "event",
        Q109606010: "event",
        Q55825971: "regulation",
        Q219897: "dataset",
        Q3482005: "dataset",
        Q5369900: "software",
        Q384445: "review",
        Q829179: "book",
        Q973917: "book",
        Q961652: "review",
        Q459555: "event",
        Q1363686: "book",
        Q890055: "event",
        Q1025586: "event",
        Q1274389: "event",
        Q1307227: "event",
        Q11198227: "software",
        Q1674216: "event",
        Q1980316: "event",
        Q2115187: "event",
        Q3012407: "book",
        Q2406578: "event",
        Q3077811: "event",
        Q3497179: "event",
        Q3586558: "event",
        Q3586559: "event",
        Q3587380: "event",
        Q4128590: "event",
        Q4128699: "event",
        Q4926165: "book",
        Q4985019: "book",
        Q4592477: "event",
        Q5518574: "event",
        Q6980675: "review",
        Q7185370: "event",
        Q7241485: "event",
        Q7405556: "event",
        Q10862680: "event",
        Q96107414: "regulation",
        Q96107484: "regulation",
        Q17092694: "standard",
        Q2078967: "performance",
        Q28692660: "event",
        Q31297261: "event",
        Q33146420: "standard",
        Q50284081: "event",
        Q61722278: "software",
        Q1941439: "regulation",
        Q58959170: "book",
        Q59590412: "book",
        Q59604726: "book",
        Q4856329: "regulation",
        Q4856345: "regulation",
        Q4856361: "regulation",
        Q59773383: "event",
        Q5717821: "regulation",
        Q61756860: "event",
        Q61888674: "event",
        Q62713833: "book",
        Q71683375: "software",
        Q11833245: "regulation",
        Q13417108: "regulation",
        Q47566: "event",
        Q84862062: "review",
        Q30589394: "regulation",
        Q30671797: "regulation",
        Q106355253: "book",
        Q106355975: "book",
        Q109668823: "event",
        Q110554613: "book",
        Q110111461: "event",
        Q112045689: "book",
        Q111594597: "event",
        Q111703192: "event",
        Q478679: "broadcast",
        Q2385777: "dataset",
        Q12304354: "article-newspaper",
        Q5260569: "dataset",
        Q93249: "software",
        Q373110: "software",
        Q567624: "software",
        Q745881: "software",
        Q833766: "software",
        Q1037622: "software",
        Q2025943: "software",
        Q3905195: "software",
        Q4713339: "software",
        Q4774499: "software",
        Q4774525: "software",
        Q4825890: "software",
        Q5656691: "software",
        Q7978562: "software",
        Q114811: "event",
        Q735641: "event",
        Q884103: "event",
        Q10655706: "software",
        Q1183238: "event",
        Q1416059: "event",
        Q1499600: "event",
        Q1548628: "event",
        Q2212408: "review",
        Q1824674: "event",
        Q183484: "standard",
        Q3332850: "book",
        Q3298250: "event",
        Q13429867: "software",
        Q4243924: "event",
        Q3698833: "standard",
        Q4781177: "standard",
        Q10638581: "event",
        Q11366960: "event",
        Q11564376: "event",
        Q11930795: "event",
        Q12046982: "event",
        Q12057768: "event",
        Q12778811: "event",
        Q15146717: "event",
        Q15779876: "event",
        Q16361747: "event",
        Q17269186: "event",
        Q17301632: "event",
        Q26921397: "software",
        Q18285098: "event",
        Q18698522: "event",
        Q16927922: "standard",
        Q19801853: "event",
        Q20053795: "event",
        Q22337503: "event",
        Q22341340: "event",
        Q3930216: "performance",
        Q23498202: "event",
        Q24069004: "event",
        Q26267877: "event",
        Q26338179: "event",
        Q24705172: "standard",
        Q24895600: "standard",
        Q25106376: "standard",
        Q28545697: "event",
        Q28664499: "event",
        Q29054285: "event",
        Q34542757: "event",
        Q47484406: "event",
        Q46331372: "standard",
        Q54257384: "event",
        Q1047352: "regulation",
        Q1452606: "regulation",
        Q1511642: "regulation",
        Q1618728: "regulation",
        Q1885318: "regulation",
        Q2425869: "regulation",
        Q3306798: "regulation",
        Q4368931: "regulation",
        Q40612: "software",
        Q5446829: "regulation",
        Q60676589: "event",
        Q67175754: "book",
        Q87319988: "event",
        Q99904346: "software",
        Q97016907: "event",
        Q105751138: "event",
        Q106690408: "event",
        Q106691665: "event",
        Q108798661: "event",
        Q4499627: "song",
        Q815820: "software",
        Q1325927: "software",
        Q3257939: "software",
        Q24826340: "periodical",
        Q5182402: "software",
        Q209680: "book",
        Q385530: "book",
        Q231039: "legislation",
        Q556900: "book",
        Q612405: "book",
        Q668439: "book",
        Q867870: "book",
        Q261282: "event",
        Q281558: "event",
        Q976646: "book",
        Q1070955: "book",
        Q1100782: "book",
        Q467557: "event",
        Q1153367: "book",
        Q1191035: "book",
        Q1005841: "legislation",
        Q1006175: "legislation",
        Q626723: "event",
        Q1309200: "legislation",
        Q1416468: "legislation",
        Q985655: "event",
        Q1136848: "event",
        Q1202197: "event",
        Q1940409: "legislation",
        Q11064557: "software",
        Q1664977: "event",
        Q2986204: "book",
        Q2450914: "event",
        Q3481480: "book",
        Q1060131: "standard",
        Q2951085: "event",
        Q1163955: "standard",
        Q1629076: "standard",
        Q4451306: "book",
        Q4921034: "event",
        Q3702356: "standard",
        Q6433093: "event",
        Q7133779: "book",
        Q7630946: "book",
        Q8210687: "event",
        Q18351283: "software",
        Q10914523: "event",
        Q11554370: "event",
        Q12021385: "event",
        Q12867166: "event",
        Q12867171: "event",
        Q12871890: "standard",
        Q15256689: "event",
        Q16164739: "book",
        Q16044494: "event",
        Q16323290: "event",
        Q16934675: "event",
        Q17591033: "legislation",
        Q17998502: "event",
        Q18662453: "event",
        Q19745541: "event",
        Q19844610: "event",
        Q105561045: "regulation",
        Q24884579: "event",
        Q28724885: "event",
        Q28724890: "event",
        Q41795401: "book",
        Q61791393: "software",
        Q54803583: "event",
        Q56063032: "standard",
        Q56063221: "standard",
        Q62018894: "book",
        Q62071638: "event",
        Q7973803: "regulation",
        Q64025364: "event",
        Q66603542: "event",
        Q66603543: "event",
        Q66603544: "event",
        Q66615612: "event",
        Q66659576: "event",
        Q66724548: "event",
        Q47223: "event",
        Q72164270: "book",
        Q105581148: "periodical",
        Q79136391: "standard",
        Q30680962: "regulation",
        Q100235486: "standard",
        Q104630996: "event",
        Q108408336: "event",
        Q109536021: "event",
        Q110805611: "event",
        Q70453138: "regulation",
        Q106654239: "performance",
        Q188860: "software",
        Q193231: "software",
        Q212474: "software",
        Q523796: "software",
        Q545406: "software",
        Q580334: "software",
        Q913697: "software",
        Q1199316: "software",
        Q1487455: "software",
        Q1727373: "software",
        Q1780936: "software",
        Q2164323: "software",
        Q2391834: "software",
        Q2640620: "software",
        Q2727468: "software",
        Q4343954: "software",
        Q5145831: "software",
        Q6456989: "software",
        Q6953261: "software",
        Q429767: "book",
        Q715768: "book",
        Q455444: "event",
        Q467938: "event",
        Q468731: "event",
        Q485644: "event",
        Q488526: "event",
        Q643292: "event",
        Q1048801: "event",
        Q1123217: "event",
        Q1484421: "event",
        Q2477849: "book",
        Q133973: "standard",
        Q1975250: "event",
        Q2139567: "event",
        Q2319714: "event",
        Q3140617: "book",
        Q5147136: "book",
        Q3146606: "standard",
        Q3146610: "standard",
        Q3146609: "standard",
        Q3146612: "standard",
        Q5727698: "book",
        Q5368590: "event",
        Q6059065: "book",
        Q15618492: "software",
        Q6827710: "event",
        Q17073339: "software",
        Q17088419: "software",
        Q7688876: "event",
        Q13732971: "event",
        Q14554958: "event",
        Q28059995: "software",
        Q18575573: "event",
        Q19877485: "event",
        Q20739115: "event",
        Q30671703: "software",
        Q22328415: "event",
        Q24833619: "event",
        Q26805735: "event",
        Q10360435: "performance",
        Q39185662: "software",
        Q30178840: "event",
        Q31886929: "event",
        Q39046297: "event",
        Q28721502: "performance",
        Q48745331: "event",
        Q52230346: "event",
        Q366193: "regulation",
        Q883708: "regulation",
        Q56315696: "event",
        Q3773715: "regulation",
        Q4923501: "regulation",
        Q5657858: "regulation",
        Q6746707: "regulation",
        Q72846320: "event",
        Q74595662: "event",
        Q83493046: "event",
        Q84588901: "event",
        Q84589021: "event",
        Q85852394: "event",
        Q99542992: "software",
        Q101111163: "software",
        Q107819359: "software",
        Q101246147: "event",
        Q105581094: "event",
        Q105754052: "event",
        Q106638042: "event",
        Q108430097: "event",
        Q109315463: "book",
        Q111280042: "standard",
        Q111288275: "standard",
        Q111366443: "standard",
        Q111426478: "standard",
        Q111489535: "standard",
        Q111588257: "standard",
        Q2889327: "dataset",
        Q11310550: "dataset",
        Q1198122: "software",
        Q1370727: "software",
        Q2281709: "software",
        Q2509091: "software",
        Q2639241: "software",
        Q7063032: "software",
        Q18086661: "dataset",
        Q18086666: "dataset",
        Q18086667: "dataset",
        Q18086665: "dataset",
        Q18889352: "dataset",
        Q20005020: "dataset",
        Q82991: "event",
        Q205570: "event",
        Q239973: "event",
        Q270088: "event",
        Q273469: "event",
        Q327110: "event",
        Q422986: "event",
        Q428526: "event",
        Q506424: "event",
        Q542554: "event",
        Q551817: "event",
        Q596886: "event",
        Q610865: "event",
        Q627485: "event",
        Q639244: "event",
        Q646317: "event",
        Q1334257: "book",
        Q1381447: "song",
        Q1254652: "event",
        Q1591510: "event",
        Q1673136: "event",
        Q191943: "standard",
        Q206494: "standard",
        Q272165: "standard",
        Q2358647: "event",
        Q3327521: "software",
        Q908608: "standard",
        Q1092688: "standard",
        Q1193479: "standard",
        Q1252368: "standard",
        Q21629439: "broadcast",
        Q1414155: "standard",
        Q4082733: "book",
        Q4400636: "book",
        Q1943286: "standard",
        Q5192593: "book",
        Q4926628: "event",
        Q25336664: "dataset",
        Q3306713: "standard",
        Q3997677: "standard",
        Q9190324: "song",
        Q18344624: "software",
        Q7551852: "standard",
        Q11288680: "book",
        Q11571348: "book",
        Q9326126: "standard",
        Q12164319: "book",
        Q21490628: "software",
        Q12237265: "standard",
        Q16934823: "standard",
        Q17074885: "standard",
        Q18413104: "standard",
        Q31839143: "software",
        Q55521408: "dataset",
        Q47401041: "event",
        Q58325919: "software",
        Q58898459: "software",
        Q60616268: "software",
        Q60617574: "software",
        Q65007441: "software",
        Q1416368: "regulation",
        Q11871: "book",
        Q6843: "event",
        Q16640: "event",
        Q31668: "event",
        Q46326: "event",
        Q103109864: "motion_picture",
        Q101416734: "dataset",
        Q92257769: "software",
        Q96146141: "software",
        Q111148855: "dataset",
        Q107576803: "book",
        Q108100335: "book",
        Q108864219: "event",
        Q661101: "event",
        Q725909: "event",
        Q765057: "event",
        Q781192: "event",
        Q806391: "event",
        Q819951: "event",
        Q845098: "event",
        Q909300: "event",
        Q911134: "event",
        Q932452: "event",
        Q936619: "event",
        Q943691: "event",
        Q953415: "event",
        Q975128: "event",
        Q979298: "event",
        Q1034242: "event",
        Q1112779: "event",
        Q1112958: "event",
        Q1128219: "event",
        Q1141381: "event",
        Q1145925: "event",
        Q1162779: "event",
        Q1191199: "event",
        Q1205063: "event",
        Q1284388: "event",
        Q1319876: "event",
        Q1399526: "event",
        Q1413606: "event",
        Q1415179: "event",
        Q1473250: "event",
        Q1515869: "event",
        Q1517419: "event",
        Q1531542: "event",
        Q1754117: "event",
        Q1755998: "event",
        Q1812109: "event",
        Q1870596: "event",
        Q2005506: "event",
        Q2083108: "event",
        Q2244992: "event",
        Q2270699: "event",
        Q2283223: "event",
        Q2348572: "event",
        Q2439750: "event",
        Q2468836: "event",
        Q2557178: "event",
        Q2564304: "event",
        Q2610233: "event",
        Q2953911: "event",
        Q2954142: "event",
        Q2955477: "event",
        Q2955692: "event",
        Q3063011: "event",
        Q3334740: "event",
        Q3461806: "event",
        Q3654350: "event",
        Q4511512: "event",
        Q4511568: "event",
        Q4638793: "event",
        Q4774455: "event",
        Q5450960: "event",
        Q5974617: "event",
        Q6139189: "event",
        Q8035610: "event",
        Q10711847: "event",
        Q11339103: "event",
        Q11783508: "event",
        Q11783509: "event",
        Q12365621: "event",
        Q12594341: "event",
        Q14518260: "event",
        Q15855106: "event",
        Q16717546: "event",
        Q17379619: "event",
        Q18170326: "event",
        Q21055703: "event",
        Q21804572: "event",
        Q21804580: "event",
        Q21809337: "event",
        Q21857771: "event",
        Q22669035: "event",
        Q23425564: "event",
        Q25038435: "event",
        Q25379789: "event",
        Q25383937: "event",
        Q26709563: "event",
        Q28793120: "event",
        Q30899369: "event",
        Q55729484: "event",
        Q61056709: "event",
        Q61459801: "event",
        Q63891765: "event",
        Q75058565: "event",
        Q102277744: "event",
        Q105769000: "event",
        Q106949747: "event",
        Q107251839: "event",
        Q108485992: "event",
        Q865585: "periodical",
        Q3399338: "periodical",
        Q4433771: "periodical",
        Q399811: "broadcast",
        Q12898151: "periodical",
        Q1658957: "broadcast",
        Q1786567: "broadcast",
        Q4382232: "broadcast",
        Q16000113: "periodical",
        Q5219865: "broadcast",
        Q11086745: "broadcast",
        Q4011359: "software",
        Q5156780: "software",
        Q14509702: "broadcast",
        Q80767: "event",
        Q129292: "event",
        Q129455: "event",
        Q223251: "event",
        Q252397: "event",
        Q429292: "event",
        Q579095: "event",
        Q648257: "event",
        Q688127: "event",
        Q913063: "event",
        Q929905: "event",
        Q935708: "event",
        Q1141321: "event",
        Q1257251: "event",
        Q1319755: "event",
        Q1376517: "event",
        Q1397416: "event",
        Q1467563: "event",
        Q1499149: "event",
        Q19952572: "broadcast",
        Q1503455: "event",
        Q1622604: "event",
        Q1663817: "event",
        Q1810789: "event",
        Q1839475: "event",
        Q1948986: "event",
        Q1983915: "event",
        Q2066197: "event",
        Q2144108: "event",
        Q2166202: "event",
        Q2185592: "event",
        Q2419773: "event",
        Q2462288: "event",
        Q2553885: "event",
        Q2609547: "event",
        Q2651160: "event",
        Q2949471: "event",
        Q2949521: "event",
        Q2954449: "event",
        Q2954514: "event",
        Q3375071: "event",
        Q3652861: "event",
        Q3653395: "event",
        Q3653952: "event",
        Q3789959: "event",
        Q5360132: "event",
        Q5412228: "event",
        Q5413453: "event",
        Q5424338: "event",
        Q28195059: "broadcast",
        Q11346229: "event",
        Q12362452: "event",
        Q13440232: "event",
        Q14923870: "event",
        Q15714635: "event",
        Q16467746: "event",
        Q16849691: "event",
        Q17075088: "event",
        Q17335201: "event",
        Q17335214: "event",
        Q18061350: "event",
        Q18125614: "event",
        Q18125699: "event",
        Q18397818: "event",
        Q18416783: "event",
        Q18711024: "event",
        Q18712912: "event",
        Q20747438: "event",
        Q21234541: "event",
        Q21234774: "event",
        Q25399151: "event",
        Q27027131: "event",
        Q28151532: "event",
        Q31897668: "event",
        Q33219694: "event",
        Q41497558: "event",
        Q42309070: "event",
        Q47289823: "event",
        Q48862215: "event",
        Q23739: "broadcast",
        Q23745: "broadcast",
        Q85879530: "periodical",
        Q56325600: "event",
        Q76160317: "broadcast",
        Q108828376: "event",
        Q111254004: "book",
        Q111655411: "event",
        Q1428914: "dataset",
        Q3136090: "dataset",
        Q22810230: "report",
        Q263233: "event",
        Q285957: "performance",
        Q361909: "event",
        Q462100: "event",
        Q1038199: "event",
        Q1185865: "event",
        Q1456010: "event",
        Q1501864: "event",
        Q2882210: "book",
        Q2919068: "book",
        Q2428138: "event",
        Q3058662: "review",
        Q3511337: "book",
        Q3620728: "book",
        Q3153927: "event",
        Q3797537: "event",
        Q4229193: "event",
        Q4958902: "event",
        Q6541336: "event",
        Q7322369: "event",
        Q7892643: "event",
        Q7892641: "event",
        Q7892647: "event",
        Q7893535: "event",
        Q7893537: "event",
        Q11279175: "event",
        Q12079472: "event",
        Q16981125: "event",
        Q18357042: "event",
        Q23962616: "event",
        Q26887310: "book",
        Q26894053: "book",
        Q26895936: "book",
        Q26896697: "book",
        Q27020779: "book",
        Q26988085: "event",
        Q30889662: "event",
        Q48977411: "event",
        Q48977459: "event",
        Q50862300: "event",
        Q492886: "regulation",
        Q762034: "regulation",
        Q56063508: "event",
        Q1399956: "regulation",
        Q56399237: "event",
        Q60526674: "event",
        Q61519036: "event",
        Q61519203: "event",
        Q61519381: "event",
        Q61519759: "event",
        Q61519892: "event",
        Q61520114: "event",
        Q61520261: "event",
        Q7007379: "regulation",
        Q61984600: "event",
        Q65028060: "event",
        Q87328118: "dataset",
        Q68708725: "event",
        Q14167904: "regulation",
        Q69152161: "event",
        Q69426776: "event",
        Q69499553: "event",
        Q69505214: "event",
        Q69580701: "event",
        Q69881200: "event",
        Q71271906: "event",
        Q88181393: "event",
        Q97359920: "event",
        Q101087116: "event",
        Q104761176: "event",
        Q104901635: "event",
        Q105535583: "event",
        Q105535632: "event",
        Q106018406: "event",
        Q107377714: "event",
        Q107649955: "event",
        Q108570960: "review",
        Q107976231: "event",
        Q108131727: "event",
        Q110880374: "performance",
        Q111425780: "performance",
        Q273057: "dataset",
        Q1371849: "dataset",
        Q1391116: "dataset",
        Q1569406: "dataset",
        Q1609353: "dataset",
        Q2033233: "dataset",
        Q2110197: "dataset",
        Q3962380: "dataset",
        Q4769616: "dataset",
        Q104254982: "performance",
        Q104508698: "performance",
        Q5615468: "dataset",
        Q6822329: "dataset",
        Q7144753: "dataset",
        Q107291016: "performance",
        Q108296071: "performance",
        Q108854146: "performance",
        Q536420: "software",
        Q578868: "software",
        Q868217: "software",
        Q1036289: "software",
        Q1190228: "software",
        Q1199309: "software",
        Q1311927: "software",
        Q1339223: "software",
        Q12331427: "dataset",
        Q1718710: "software",
        Q1759397: "software",
        Q1790389: "software",
        Q2097762: "software",
        Q2576999: "software",
        Q3177954: "software",
        Q3775539: "software",
        Q5432283: "software",
        Q7551387: "software",
        Q7708433: "software",
        Q1798316: "event",
        Q11756212: "software",
        Q2333803: "performance",
        Q24879310: "dataset",
        Q26876682: "dataset",
        Q14551913: "book",
        Q131510: "performance",
        Q1433428: "performance",
        Q1957470: "performance",
        Q2489759: "performance",
        Q34685933: "software",
        Q29032784: "book",
        Q59156045: "dataset",
        Q59156132: "dataset",
        Q59156152: "dataset",
        Q59156183: "dataset",
        Q59156192: "dataset",
        Q59156210: "dataset",
        Q59156238: "dataset",
        Q59156244: "dataset",
        Q59156256: "dataset",
        Q59156264: "dataset",
        Q59156692: "dataset",
        Q59156700: "dataset",
        Q59156710: "dataset",
        Q59156725: "dataset",
        Q59156734: "dataset",
        Q59156741: "dataset",
        Q59156767: "dataset",
        Q60586493: "dataset",
        Q25396338: "performance",
        Q55058128: "software",
        Q53532033: "book",
        Q53534649: "book",
        Q53538403: "book",
        Q53538476: "book",
        Q53642685: "book",
        Q58841951: "book",
        Q71474253: "software",
        Q106764019: "software",
        Q111149309: "software",
        Q111549183: "software",
        Q109023693: "event",
        Q2872429: "periodical",
        Q751424: "software",
        Q830340: "software",
        Q1440548: "software",
        Q1966904: "software",
        Q2467894: "software",
        Q5454233: "software",
        Q6805426: "software",
        Q7554269: "software",
        Q7593080: "software",
        Q688869: "book",
        Q1292786: "review",
        Q1253781: "event",
        Q1443249: "event",
        Q11350034: "software",
        Q2114776: "event",
        Q2117807: "event",
        Q2156219: "event",
        Q431028: "standard",
        Q2542485: "event",
        Q939636: "standard",
        Q1047541: "standard",
        Q1072083: "standard",
        Q1122267: "standard",
        Q2977046: "event",
        Q13199995: "software",
        Q1961044: "standard",
        Q2044200: "standard",
        Q3879024: "event",
        Q3898276: "performance",
        Q3054349: "standard",
        Q5326799: "event",
        Q3564764: "standard",
        Q6084566: "event",
        Q6269530: "event",
        Q5421990: "standard",
        Q7574869: "event",
        Q7894502: "event",
        Q10655129: "event",
        Q10655253: "event",
        Q10711120: "event",
        Q11141294: "event",
        Q11410200: "event",
        Q11434242: "event",
        Q11500116: "event",
        Q11573620: "event",
        Q12593167: "event",
        Q17149938: "book",
        Q18694350: "event",
        Q22134877: "event",
        Q22276038: "event",
        Q22909636: "event",
        Q25385905: "event",
        Q25999227: "event",
        Q27826498: "event",
        Q34262807: "event",
        Q34542788: "event",
        Q42170175: "event",
        Q47221960: "event",
        Q47240905: "event",
        Q47466753: "event",
        Q50288571: "event",
        Q51158871: "standard",
        Q57450669: "event",
        Q74086777: "software",
        Q2078: "standard",
        Q77023152: "event",
        Q85680242: "event",
        Q87337481: "event",
        Q87764589: "event",
        Q87768669: "event",
        Q88456792: "event",
        Q102128235: "software",
        Q96754639: "event",
        Q98807712: "event",
        Q108575058: "software",
        Q105717058: "event",
        Q107580332: "event",
        Q108408357: "event",
        Q277583: "manuscript",
        Q568765: "periodical",
        Q110611344: "event",
        Q3402519: "periodical",
        Q5769583: "motion_picture",
        Q5769580: "motion_picture",
        Q5769586: "motion_picture",
        Q5769589: "motion_picture",
        Q5769592: "motion_picture",
        Q1752462: "dataset",
        Q12016659: "periodical",
        Q2663608: "song",
        Q763744: "software",
        Q870780: "software",
        Q918333: "software",
        Q1142726: "software",
        Q1283077: "software",
        Q3277848: "software",
        Q3467906: "software",
        Q4112110: "software",
        Q4826465: "software",
        Q202344: "book",
        Q339091: "book",
        Q393148: "book",
        Q653101: "book",
        Q206959: "event",
        Q257913: "event",
        Q935452: "book",
        Q1314918: "book",
        Q704813: "event",
        Q857981: "event",
        Q1006573: "event",
        Q1009297: "event",
        Q1009301: "event",
        Q1153918: "event",
        Q1203886: "event",
        Q1638749: "event",
        Q1780972: "event",
        Q2538131: "book",
        Q1925193: "event",
        Q2049711: "event",
        Q2166448: "event",
        Q2212942: "event",
        Q2299201: "event",
        Q2340640: "event",
        Q2431923: "event",
        Q2583784: "event",
        Q3376272: "book",
        Q3488759: "book",
        Q3246424: "event",
        Q3625361: "event",
        Q3686096: "performance",
        Q4311799: "review",
        Q4156666: "event",
        Q5196998: "event",
        Q5570137: "event",
        Q6055821: "legislation",
        Q6061510: "event",
        Q6815921: "event",
        Q6898689: "event",
        Q6941403: "event",
        Q11265757: "event",
        Q12351927: "event",
        Q13157160: "event",
        Q15089348: "event",
        Q15875625: "event",
        Q15973082: "event",
        Q17321236: "book",
        Q20107140: "event",
        Q20181485: "event",
        Q20603222: "event",
        Q20807545: "event",
        Q21115086: "event",
        Q22160401: "event",
        Q24198315: "event",
        Q25048962: "performance",
        Q27630524: "performance",
        Q57326878: "software",
        Q53566454: "book",
        Q57776091: "event",
        Q57776190: "event",
        Q60723717: "event",
        Q60988014: "event",
        Q64004398: "event",
        Q13959: "event",
        Q56909: "event",
        Q85801888: "software",
        Q97496940: "event",
        Q106613434: "event",
        Q109019267: "book",
        Q3310463: "dataset",
        Q4842492: "dataset",
        Q6530268: "dataset",
        Q235131: "book",
        Q425943: "event",
        Q602900: "event",
        Q671111: "event",
        Q698654: "event",
        Q716176: "event",
        Q849095: "event",
        Q864463: "event",
        Q918346: "event",
        Q1007356: "event",
        Q1057954: "event",
        Q1128324: "event",
        Q1201816: "event",
        Q1202269: "event",
        Q1207217: "event",
        Q1370841: "event",
        Q1540633: "event",
        Q1572106: "event",
        Q2041542: "legislation",
        Q1665609: "event",
        Q210700: "standard",
        Q2112448: "event",
        Q2177183: "event",
        Q2243695: "event",
        Q2385043: "event",
        Q2409723: "event",
        Q1428844: "standard",
        Q1535269: "standard",
        Q1653458: "standard",
        Q3587147: "event",
        Q3587148: "event",
        Q4370097: "book",
        Q4384332: "book",
        Q4058302: "event",
        Q4127445: "event",
        Q4127470: "event",
        Q4193497: "event",
        Q4201985: "event",
        Q4216626: "event",
        Q4288581: "event",
        Q4289143: "event",
        Q4303936: "event",
        Q4333828: "event",
        Q4369093: "event",
        Q4400789: "event",
        Q4466245: "event",
        Q4824471: "event",
        Q4852690: "event",
        Q5100410: "event",
        Q5827809: "event",
        Q6067231: "event",
        Q7432143: "event",
        Q5970272: "standard",
        Q7865794: "event",
        Q7878497: "event",
        Q7890695: "event",
        Q7890774: "event",
        Q7890780: "event",
        Q8241475: "event",
        Q8242546: "event",
        Q10340639: "event",
        Q10340642: "event",
        Q10340643: "event",
        Q10340640: "event",
        Q10824155: "event",
        Q10860648: "event",
        Q11723196: "event",
        Q11862935: "event",
        Q11918755: "event",
        Q11918770: "event",
        Q12033797: "event",
        Q12041763: "event",
        Q12042582: "event",
        Q12090908: "event",
        Q13679033: "standard",
        Q17019867: "book",
        Q16911184: "event",
        Q17099653: "event",
        Q19128706: "book",
        Q18479521: "event",
        Q19870925: "event",
        Q21637595: "event",
        Q23688115: "event",
        Q24389253: "event",
        Q24659965: "event",
        Q28136455: "book",
        Q27644483: "event",
        Q28677340: "event",
        Q47472773: "event",
        Q56254033: "event",
        Q56316064: "event",
        Q113: "event",
        Q52641: "standard",
        Q93771184: "dataset",
        Q90403399: "event",
        Q96374831: "book",
        Q100235449: "event",
        Q3722420: "event",
        Q4128600: "event",
        Q5116010: "event",
        Q5518656: "event",
        Q5827551: "event",
        Q5828421: "event",
        Q6518201: "event",
        Q7232773: "event",
        Q10271596: "event",
        Q10271606: "event",
        Q10660882: "event",
        Q11366961: "event",
        Q11931634: "event",
        Q12311825: "event",
        Q12323704: "event",
        Q12778795: "event",
        Q14509381: "event",
        Q14516417: "event",
        Q15273379: "event",
        Q15283424: "event",
        Q16939528: "event",
        Q17317594: "event",
        Q18248981: "event",
        Q22160105: "event",
        Q22160112: "event",
        Q22160120: "event",
        Q22160593: "event",
        Q22162827: "event",
        Q22266213: "event",
        Q22266255: "event",
        Q22266624: "event",
        Q22266709: "event",
        Q22268901: "event",
        Q22269206: "event",
        Q22269333: "event",
        Q22269349: "event",
        Q22275878: "event",
        Q22275938: "event",
        Q22275982: "event",
        Q22276008: "event",
        Q22276080: "event",
        Q22276155: "event",
        Q22276186: "event",
        Q22276264: "event",
        Q22276298: "event",
        Q22276316: "event",
        Q22280876: "event",
        Q22280897: "event",
        Q22281036: "event",
        Q22283539: "event",
        Q22284407: "event",
        Q22330752: "event",
        Q22330839: "event",
        Q22330909: "event",
        Q22330922: "event",
        Q22333025: "event",
        Q22333190: "event",
        Q22333339: "event",
        Q22333685: "event",
        Q22338585: "event",
        Q22338592: "event",
        Q22341275: "event",
        Q22341286: "event",
        Q22341320: "event",
        Q22341339: "event",
        Q22342153: "event",
        Q22342180: "event",
        Q22342211: "event",
        Q22342918: "event",
        Q22342927: "event",
        Q22342947: "event",
        Q22342957: "event",
        Q22343980: "event",
        Q22442768: "event",
        Q22442774: "event",
        Q22442788: "event",
        Q22669381: "event",
        Q22669427: "event",
        Q22669480: "event",
        Q22669513: "event",
        Q22669521: "event",
        Q22669525: "event",
        Q22669531: "event",
        Q22669585: "event",
        Q22669603: "event",
        Q22669601: "event",
        Q22669606: "event",
        Q22669618: "event",
        Q22669625: "event",
        Q22669632: "event",
        Q22669642: "event",
        Q22695893: "event",
        Q22695898: "event",
        Q22695896: "event",
        Q22695905: "event",
        Q22696274: "event",
        Q22696377: "event",
        Q22696383: "event",
        Q22696395: "event",
        Q22696400: "event",
        Q110453684: "event",
        Q1428162: "song",
        Q4440575: "song",
        Q4763551: "song",
        Q80735: "software",
        Q137341: "event",
        Q769451: "event",
        Q786705: "event",
        Q1515229: "event",
        Q1753160: "event",
        Q2374581: "event",
        Q2997934: "event",
        Q2997943: "event",
        Q3367750: "event",
        Q5353623: "event",
        Q5629417: "event",
        Q6025903: "event",
        Q6952729: "event",
        Q11865368: "event",
        Q12876999: "event",
        Q16553259: "event",
        Q22696414: "event",
        Q22703992: "event",
        Q22704005: "event",
        Q22704041: "event",
        Q24176296: "event",
        Q24176345: "event",
        Q24177311: "event",
        Q24178659: "event",
        Q24179666: "event",
        Q24180344: "event",
        Q24182685: "event",
        Q24183035: "event",
        Q24332812: "event",
        Q24333627: "event",
        Q24397514: "event",
        Q24410897: "event",
        Q24452127: "event",
        Q24541623: "event",
        Q24558942: "event",
        Q24566658: "event",
        Q24567296: "event",
        Q24568879: "event",
        Q24576690: "event",
        Q24618255: "event",
        Q24659969: "event",
        Q24706075: "event",
        Q24712693: "event",
        Q24713040: "event",
        Q24713657: "event",
        Q24713744: "event",
        Q24714461: "event",
        Q24714562: "event",
        Q24715089: "event",
        Q24715171: "event",
        Q24715411: "event",
        Q24718538: "event",
        Q24718627: "event",
        Q24718981: "event",
        Q25343327: "event",
        Q25343622: "event",
        Q25343631: "event",
        Q25343628: "event",
        Q25343650: "event",
        Q25343648: "event",
        Q25367811: "event",
        Q25367878: "event",
        Q25367968: "event",
        Q25369215: "event",
        Q25369324: "event",
        Q25369733: "event",
        Q25448839: "event",
        Q25448932: "event",
        Q25455090: "event",
        Q25467156: "event",
        Q25467527: "event",
        Q25517032: "event",
        Q25531251: "event",
        Q25532438: "event",
        Q25532583: "event",
        Q25534775: "event",
        Q25535282: "event",
        Q25544724: "event",
        Q25546854: "event",
        Q25548021: "event",
        Q28333164: "event",
        Q28649370: "event",
        Q29054308: "event",
        Q30139181: "event",
        Q30579807: "event",
        Q47516525: "event",
        Q26473: "song",
        Q49637768: "event",
        Q56185179: "event",
        Q56315594: "event",
        Q56364341: "event",
        Q56821073: "event",
        Q56821289: "event",
        Q26284: "event",
        Q84035267: "event",
        Q8054833: "song",
        Q182154: "book",
        Q121571: "event",
        Q255117: "event",
        Q265736: "event",
        Q268554: "event",
        Q280275: "event",
        Q281886: "event",
        Q281917: "event",
        Q282166: "event",
        Q298589: "event",
        Q320757: "event",
        Q334939: "event",
        Q384681: "event",
        Q386830: "event",
        Q429896: "event",
        Q477435: "event",
        Q488647: "event",
        Q524624: "event",
        Q581504: "event",
        Q582082: "event",
        Q648028: "event",
        Q998170: "event",
        Q1190392: "event",
        Q1411753: "event",
        Q1475062: "event",
        Q2000006: "event",
        Q2142411: "event",
        Q2299288: "event",
        Q2813537: "event",
        Q2862138: "event",
        Q2937412: "event",
        Q2955927: "event",
        Q2963375: "event",
        Q3052147: "event",
        Q3128742: "event",
        Q3139335: "event",
        Q3150010: "event",
        Q3151565: "event",
        Q3237804: "event",
        Q3304723: "event",
        Q3328467: "event",
        Q3338981: "event",
        Q3362755: "event",
        Q3519336: "event",
        Q3528162: "event",
        Q5151822: "book",
        Q4826550: "event",
        Q5171014: "event",
        Q5172488: "event",
        Q5178491: "event",
        Q5370451: "event",
        Q7048853: "event",
        Q7116323: "event",
        Q7304831: "event",
        Q7520824: "event",
        Q7815021: "event",
        Q7927469: "event",
        Q11328695: "event",
        Q15696873: "event",
        Q15697091: "event",
        Q16974177: "event",
        Q18694280: "book",
        Q18157090: "event",
        Q18480501: "event",
        Q19877750: "event",
        Q22095239: "event",
        Q22095399: "event",
        Q22095608: "event",
        Q22096254: "event",
        Q22931433: "event",
        Q24204538: "event",
        Q25415999: "event",
        Q30639095: "event",
        Q38498738: "event",
        Q39059968: "event",
        Q41888576: "event",
        Q48843376: "event",
        Q60753395: "event",
        Q63860280: "book",
        Q65043763: "event",
        Q65043766: "event",
        Q65043772: "event",
        Q65043982: "event",
        Q65043992: "event",
        Q65044827: "event",
        Q21884: "event",
        Q109523071: "song",
        Q104767287: "event",
        Q105283586: "event",
        Q106000106: "event",
        Q106377263: "event",
        Q106377266: "event",
        Q106377264: "event",
        Q106377265: "event",
        Q106901434: "event",
        Q648675: "event",
        Q654498: "event",
        Q654565: "event",
        Q675723: "event",
        Q680152: "event",
        Q680171: "event",
        Q744755: "event",
        Q749413: "event",
        Q774486: "event",
        Q776166: "event",
        Q778692: "event",
        Q783734: "event",
        Q800165: "event",
        Q828160: "event",
        Q848797: "event",
        Q854376: "event",
        Q910409: "event",
        Q919370: "event",
        Q919638: "event",
        Q927779: "event",
        Q936915: "event",
        Q941111: "event",
        Q949929: "event",
        Q961714: "event",
        Q975138: "event",
        Q1075582: "event",
        Q1149386: "event",
        Q1161755: "event",
        Q1162457: "event",
        Q1162472: "event",
        Q1289679: "event",
        Q1376855: "event",
        Q1399835: "event",
        Q1457762: "event",
        Q1501434: "event",
        Q1502732: "event",
        Q1583497: "event",
        Q1593292: "event",
        Q1619413: "event",
        Q1647788: "event",
        Q1673998: "event",
        Q1771731: "event",
        Q1771965: "event",
        Q1772214: "event",
        Q1772238: "event",
        Q1772957: "event",
        Q1772985: "event",
        Q1773662: "event",
        Q1775333: "event",
        Q1775967: "event",
        Q1776505: "event",
        Q1777773: "event",
        Q1778122: "event",
        Q1778804: "event",
        Q1779476: "event",
        Q1780193: "event",
        Q1780337: "event",
        Q1785973: "event",
        Q1807175: "event",
        Q1815189: "event",
        Q1820728: "event",
        Q1822501: "event",
        Q1825491: "event",
        Q1829727: "event",
        Q1835267: "event",
        Q1839891: "event",
        Q1848211: "event",
        Q1852166: "event",
        Q1853292: "event",
        Q1854372: "event",
        Q1856488: "event",
        Q1858179: "event",
        Q1858239: "event",
        Q1882006: "event",
        Q1887255: "event",
        Q1896344: "event",
        Q1901161: "event",
        Q1901308: "event",
        Q1901408: "event",
        Q1910741: "event",
        Q1915689: "event",
        Q1920067: "event",
        Q1924643: "event",
        Q1928644: "event",
        Q1938395: "event",
        Q1943456: "event",
        Q1944970: "event",
        Q1970545: "event",
        Q1971029: "event",
        Q1988451: "event",
        Q1993127: "event",
        Q1995042: "event",
        Q2001306: "event",
        Q2001949: "event",
        Q2007725: "event",
        Q2021654: "event",
        Q2028234: "event",
        Q2029846: "event",
        Q2037679: "event",
        Q2038748: "event",
        Q2041702: "event",
        Q2044665: "event",
        Q2048921: "event",
        Q2049374: "event",
        Q2049476: "event",
        Q2055374: "event",
        Q2063988: "event",
        Q2070623: "event",
        Q2073858: "event",
        Q2075676: "event",
        Q2089669: "event",
        Q2091754: "event",
        Q2095457: "event",
        Q2098245: "event",
        Q2102469: "event",
        Q2104798: "event",
        Q2106927: "event",
        Q2107026: "event",
        Q2112420: "event",
        Q2115671: "event",
        Q2119959: "event",
        Q2120006: "event",
        Q2122849: "event",
        Q2123962: "event",
        Q2124001: "event",
        Q2130185: "event",
        Q2131190: "event",
        Q2135525: "event",
        Q2137952: "event",
        Q2140388: "event",
        Q2142475: "event",
        Q2142753: "event",
        Q2168242: "event",
        Q2169090: "event",
        Q2172605: "event",
        Q2178781: "event",
        Q2181022: "event",
        Q2181047: "event",
        Q2181282: "event",
        Q2182092: "event",
        Q2186047: "event",
        Q2190893: "event",
        Q2194865: "event",
        Q2198516: "event",
        Q2199901: "event",
        Q2200544: "event",
        Q2201764: "event",
        Q2205070: "event",
        Q2206836: "event",
        Q2210155: "event",
        Q2212459: "event",
        Q2215930: "event",
        Q2221160: "event",
        Q2222777: "event",
        Q2227320: "event",
        Q2242233: "event",
        Q2246444: "event",
        Q2248087: "event",
        Q2249813: "event",
        Q2255046: "event",
        Q2260821: "event",
        Q2284977: "event",
        Q2286741: "event",
        Q2289880: "event",
        Q2290171: "event",
        Q2299752: "event",
        Q2300124: "event",
        Q2300678: "event",
        Q2303185: "event",
        Q2305720: "event",
        Q2309492: "event",
        Q2313361: "event",
        Q2316735: "event",
        Q2324540: "event",
        Q2325096: "event",
        Q2328480: "event",
        Q2331264: "event",
        Q2343166: "event",
        Q2344291: "event",
        Q2350510: "event",
        Q2351234: "event",
        Q2352486: "event",
        Q2357329: "event",
        Q2357402: "event",
        Q2365019: "event",
        Q2371402: "event",
        Q2388111: "event",
        Q2390662: "event",
        Q2393319: "event",
        Q2398517: "event",
        Q2401441: "event",
        Q2407049: "event",
        Q2416647: "event",
        Q2423140: "event",
        Q2427555: "event",
        Q2433323: "event",
        Q2436904: "event",
        Q2437424: "event",
        Q2438746: "event",
        Q2440678: "event",
        Q2449809: "event",
        Q2455961: "event",
        Q2457278: "event",
        Q2462825: "event",
        Q2466473: "event",
        Q2476668: "event",
        Q2479655: "event",
        Q2479920: "event",
        Q2482256: "event",
        Q2487426: "event",
        Q2498569: "event",
        Q2505370: "event",
        Q2522564: "event",
        Q2525491: "event",
        Q2527308: "event",
        Q2530190: "event",
        Q2538556: "event",
        Q2540644: "event",
        Q2546224: "event",
        Q2553046: "event",
        Q2555681: "event",
        Q2561185: "event",
        Q2562288: "event",
        Q2565086: "event",
        Q2576021: "event",
        Q2584032: "event",
        Q2585764: "event",
        Q2600561: "event",
        Q2602686: "event",
        Q2609854: "event",
        Q2611360: "event",
        Q2612919: "event",
        Q2612950: "event",
        Q2615811: "event",
        Q2619808: "event",
        Q2620358: "event",
        Q2622503: "event",
        Q2630007: "event",
        Q2631439: "event",
        Q2632902: "event",
        Q2636144: "event",
        Q2644268: "event",
        Q2648537: "event",
        Q2655932: "event",
        Q2659592: "event",
        Q2679940: "event",
        Q2681563: "event",
        Q2685099: "event",
        Q2694152: "event",
        Q2695089: "event",
        Q2702069: "event",
        Q2703109: "event",
        Q2707767: "event",
        Q2709893: "event",
        Q2714839: "event",
        Q2728843: "event",
        Q2735106: "event",
        Q2738642: "event",
        Q2743855: "event",
        Q2745221: "event",
        Q2753109: "event",
        Q2755811: "event",
        Q2780989: "event",
        Q2785398: "event",
        Q2792933: "event",
        Q2794722: "event",
        Q2802839: "event",
        Q2804141: "event",
        Q2818505: "event",
        Q2819182: "event",
        Q2835344: "event",
        Q2845871: "event",
        Q2856073: "event",
        Q2869206: "event",
        Q2873362: "event",
        Q2876554: "event",
        Q2881149: "event",
        Q2904893: "event",
        Q2914379: "event",
        Q2917022: "event",
        Q2924805: "event",
        Q2927761: "event",
        Q2958920: "event",
        Q2973190: "event",
        Q2991228: "event",
        Q3041780: "event",
        Q3044450: "event",
        Q3074962: "event",
        Q3101510: "event",
        Q3109268: "event",
        Q3111159: "event",
        Q3114036: "event",
        Q3153146: "event",
        Q3189573: "event",
        Q3196293: "event",
        Q3221656: "event",
        Q3230688: "event",
        Q3240544: "event",
        Q3353534: "event",
        Q3354037: "event",
        Q3467251: "event",
        Q3906932: "event",
        Q4322445: "event",
        Q4381821: "event",
        Q4406091: "event",
        Q4447597: "event",
        Q4487337: "event",
        Q4520636: "event",
        Q4552973: "event",
        Q4566050: "event",
        Q4574522: "event",
        Q4590508: "event",
        Q4627135: "event",
        Q4639733: "event",
        Q4661444: "event",
        Q4663331: "event",
        Q4705863: "event",
        Q4712635: "event",
        Q4733642: "event",
        Q4766207: "event",
        Q4788203: "event",
        Q4832133: "event",
        Q4842339: "event",
        Q4849310: "event",
        Q4855191: "event",
        Q4869478: "event",
        Q4877580: "event",
        Q4888756: "event",
        Q4923567: "event",
        Q4925730: "event",
        Q4929676: "event",
        Q5011744: "event",
        Q5021913: "event",
        Q5029247: "event",
        Q5033256: "event",
        Q5034420: "event",
        Q5041314: "event",
        Q5048940: "event",
        Q5059058: "event",
        Q5059323: "event",
        Q5138198: "event",
        Q5147881: "event",
        Q5147940: "event",
        Q5169460: "event",
        Q5169506: "event",
        Q5177979: "event",
        Q5205030: "event",
        Q5244757: "event",
        Q5270770: "event",
        Q5302626: "event",
        Q5311028: "event",
        Q5351785: "event",
        Q5374146: "event",
        Q5450696: "event",
        Q5450794: "event",
        Q5472298: "event",
        Q5488229: "event",
        Q5507479: "event",
        Q5507477: "event",
        Q5518439: "event",
        Q5579444: "event",
        Q5580603: "event",
        Q5603743: "event",
        Q5744540: "event",
        Q5745844: "event",
        Q6021402: "event",
        Q6025889: "event",
        Q6060250: "event",
        Q6071073: "event",
        Q6392235: "event",
        Q6423673: "event",
        Q6431929: "event",
        Q6462797: "event",
        Q6466808: "event",
        Q6517928: "event",
        Q6672320: "event",
        Q6861781: "event",
        Q6879162: "event",
        Q6886969: "event",
        Q6938887: "event",
        Q6947814: "event",
        Q6958648: "event",
        Q7058202: "event",
        Q7080842: "event",
        Q7089988: "event",
        Q7096377: "event",
        Q7119146: "event",
        Q7130105: "event",
        Q7191667: "event",
        Q7231613: "event",
        Q7234085: "event",
        Q7360672: "event",
        Q7375800: "event",
        Q7423474: "event",
        Q7447483: "event",
        Q7566619: "event",
        Q7569614: "event",
        Q7591500: "event",
        Q7592447: "event",
        Q7639049: "event",
        Q108939181: "event",
        Q964061: "motion_picture",
        Q1747837: "motion_picture",
        Q111668117: "event",
        Q3684597: "motion_picture",
        Q215552: "software",
        Q267634: "book",
        Q527006: "event",
        Q605458: "event",
        Q649128: "event",
        Q675181: "event",
        Q830090: "event",
        Q1760692: "event",
        Q2066411: "event",
        Q12032405: "software",
        Q7641191: "event",
        Q7641702: "event",
        Q7651059: "event",
        Q7709218: "event",
        Q7753394: "event",
        Q7758284: "event",
        Q7799091: "event",
        Q7827739: "event",
        Q7849644: "event",
        Q7850310: "event",
        Q7855286: "event",
        Q7927246: "event",
        Q7941311: "event",
        Q7945181: "event",
        Q7986142: "event",
        Q8035902: "event",
        Q8072002: "event",
        Q11316743: "event",
        Q11346118: "event",
        Q11507896: "event",
        Q12017912: "event",
        Q13461404: "event",
        Q13476069: "event",
        Q13546576: "event",
        Q13568091: "event",
        Q13583588: "event",
        Q13654029: "event",
        Q14852379: "event",
        Q15673027: "event",
        Q15879918: "event",
        Q15882707: "event",
        Q15961799: "event",
        Q15972983: "event",
        Q15974367: "event",
        Q15974450: "event",
        Q15975482: "event",
        Q15979002: "event",
        Q16743938: "event",
        Q16787438: "event",
        Q16830210: "event",
        Q17150906: "event",
        Q17162079: "event",
        Q17320443: "event",
        Q17988066: "event",
        Q18088520: "event",
        Q18358716: "event",
        Q18509037: "event",
        Q18509064: "event",
        Q18509187: "event",
        Q18523836: "event",
        Q18600393: "event",
        Q18600402: "event",
        Q18693936: "event",
        Q18756126: "event",
        Q18756127: "event",
        Q18756124: "event",
        Q18756125: "event",
        Q18756130: "event",
        Q18756131: "event",
        Q18756129: "event",
        Q18756134: "event",
        Q18756133: "event",
        Q18756139: "event",
        Q18756136: "event",
        Q18756137: "event",
        Q18756140: "event",
        Q18756141: "event",
        Q18815100: "event",
        Q20018613: "event",
        Q20019264: "event",
        Q20114079: "event",
        Q20154814: "event",
        Q20735954: "event",
        Q21013825: "event",
        Q21027484: "event",
        Q24898042: "event",
        Q108803475: "regulation",
        Q27494565: "event",
        Q30644804: "event",
        Q60526686: "event",
        Q60988533: "event",
        Q102124796: "event",
        Q105275188: "event",
        Q106612454: "book",
        Q82595: "event",
        Q86891: "event",
        Q115821: "event",
        Q129650: "event",
        Q142944: "event",
        Q145554: "event",
        Q147780: "event",
        Q157553: "event",
        Q162604: "event",
        Q162944: "event",
        Q163046: "event",
        Q163719: "event",
        Q163786: "event",
        Q163928: "event",
        Q167541: "event",
        Q168018: "event",
        Q169519: "event",
        Q170215: "event",
        Q175762: "event",
        Q182165: "event",
        Q182994: "event",
        Q187304: "event",
        Q188365: "event",
        Q194180: "event",
        Q194641: "event",
        Q201671: "event",
        Q202243: "event",
        Q202699: "event",
        Q204752: "event",
        Q206073: "event",
        Q206813: "event",
        Q209080: "event",
        Q209318: "event",
        Q209970: "event",
        Q210183: "event",
        Q210262: "event",
        Q210587: "event",
        Q210836: "event",
        Q211461: "event",
        Q216022: "event",
        Q217016: "event",
        Q218555: "event",
        Q219007: "event",
        Q219586: "event",
        Q219592: "event",
        Q220875: "event",
        Q224724: "event",
        Q225057: "event",
        Q235114: "event",
        Q235307: "event",
        Q237753: "event",
        Q238113: "event",
        Q239738: "event",
        Q244464: "event",
        Q245252: "event",
        Q246874: "event",
        Q247767: "event",
        Q247788: "event",
        Q247812: "event",
        Q247829: "event",
        Q248005: "event",
        Q248512: "event",
        Q248844: "event",
        Q248960: "event",
        Q250081: "event",
        Q250638: "event",
        Q252156: "event",
        Q255633: "event",
        Q257282: "event",
        Q259598: "event",
        Q259776: "event",
        Q260787: "event",
        Q267785: "event",
        Q271271: "event",
        Q275005: "event",
        Q275189: "event",
        Q275665: "event",
        Q276085: "event",
        Q276445: "event",
        Q277581: "event",
        Q277786: "event",
        Q277945: "event",
        Q278371: "event",
        Q278603: "event",
        Q279617: "event",
        Q284335: "event",
        Q285473: "event",
        Q287453: "event",
        Q291594: "event",
        Q295606: "event",
        Q308798: "event",
        Q242039: "standard",
        Q11620704: "book",
        Q24534424: "standard",
        Q40068: "event",
        Q44763: "event",
        Q60681: "event",
        Q65410: "event",
        Q318480: "event",
        Q322125: "event",
        Q324867: "event",
        Q326422: "event",
        Q326859: "event",
        Q338121: "event",
        Q368165: "event",
        Q370883: "event",
        Q384073: "event",
        Q384531: "event",
        Q387662: "event",
        Q391006: "event",
        Q402526: "event",
        Q450561: "event",
        Q463663: "event",
        Q477309: "event",
        Q480019: "event",
        Q485568: "event",
        Q497386: "event",
        Q511137: "event",
        Q518802: "event",
        Q537766: "event",
        Q548761: "event",
        Q557588: "event",
        Q570246: "event",
        Q581932: "event",
        Q582860: "event",
        Q583514: "event",
        Q585371: "event",
        Q589722: "event",
        Q589838: "event",
        Q592486: "event",
        Q600302: "event",
        Q605777: "event",
        Q606832: "event",
        Q607963: "event",
        Q608050: "event",
        Q611955: "event",
        Q612980: "event",
        Q614965: "event",
        Q628797: "event",
        Q629136: "event",
        Q630141: "event",
        Q636853: "event",
        Q647746: "event",
        Q654697: "event",
        Q662851: "event",
        Q663736: "event",
        Q667065: "event",
        Q667209: "event",
        Q672827: "event",
        Q672983: "event",
        Q677397: "event",
        Q680619: "event",
        Q687108: "event",
        Q689789: "event",
        Q696269: "event",
        Q728398: "event",
        Q734803: "event",
        Q738154: "event",
        Q739479: "event",
        Q747225: "event",
        Q752442: "event",
        Q761083: "event",
        Q761626: "event",
        Q763090: "event",
        Q764690: "event",
        Q769090: "event",
        Q772266: "event",
        Q778974: "event",
        Q780993: "event",
        Q785574: "event",
        Q788588: "event",
        Q793604: "event",
        Q793769: "event",
        Q794235: "event",
        Q794251: "event",
        Q794257: "event",
        Q812098: "event",
        Q820988: "event",
        Q821174: "event",
        Q824641: "event",
        Q830717: "event",
        Q831202: "event",
        Q847239: "event",
        Q849514: "event",
        Q849843: "event",
        Q850132: "event",
        Q856855: "event",
        Q863684: "event",
        Q863688: "event",
        Q868588: "event",
        Q874990: "event",
        Q880029: "event",
        Q891072: "event",
        Q902060: "event",
        Q912116: "event",
        Q922935: "event",
        Q923316: "event",
        Q926330: "event",
        Q929124: "event",
        Q932747: "event",
        Q935872: "event",
        Q938286: "event",
        Q954911: "event",
        Q960171: "event",
        Q967002: "event",
        Q971619: "event",
        Q974058: "event",
        Q978160: "event",
        Q980467: "event",
        Q988084: "event",
        Q988698: "event",
        Q990787: "event",
        Q1007931: "event",
        Q1023719: "event",
        Q1031665: "event",
        Q1033339: "event",
        Q1033349: "event",
        Q1041850: "event",
        Q1054442: "event",
        Q1063772: "event",
        Q1076828: "event",
        Q1087541: "event",
        Q1090396: "event",
        Q1090595: "event",
        Q1090607: "event",
        Q1090617: "event",
        Q1090623: "event",
        Q1090640: "event",
        Q1090809: "event",
        Q1090830: "event",
        Q1090855: "event",
        Q1090863: "event",
        Q1090867: "event",
        Q1093405: "event",
        Q1104981: "event",
        Q1110061: "event",
        Q1118304: "event",
        Q1129048: "event",
        Q1129600: "event",
        Q1137344: "event",
        Q1139408: "event",
        Q1139758: "event",
        Q1141778: "event",
        Q1152715: "event",
        Q1157234: "event",
        Q1179092: "event",
        Q1187715: "event",
        Q1187730: "event",
        Q1188284: "event",
        Q1202326: "event",
        Q1202379: "event",
        Q1203215: "event",
        Q1203524: "event",
        Q1203641: "event",
        Q1203701: "event",
        Q1203743: "event",
        Q1203964: "event",
        Q1225128: "event",
        Q1305444: "event",
        Q1311336: "event",
        Q1320341: "event",
        Q1324416: "event",
        Q1328315: "event",
        Q1330713: "event",
        Q1342351: "event",
        Q1385375: "event",
        Q1405103: "event",
        Q1418739: "event",
        Q1421206: "event",
        Q1421208: "event",
        Q1423762: "event",
        Q1429268: "event",
        Q1436035: "event",
        Q1437739: "event",
        Q1470401: "event",
        Q1487175: "event",
        Q1491334: "event",
        Q1520528: "event",
        Q1520622: "event",
        Q1522963: "event",
        Q1530659: "event",
        Q1532343: "event",
        Q1536706: "event",
        Q1546355: "event",
        Q1546408: "event",
        Q1567733: "event",
        Q1588651: "event",
        Q1622667: "event",
        Q1626934: "event",
        Q1627391: "event",
        Q1635558: "event",
        Q1644969: "event",
        Q1660801: "event",
        Q1675130: "event",
        Q1685492: "event",
        Q1687662: "event",
        Q1725521: "event",
        Q1774675: "event",
        Q1779116: "event",
        Q1812315: "event",
        Q1816968: "event",
        Q1824570: "event",
        Q1861301: "event",
        Q1874074: "event",
        Q1892680: "event",
        Q1963875: "event",
        Q2009289: "event",
        Q2047271: "event",
        Q2054331: "event",
        Q2060907: "event",
        Q2066655: "event",
        Q2067442: "event",
        Q2072802: "event",
        Q2082897: "event",
        Q2083746: "event",
        Q2083774: "event",
        Q2088526: "event",
        Q2102521: "event",
        Q2105017: "event",
        Q2120378: "event",
        Q2120557: "event",
        Q2164956: "event",
        Q2180367: "event",
        Q2198291: "event",
        Q2248858: "event",
        Q2253660: "event",
        Q2256671: "event",
        Q2261921: "event",
        Q2288509: "event",
        Q2289847: "event",
        Q2290420: "event",
        Q2292277: "event",
        Q2297972: "event",
        Q2299651: "event",
        Q2304336: "event",
        Q2306612: "event",
        Q2308030: "event",
        Q2310260: "event",
        Q2315908: "event",
        Q2331632: "event",
        Q2333731: "event",
        Q2334124: "event",
        Q2357382: "event",
        Q2358387: "event",
        Q2375100: "event",
        Q2386334: "event",
        Q2397581: "event",
        Q2409829: "event",
        Q2465459: "event",
        Q2467445: "event",
        Q2468619: "event",
        Q2494381: "event",
        Q2537744: "event",
        Q2538846: "event",
        Q2615588: "event",
        Q2621488: "event",
        Q2625448: "event",
        Q2629834: "event",
        Q2630379: "event",
        Q2660485: "event",
        Q2677790: "event",
        Q2701291: "event",
        Q2735889: "event",
        Q2739565: "event",
        Q2740424: "event",
        Q2803099: "event",
        Q2855634: "event",
        Q2909479: "event",
        Q2930969: "event",
        Q2948824: "event",
        Q2948906: "event",
        Q2948907: "event",
        Q2948905: "event",
        Q2948911: "event",
        Q2948915: "event",
        Q2948922: "event",
        Q2949044: "event",
        Q2949202: "event",
        Q2949208: "event",
        Q2949214: "event",
        Q2949854: "event",
        Q2949852: "event",
        Q2949853: "event",
        Q2949859: "event",
        Q2949856: "event",
        Q2949872: "event",
        Q2949879: "event",
        Q2949877: "event",
        Q2949880: "event",
        Q2949998: "event",
        Q2949997: "event",
        Q2950382: "event",
        Q2950380: "event",
        Q2950517: "event",
        Q2950521: "event",
        Q2950621: "event",
        Q2950627: "event",
        Q2950625: "event",
        Q2950630: "event",
        Q2950873: "event",
        Q2951014: "event",
        Q2951015: "event",
        Q2951021: "event",
        Q2951026: "event",
        Q2951242: "event",
        Q2951289: "event",
        Q2951395: "event",
        Q2951397: "event",
        Q2951558: "event",
        Q2951603: "event",
        Q2951606: "event",
        Q2951928: "event",
        Q2951934: "event",
        Q2952006: "event",
        Q2952044: "event",
        Q2952235: "event",
        Q2952304: "event",
        Q2952365: "event",
        Q2952370: "event",
        Q2952369: "event",
        Q2952374: "event",
        Q2952375: "event",
        Q2952373: "event",
        Q2952384: "event",
        Q2952931: "event",
        Q2952936: "event",
        Q2953228: "event",
        Q2953557: "event",
        Q2954296: "event",
        Q2954434: "event",
        Q2954943: "event",
        Q2954945: "event",
        Q2955087: "event",
        Q2955102: "event",
        Q2955110: "event",
        Q2955108: "event",
        Q2955194: "event",
        Q2955197: "event",
        Q2955214: "event",
        Q2955714: "event",
        Q3087942: "event",
        Q3179674: "event",
        Q3181379: "event",
        Q3240521: "event",
        Q3247654: "event",
        Q3292904: "event",
        Q3297868: "event",
        Q3323934: "event",
        Q3324860: "event",
        Q3392499: "event",
        Q3392552: "event",
        Q3402210: "event",
        Q3428306: "event",
        Q3437813: "event",
        Q3494101: "event",
        Q3497134: "event",
        Q3500680: "event",
        Q3510644: "event",
        Q3564678: "event",
        Q3639298: "event",
        Q3652179: "event",
        Q3652986: "event",
        Q3652990: "event",
        Q3652998: "event",
        Q3652997: "event",
        Q3653032: "event",
        Q3653079: "event",
        Q3654042: "event",
        Q3654052: "event",
        Q3654109: "event",
        Q3654114: "event",
        Q3654115: "event",
        Q3654155: "event",
        Q3654156: "event",
        Q3654195: "event",
        Q3654207: "event",
        Q3654205: "event",
        Q3654208: "event",
        Q3654209: "event",
        Q3654302: "event",
        Q3654311: "event",
        Q3654496: "event",
        Q3654501: "event",
        Q3663238: "event",
        Q3774394: "event",
        Q3775620: "event",
        Q3817458: "event",
        Q3820228: "event",
        Q3823950: "event",
        Q3930173: "event",
        Q3944757: "event",
        Q4116574: "event",
        Q4509470: "event",
        Q4509660: "event",
        Q4582333: "event",
        Q4584510: "event",
        Q4652534: "event",
        Q4654222: "event",
        Q4701868: "event",
        Q4709119: "event",
        Q4823594: "event",
        Q4823973: "event",
        Q4824043: "event",
        Q4824280: "event",
        Q4824451: "event",
        Q4824456: "event",
        Q4824682: "event",
        Q4824697: "event",
        Q4824706: "event",
        Q4824729: "event",
        Q4825497: "event",
        Q4855427: "event",
        Q4882577: "event",
        Q4947322: "event",
        Q4952027: "event",
        Q4970959: "event",
        Q4971081: "event",
        Q4971084: "event",
        Q4971088: "event",
        Q4978928: "event",
        Q5028293: "event",
        Q5098731: "event",
        Q5147922: "event",
        Q5147945: "event",
        Q5174890: "event",
        Q5201742: "event",
        Q5219740: "event",
        Q5317354: "event",
        Q5334350: "event",
        Q5348334: "event",
        Q5408432: "event",
        Q5431964: "event",
        Q5448585: "event",
        Q5450763: "event",
        Q5450793: "event",
        Q5548003: "event",
        Q5551129: "event",
        Q5597856: "event",
        Q5614251: "event",
        Q5680215: "event",
        Q6020005: "event",
        Q6045815: "event",
        Q6048962: "event",
        Q6070599: "event",
        Q6082072: "event",
        Q6087177: "event",
        Q6127417: "event",
        Q6156289: "event",
        Q6270922: "event",
        Q6417479: "event",
        Q6417477: "event",
        Q6444725: "event",
        Q6452377: "event",
        Q6497315: "event",
        Q6545763: "event",
        Q6545770: "event",
        Q6553333: "event",
        Q6648345: "event",
        Q6648383: "event",
        Q6678345: "event",
        Q6744786: "event",
        Q6825984: "event",
        Q6953036: "event",
        Q6972083: "event",
        Q6972728: "event",
        Q6978478: "event",
        Q7004971: "event",
        Q7015436: "event",
        Q7015626: "event",
        Q7034776: "event",
        Q7061142: "event",
        Q7072632: "event",
        Q7119138: "event",
        Q7125690: "event",
        Q7133162: "event",
        Q7134683: "event",
        Q7209876: "event",
        Q7209928: "event",
        Q7209936: "event",
        Q7232625: "event",
        Q7232647: "event",
        Q7232649: "event",
        Q7232671: "event",
        Q7232669: "event",
        Q7240322: "event",
        Q7401700: "event",
        Q7437655: "event",
        Q7458934: "event",
        Q7523257: "event",
        Q7541522: "event",
        Q7541803: "event",
        Q7565442: "event",
        Q7565785: "event",
        Q7855246: "event",
        Q7863694: "event",
        Q7864827: "event",
        Q7865802: "event",
        Q7865815: "event",
        Q7865827: "event",
        Q7875948: "event",
        Q7890746: "event",
        Q7890855: "event",
        Q7892303: "event",
        Q7901455: "event",
        Q7901468: "event",
        Q7904715: "event",
        Q7981873: "event",
        Q9252110: "event",
        Q9298807: "event",
        Q10495597: "event",
        Q11389921: "event",
        Q11389951: "event",
        Q11509342: "event",
        Q11782833: "event",
        Q11782838: "event",
        Q11782840: "event",
        Q11782846: "event",
        Q11782857: "event",
        Q11868535: "event",
        Q11870488: "event",
        Q11992135: "event",
        Q12169411: "event",
        Q12443987: "event",
        Q12837728: "event",
        Q13027698: "event",
        Q14377162: "event",
        Q14892596: "event",
        Q15027409: "event",
        Q15042689: "event",
        Q15101808: "event",
        Q15231491: "event",
        Q15805533: "event",
        Q15844146: "event",
        Q15879704: "event",
        Q15917511: "event",
        Q16056559: "event",
        Q16087288: "event",
        Q16382612: "event",
        Q16382660: "event",
        Q16383174: "event",
        Q16383176: "event",
        Q16481773: "event",
        Q16537401: "event",
        Q16537515: "event",
        Q16537520: "event",
        Q16537635: "event",
        Q16538029: "event",
        Q16538044: "event",
        Q16538151: "event",
        Q16716834: "event",
        Q16716832: "event",
        Q16826474: "event",
        Q16960366: "event",
        Q16971486: "event",
        Q16972047: "event",
        Q17019929: "event",
        Q17068802: "event",
        Q17098551: "event",
        Q17111297: "event",
        Q17156396: "event",
        Q17354263: "event",
        Q17354595: "event",
        Q17513955: "event",
        Q17513960: "event",
        Q17514051: "event",
        Q17514151: "event",
        Q17624381: "event",
        Q17624398: "event",
        Q17624403: "event",
        Q17624423: "event",
        Q17632439: "event",
        Q18156611: "event",
        Q18167837: "event",
        Q18351267: "event",
        Q18352040: "event",
        Q18357021: "event",
        Q18357029: "event",
        Q18391076: "event",
        Q18399671: "event",
        Q18680471: "event",
        Q18701510: "event",
        Q19332036: "event",
        Q20252393: "event",
        Q20311287: "event",
        Q20472631: "event",
        Q20804909: "event",
        Q20873007: "event",
        Q20920876: "event",
        Q21208335: "event",
        Q25662185: "event",
        Q25712578: "event",
        Q26198002: "event",
        Q26806709: "event",
        Q26836404: "event",
        Q27492342: "event",
        Q27511062: "event",
        Q28062628: "event",
        Q28152170: "event",
        Q110711846: "event",
        Q110711847: "event",
        Q110711844: "event",
        Q110711845: "event",
        Q111323031: "event",
        Q111324062: "event",
        Q1457145: "broadcast",
        Q7249354: "software",
        Q1558505: "review",
        Q1188852: "event",
        Q1258212: "event",
        Q2093973: "book",
        Q2739490: "book",
        Q263029: "standard",
        Q3587322: "event",
        Q3587323: "event",
        Q3587320: "event",
        Q3587321: "event",
        Q3587326: "event",
        Q3587327: "event",
        Q3587324: "event",
        Q3587325: "event",
        Q3587330: "event",
        Q3587328: "event",
        Q3587329: "event",
        Q3587334: "event",
        Q3587332: "event",
        Q6453074: "book",
        Q6501106: "event",
        Q24887478: "software",
        Q16543809: "event",
        Q22907854: "event",
        Q56843912: "map",
        Q28226004: "event",
        Q28941860: "review",
        Q28417718: "event",
        Q28653546: "event",
        Q28679823: "event",
        Q28679826: "event",
        Q29050118: "event",
        Q31086988: "event",
        Q60740694: "dataset",
        Q42170979: "event",
        Q55187831: "software",
        Q47019500: "event",
        Q47118669: "event",
        Q47464206: "event",
        Q47482732: "event",
        Q47482742: "event",
        Q47496058: "event",
        Q47543339: "event",
        Q48267135: "event",
        Q48758455: "event",
        Q48782280: "event",
        Q48861490: "event",
        Q49544696: "event",
        Q50326356: "event",
        Q51794851: "event",
        Q51897918: "event",
        Q52408848: "event",
        Q55582541: "book",
        Q55582560: "book",
        Q57496872: "event",
        Q3037400: "regulation",
        Q59877788: "event",
        Q60846649: "event",
        Q61396924: "event",
        Q61679484: "event",
        Q61875318: "event",
        Q61875331: "event",
        Q62020230: "event",
        Q63891772: "event",
        Q64500267: "event",
        Q64780520: "event",
        Q71829391: "event",
        Q71831237: "event",
        Q77518996: "event",
        Q80370460: "event",
        Q81805133: "event",
        Q83239893: "event",
        Q84497979: "event",
        Q108352651: "dataset",
        Q97621243: "software",
        Q97621286: "software",
        Q90048977: "event",
        Q90049197: "event",
        Q92292023: "event",
        Q93018258: "event",
        Q103821052: "software",
        Q94786545: "event",
        Q97228376: "event",
        Q98918317: "event",
        Q102016095: "event",
        Q105397574: "event",
        Q110711850: "event",
        Q110711851: "event",
        Q110711848: "event",
        Q110711854: "event",
        Q110711852: "event",
        Q110711853: "event",
        Q110711858: "event",
        Q110711859: "event",
        Q110711856: "event",
        Q110711857: "event",
        Q110711862: "event",
        Q110711863: "event",
        Q110711860: "event",
        Q110711861: "event",
        Q110711866: "event",
        Q110711867: "event",
        Q110711864: "event",
        Q110711865: "event",
        Q110711870: "event",
        Q110711871: "event",
        Q110711868: "event",
        Q110711869: "event",
        Q110711874: "event",
        Q110711875: "event",
        Q110711872: "event",
        Q110711873: "event",
        Q932420: "dataset",
        Q114106: "software",
        Q215819: "software",
        Q319417: "software",
        Q431195: "software",
        Q484935: "software",
        Q860748: "software",
        Q12154808: "song",
        Q2357154: "software",
        Q2496164: "software",
        Q2566342: "software",
        Q2919848: "software",
        Q3325092: "software",
        Q3884002: "software",
        Q5014224: "software",
        Q335918: "event",
        Q386006: "event",
        Q1498255: "event",
        Q11244263: "software",
        Q191012: "standard",
        Q206924: "standard",
        Q12018160: "software",
        Q3435775: "event",
        Q3722848: "event",
        Q16688751: "software",
        Q17089542: "software",
        Q16957146: "event",
        Q17042768: "standard",
        Q19819515: "event",
        Q20485156: "book",
        Q2338544: "performance",
        Q24885859: "event",
        Q24886113: "event",
        Q109595305: "regulation",
        Q35687379: "software",
        Q110350495: "regulation",
        Q39827535: "software",
        Q50822530: "software",
        Q47499504: "event",
        Q396152: "regulation",
        Q396338: "regulation",
        Q397334: "regulation",
        Q397439: "regulation",
        Q600846: "regulation",
        Q55632127: "event",
        Q55638971: "event",
        Q56295376: "event",
        Q63243997: "event",
        Q9395122: "regulation",
        Q66771315: "event",
        Q48359853: "performance",
        Q69886766: "event",
        Q69904376: "event",
        Q79197177: "event",
        Q85728641: "event",
        Q85728789: "event",
        Q85728915: "event",
        Q85729059: "event",
        Q85729269: "event",
        Q85729408: "event",
        Q85729526: "event",
        Q85729631: "event",
        Q89503324: "event",
        Q98952023: "event",
        Q108905501: "software",
        Q104630847: "event",
        Q104735712: "event",
        Q104865460: "event",
        Q107466402: "event",
        Q109361695: "event",
        Q3125472: "manuscript",
        Q2560570: "dataset",
        Q719798: "software",
        Q933625: "software",
        Q1502871: "software",
        Q1758804: "software",
        Q1854343: "software",
        Q11517223: "broadcast",
        Q12242979: "broadcast",
        Q5252671: "software",
        Q5562992: "software",
        Q185523: "event",
        Q970308: "legislation",
        Q868557: "event",
        Q895824: "event",
        Q1048728: "event",
        Q1321593: "event",
        Q1510887: "event",
        Q1592814: "event",
        Q1751626: "event",
        Q1772230: "event",
        Q2986441: "book",
        Q2393315: "event",
        Q2944276: "legislation",
        Q2539315: "event",
        Q2629590: "event",
        Q3409594: "book",
        Q3440918: "book",
        Q2869155: "event",
        Q3070220: "event",
        Q3070233: "event",
        Q3135724: "event",
        Q3822001: "review",
        Q3927614: "legislation",
        Q1665191: "standard",
        Q4912032: "legislation",
        Q4812461: "event",
        Q4819313: "event",
        Q5662428: "book",
        Q15282750: "software",
        Q6050412: "event",
        Q6664265: "legislation",
        Q6498067: "event",
        Q7456849: "book",
        Q6917814: "event",
        Q7495968: "event",
        Q18845397: "software",
        Q10712098: "event",
        Q11396839: "book",
        Q11612795: "book",
        Q12056837: "event",
        Q25001010: "software",
        Q17011199: "book",
        Q25929318: "software",
        Q16995927: "event",
        Q17017983: "event",
        Q17020857: "event",
        Q17153136: "event",
        Q17510384: "event",
        Q18210557: "event",
        Q18232178: "event",
        Q19646072: "legislation",
        Q936412: "performance",
        Q938118: "performance",
        Q1033913: "performance",
        Q19803127: "event",
        Q20679073: "book",
        Q21005969: "event",
        Q23902005: "event",
        Q28684433: "book",
        Q15790928: "performance",
        Q60475632: "software",
        Q61009090: "software",
        Q940525: "regulation",
        Q2821946: "regulation",
        Q67650639: "software",
        Q58852757: "event",
        Q59847891: "book",
        Q4671162: "regulation",
        Q34825: "software",
        Q48510: "software",
        Q63865762: "legislation",
        Q65067387: "event",
        Q105839923: "manuscript",
        Q110503664: "manuscript",
        Q94988386: "software",
        Q96781548: "software",
        Q88006977: "event",
        Q108373022: "dataset",
        Q89374949: "software",
        Q98559103: "software",
        Q92062711: "event",
        Q104381881: "event",
        Q105774620: "legislation",
        Q107022954: "event",
        Q109020342: "event",
        Q110131505: "standard",
        Q110132623: "standard",
        Q110132901: "standard",
        Q110133975: "standard",
        Q110134612: "standard",
        Q16927568: "periodical",
        Q108404215: "performance",
        Q5375622: "software",
        Q6822481: "software",
        Q693222: "book",
        Q102113: "event",
        Q127678: "event",
        Q210581: "event",
        Q215014: "event",
        Q299345: "event",
        Q299363: "event",
        Q300008: "event",
        Q300018: "event",
        Q300017: "event",
        Q300029: "event",
        Q404405: "event",
        Q557083: "event",
        Q671970: "event",
        Q681194: "event",
        Q863300: "event",
        Q1007336: "event",
        Q1047345: "event",
        Q1778620: "book",
        Q1193885: "event",
        Q1334786: "event",
        Q1563479: "event",
        Q1598329: "event",
        Q1682018: "event",
        Q1916089: "event",
        Q1991741: "event",
        Q2113053: "event",
        Q288096: "standard",
        Q2160076: "event",
        Q2939758: "book",
        Q2376496: "event",
        Q2478155: "event",
        Q2529196: "event",
        Q2537906: "event",
        Q2869223: "event",
        Q2922943: "event",
        Q21402249: "broadcast",
        Q21504449: "broadcast",
        Q3590900: "event",
        Q3879678: "event",
        Q3951961: "event",
        Q3998592: "event",
        Q4786142: "event",
        Q4815584: "event",
        Q4951242: "event",
        Q5198623: "event",
        Q5284370: "event",
        Q5365066: "event",
        Q5366509: "event",
        Q5367862: "event",
        Q5580623: "event",
        Q5954361: "event",
        Q6412308: "event",
        Q6889062: "event",
        Q7279854: "event",
        Q16872960: "software",
        Q7673421: "event",
        Q10289831: "event",
        Q9383074: "standard",
        Q11266554: "event",
        Q11280762: "event",
        Q11449290: "event",
        Q17213403: "book",
        Q16874408: "event",
        Q18217077: "event",
        Q18387135: "event",
        Q19577195: "event",
        Q20020359: "event",
        Q20642213: "event",
        Q20852929: "event",
        Q20916723: "event",
        Q20921987: "event",
        Q23005954: "event",
        Q25404888: "event",
        Q25430612: "event",
        Q25430613: "event",
        Q27961189: "event",
        Q39049892: "software",
        Q30608150: "event",
        Q30914354: "event",
        Q54850434: "event",
        Q56344618: "book",
        Q41000: "event",
        Q42378: "standard",
        Q107314083: "software",
        Q101115409: "event",
        Q110419927: "book",
        Q109614367: "standard",
        Q7901759: "periodical",
        Q170238: "broadcast",
        Q1259759: "broadcast",
        Q2388283: "broadcast",
        Q17710982: "periodical",
        Q387950: "software",
        Q11396323: "broadcast",
        Q5953007: "software",
        Q6155239: "software",
        Q353280: "event",
        Q478382: "event",
        Q580758: "event",
        Q10343079: "software",
        Q907666: "event",
        Q918368: "event",
        Q1141651: "event",
        Q1412369: "event",
        Q1543261: "event",
        Q1637433: "event",
        Q1988040: "event",
        Q728183: "standard",
        Q2701085: "event",
        Q2727525: "event",
        Q3393631: "event",
        Q3587369: "event",
        Q3595838: "event",
        Q3601629: "event",
        Q3602248: "event",
        Q3775082: "event",
        Q3789061: "event",
        Q4017355: "event",
        Q4017356: "event",
        Q4017357: "event",
        Q4398134: "event",
        Q4535172: "event",
        Q4824513: "event",
        Q5070083: "event",
        Q5110306: "event",
        Q5458869: "event",
        Q5974787: "event",
        Q6153062: "event",
        Q6165939: "event",
        Q6165941: "event",
        Q6304166: "event",
        Q6978903: "event",
        Q7410130: "event",
        Q16978760: "software",
        Q7631191: "event",
        Q7719450: "event",
        Q7934510: "event",
        Q10481722: "event",
        Q10726046: "event",
        Q11590783: "event",
        Q14928252: "event",
        Q14957210: "event",
        Q15850356: "event",
        Q15885061: "event",
        Q18018758: "event",
        Q18591647: "event",
        Q17086335: "standard",
        Q229345: "performance",
        Q20638346: "event",
        Q20638347: "event",
        Q20638344: "event",
        Q20638345: "event",
        Q22340719: "event",
        Q23938120: "event",
        Q5300113: "performance",
        Q108541894: "regulation",
        Q24900794: "event",
        Q24993224: "event",
        Q25350067: "event",
        Q28456244: "event",
        Q30337878: "event",
        Q48997688: "software",
        Q41524215: "event",
        Q50301185: "event",
        Q50549235: "event",
        Q50574730: "event",
        Q50657938: "event",
        Q50658266: "event",
        Q50658729: "event",
        Q50658948: "event",
        Q50699631: "event",
        Q50699774: "event",
        Q56134005: "book",
        Q77916592: "software",
        Q16346: "event",
        Q101244560: "periodical",
        Q111137792: "software",
        Q104412521: "event",
        Q104412526: "event",
        Q104412524: "event",
        Q104677346: "event",
        Q106303569: "book",
        Q107348207: "event",
        Q109461212: "event",
        Q109623346: "event",
        Q110733884: "event",
        Q10478639: "dataset",
        Q819122: "software",
        Q845159: "motion_picture",
        Q1049203: "software",
        Q12105343: "song",
        Q12134889: "song",
        Q713540: "legislation",
        Q488552: "event",
        Q491500: "event",
        Q798265: "event",
        Q836736: "event",
        Q861941: "event",
        Q865208: "event",
        Q866617: "event",
        Q1049397: "event",
        Q1049733: "event",
        Q1066172: "event",
        Q1073949: "event",
        Q1976583: "book",
        Q1991869: "book",
        Q3565822: "book",
        Q2953976: "event",
        Q3217464: "event",
        Q3940786: "book",
        Q3329365: "event",
        Q3386368: "event",
        Q3459291: "event",
        Q3538157: "event",
        Q3586831: "event",
        Q3586834: "event",
        Q3586835: "event",
        Q3586832: "event",
        Q3586838: "event",
        Q3586840: "event",
        Q3870151: "event",
        Q13631399: "software",
        Q4120872: "event",
        Q4331506: "event",
        Q5963034: "event",
        Q17030435: "software",
        Q28702252: "song",
        Q28704262: "song",
        Q9578683: "event",
        Q19377322: "software",
        Q11274709: "book",
        Q11455585: "book",
        Q11488223: "book",
        Q10869081: "event",
        Q11580879: "book",
        Q11690026: "book",
        Q11397993: "event",
        Q11398547: "event",
        Q11399932: "event",
        Q11440018: "event",
        Q11458582: "event",
        Q11476267: "event",
        Q11501315: "event",
        Q11526135: "event",
        Q11614282: "event",
        Q11669898: "event",
        Q12056882: "event",
        Q22908656: "software",
        Q15285702: "event",
        Q15622423: "event",
        Q16684585: "event",
        Q16688377: "event",
        Q17586363: "book",
        Q17214972: "event",
        Q19357149: "book",
        Q20043347: "book",
        Q20043999: "book",
        Q21087462: "book",
        Q22130467: "event",
        Q26225484: "book",
        Q26228231: "book",
        Q26928894: "book",
        Q27022710: "book",
        Q30068158: "event",
        Q15184295: "webpage",
        Q60748603: "software",
        Q39174: "event",
        Q91258173: "software",
        Q86736746: "event",
        Q88975093: "book",
        Q98034066: "software",
        Q108842705: "song",
        Q97292900: "event",
        Q105488055: "book",
        Q105488088: "book",
        Q108660836: "event",
        Q109923199: "software",
        Q109017384: "performance",
        Q4389389: "software",
        Q581634: "event",
        Q677406: "event",
        Q843417: "event",
        Q1501923: "review",
        Q1378622: "event",
        Q1383889: "event",
        Q1570656: "event",
        Q2260479: "book",
        Q1848041: "event",
        Q1984487: "event",
        Q2044642: "event",
        Q2757473: "event",
        Q2795779: "event",
        Q2815206: "event",
        Q2815625: "event",
        Q2819585: "event",
        Q2856451: "event",
        Q2856460: "event",
        Q2856464: "event",
        Q3164453: "event",
        Q3209165: "event",
        Q3225305: "event",
        Q3225501: "event",
        Q3547518: "event",
        Q4667633: "event",
        Q4824511: "event",
        Q4970222: "event",
        Q4970532: "event",
        Q5044604: "event",
        Q5055355: "event",
        Q5099912: "event",
        Q5132095: "event",
        Q5412760: "event",
        Q5500257: "event",
        Q5946528: "event",
        Q6722708: "event",
        Q7573033: "software",
        Q7000382: "event",
        Q7676227: "review",
        Q7523152: "event",
        Q7797265: "event",
        Q8035883: "event",
        Q13070866: "event",
        Q13776265: "event",
        Q14173028: "event",
        Q15101744: "event",
        Q15532381: "event",
        Q15812758: "event",
        Q15818916: "event",
        Q15848211: "event",
        Q16014225: "event",
        Q17017794: "event",
        Q17510435: "event",
        Q18026287: "event",
        Q19577037: "event",
        Q20648821: "event",
        Q20712049: "event",
        Q25207855: "event",
        Q25379161: "event",
        Q25384151: "event",
        Q25388352: "event",
        Q26268692: "event",
        Q27680204: "event",
        Q28008052: "event",
        Q47484141: "event",
        Q55394268: "event",
        Q55641457: "event",
        Q56112215: "event",
        Q56294610: "event",
        Q57418825: "event",
        Q60589845: "event",
        Q65706141: "event",
        Q79461534: "event",
        Q79461607: "event",
        Q82983020: "event",
        Q82983459: "event",
        Q86665410: "event",
        Q87263048: "event",
        Q96048367: "event",
        Q97277766: "event",
        Q98195555: "event",
        Q99408840: "event",
        Q100157075: "event",
        Q104236503: "event",
        Q105315129: "event",
        Q105400065: "event",
        Q105845411: "event",
        Q106351574: "event",
        Q106504785: "event",
        Q109279082: "event",
        Q109935395: "event",
        Q110009802: "event",
        Q772497: "song",
        Q2936610: "song",
        Q104847359: "performance",
        Q108297200: "performance",
        Q110643230: "performance",
        Q1023097: "software",
        Q1075238: "software",
        Q7594163: "software",
        Q245753: "event",
        Q419595: "event",
        Q841137: "event",
        Q1046763: "event",
        Q1264834: "event",
        Q1342323: "event",
        Q1402070: "event",
        Q1673340: "event",
        Q11308156: "software",
        Q1786415: "event",
        Q1968642: "event",
        Q2007314: "event",
        Q11578127: "software",
        Q2086665: "event",
        Q2921195: "book",
        Q2333621: "event",
        Q3210210: "event",
        Q3298051: "event",
        Q3406098: "event",
        Q3545509: "event",
        Q3587397: "event",
        Q3587541: "event",
        Q15008061: "software",
        Q6015972: "event",
        Q6015984: "event",
        Q6015989: "event",
        Q6016007: "event",
        Q6016005: "event",
        Q6016023: "event",
        Q6671135: "event",
        Q7013332: "event",
        Q7239034: "event",
        Q8027366: "event",
        Q18433212: "software",
        Q19595415: "software",
        Q10271510: "event",
        Q10488275: "event",
        Q11163656: "event",
        Q11261037: "event",
        Q11262978: "event",
        Q11395251: "event",
        Q11428715: "event",
        Q11489354: "event",
        Q11525357: "event",
        Q11595783: "event",
        Q11643942: "event",
        Q12776529: "event",
        Q12868922: "event",
        Q15296535: "periodical",
        Q14885577: "event",
        Q25303346: "software",
        Q15881232: "event",
        Q16152245: "event",
        Q16482065: "event",
        Q21550458: "book",
        Q21648161: "book",
        Q23657385: "book",
        Q27370064: "event",
        Q28686576: "event",
        Q28922256: "event",
        Q4167410: "webpage",
        Q13406463: "webpage",
        Q51673934: "software",
        Q51675374: "software",
        Q51675524: "software",
        Q54257293: "software",
        Q47258130: "event",
        Q47443726: "event",
        Q48743845: "event",
        Q65665574: "software",
        Q37152856: "webpage",
        Q72850604: "event",
        Q95124454: "software",
        Q96240590: "software",
        Q97730338: "event",
        Q107377911: "software",
        Q98456875: "event",
        Q108901409: "software",
        Q100272578: "book",
        Q109599573: "software",
        Q101246180: "event",
        Q106806190: "event",
        Q109017702: "event",
        Q1153191: "periodical",
        Q111050703: "event",
        Q111962642: "event",
        Q16487172: "periodical",
        Q165596: "software",
        Q175263: "software",
        Q184148: "software",
        Q1105784: "software",
        Q1378125: "software",
        Q1391335: "software",
        Q3761391: "software",
        Q4049444: "software",
        Q5597179: "software",
        Q7777054: "software",
        Q7784741: "software",
        Q188613: "event",
        Q485321: "event",
        Q660064: "event",
        Q979949: "event",
        Q11223899: "software",
        Q1685566: "event",
        Q2025261: "event",
        Q2266066: "event",
        Q11883090: "software",
        Q2348250: "event",
        Q5910791: "event",
        Q7089494: "event",
        Q7676069: "event",
        Q7973180: "event",
        Q11545728: "book",
        Q12038547: "event",
        Q12708896: "event",
        Q14796683: "event",
        Q16158036: "legislation",
        Q16675450: "event",
        Q30059018: "software",
        Q20646667: "event",
        Q20646670: "event",
        Q20646668: "event",
        Q20679712: "event",
        Q20680270: "event",
        Q21622405: "event",
        Q26001264: "event",
        Q66849906: "periodical",
        Q41795188: "event",
        Q42148058: "event",
        Q72398691: "periodical",
        Q84863652: "periodical",
        Q56326879: "event",
        Q4173982: "regulation",
        Q59658968: "event",
        Q37045: "software",
        Q70507976: "software",
        Q64736464: "event",
        Q11523643: "regulation",
        Q111038019: "periodical",
        Q96146237: "software",
        Q108935176: "dataset",
        Q96692808: "event",
        Q109483571: "software",
        Q109483604: "software",
        Q109483621: "software",
        Q109483631: "software",
        Q109483637: "software",
        Q100580950: "event",
        Q100582954: "event",
        Q111590542: "software",
        Q107357080: "event",
        Q107358505: "event",
        Q107358924: "event",
        Q107637253: "event",
        Q111983342: "book",
        Q438150: "dataset",
        Q276709: "book",
        Q130881: "event",
        Q211872: "event",
        Q382934: "event",
        Q587836: "event",
        Q605945: "event",
        Q1328330: "book",
        Q701555: "event",
        Q729106: "event",
        Q1396354: "book",
        Q824540: "event",
        Q913735: "event",
        Q928173: "event",
        Q1032167: "event",
        Q1057427: "event",
        Q1144343: "event",
        Q1282307: "event",
        Q1305501: "event",
        Q1337776: "event",
        Q1374739: "event",
        Q1388446: "event",
        Q2094039: "book",
        Q1558662: "event",
        Q1729655: "event",
        Q136167: "standard",
        Q2014189: "event",
        Q2831979: "book",
        Q2423871: "event",
        Q2538512: "event",
        Q2539625: "event",
        Q2999040: "event",
        Q2999131: "event",
        Q2999182: "event",
        Q3504309: "event",
        Q4912040: "legislation",
        Q4850649: "event",
        Q4872932: "event",
        Q4883139: "event",
        Q5587884: "book",
        Q4956217: "event",
        Q4962676: "event",
        Q5019665: "event",
        Q5030367: "event",
        Q5068904: "event",
        Q5159677: "event",
        Q5177985: "event",
        Q5197842: "event",
        Q5198880: "event",
        Q5200409: "event",
        Q5292847: "event",
        Q5394447: "event",
        Q6052534: "event",
        Q6106793: "event",
        Q6179017: "event",
        Q6314196: "event",
        Q6398459: "event",
        Q6721688: "event",
        Q6765772: "event",
        Q7269976: "event",
        Q7313605: "event",
        Q7330899: "event",
        Q7381099: "event",
        Q7697920: "event",
        Q7929459: "event",
        Q7987655: "event",
        Q8017886: "event",
        Q8036061: "event",
        Q11448081: "book",
        Q12104692: "book",
        Q11899957: "event",
        Q11938851: "event",
        Q12884584: "event",
        Q13593952: "event",
        Q15388803: "event",
        Q17103384: "event",
        Q18661357: "event",
        Q623202: "performance",
        Q21003389: "event",
        Q28653601: "event",
        Q37341555: "event",
        Q53709910: "event",
        Q65077112: "software",
        Q57701167: "event",
        Q64857237: "event",
        Q10467299: "regulation",
        Q32636: "event",
        Q75837421: "book",
        Q76765039: "book",
        Q77133429: "event",
        Q96392730: "book",
        Q97579381: "event",
        Q97579498: "event",
        Q97579500: "event",
        Q4922471: "broadcast",
        Q16247289: "broadcast",
        Q665182: "event",
        Q676429: "event",
        Q720609: "event",
        Q775342: "event",
        Q789237: "event",
        Q887604: "event",
        Q903407: "event",
        Q1205825: "event",
        Q1258503: "event",
        Q1266833: "event",
        Q1273394: "event",
        Q1300443: "event",
        Q1360284: "event",
        Q1404868: "event",
        Q1453709: "event",
        Q1520402: "event",
        Q1543109: "event",
        Q1667081: "event",
        Q1841122: "event",
        Q1934363: "event",
        Q1973903: "event",
        Q1979472: "event",
        Q1998921: "event",
        Q181693: "standard",
        Q2080525: "event",
        Q2124013: "event",
        Q2135911: "event",
        Q2151638: "event",
        Q2152583: "event",
        Q2166014: "event",
        Q2175997: "event",
        Q2195028: "event",
        Q2220085: "event",
        Q2252981: "event",
        Q2266608: "event",
        Q2273291: "event",
        Q2273820: "event",
        Q2407435: "event",
        Q2458639: "event",
        Q2576830: "event",
        Q2596276: "event",
        Q849492: "standard",
        Q2786776: "event",
        Q2945108: "event",
        Q3083983: "event",
        Q3144114: "event",
        Q3156042: "event",
        Q3280983: "event",
        Q3454956: "event",
        Q1867168: "standard",
        Q3891819: "event",
        Q3931682: "event",
        Q3931680: "event",
        Q4429654: "event",
        Q4442312: "event",
        Q4460750: "event",
        Q4652332: "event",
        Q4666912: "event",
        Q4733069: "event",
        Q4744956: "event",
        Q4816529: "event",
        Q4824659: "event",
        Q4948069: "event",
        Q4950413: "event",
        Q4968809: "event",
        Q4970103: "event",
        Q4970978: "event",
        Q4997351: "event",
        Q5013829: "event",
        Q5058544: "event",
        Q5092592: "event",
        Q5108821: "event",
        Q5153848: "event",
        Q5288350: "event",
        Q5316546: "event",
        Q5330484: "event",
        Q5347947: "event",
        Q5349156: "event",
        Q5378372: "event",
        Q5413395: "event",
        Q5580372: "event",
        Q5599880: "event",
        Q5645742: "event",
        Q5646189: "event",
        Q5676669: "event",
        Q5689403: "event",
        Q5689411: "event",
        Q5689414: "event",
        Q5689416: "event",
        Q5689423: "event",
        Q5689421: "event",
        Q5689461: "event",
        Q5714677: "event",
        Q5785219: "event",
        Q19936988: "event",
        Q63352667: "event",
        Q10982: "event",
        Q111307290: "software",
        Q5888446: "event",
        Q6096875: "event",
        Q6097272: "event",
        Q6103676: "event",
        Q6103686: "event",
        Q6104128: "event",
        Q6412323: "event",
        Q6413593: "event",
        Q6413741: "event",
        Q6523275: "event",
        Q6721011: "event",
        Q6735442: "event",
        Q6755023: "event",
        Q6771991: "event",
        Q6771993: "event",
        Q6796435: "event",
        Q6825228: "event",
        Q6896105: "event",
        Q6953001: "event",
        Q6971626: "event",
        Q7015637: "event",
        Q7231121: "event",
        Q7235497: "event",
        Q7300466: "event",
        Q7300576: "event",
        Q7300583: "event",
        Q7338738: "event",
        Q7372071: "event",
        Q7372072: "event",
        Q7373894: "event",
        Q7374286: "event",
        Q7374872: "event",
        Q7374920: "event",
        Q7423425: "event",
        Q7432702: "event",
        Q7439417: "event",
        Q7535122: "event",
        Q7561978: "event",
        Q7597039: "event",
        Q7636342: "event",
        Q7638972: "event",
        Q7709883: "event",
        Q7737900: "event",
        Q7753214: "event",
        Q7761589: "event",
        Q7774229: "event",
        Q7923377: "event",
        Q7963103: "event",
        Q7963824: "event",
        Q7969370: "event",
        Q8030876: "event",
        Q8030880: "event",
        Q8036047: "event",
        Q8036159: "event",
        Q8085786: "event",
        Q9067494: "event",
        Q9678177: "event",
        Q10378621: "event",
        Q10667928: "event",
        Q10882833: "event",
        Q11389425: "event",
        Q11389715: "event",
        Q11389741: "event",
        Q11390255: "event",
        Q11421040: "event",
        Q11495138: "event",
        Q11517446: "event",
        Q11582264: "event",
        Q11853514: "event",
        Q11883147: "event",
        Q11888216: "event",
        Q12046934: "event",
        Q12267013: "event",
        Q12882986: "event",
        Q13578912: "event",
        Q13816118: "event",
        Q13906726: "event",
        Q14942291: "event",
        Q14979598: "event",
        Q14980231: "event",
        Q15712423: "event",
        Q15841948: "event",
        Q15999858: "event",
        Q16537427: "event",
        Q16537585: "event",
        Q16932625: "event",
        Q16932629: "event",
        Q16983611: "event",
        Q16983615: "event",
        Q16983619: "event",
        Q17005525: "event",
        Q17017931: "event",
        Q17995418: "event",
        Q18039738: "event",
        Q18125104: "event",
        Q18470644: "event",
        Q18662166: "event",
        Q19577361: "event",
        Q19812499: "event",
        Q20016762: "event",
        Q108861375: "event",
        Q108861450: "event",
        Q108861665: "event",
        Q110641401: "event",
        Q2492568: "dataset",
        Q337445: "webpage",
        Q1242244: "webpage",
        Q6042740: "webpage",
        Q2047885: "event",
        Q507810: "standard",
        Q1144077: "standard",
        Q1425864: "standard",
        Q1757074: "standard",
        Q1878074: "standard",
        Q15279482: "webpage",
        Q16999523: "event",
        Q17110771: "event",
        Q17148060: "event",
        Q20153194: "event",
        Q20153779: "event",
        Q20477097: "event",
        Q20642275: "event",
        Q20804110: "event",
        Q21189798: "event",
        Q21282148: "event",
        Q21282569: "event",
        Q21282584: "event",
        Q21282718: "event",
        Q21282717: "event",
        Q22909293: "event",
        Q23058296: "event",
        Q23463562: "event",
        Q24666796: "event",
        Q25270494: "event",
        Q26695700: "event",
        Q25413445: "standard",
        Q30016890: "event",
        Q55422400: "broadcast",
        Q43446213: "event",
        Q43456981: "event",
        Q47000346: "event",
        Q47000422: "event",
        Q47000599: "event",
        Q47762931: "event",
        Q78898325: "periodical",
        Q55170631: "event",
        Q55171044: "event",
        Q55439428: "event",
        Q56877748: "event",
        Q58692830: "event",
        Q70597985: "webpage",
        Q70779441: "webpage",
        Q61910908: "event",
        Q63897228: "event",
        Q63977382: "event",
        Q63977402: "event",
        Q64495379: "event",
        Q65057098: "event",
        Q65640446: "event",
        Q65089134: "standard",
        Q67206426: "event",
        Q110875181: "dataset",
        Q107974527: "webpage",
        Q109352904: "software",
        Q20893947: "legal_case",
        Q114581: "event",
        Q120290: "event",
        Q173704: "event",
        Q173739: "event",
        Q174080: "event",
        Q188317: "event",
        Q208137: "event",
        Q262650: "event",
        Q270163: "event",
        Q282770: "event",
        Q429887: "event",
        Q431394: "event",
        Q1043786: "event",
        Q1092864: "event",
        Q1131293: "event",
        Q1346003: "event",
        Q1421853: "event",
        Q1548846: "event",
        Q1829157: "event",
        Q1937553: "event",
        Q1998642: "event",
        Q2021907: "event",
        Q2613789: "event",
        Q2818070: "event",
        Q3738583: "book",
        Q3113923: "event",
        Q4037235: "event",
        Q4810956: "event",
        Q5639161: "book",
        Q5171999: "event",
        Q5302273: "event",
        Q5527485: "event",
        Q5594971: "event",
        Q6470596: "event",
        Q6731952: "event",
        Q6954100: "event",
        Q7370982: "event",
        Q7830859: "event",
        Q7981321: "event",
        Q30945529: "dataset",
        Q12064367: "event",
        Q12790051: "event",
        Q16024637: "event",
        Q16965239: "event",
        Q19866105: "event",
        Q20107484: "event",
        Q20181844: "event",
        Q21647744: "book",
        Q24283994: "book",
        Q24284014: "book",
        Q25464347: "book",
        Q24906084: "event",
        Q57207479: "periodical",
        Q28206864: "event",
        Q28403568: "event",
        Q28403569: "event",
        Q28403751: "event",
        Q28403796: "event",
        Q28447773: "event",
        Q28447779: "event",
        Q28447809: "event",
        Q28447827: "event",
        Q28447867: "event",
        Q28447967: "event",
        Q30645601: "event",
        Q39046566: "event",
        Q39046576: "event",
        Q43080916: "event",
        Q60744346: "event",
        Q60785088: "event",
        Q62789940: "event",
        Q62790009: "event",
        Q63527079: "event",
        Q6876: "event",
        Q29762: "event",
        Q87267404: "event",
        Q87267425: "event",
        Q87267436: "event",
        Q87267444: "event",
        Q111661787: "dataset",
        Q96482439: "event",
        Q99026520: "event",
        Q99192928: "event",
        Q99541097: "event",
        Q104173673: "event",
        Q104677554: "event",
        Q104677577: "event",
        Q106452651: "book",
        Q107787123: "event",
        Q93441: "event",
        Q117827: "event",
        Q127780: "event",
        Q129921: "event",
        Q130122: "event",
        Q133440: "event",
        Q180570: "event",
        Q194537: "event",
        Q202744: "event",
        Q220347: "event",
        Q476642: "event",
        Q499650: "event",
        Q522071: "event",
        Q577739: "event",
        Q578715: "event",
        Q582959: "event",
        Q584160: "event",
        Q604756: "event",
        Q631254: "event",
        Q645677: "event",
        Q645688: "event",
        Q654150: "event",
        Q660559: "event",
        Q663317: "event",
        Q673767: "event",
        Q715044: "event",
        Q715992: "event",
        Q720605: "event",
        Q733352: "event",
        Q745444: "event",
        Q748627: "event",
        Q748643: "event",
        Q748741: "event",
        Q751518: "event",
        Q751527: "event",
        Q754496: "event",
        Q755148: "event",
        Q756053: "event",
        Q756057: "event",
        Q756744: "event",
        Q826703: "event",
        Q827016: "event",
        Q830686: "event",
        Q832177: "event",
        Q833790: "event",
        Q837886: "event",
        Q838067: "event",
        Q893182: "event",
        Q1115093: "event",
        Q1318139: "event",
        Q2080804: "event",
        Q2565953: "event",
        Q2882396: "event",
        Q3122656: "event",
        Q3440758: "event",
        Q3816474: "event",
        Q3866328: "event",
        Q3892267: "event",
        Q3967057: "event",
        Q4745466: "event",
        Q5281223: "event",
        Q5985530: "event",
        Q7078911: "event",
        Q7378334: "event",
        Q9322742: "event",
        Q28971994: "broadcast",
        Q16184518: "event",
        Q16677062: "event",
        Q21088077: "event",
        Q23041530: "event",
        Q26241551: "event",
        Q26832970: "event",
        Q28446493: "event",
        Q32635006: "event",
        Q39052122: "event",
        Q57775833: "software",
        Q48832833: "event",
        Q60740537: "event",
        Q60836663: "event",
        Q65231449: "event",
        Q39399: "event",
        Q76451129: "event",
        Q76451133: "event",
        Q76451318: "event",
        Q76451353: "event",
        Q76451412: "event",
        Q76496620: "event",
        Q76496621: "event",
        Q76496910: "event",
        Q76496914: "event",
        Q76496912: "event",
        Q76496916: "event",
        Q77304585: "event",
        Q77305023: "event",
        Q77305474: "event",
        Q83952275: "event",
        Q84017620: "event",
        Q84402060: "event",
        Q97201329: "event",
        Q108384535: "event",
        Q223010: "event",
        Q238982: "event",
        Q276682: "event",
        Q279861: "event",
        Q311783: "event",
        Q313414: "event",
        Q327798: "event",
        Q368461: "event",
        Q368860: "event",
        Q392385: "event",
        Q479411: "event",
        Q479901: "event",
        Q495101: "event",
        Q529927: "event",
        Q534426: "event",
        Q544710: "event",
        Q558225: "event",
        Q579569: "event",
        Q592389: "event",
        Q603001: "event",
        Q609695: "event",
        Q616375: "event",
        Q660558: "event",
        Q667092: "event",
        Q668065: "event",
        Q674440: "event",
        Q691907: "event",
        Q702215: "event",
        Q732973: "event",
        Q739723: "event",
        Q739888: "event",
        Q748995: "event",
        Q755314: "event",
        Q783137: "event",
        Q785389: "event",
        Q789097: "event",
        Q790341: "event",
        Q838761: "event",
        Q842047: "event",
        Q844700: "event",
        Q847573: "event",
        Q850990: "event",
        Q886519: "event",
        Q890528: "event",
        Q903576: "event",
        Q905666: "event",
        Q906441: "event",
        Q910967: "event",
        Q916897: "event",
        Q926869: "event",
        Q955298: "event",
        Q961537: "event",
        Q979943: "event",
        Q1032130: "event",
        Q1129634: "event",
        Q1134740: "event",
        Q1297867: "event",
        Q1322351: "event",
        Q1322369: "event",
        Q1322377: "event",
        Q1329312: "event",
        Q1421241: "event",
        Q1463396: "event",
        Q1499294: "event",
        Q1510835: "event",
        Q1520460: "event",
        Q1528578: "event",
        Q1568497: "event",
        Q1612985: "event",
        Q1625214: "event",
        Q1629934: "event",
        Q1644925: "event",
        Q1651460: "event",
        Q1762314: "event",
        Q1764600: "event",
        Q1765681: "event",
        Q1767214: "event",
        Q1783405: "event",
        Q1815771: "event",
        Q1816217: "event",
        Q1822089: "event",
        Q1851900: "event",
        Q1852401: "event",
        Q1888987: "event",
        Q1940040: "event",
        Q1991081: "event",
        Q2000678: "event",
        Q2015574: "event",
        Q2066031: "event",
        Q2072432: "event",
        Q2199668: "event",
        Q2298847: "event",
        Q2329596: "event",
        Q2410764: "event",
        Q2472221: "event",
        Q2537745: "event",
        Q2537751: "event",
        Q2537760: "event",
        Q2537767: "event",
        Q2537764: "event",
        Q2537774: "event",
        Q2537776: "event",
        Q2537783: "event",
        Q2537791: "event",
        Q2537799: "event",
        Q2537821: "event",
        Q2537831: "event",
        Q2537855: "event",
        Q2537860: "event",
        Q2537874: "event",
        Q2537886: "event",
        Q2537892: "event",
        Q2537936: "event",
        Q2537975: "event",
        Q2603172: "event",
        Q2622340: "event",
        Q2856354: "event",
        Q2951930: "event",
        Q2976277: "event",
        Q2976348: "event",
        Q2976466: "event",
        Q2976477: "event",
        Q2999579: "event",
        Q3083746: "event",
        Q3353231: "event",
        Q3353358: "event",
        Q3353513: "event",
        Q3353596: "event",
        Q3353689: "event",
        Q3353695: "event",
        Q3353750: "event",
        Q3353787: "event",
        Q3534238: "event",
        Q3534350: "event",
        Q3534352: "event",
        Q3534543: "event",
        Q3534619: "event",
        Q3534664: "event",
        Q3534726: "event",
        Q3534800: "event",
        Q3534887: "event",
        Q3534943: "event",
        Q3534966: "event",
        Q3534980: "event",
        Q3535032: "event",
        Q3535045: "event",
        Q3535052: "event",
        Q3535084: "event",
        Q3535094: "event",
        Q3535245: "event",
        Q3535302: "event",
        Q3535331: "event",
        Q3547462: "event",
        Q3547479: "event",
        Q3547494: "event",
        Q3800397: "event",
        Q3877108: "event",
        Q3883247: "event",
        Q4014176: "event",
        Q4017080: "event",
        Q4017086: "event",
        Q4017175: "event",
        Q4017348: "event",
        Q4742639: "event",
        Q4766524: "event",
        Q5132181: "event",
        Q5270792: "event",
        Q6431149: "event",
        Q7956071: "event",
        Q7956074: "event",
        Q7956075: "event",
        Q9170626: "event",
        Q9369429: "event",
        Q13222936: "event",
        Q13360739: "event",
        Q13528369: "event",
        Q13534286: "event",
        Q14238758: "event",
        Q14512078: "event",
        Q14517131: "event",
        Q14551987: "event",
        Q15055625: "event",
        Q15056459: "event",
        Q15077346: "event",
        Q15263377: "event",
        Q15502567: "event",
        Q15504389: "event",
        Q15650921: "event",
        Q15710001: "event",
        Q15853310: "event",
        Q15853308: "event",
        Q15853309: "event",
        Q15853315: "event",
        Q15853312: "event",
        Q15853318: "event",
        Q15853316: "event",
        Q16064794: "event",
        Q16064795: "event",
        Q16064793: "event",
        Q16079746: "event",
        Q108597200: "event",
        Q108597207: "event",
        Q108691989: "event",
        Q108783123: "event",
        Q109234967: "event",
        Q109570548: "event",
        Q109681671: "event",
        Q156097: "event",
        Q265586: "event",
        Q270907: "event",
        Q299147: "event",
        Q299144: "event",
        Q299159: "event",
        Q299174: "event",
        Q299176: "event",
        Q299193: "event",
        Q299197: "event",
        Q299220: "event",
        Q299236: "event",
        Q299406: "event",
        Q299415: "event",
        Q299454: "event",
        Q299475: "event",
        Q299517: "event",
        Q299560: "event",
        Q299617: "event",
        Q299622: "event",
        Q299678: "event",
        Q299685: "event",
        Q299707: "event",
        Q299712: "event",
        Q299720: "event",
        Q299791: "event",
        Q2313301: "standard",
        Q3570403: "standard",
        Q16680689: "event",
        Q17021287: "event",
        Q17311580: "event",
        Q17493146: "event",
        Q17561018: "event",
        Q17561114: "event",
        Q18088938: "event",
        Q18413542: "event",
        Q18413540: "event",
        Q18413541: "event",
        Q18415533: "event",
        Q20656604: "event",
        Q20710122: "event",
        Q20970324: "event",
        Q20982704: "event",
        Q22079747: "event",
        Q23854141: "event",
        Q24289601: "event",
        Q25379073: "event",
        Q25385301: "event",
        Q26874537: "event",
        Q27276247: "event",
        Q27901751: "event",
        Q26205771: "standard",
        Q26207712: "standard",
        Q26207734: "standard",
        Q26207792: "standard",
        Q26207808: "standard",
        Q26207821: "standard",
        Q26207986: "standard",
        Q26208253: "standard",
        Q26211338: "standard",
        Q26211510: "standard",
        Q26211528: "standard",
        Q26211536: "standard",
        Q29397293: "event",
        Q29411134: "event",
        Q28346137: "standard",
        Q39058982: "event",
        Q47487929: "event",
        Q47508845: "event",
        Q47763511: "event",
        Q50321171: "event",
        Q52739176: "event",
        Q61062132: "event",
        Q64830643: "event",
        Q65746965: "event",
        Q65934295: "event",
        Q8496: "event",
        Q48644: "event",
        Q64827: "event",
        Q74110205: "event",
        Q74127622: "event",
        Q85859665: "event",
        Q98228191: "event",
        Q100375171: "event",
        Q104550106: "event",
        Q106382469: "event",
        Q106421279: "event",
        Q106834409: "event",
        Q106840313: "event",
        Q107556491: "event",
        Q107573051: "event",
        Q107905053: "event",
        Q108083554: "event",
        Q108783909: "event",
        Q299795: "event",
        Q299951: "event",
        Q300007: "event",
        Q300028: "event",
        Q465450: "event",
        Q558266: "event",
        Q558672: "event",
        Q597169: "event",
        Q597452: "event",
        Q954772: "event",
        Q1109657: "event",
        Q1230166: "event",
        Q1364943: "event",
        Q1376760: "event",
        Q1393477: "event",
        Q1426858: "event",
        Q1633700: "event",
        Q1770729: "event",
        Q1993182: "event",
        Q280761: "standard",
        Q2317197: "event",
        Q2531614: "event",
        Q2603957: "event",
        Q2632544: "event",
        Q2792159: "event",
        Q2869380: "event",
        Q3353878: "event",
        Q3601563: "event",
        Q3601604: "event",
        Q3601630: "event",
        Q3602047: "event",
        Q3602052: "event",
        Q3602162: "event",
        Q3602172: "event",
        Q3603465: "event",
        Q3649351: "event",
        Q3665808: "event",
        Q3683622: "event",
        Q3860590: "event",
        Q3886561: "event",
        Q3979068: "event",
        Q5109325: "event",
        Q5764200: "event",
        Q6962449: "event",
        Q6965981: "event",
        Q7009606: "event",
        Q7505806: "event",
        Q7699221: "event",
        Q7787114: "event",
        Q12012406: "event",
        Q13221816: "event",
        Q13221953: "event",
        Q13222012: "event",
        Q13222030: "event",
        Q13360692: "event",
        Q13360713: "event",
        Q13360724: "event",
        Q13427619: "event",
        Q13427623: "event",
        Q14326700: "event",
        Q14342744: "event",
        Q14405758: "event",
        Q14922727: "event",
        Q15043913: "event",
        Q15062154: "event",
        Q15116774: "event",
        Q15149863: "event",
        Q15218836: "event",
        Q15391365: "event",
        Q25053937: "software",
        Q15781252: "event",
        Q16465941: "event",
        Q17485677: "event",
        Q18926536: "event",
        Q19787652: "event",
        Q19799848: "event",
        Q20008620: "event",
        Q20182662: "event",
        Q25378680: "event",
        Q25380589: "event",
        Q26906554: "book",
        Q26279994: "event",
        Q26844937: "event",
        Q26329975: "standard",
        Q26383099: "standard",
        Q26385770: "standard",
        Q27894844: "standard",
        Q46135307: "event",
        Q46195901: "event",
        Q47511180: "event",
        Q48868616: "event",
        Q50321276: "event",
        Q51434463: "event",
        Q54824152: "event",
        Q65078216: "event",
        Q96418391: "event",
        Q106317803: "event",
        Q106847234: "event",
        Q107296532: "event",
        Q1760256: "song",
        Q1080961: "standard",
        Q10745789: "broadcast",
        Q72986: "event",
        Q117205: "event",
        Q154575: "event",
        Q186431: "event",
        Q187214: "event",
        Q201919: "event",
        Q203441: "event",
        Q203863: "event",
        Q207956: "event",
        Q208631: "event",
        Q211591: "event",
        Q212441: "event",
        Q212458: "event",
        Q215088: "event",
        Q216704: "event",
        Q216759: "event",
        Q221295: "event",
        Q239072: "event",
        Q245829: "event",
        Q255592: "event",
        Q261755: "event",
        Q273339: "event",
        Q273341: "event",
        Q273346: "event",
        Q298750: "event",
        Q309170: "event",
        Q320347: "event",
        Q321550: "event",
        Q331586: "event",
        Q332506: "event",
        Q332589: "event",
        Q332608: "event",
        Q379845: "event",
        Q390580: "event",
        Q428162: "event",
        Q430295: "event",
        Q464852: "event",
        Q503391: "event",
        Q503847: "event",
        Q506214: "event",
        Q507204: "event",
        Q507221: "event",
        Q534342: "event",
        Q548988: "event",
        Q585333: "event",
        Q597286: "event",
        Q647450: "event",
        Q648751: "event",
        Q659161: "event",
        Q660460: "event",
        Q722693: "event",
        Q723570: "event",
        Q729577: "event",
        Q5723144: "book",
        Q5725538: "book",
        Q6958560: "event",
        Q6958812: "event",
        Q6964355: "event",
        Q6964699: "event",
        Q6987067: "event",
        Q7027620: "event",
        Q8035864: "event",
        Q8463186: "event",
        Q12411895: "event",
        Q12411892: "event",
        Q12411893: "event",
        Q16130654: "event",
        Q16130658: "event",
        Q28056168: "event",
        Q28056182: "event",
        Q28056183: "event",
        Q28056186: "event",
        Q28056184: "event",
        Q28056185: "event",
        Q28966106: "event",
        Q28966115: "event",
        Q29053675: "event",
        Q29346472: "event",
        Q30943659: "book",
        Q30943829: "book",
        Q30945666: "book",
        Q34542827: "event",
        Q34548345: "event",
        Q60215679: "broadcast",
        Q60215966: "broadcast",
        Q61245365: "software",
        Q60969183: "event",
        Q74218661: "event",
        Q106393171: "broadcast",
        Q106634018: "broadcast",
        Q106681812: "broadcast",
        Q103842351: "software",
        Q110068411: "software",
        Q780605: "dataset",
        Q1050259: "dataset",
        Q106900079: "webpage",
        Q112055: "event",
        Q282576: "event",
        Q1074045: "book",
        Q426564: "event",
        Q489120: "event",
        Q527512: "event",
        Q550430: "event",
        Q730471: "event",
        Q850347: "event",
        Q1326196: "event",
        Q1478093: "event",
        Q11338014: "software",
        Q2603751: "event",
        Q2869122: "event",
        Q2886695: "event",
        Q3799069: "event",
        Q3937030: "event",
        Q4158493: "event",
        Q4925844: "event",
        Q16681627: "software",
        Q11223691: "book",
        Q11818941: "event",
        Q12584583: "event",
        Q12603684: "event",
        Q12713601: "event",
        Q12778744: "event",
        Q13515630: "event",
        Q14582865: "event",
        Q16470174: "event",
        Q17639483: "event",
        Q27670585: "software",
        Q18414336: "event",
        Q20542163: "event",
        Q20830799: "event",
        Q21003426: "event",
        Q25063983: "event",
        Q25377391: "event",
        Q28453851: "event",
        Q29564413: "event",
        Q30126458: "event",
        Q30580599: "event",
        Q30609014: "event",
        Q42409239: "software",
        Q36345696: "event",
        Q38080438: "event",
        Q45107320: "event",
        Q51155371: "event",
        Q51155378: "event",
        Q51155394: "event",
        Q51155399: "event",
        Q51155484: "event",
        Q51155491: "event",
        Q51155503: "event",
        Q51155506: "event",
        Q51155570: "event",
        Q51155575: "event",
        Q51155589: "event",
        Q51155592: "event",
        Q51155664: "event",
        Q51155668: "event",
        Q51155684: "event",
        Q51155766: "event",
        Q51155783: "event",
        Q51155860: "event",
        Q51155899: "event",
        Q51156125: "event",
        Q51156132: "event",
        Q51156147: "event",
        Q51156258: "event",
        Q51156339: "event",
        Q51156346: "event",
        Q51156363: "event",
        Q51156443: "event",
        Q51156449: "event",
        Q51156458: "event",
        Q51156537: "event",
        Q51156543: "event",
        Q51156561: "event",
        Q51156639: "event",
        Q51156644: "event",
        Q51156660: "event",
        Q56085106: "event",
        Q60533564: "event",
        Q61055621: "event",
        Q105729508: "event",
        Q106164053: "event",
        Q106164255: "event",
        Q106164503: "event",
        Q106164646: "event",
        Q106164813: "event",
        Q106181220: "event",
        Q106201677: "event",
        Q106213754: "event",
        Q106213814: "event",
        Q23034771: "event",
        Q27925543: "event",
        Q27925545: "event",
        Q27925646: "event",
        Q43233939: "event",
        Q51155402: "event",
        Q51155417: "event",
        Q51155426: "event",
        Q51155447: "event",
        Q51155451: "event",
        Q51155454: "event",
        Q51155467: "event",
        Q51155471: "event",
        Q51155517: "event",
        Q51155520: "event",
        Q51155539: "event",
        Q51155536: "event",
        Q51155542: "event",
        Q51155554: "event",
        Q51155557: "event",
        Q51155596: "event",
        Q51155607: "event",
        Q51155611: "event",
        Q51155627: "event",
        Q51155629: "event",
        Q51155632: "event",
        Q51155645: "event",
        Q51155649: "event",
        Q51155688: "event",
        Q51155689: "event",
        Q51155705: "event",
        Q51155708: "event",
        Q51155727: "event",
        Q51155730: "event",
        Q51155732: "event",
        Q51155750: "event",
        Q51155752: "event",
        Q51155787: "event",
        Q51155785: "event",
        Q51155805: "event",
        Q51155809: "event",
        Q51155826: "event",
        Q51155829: "event",
        Q51155833: "event",
        Q51155846: "event",
        Q51155845: "event",
        Q51155901: "event",
        Q51155904: "event",
        Q51155958: "event",
        Q51156069: "event",
        Q51156082: "event",
        Q51156080: "event",
        Q51156101: "event",
        Q51156108: "event",
        Q51156149: "event",
        Q51156152: "event",
        Q51156166: "event",
        Q51156173: "event",
        Q51156198: "event",
        Q51156196: "event",
        Q51156204: "event",
        Q51156220: "event",
        Q51156224: "event",
        Q51156263: "event",
        Q51156261: "event",
        Q51156285: "event",
        Q51156303: "event",
        Q51156301: "event",
        Q51156306: "event",
        Q51156317: "event",
        Q51156364: "event",
        Q51156370: "event",
        Q51156389: "event",
        Q51156398: "event",
        Q51156414: "event",
        Q51156412: "event",
        Q51156428: "event",
        Q51156462: "event",
        Q51156476: "event",
        Q51156482: "event",
        Q51156496: "event",
        Q51156501: "event",
        Q51156506: "event",
        Q51156524: "event",
        Q51156564: "event",
        Q51156568: "event",
        Q51156582: "event",
        Q51156590: "event",
        Q51156604: "event",
        Q51156605: "event",
        Q51156608: "event",
        Q51156622: "event",
        Q51156662: "event",
        Q51156665: "event",
        Q51156679: "event",
        Q51156684: "event",
        Q51156699: "event",
        Q51156703: "event",
        Q51156712: "event",
        Q51156738: "event",
        Q2299775: "dataset",
        Q2584888: "dataset",
        Q361880: "book",
        Q222772: "event",
        Q1508646: "book",
        Q4264067: "book",
        Q3628923: "event",
        Q5402049: "event",
        Q5466190: "event",
        Q5839622: "event",
        Q10289844: "event",
        Q15409382: "event",
        Q15409443: "event",
        Q15409446: "event",
        Q15409445: "event",
        Q15409450: "event",
        Q15409449: "event",
        Q15409452: "event",
        Q15409610: "event",
        Q15409611: "event",
        Q15409609: "event",
        Q15409614: "event",
        Q15409681: "event",
        Q15409758: "event",
        Q15409762: "event",
        Q15409833: "event",
        Q15409836: "event",
        Q15409944: "event",
        Q15669812: "event",
        Q15678828: "event",
        Q16575578: "event",
        Q16647802: "event",
        Q17397881: "event",
        Q18125080: "event",
        Q18350828: "event",
        Q18352052: "event",
        Q18398258: "event",
        Q20950097: "event",
        Q21270498: "event",
        Q21406868: "event",
        Q21519353: "event",
        Q21561376: "event",
        Q24887764: "event",
        Q27555119: "event",
        Q27572180: "event",
        Q28919047: "event",
        Q51155476: "event",
        Q51155559: "event",
        Q51155651: "event",
        Q51155757: "event",
        Q51155851: "event",
        Q51156110: "event",
        Q51156228: "event",
        Q51156320: "event",
        Q51156325: "event",
        Q51156430: "event",
        Q51156433: "event",
        Q51156526: "event",
        Q51156529: "event",
        Q51156625: "event",
        Q51156628: "event",
        Q51156742: "event",
        Q51156747: "event",
        Q51202846: "event",
        Q51202866: "event",
        Q51202880: "event",
        Q51202919: "event",
        Q51202923: "event",
        Q51202947: "event",
        Q51202945: "event",
        Q51202951: "event",
        Q51202970: "event",
        Q51202974: "event",
        Q51202973: "event",
        Q51202990: "event",
        Q51202995: "event",
        Q51202996: "event",
        Q51203019: "event",
        Q51203024: "event",
        Q51203030: "event",
        Q51203049: "event",
        Q51203057: "event",
        Q51203062: "event",
        Q51203111: "event",
        Q51203115: "event",
        Q51203119: "event",
        Q51203138: "event",
        Q51203146: "event",
        Q51203150: "event",
        Q51203168: "event",
        Q51203175: "event",
        Q51203173: "event",
        Q51203191: "event",
        Q51203193: "event",
        Q51203197: "event",
        Q51203217: "event",
        Q51203222: "event",
        Q51203225: "event",
        Q58310010: "book",
        Q105723390: "software",
        Q111955614: "book",
        Q922853: "song",
        Q829548: "software",
        Q104696061: "webpage",
        Q16695167: "song",
        Q161376: "event",
        Q285656: "event",
        Q301872: "event",
        Q478286: "event",
        Q492871: "event",
        Q1192278: "book",
        Q552835: "event",
        Q912726: "event",
        Q968354: "event",
        Q1654923: "event",
        Q1851026: "event",
        Q1853265: "event",
        Q1860997: "event",
        Q1861055: "event",
        Q2544753: "book",
        Q2031947: "event",
        Q2032961: "event",
        Q2033735: "event",
        Q3232779: "event",
        Q5412482: "event",
        Q11394662: "legislation",
        Q11489406: "legislation",
        Q11555052: "legislation",
        Q11555053: "legislation",
        Q11607679: "legislation",
        Q11607677: "legislation",
        Q12409117: "book",
        Q18324679: "event",
        Q21640805: "event",
        Q24865673: "legislation",
        Q27632406: "event",
        Q27922094: "event",
        Q27941277: "event",
        Q4592255: "webpage",
        Q45092341: "book",
        Q17379835: "webpage",
        Q51119345: "event",
        Q51119382: "event",
        Q55550551: "event",
        Q55550563: "event",
        Q55550577: "event",
        Q55550594: "event",
        Q55550606: "event",
        Q55550618: "event",
        Q55550641: "event",
        Q55550661: "event",
        Q55550671: "event",
        Q55550682: "event",
        Q55550689: "event",
        Q55550701: "event",
        Q55550713: "event",
        Q55550729: "event",
        Q55550745: "event",
        Q55550760: "event",
        Q55550774: "event",
        Q55550785: "event",
        Q55550799: "event",
        Q55550811: "event",
        Q55550824: "event",
        Q55550832: "event",
        Q55550842: "event",
        Q55550852: "event",
        Q55550864: "event",
        Q55550880: "event",
        Q55550889: "event",
        Q55550905: "event",
        Q55550919: "event",
        Q55550931: "event",
        Q55550947: "event",
        Q55550961: "event",
        Q55550972: "event",
        Q55550983: "event",
        Q55550999: "event",
        Q55551016: "event",
        Q55655722: "event",
        Q56255042: "standard",
        Q61696314: "event",
        Q61696978: "event",
        Q68319658: "event",
        Q31691: "event",
        Q60314: "event",
        Q69953293: "event",
        Q84326403: "software",
        Q80220485: "event",
        Q84082272: "event",
        Q85875088: "event",
        Q102336293: "software",
        Q108409114: "software",
        Q105477531: "event",
        Q106839571: "event",
        Q108418469: "legislation",
        Q111489125: "book",
        Q2367126: "dataset",
        Q15868218: "periodical",
        Q107080092: "performance",
        Q7601050: "broadcast",
        Q376522: "software",
        Q380266: "software",
        Q1194674: "software",
        Q2016457: "software",
        Q2449010: "software",
        Q379881: "event",
        Q815520: "event",
        Q1132436: "event",
        Q21652487: "dataset",
        Q1774127: "event",
        Q1825417: "event",
        Q2036577: "event",
        Q2038692: "event",
        Q2039892: "event",
        Q2066537: "event",
        Q2088133: "event",
        Q2089180: "event",
        Q2295425: "event",
        Q2330100: "event",
        Q2334043: "event",
        Q2336094: "event",
        Q2337854: "event",
        Q2338781: "event",
        Q2339404: "event",
        Q2340578: "event",
        Q2349249: "event",
        Q2397410: "event",
        Q2403630: "event",
        Q2473917: "event",
        Q2571739: "event",
        Q2582020: "event",
        Q2634964: "event",
        Q2658271: "event",
        Q3025298: "event",
        Q3413631: "event",
        Q3561078: "event",
        Q4508889: "event",
        Q4508925: "event",
        Q4508980: "event",
        Q4508986: "event",
        Q4509068: "event",
        Q4509073: "event",
        Q4509323: "event",
        Q4509385: "event",
        Q4509389: "event",
        Q4509401: "event",
        Q4509412: "event",
        Q4509421: "event",
        Q4509491: "event",
        Q4510975: "event",
        Q4510984: "event",
        Q4511004: "event",
        Q4511159: "event",
        Q5187118: "event",
        Q7863428: "event",
        Q9678843: "event",
        Q9679146: "event",
        Q9679952: "event",
        Q9679971: "event",
        Q9679977: "event",
        Q9685135: "event",
        Q10969960: "event",
        Q11831280: "event",
        Q12168697: "event",
        Q16980767: "event",
        Q18433459: "event",
        Q18470144: "event",
        Q18474363: "event",
        Q18474367: "event",
        Q18474868: "event",
        Q20052936: "event",
        Q20053011: "event",
        Q21710658: "event",
        Q25428540: "event",
        Q30715562: "event",
        Q44481679: "event",
        Q61719571: "software",
        Q63248180: "software",
        Q64170508: "software",
        Q65504042: "software",
        Q63953019: "event",
        Q66208461: "event",
        Q68902449: "book",
        Q18813: "book",
        Q104884479: "software",
        Q17069312: "report",
        Q1155702: "software",
        Q13635346: "dataset",
        Q5110393: "software",
        Q490396: "event",
        Q2039277: "event",
        Q3586949: "event",
        Q5168161: "event",
        Q11389977: "event",
        Q11981530: "event",
        Q11981534: "event",
        Q11981535: "event",
        Q11981533: "event",
        Q15883395: "event",
        Q16773134: "event",
        Q16965370: "event",
        Q996838: "performance",
        Q21282560: "event",
        Q22341298: "event",
        Q24660195: "event",
        Q28035577: "event",
        Q70453213: "report",
        Q50291818: "event",
        Q67574055: "software",
        Q67574919: "software",
        Q60743413: "event",
        Q64778852: "event",
        Q64918780: "event",
        Q64919264: "event",
        Q64995666: "event",
        Q65037116: "event",
        Q65037117: "event",
        Q65037122: "event",
        Q66362695: "book",
        Q66363169: "book",
        Q68431138: "event",
        Q91794765: "dataset",
        Q76418219: "event",
        Q106698068: "broadcast",
        Q106698131: "broadcast",
        Q106698140: "broadcast",
        Q106704934: "broadcast",
        Q106704937: "broadcast",
        Q106704989: "broadcast",
        Q78795588: "book",
        Q80716240: "event",
        Q92282911: "event",
        Q92282917: "event",
        Q92282921: "event",
        Q92312633: "event",
        Q93154471: "event",
        Q93306512: "event",
        Q93395403: "event",
        Q93455684: "event",
        Q93462299: "event",
        Q93557859: "event",
        Q93558267: "event",
        Q93559100: "event",
        Q93559480: "event",
        Q94175697: "event",
        Q94179291: "event",
        Q94184439: "event",
        Q94328265: "event",
        Q94330803: "event",
        Q94335159: "event",
        Q94440690: "event",
        Q94449872: "event",
        Q94456036: "event",
        Q94461921: "event",
        Q94464324: "event",
        Q94466552: "event",
        Q94553207: "event",
        Q94566633: "event",
        Q94572592: "event",
        Q94602639: "event",
        Q94606948: "event",
        Q94609396: "event",
        Q94614514: "event",
        Q94620924: "event",
        Q94634947: "event",
        Q94674064: "event",
        Q94679742: "event",
        Q94683099: "event",
        Q94684100: "event",
        Q94694443: "event",
        Q94694538: "event",
        Q94694673: "event",
        Q104869738: "event",
        Q105687046: "event",
        Q11999969: "dataset",
        Q20103485: "dataset",
        Q505425: "event",
        Q787065: "event",
        Q922379: "event",
        Q978420: "event",
        Q1679766: "book",
        Q1204825: "event",
        Q1346707: "event",
        Q1355247: "event",
        Q1408039: "event",
        Q2069922: "book",
        Q1535563: "event",
        Q1554232: "event",
        Q1683209: "event",
        Q1760295: "event",
        Q1967202: "event",
        Q2024469: "event",
        Q2964173: "event",
        Q3045762: "event",
        Q3140055: "event",
        Q3403230: "event",
        Q3404984: "event",
        Q3703473: "event",
        Q4649839: "event",
        Q4824156: "event",
        Q88509703: "regulation",
        Q4887635: "event",
        Q5461357: "event",
        Q6359046: "event",
        Q6963270: "event",
        Q6978541: "event",
        Q11970590: "event",
        Q11970589: "event",
        Q11981539: "event",
        Q11981536: "event",
        Q11981537: "event",
        Q11981542: "event",
        Q11981543: "event",
        Q11981540: "event",
        Q11981541: "event",
        Q11981546: "event",
        Q11981544: "event",
        Q11981545: "event",
        Q11981548: "event",
        Q12742766: "event",
        Q19141585: "book",
        Q18646143: "event",
        Q19377750: "event",
        Q19377751: "event",
        Q19377755: "event",
        Q19377752: "event",
        Q19377753: "event",
        Q19377758: "event",
        Q19377756: "event",
        Q19377757: "event",
        Q19377762: "event",
        Q19377763: "event",
        Q19377760: "event",
        Q19377761: "event",
        Q19377767: "event",
        Q19377764: "event",
        Q19377765: "event",
        Q19377770: "event",
        Q19377771: "event",
        Q19377769: "event",
        Q19377773: "event",
        Q31839822: "book",
        Q57265164: "software",
        Q106997754: "broadcast",
        Q106997761: "broadcast",
        Q106997767: "broadcast",
        Q106997772: "broadcast",
        Q106997784: "broadcast",
        Q83768835: "event",
        Q87453504: "book",
        Q87453699: "book",
        Q87453974: "book",
        Q87454073: "book",
        Q87454191: "book",
        Q87454275: "book",
        Q87454306: "book",
        Q87454305: "book",
        Q87454311: "book",
        Q87454308: "book",
        Q87454309: "book",
        Q88903067: "event",
        Q89031984: "event",
        Q89835896: "event",
        Q94953459: "event",
        Q106560450: "software",
        Q97976264: "event",
        Q107608170: "software",
        Q109720157: "software",
        Q108678537: "legislation",
        Q108750339: "event",
        Q110599832: "legislation",
        Q110600499: "legislation",
        Q191342: "software",
        Q373442: "software",
        Q732970: "software",
        Q30897819: "motion_picture",
        Q10991395: "webpage",
        Q2225964: "event",
        Q3910523: "event",
        Q4970106: "event",
        Q5378276: "event",
        Q5467878: "event",
        Q5533179: "event",
        Q5533180: "event",
        Q6457533: "book",
        Q6020058: "event",
        Q15590336: "software",
        Q6351681: "event",
        Q6359201: "event",
        Q6359205: "event",
        Q6963241: "event",
        Q6963244: "event",
        Q7437991: "legislation",
        Q7118812: "event",
        Q7604686: "legislation",
        Q7209850: "event",
        Q7423191: "event",
        Q7438994: "event",
        Q7589626: "event",
        Q18511695: "webpage",
        Q10873931: "event",
        Q10873965: "event",
        Q12808470: "event",
        Q23660930: "webpage",
        Q15279583: "event",
        Q15731592: "event",
        Q15916431: "event",
        Q16044814: "event",
        Q17028773: "book",
        Q16592353: "event",
        Q16687986: "event",
        Q17151691: "event",
        Q18204262: "event",
        Q18657938: "event",
        Q29647057: "software",
        Q20982919: "event",
        Q23888340: "event",
        Q24189210: "event",
        Q24835101: "event",
        Q25350548: "event",
        Q25587711: "event",
        Q28873760: "event",
        Q30715794: "event",
        Q48725816: "event",
        Q59536813: "software",
        Q52305798: "event",
        Q58281635: "event",
        Q65129840: "event",
        Q73107411: "event",
        Q73365776: "event",
        Q103821233: "broadcast",
        Q103842826: "broadcast",
        Q106845483: "broadcast",
        Q106845592: "broadcast",
        Q91990050: "event",
        Q96798339: "legislation",
        Q96474589: "event",
        Q96474603: "event",
        Q96474676: "event",
        Q96474677: "event",
        Q96474691: "event",
        Q96474692: "event",
        Q97970431: "event",
        Q98770211: "event",
        Q100532807: "legislation",
        Q100754500: "legislation",
        Q104226530: "book",
        Q104709546: "event",
        Q104716797: "event",
        Q104722655: "event",
        Q104722990: "event",
        Q104723376: "event",
        Q104723700: "event",
        Q104758795: "event",
        Q104758823: "event",
        Q104758855: "event",
        Q104758883: "event",
        Q104766956: "event",
        Q104787186: "event",
        Q107487610: "event",
        Q131303: "software",
        Q221178: "event",
        Q549884: "event",
        Q595998: "event",
        Q607354: "event",
        Q610903: "event",
        Q809005: "event",
        Q848943: "event",
        Q178051: "standard",
        Q192869: "standard",
        Q215106: "standard",
        Q654383: "standard",
        Q2584726: "standard",
        Q6963239: "event",
        Q16951282: "legislation",
        Q17154458: "standard",
        Q25212904: "legislation",
        Q48879612: "event",
        Q48879636: "event",
        Q52434585: "event",
        Q62617958: "standard",
        Q106625210: "broadcast",
        Q106697970: "broadcast",
        Q106697975: "broadcast",
        Q106727748: "broadcast",
        Q106727754: "broadcast",
        Q106727771: "broadcast",
        Q106727832: "broadcast",
        Q106727901: "broadcast",
        Q106727914: "broadcast",
        Q106727922: "broadcast",
        Q106727935: "broadcast",
        Q106727950: "broadcast",
        Q106727966: "broadcast",
        Q106727999: "broadcast",
        Q106744755: "broadcast",
        Q106745097: "broadcast",
        Q106745341: "broadcast",
        Q106747030: "broadcast",
        Q106748356: "broadcast",
        Q106748460: "broadcast",
        Q106748640: "broadcast",
        Q106749118: "broadcast",
        Q106749214: "broadcast",
        Q108263475: "broadcast",
        Q105103619: "software",
        Q105103699: "software",
        Q104787275: "event",
        Q104787302: "event",
        Q104817971: "event",
        Q104829424: "event",
        Q104831999: "event",
        Q104832083: "event",
        Q104832441: "event",
        Q104832507: "event",
        Q104842040: "event",
        Q104864806: "event",
        Q104865385: "event",
        Q104865744: "event",
        Q104866013: "event",
        Q104866279: "event",
        Q104883066: "event",
        Q104900138: "event",
        Q104903902: "event",
        Q104903952: "event",
        Q104904003: "event",
        Q104904033: "event",
        Q104904073: "event",
        Q104904110: "event",
        Q104909835: "event",
        Q104910622: "event",
        Q104949395: "event",
        Q622820: "article-journal",
        Q109659750: "legislation",
        Q109860353: "event",
        Q1696148: "motion_picture",
        Q2992277: "article-journal",
        Q3028597: "article-journal",
        Q111582946: "event",
        Q4220428: "article-journal",
        Q8031368: "article-journal",
        Q783874: "song",
        Q14472063: "periodical",
        Q4995819: "dataset",
        Q4390943: "software",
        Q28136925: "broadcast",
        Q523224: "event",
        Q787680: "event",
        Q1079817: "event",
        Q1670259: "event",
        Q3408287: "book",
        Q6112431: "event",
        Q7448114: "event",
        Q11223998: "event",
        Q11506547: "event",
        Q15651353: "book",
        Q16949509: "event",
        Q16969638: "event",
        Q19423910: "book",
        Q23657067: "event",
        Q23657075: "event",
        Q10543608: "performance",
        Q41463697: "event",
        Q62584801: "event",
        Q105011790: "broadcast",
        Q105012297: "broadcast",
        Q84944905: "software",
        Q105885171: "broadcast",
        Q105885182: "broadcast",
        Q105908707: "broadcast",
        Q106625239: "broadcast",
        Q106633624: "broadcast",
        Q106633763: "broadcast",
        Q106746993: "broadcast",
        Q106747143: "broadcast",
        Q106779377: "broadcast",
        Q106882345: "broadcast",
        Q106912483: "broadcast",
        Q106914703: "broadcast",
        Q107244961: "article-journal",
        Q99973598: "webpage",
        Q108881260: "broadcast",
        Q96474704: "event",
        Q106542308: "software",
        Q106193139: "event",
        Q106491623: "event",
        Q107411113: "event",
        Q107745617: "event",
        Q107996858: "event",
        Q110245212: "event",
        Q110245408: "event",
        Q110372986: "event",
        Q110373283: "event",
        Q110373359: "event",
        Q110373398: "event",
        Q110373429: "event",
        Q110373504: "event",
        Q110729548: "event",
        Q111489248: "book",
        Q111039982: "event",
        Q111419440: "event",
        Q112075077: "book",
        Q111436305: "event",
        Q111436315: "event",
        Q111436312: "event",
        Q111436804: "event",
        Q111436812: "event",
        Q111436826: "event",
        Q111436832: "event",
        Q111436919: "event",
        Q111437360: "event",
        Q338779: "song",
        Q1123734: "song",
        Q2515188: "dataset",
        Q3080071: "broadcast",
        Q6022825: "broadcast",
        Q79587: "software",
        Q166074: "software",
        Q204214: "software",
        Q237580: "software",
        Q362356: "software",
        Q719621: "software",
        Q725779: "software",
        Q731220: "software",
        Q831367: "software",
        Q973778: "software",
        Q1028939: "software",
        Q1691212: "software",
        Q1755887: "software",
        Q1758048: "software",
        Q1882031: "software",
        Q2165453: "software",
        Q2666693: "software",
        Q3788742: "software",
        Q6047784: "software",
        Q15977715: "broadcast",
        Q189336: "event",
        Q202391: "event",
        Q280004: "event",
        Q10261777: "software",
        Q1469740: "event",
        Q1538290: "event",
        Q1548072: "event",
        Q1753702: "event",
        Q1934817: "event",
        Q2093999: "event",
        Q2529839: "event",
        Q2533907: "event",
        Q2997936: "event",
        Q3085248: "event",
        Q3098404: "event",
        Q3312129: "event",
        Q5204797: "event",
        Q24906243: "broadcast",
        Q7272924: "legislation",
        Q10695431: "book",
        Q10235779: "event",
        Q11353517: "event",
        Q11514881: "event",
        Q11729398: "event",
        Q14094255: "event",
        Q34487266: "broadcast",
        Q18061850: "event",
        Q18061967: "event",
        Q20900741: "event",
        Q21384911: "event",
        Q109600401: "regulation",
        Q62903328: "broadcast",
        Q45311620: "event",
        Q58636917: "software",
        Q56054989: "event",
        Q56278201: "event",
        Q5310: "software",
        Q8811: "software",
        Q58630708: "standard",
        Q63869675: "event",
        Q63891738: "event",
        Q63891752: "event",
        Q11498848: "regulation",
        Q105994387: "software",
        Q97311410: "event",
        Q99463481: "event",
        Q106078186: "event",
        Q110930257: "event",
        Q918098: "broadcast",
        Q108847554: "performance",
        Q110241635: "performance",
        Q80585: "software",
        Q177929: "software",
        Q186152: "software",
        Q223655: "software",
        Q244916: "software",
        Q352090: "software",
        Q473751: "software",
        Q580427: "software",
        Q588784: "software",
        Q614361: "software",
        Q647220: "software",
        Q677051: "software",
        Q759899: "software",
        Q893290: "software",
        Q991293: "software",
        Q1047566: "software",
        Q1049628: "software",
        Q1412818: "software",
        Q1687403: "software",
        Q1901169: "software",
        Q3351552: "software",
        Q3623683: "software",
        Q4018860: "software",
        Q4052124: "software",
        Q5282303: "software",
        Q5463958: "software",
        Q5531642: "software",
        Q6786860: "software",
        Q6987201: "software",
        Q7520680: "software",
        Q8074176: "software",
        Q901296: "book",
        Q383917: "event",
        Q618395: "event",
        Q959599: "event",
        Q10724012: "software",
        Q1741802: "event",
        Q2569052: "book",
        Q861004: "standard",
        Q2751046: "event",
        Q2918219: "event",
        Q2940731: "event",
        Q1150103: "standard",
        Q2745394: "standard",
        Q3693164: "standard",
        Q4000095: "standard",
        Q4045265: "standard",
        Q5975769: "event",
        Q15975508: "software",
        Q16114598: "software",
        Q16347955: "software",
        Q16988498: "software",
        Q17004788: "software",
        Q17042400: "software",
        Q17424195: "software",
        Q17426384: "software",
        Q7268615: "standard",
        Q7707768: "standard",
        Q8047679: "standard",
        Q11300305: "event",
        Q20965967: "software",
        Q12409183: "event",
        Q24590781: "software",
        Q17619970: "event",
        Q19947604: "book",
        Q20026619: "standard",
        Q24678689: "book",
        Q22669938: "standard",
        Q28454487: "event",
        Q31836770: "standard",
        Q46371164: "software",
        Q53411682: "software",
        Q53679757: "software",
        Q50922911: "event",
        Q61714670: "software",
        Q64350339: "software",
        Q53959413: "standard",
        Q59245710: "event",
        Q27948: "software",
        Q63584350: "book",
        Q89580282: "software",
        Q98545376: "software",
        Q110720508: "broadcast",
        Q98271319: "event",
        Q96473327: "standard",
        Q96473325: "standard",
        Q109424921: "event",
        Q110887043: "event",
        Q110887201: "event",
        Q1128903: "software",
        Q1142922: "software",
        Q1146944: "software",
        Q1224994: "software",
        Q1324888: "software",
        Q1344409: "software",
        Q1374036: "software",
        Q1423858: "software",
        Q1890437: "software",
        Q1921825: "software",
        Q2296387: "software",
        Q2427787: "software",
        Q2680578: "software",
        Q3045702: "software",
        Q3990844: "software",
        Q4381439: "software",
        Q4736436: "software",
        Q4927183: "software",
        Q5159104: "software",
        Q5227153: "software",
        Q5678860: "software",
        Q6535093: "software",
        Q6554356: "software",
        Q6577686: "software",
        Q7632171: "software",
        Q7632678: "software",
        Q7887089: "software",
        Q186610: "book",
        Q186274: "event",
        Q628839: "event",
        Q902378: "event",
        Q976500: "event",
        Q1067135: "event",
        Q1185311: "event",
        Q1876815: "book",
        Q1323015: "event",
        Q1395855: "event",
        Q1411690: "event",
        Q137069: "standard",
        Q229405: "standard",
        Q286100: "standard",
        Q294958: "standard",
        Q295089: "standard",
        Q2143098: "event",
        Q430823: "standard",
        Q608089: "standard",
        Q825762: "standard",
        Q865381: "standard",
        Q970024: "standard",
        Q1028827: "standard",
        Q1121699: "standard",
        Q1192582: "standard",
        Q3358174: "event",
        Q3590905: "event",
        Q4227237: "event",
        Q16352367: "software",
        Q16707838: "software",
        Q16948622: "software",
        Q16960371: "software",
        Q17149514: "software",
        Q20031945: "software",
        Q10538096: "event",
        Q10552261: "event",
        Q9260028: "standard",
        Q25345007: "software",
        Q25379564: "software",
        Q17222321: "event",
        Q17354466: "event",
        Q27924245: "software",
        Q19978985: "event",
        Q30715609: "software",
        Q26208318: "event",
        Q50178360: "event",
        Q61627705: "event",
        Q66585557: "book",
        Q86719099: "software",
        Q104886715: "software",
        Q105636095: "software",
        Q107420052: "software",
        Q109403622: "software",
        Q108105593: "standard",
        Q108389044: "standard",
        Q108507236: "standard",
        Q108523499: "standard",
        Q240815: "software",
        Q383314: "software",
        Q510878: "software",
        Q773240: "software",
        Q783866: "software",
        Q1199356: "software",
        Q1444922: "software",
        Q1474218: "software",
        Q1559347: "software",
        Q1924669: "software",
        Q3045088: "software",
        Q3276556: "software",
        Q3363001: "software",
        Q4835082: "software",
        Q5227388: "software",
        Q5513505: "software",
        Q5516340: "software",
        Q5565944: "software",
        Q5689555: "software",
        Q214802: "event",
        Q10614538: "software",
        Q10622204: "software",
        Q1410418: "standard",
        Q1665558: "standard",
        Q1665604: "standard",
        Q2080312: "standard",
        Q2267090: "standard",
        Q2584276: "standard",
        Q2598676: "standard",
        Q2620412: "standard",
        Q5160126: "event",
        Q3557795: "standard",
        Q3960366: "standard",
        Q4654690: "standard",
        Q6497036: "standard",
        Q7048932: "standard",
        Q7191175: "standard",
        Q7276125: "standard",
        Q7506338: "standard",
        Q7506342: "standard",
        Q8028368: "standard",
        Q8069448: "standard",
        Q21127166: "software",
        Q12311433: "event",
        Q22003134: "software",
        Q12041504: "standard",
        Q12058183: "standard",
        Q15697821: "standard",
        Q15697844: "standard",
        Q16258100: "standard",
        Q16682931: "standard",
        Q29642875: "software",
        Q30591588: "software",
        Q21041346: "standard",
        Q21041369: "standard",
        Q25394855: "standard",
        Q25991545: "standard",
        Q25992631: "standard",
        Q28849147: "standard",
        Q47088303: "standard",
        Q47354279: "standard",
        Q48960764: "standard",
        Q48966727: "standard",
        Q56367287: "standard",
        Q61628047: "event",
        Q60522770: "standard",
        Q60523089: "standard",
        Q61016832: "standard",
        Q63061679: "standard",
        Q63109194: "standard",
        Q63109209: "standard",
        Q63109262: "standard",
        Q64821834: "standard",
        Q64827080: "standard",
        Q64840819: "standard",
        Q64840872: "standard",
        Q64840890: "standard",
        Q64842248: "standard",
        Q64845955: "standard",
        Q64852877: "standard",
        Q65093687: "standard",
        Q65659343: "standard",
        Q84124535: "standard",
        Q85928720: "standard",
        Q98611752: "standard",
        Q98611892: "standard",
        Q98614745: "standard",
        Q111536489: "software",
        Q101510588: "standard",
        Q101511114: "standard",
        Q101513939: "standard",
        Q101542263: "standard",
        Q101869717: "standard",
        Q101873666: "standard",
        Q101875479: "standard",
        Q104889239: "standard",
        Q110699355: "book",
        Q1189206: "software",
        Q2313710: "software",
        Q4339810: "software",
        Q4339809: "software",
        Q4875402: "software",
        Q5513518: "software",
        Q1005383: "legislation",
        Q1762323: "book",
        Q176245: "standard",
        Q266218: "standard",
        Q295030: "standard",
        Q295033: "standard",
        Q2891013: "book",
        Q656108: "standard",
        Q2742964: "event",
        Q2910009: "event",
        Q1090904: "standard",
        Q1497295: "standard",
        Q1508729: "standard",
        Q1889761: "standard",
        Q2258439: "standard",
        Q2291202: "standard",
        Q2468681: "standard",
        Q2600559: "standard",
        Q2706928: "standard",
        Q3374953: "standard",
        Q3664143: "standard",
        Q3982614: "standard",
        Q15881236: "software",
        Q7543645: "book",
        Q7683515: "book",
        Q7670377: "standard",
        Q11410812: "book",
        Q11588327: "book",
        Q11612882: "book",
        Q11626718: "book",
        Q21323922: "software",
        Q11960442: "event",
        Q15649725: "book",
        Q15104326: "event",
        Q16678341: "book",
        Q16823610: "event",
        Q17629404: "book",
        Q15141460: "standard",
        Q15273132: "standard",
        Q49201135: "manuscript",
        Q33523692: "software",
        Q33523835: "software",
        Q33524422: "software",
        Q33524721: "software",
        Q33524976: "software",
        Q33525229: "software",
        Q33526069: "software",
        Q33526443: "software",
        Q33526600: "software",
        Q33526801: "software",
        Q33527325: "software",
        Q33527549: "software",
        Q33527907: "software",
        Q33528238: "software",
        Q33528421: "software",
        Q33528628: "software",
        Q33635800: "software",
        Q25378807: "book",
        Q25493120: "event",
        Q25390342: "standard",
        Q10851335: "performance",
        Q27866048: "standard",
        Q46996496: "software",
        Q59191021: "dataset",
        Q59248059: "dataset",
        Q59248072: "dataset",
        Q39058148: "standard",
        Q61914117: "dataset",
        Q63385337: "dataset",
        Q48728621: "book",
        Q58287971: "book",
        Q83800887: "dataset",
        Q98540827: "dataset",
        Q98608879: "dataset",
        Q100707366: "dataset",
        Q100717717: "dataset",
        Q100721610: "dataset",
        Q100746750: "dataset",
        Q100748418: "dataset",
        Q104635718: "dataset",
        Q106546316: "dataset",
        Q106978635: "dataset",
        Q107156729: "dataset",
        Q107156739: "dataset",
        Q102314787: "book",
        Q109593799: "event",
        Q108545731: "standard",
        Q108929644: "standard",
        Q108934057: "standard",
        Q111154620: "standard",
        Q1138628: "broadcast",
        Q37055: "regulation",
        Q4798414: "broadcast",
        Q333967: "software",
        Q578713: "software",
        Q1130489: "software",
        Q11235226: "broadcast",
        Q11281236: "broadcast",
        Q11323152: "broadcast",
        Q11335932: "broadcast",
        Q11423603: "broadcast",
        Q11650048: "broadcast",
        Q3093436: "software",
        Q5248086: "software",
        Q295074: "standard",
        Q295076: "standard",
        Q420767: "standard",
        Q420764: "standard",
        Q420922: "standard",
        Q2954102: "event",
        Q1229379: "standard",
        Q1229441: "standard",
        Q1577937: "standard",
        Q1755411: "standard",
        Q2858729: "standard",
        Q3859722: "standard",
        Q19643088: "software",
        Q12340392: "event",
        Q15078695: "event",
        Q14887104: "standard",
        Q15845850: "standard",
        Q18205149: "standard",
        Q18298235: "standard",
        Q30680823: "software",
        Q19612643: "standard",
        Q108001496: "regulation",
        Q25385678: "standard",
        Q28403058: "standard",
        Q30146456: "standard",
        Q43634921: "software",
        Q43635278: "software",
        Q43636199: "software",
        Q43636658: "software",
        Q43637860: "software",
        Q33460595: "standard",
        Q33461331: "standard",
        Q33463963: "standard",
        Q33465361: "standard",
        Q33475241: "standard",
        Q33528323: "standard",
        Q33528739: "standard",
        Q39509243: "standard",
        Q39994907: "standard",
        Q54814292: "book",
        Q137773: "regulation",
        Q743257: "regulation",
        Q788176: "regulation",
        Q1046958: "regulation",
        Q1103298: "regulation",
        Q1515218: "regulation",
        Q55662595: "standard",
        Q2883300: "regulation",
        Q56298770: "standard",
        Q3382066: "regulation",
        Q56602087: "standard",
        Q4313396: "regulation",
        Q5048342: "regulation",
        Q60982459: "standard",
        Q7939813: "regulation",
        Q8328350: "regulation",
        Q63525900: "standard",
        Q65476804: "standard",
        Q65477188: "standard",
        Q66144614: "standard",
        Q66363375: "standard",
        Q66363376: "standard",
        Q66363383: "standard",
        Q66363384: "standard",
        Q67221827: "standard",
        Q67340681: "standard",
        Q17353755: "regulation",
        Q19916405: "regulation",
        Q25451366: "regulation",
        Q88860581: "standard",
        Q111835788: "broadcast",
        Q104093099: "software",
        Q107821296: "webpage",
        Q107822284: "webpage",
        Q107823845: "webpage",
        Q96257727: "standard",
        Q96748391: "standard",
        Q99372730: "standard",
        Q100324119: "standard",
        Q101439988: "standard",
        Q109924100: "event",
        Q108448580: "standard",
        Q66027248: "regulation",
        Q5449126: "song",
        Q5739165: "broadcast",
        Q10429683: "dataset",
        Q221181: "software",
        Q387688: "software",
        Q860750: "software",
        Q1080071: "software",
        Q1417032: "software",
        Q1757463: "software",
        Q1892535: "software",
        Q1923906: "software",
        Q1968605: "software",
        Q2070892: "software",
        Q4304915: "software",
        Q4419886: "software",
        Q4451239: "software",
        Q505654: "event",
        Q658769: "event",
        Q733953: "event",
        Q860228: "event",
        Q896606: "event",
        Q1185305: "event",
        Q2108532: "event",
        Q2954100: "event",
        Q2754921: "standard",
        Q3374815: "standard",
        Q3715624: "standard",
        Q15400317: "software",
        Q90240997: "regulation",
        Q8567266: "event",
        Q19683335: "software",
        Q19683436: "software",
        Q19845304: "software",
        Q10579078: "event",
        Q10861403: "event",
        Q12591047: "event",
        Q12621434: "event",
        Q25313371: "software",
        Q25348457: "software",
        Q1869334: "performance",
        Q20970820: "event",
        Q107589376: "regulation",
        Q25325220: "standard",
        Q26791581: "standard",
        Q31179347: "event",
        Q50251850: "event",
        Q60617880: "software",
        Q53865702: "event",
        Q54854623: "event",
        Q1114469: "regulation",
        Q1824146: "regulation",
        Q1908228: "regulation",
        Q8674968: "regulation",
        Q66481199: "standard",
        Q7983: "event",
        Q28859: "event",
        Q52857: "event",
        Q70863300: "event",
        Q2703: "standard",
        Q81575703: "software",
        Q81575705: "software",
        Q85219006: "standard",
        Q85219007: "standard",
        Q85219004: "standard",
        Q96741505: "software",
        Q104733778: "software",
        Q96464001: "standard",
        Q110651361: "software",
        Q110651371: "software",
        Q110651380: "software",
        Q110651417: "software",
        Q110651434: "software",
        Q110651437: "software",
        Q110651442: "software",
        Q110651443: "software",
        Q110651447: "software",
        Q110651449: "software",
        Q111508990: "software",
        Q111508995: "software",
        Q111509026: "software",
        Q111509027: "software",
        Q111509029: "software",
        Q48995994: "regulation",
        Q103921799: "event",
        Q107689195: "event",
        Q107693925: "event",
        Q106574154: "standard",
        Q401831: "software",
        Q580564: "software",
        Q691243: "software",
        Q917189: "software",
        Q1163960: "software",
        Q1478420: "software",
        Q1647019: "software",
        Q2187138: "software",
        Q2247688: "software",
        Q3177952: "software",
        Q3632939: "software",
        Q4438162: "software",
        Q6481091: "software",
        Q7089173: "software",
        Q7094075: "software",
        Q7888831: "software",
        Q9130638: "software",
        Q861060: "event",
        Q890297: "event",
        Q1154859: "event",
        Q1160329: "event",
        Q1360957: "event",
        Q1473577: "event",
        Q1882465: "event",
        Q1937932: "event",
        Q1944134: "event",
        Q2062773: "event",
        Q2526036: "event",
        Q2631354: "event",
        Q2657439: "event",
        Q3045874: "event",
        Q3070358: "event",
        Q3234433: "event",
        Q1931689: "standard",
        Q25390252: "song",
        Q8960966: "event",
        Q10280357: "event",
        Q16834937: "event",
        Q15141461: "standard",
        Q15217736: "standard",
        Q26921434: "software",
        Q46069542: "legislation",
        Q60256879: "software",
        Q60982656: "software",
        Q61719251: "software",
        Q61721552: "software",
        Q61793886: "software",
        Q62019045: "software",
        Q62019057: "software",
        Q62019077: "software",
        Q62019104: "software",
        Q62022558: "software",
        Q53080577: "event",
        Q63465202: "software",
        Q63466098: "software",
        Q63644993: "software",
        Q63645033: "software",
        Q63645108: "software",
        Q63645120: "software",
        Q63914800: "software",
        Q63915027: "software",
        Q63915162: "software",
        Q63915391: "software",
        Q1404268: "regulation",
        Q55521327: "standard",
        Q71443011: "software",
        Q71443612: "software",
        Q71467408: "software",
        Q71468194: "software",
        Q71471444: "software",
        Q71471935: "software",
        Q71472862: "software",
        Q71475833: "software",
        Q71476528: "software",
        Q94996507: "dataset",
        Q85792816: "software",
        Q93876174: "software",
        Q96195505: "software",
        Q97097760: "software",
        Q99015944: "software",
        Q104819482: "software",
        Q105221690: "software",
        Q108611897: "software",
        Q110639931: "software",
        Q111515095: "software",
        Q111515101: "software",
        Q108760929: "event",
        Q110733702: "event",
        Q3423660: "dataset",
        Q10497164: "dataset",
        Q350432: "software",
        Q1198141: "software",
        Q2108252: "software",
        Q7119555: "software",
        Q1746539: "book",
        Q1668097: "event",
        Q667808: "standard",
        Q2999652: "event",
        Q3405240: "event",
        Q3587382: "event",
        Q3587381: "event",
        Q3587386: "event",
        Q3592923: "event",
        Q3954604: "event",
        Q87745177: "regulation",
        Q2755444: "standard",
        Q5001982: "event",
        Q5110343: "event",
        Q5354786: "event",
        Q5354822: "event",
        Q26209596: "dataset",
        Q5969550: "event",
        Q6941964: "event",
        Q7241769: "event",
        Q7864918: "event",
        Q7887983: "event",
        Q7887986: "event",
        Q7887985: "event",
        Q28369847: "dataset",
        Q8182792: "event",
        Q10422418: "event",
        Q10466073: "event",
        Q9291739: "standard",
        Q11346238: "event",
        Q11710615: "event",
        Q96337364: "regulation",
        Q12756870: "event",
        Q11254770: "standard",
        Q13156702: "event",
        Q13407099: "event",
        Q14624533: "event",
        Q15304243: "event",
        Q15621523: "event",
        Q17071134: "review",
        Q16821656: "event",
        Q20737114: "event",
        Q24083601: "event",
        Q25303529: "event",
        Q25408461: "event",
        Q110408503: "regulation",
        Q27148732: "event",
        Q28057350: "event",
        Q29510735: "event",
        Q29588946: "event",
        Q30572165: "event",
        Q31842404: "event",
        Q51544760: "event",
        Q54848546: "event",
        Q621261: "regulation",
        Q56293017: "event",
        Q1661453: "regulation",
        Q5113962: "regulation",
        Q60609202: "event",
        Q75276527: "software",
        Q70436236: "review",
        Q71274998: "standard",
        Q71275233: "standard",
        Q71432876: "standard",
        Q71433176: "standard",
        Q71828821: "standard",
        Q71829168: "standard",
        Q71831258: "standard",
        Q71832451: "standard",
        Q71837258: "standard",
        Q71856089: "standard",
        Q71858982: "standard",
        Q71859176: "standard",
        Q71859354: "standard",
        Q71859512: "standard",
        Q71859659: "standard",
        Q71973058: "standard",
        Q79764303: "event",
        Q111517550: "dataset",
        Q97487120: "event",
        Q98608942: "event",
        Q108380937: "software",
        Q108731424: "software",
        Q104561683: "event",
        Q106428925: "event",
        Q107151225: "event",
        Q106845334: "standard",
        Q106846114: "standard",
        Q108863993: "event",
        Q109930449: "event",
        Q109937652: "event",
        Q689445: "software",
        Q2516568: "software",
        Q3567947: "software",
        Q6900507: "software",
        Q7094106: "regulation",
        Q7594819: "software",
        Q432935: "event",
        Q877358: "event",
        Q1330251: "event",
        Q11248529: "software",
        Q11323299: "software",
        Q2616539: "event",
        Q2617740: "event",
        Q2617907: "event",
        Q2992544: "event",
        Q3586251: "event",
        Q4158858: "event",
        Q2519245: "standard",
        Q4482975: "event",
        Q5003750: "event",
        Q5219928: "event",
        Q3841521: "standard",
        Q7349166: "event",
        Q8068972: "book",
        Q8193338: "book",
        Q7888976: "event",
        Q10876822: "book",
        Q11408956: "event",
        Q11419290: "event",
        Q11431351: "event",
        Q11442189: "event",
        Q11489226: "event",
        Q21996535: "software",
        Q18141771: "book",
        Q18916556: "event",
        Q20018725: "event",
        Q104540818: "regulation",
        Q21087255: "event",
        Q19610150: "standard",
        Q21512546: "event",
        Q22328193: "standard",
        Q23308497: "standard",
        Q23308546: "standard",
        Q23308548: "standard",
        Q23308626: "standard",
        Q23308624: "standard",
        Q23308633: "standard",
        Q23308638: "standard",
        Q23308636: "standard",
        Q23308643: "standard",
        Q23308640: "standard",
        Q23308646: "standard",
        Q25894802: "event",
        Q26466721: "event",
        Q39184097: "software",
        Q31086521: "standard",
        Q55632755: "software",
        Q51879476: "event",
        Q61448957: "software",
        Q52362967: "event",
        Q62707668: "software",
        Q63283385: "software",
        Q84322932: "motion_picture",
        Q60527676: "event",
        Q60522721: "standard",
        Q65206484: "event",
        Q98528181: "song",
        Q109626458: "song",
        Q107636709: "software",
        Q107636751: "software",
        Q107636783: "software",
        Q107636890: "software",
        Q109615047: "software",
        Q111662778: "software",
        Q111662777: "software",
        Q111669984: "software",
        Q104716172: "event",
        Q105398582: "event",
        Q106193092: "event",
        Q108448511: "standard",
        Q108503298: "standard",
        Q108508081: "standard",
        Q108554036: "standard",
        Q6517465: "dataset",
        Q5167153: "broadcast",
        Q610394: "software",
        Q804187: "software",
        Q1323555: "software",
        Q1502811: "software",
        Q1993135: "software",
        Q2533324: "software",
        Q3308694: "software",
        Q5661654: "software",
        Q17438413: "dataset",
        Q314561: "event",
        Q380532: "event",
        Q1063286: "book",
        Q1415231: "book",
        Q1009303: "event",
        Q1742054: "book",
        Q1203452: "event",
        Q1203463: "event",
        Q1338187: "event",
        Q2037613: "book",
        Q1483720: "event",
        Q1493190: "event",
        Q1537281: "event",
        Q1590995: "event",
        Q1802754: "event",
        Q1940140: "event",
        Q2047484: "event",
        Q2256201: "event",
        Q2372431: "event",
        Q2593298: "event",
        Q2739132: "event",
        Q2992354: "event",
        Q3088847: "event",
        Q3492828: "event",
        Q3503241: "event",
        Q4127453: "event",
        Q4127592: "event",
        Q4127615: "event",
        Q4407668: "event",
        Q7248423: "book",
        Q5451829: "standard",
        Q7901127: "event",
        Q19765952: "software",
        Q10299516: "event",
        Q20310948: "software",
        Q20822063: "software",
        Q11362251: "event",
        Q11362260: "event",
        Q12160280: "book",
        Q12384262: "event",
        Q13222763: "event",
        Q22952981: "software",
        Q14276938: "event",
        Q25861761: "software",
        Q17014374: "book",
        Q17143759: "event",
        Q18384473: "event",
        Q20180874: "event",
        Q3002559: "performance",
        Q3329162: "performance",
        Q21474241: "standard",
        Q24885817: "event",
        Q28683830: "event",
        Q28683832: "event",
        Q48837969: "software",
        Q56539593: "software",
        Q48836308: "event",
        Q60617863: "software",
        Q60775070: "software",
        Q1454498: "regulation",
        Q56679145: "event",
        Q11983: "software",
        Q5975204: "regulation",
        Q73885232: "event",
        Q58327700: "performance",
        Q60853413: "performance",
        Q107101993: "dataset",
        Q107102162: "dataset",
        Q110902956: "dataset",
        Q105475134: "software",
        Q111391909: "software",
        Q58081477: "regulation",
        Q60791882: "regulation",
        Q206290: "dataset",
        Q1088118: "dataset",
        Q7502102: "dataset",
        Q1668024: "software",
        Q2015669: "software",
        Q2311792: "software",
        Q5957454: "software",
        Q9375485: "software",
        Q80798: "event",
        Q129483: "event",
        Q129495: "event",
        Q213972: "event",
        Q1004329: "event",
        Q1730106: "event",
        Q1734347: "event",
        Q1945424: "event",
        Q2301786: "event",
        Q2710647: "event",
        Q878344: "standard",
        Q2732579: "event",
        Q2745456: "event",
        Q2755692: "event",
        Q2790614: "event",
        Q2795686: "event",
        Q2798560: "event",
        Q2856305: "event",
        Q2859545: "event",
        Q2918950: "event",
        Q2954795: "event",
        Q3101633: "event",
        Q3226846: "event",
        Q1639854: "standard",
        Q3708829: "event",
        Q3751354: "event",
        Q3752748: "event",
        Q3754756: "event",
        Q4244019: "event",
        Q4244020: "event",
        Q4323858: "event",
        Q4482978: "event",
        Q4825487: "event",
        Q4835055: "event",
        Q4992415: "event",
        Q6009879: "book",
        Q5412628: "event",
        Q7086900: "event",
        Q7462837: "event",
        Q7366570: "standard",
        Q10340653: "event",
        Q10340660: "event",
        Q11782483: "event",
        Q12047675: "event",
        Q14170532: "event",
        Q14170537: "event",
        Q14170543: "event",
        Q15989366: "event",
        Q16481968: "event",
        Q16668030: "event",
        Q16678023: "event",
        Q16716711: "event",
        Q16912063: "event",
        Q18434643: "event",
        Q18434645: "event",
        Q19910308: "event",
        Q19973786: "event",
        Q19973787: "event",
        Q19973788: "event",
        Q20680149: "event",
        Q21004536: "event",
        Q21030243: "event",
        Q24262161: "event",
        Q26962149: "event",
        Q27987675: "book",
        Q28667131: "event",
        Q40065581: "event",
        Q54560134: "event",
        Q55658306: "event",
        Q55658305: "event",
        Q59106911: "event",
        Q59397587: "event",
        Q60061449: "event",
        Q60220650: "event",
        Q60791791: "event",
        Q61861546: "event",
        Q15077505: "regulation",
        Q107494132: "software",
        Q109539832: "software",
        Q110874354: "software",
        Q104054982: "standard",
        Q355134: "software",
        Q1940713: "software",
        Q3139142: "software",
        Q4040458: "software",
        Q1920649: "event",
        Q2030469: "event",
        Q11590806: "software",
        Q2303329: "event",
        Q3114218: "event",
        Q3453588: "event",
        Q87645483: "regulation",
        Q4970523: "event",
        Q4970541: "event",
        Q5030372: "event",
        Q5493255: "event",
        Q5745104: "event",
        Q6826228: "event",
        Q7015539: "event",
        Q7061200: "event",
        Q7314673: "event",
        Q8202753: "book",
        Q7565756: "event",
        Q7890777: "event",
        Q7981955: "event",
        Q17639359: "software",
        Q8257794: "event",
        Q8257799: "event",
        Q8257833: "event",
        Q12882990: "event",
        Q12882991: "event",
        Q12882995: "event",
        Q12882997: "event",
        Q12883902: "event",
        Q12883909: "event",
        Q12883914: "event",
        Q12883915: "event",
        Q12883912: "event",
        Q12883918: "event",
        Q12883919: "event",
        Q12883923: "event",
        Q12883921: "event",
        Q12883926: "event",
        Q12883927: "event",
        Q12883924: "event",
        Q12883925: "event",
        Q12883930: "event",
        Q12883928: "event",
        Q13453902: "event",
        Q15689318: "event",
        Q16327253: "event",
        Q16327304: "event",
        Q16327311: "event",
        Q16327318: "event",
        Q16327322: "event",
        Q16330057: "event",
        Q16330062: "event",
        Q16330075: "event",
        Q16538244: "event",
        Q17624460: "event",
        Q27976571: "software",
        Q958982: "performance",
        Q2339999: "performance",
        Q33183362: "software",
        Q5737784: "performance",
        Q27042376: "event",
        Q29167063: "standard",
        Q29167066: "standard",
        Q29167086: "standard",
        Q37063340: "event",
        Q42132670: "event",
        Q43505736: "event",
        Q48507532: "event",
        Q48946537: "event",
        Q48946690: "event",
        Q50319112: "event",
        Q51946289: "event",
        Q51967293: "event",
        Q179831: "regulation",
        Q2824639: "regulation",
        Q61717298: "standard",
        Q16481846: "regulation",
        Q19834531: "regulation",
        Q28070878: "regulation",
        Q85801617: "event",
        Q88006502: "event",
        Q104530614: "software",
        Q99642299: "event",
        Q99659454: "event",
        Q99659459: "event",
        Q99659462: "event",
        Q99661843: "event",
        Q99661905: "event",
        Q99661957: "event",
        Q106828552: "event",
        Q109657442: "event",
        Q110833816: "book",
        Q255188: "software",
        Q305901: "software",
        Q796216: "software",
        Q862490: "software",
        Q1321517: "software",
        Q1367557: "software",
        Q1588573: "software",
        Q2742192: "software",
        Q4048537: "software",
        Q5960443: "software",
        Q450824: "book",
        Q645882: "book",
        Q1029715: "book",
        Q1131955: "book",
        Q580396: "event",
        Q583575: "event",
        Q605143: "event",
        Q936274: "event",
        Q940159: "event",
        Q960263: "event",
        Q2381068: "event",
        Q2420211: "event",
        Q2646789: "event",
        Q2883171: "event",
        Q2886525: "event",
        Q2919519: "event",
        Q2949194: "event",
        Q2949204: "event",
        Q2950589: "event",
        Q2952450: "event",
        Q3032656: "event",
        Q3038971: "event",
        Q3038974: "event",
        Q3038975: "event",
        Q3038972: "event",
        Q3038973: "event",
        Q3038978: "event",
        Q3038982: "event",
        Q3038983: "event",
        Q3038980: "event",
        Q3038981: "event",
        Q3038985: "event",
        Q3038988: "event",
        Q3038994: "event",
        Q3038993: "event",
        Q3038999: "event",
        Q3038996: "event",
        Q3039003: "event",
        Q3039006: "event",
        Q3039008: "event",
        Q3039019: "event",
        Q3039016: "event",
        Q3039020: "event",
        Q3039027: "event",
        Q3039033: "event",
        Q3039038: "event",
        Q3039039: "event",
        Q3039041: "event",
        Q3039046: "event",
        Q3039047: "event",
        Q3039045: "event",
        Q3039051: "event",
        Q3039054: "event",
        Q3039056: "event",
        Q3039065: "event",
        Q3039076: "event",
        Q3066936: "event",
        Q3066955: "event",
        Q3066961: "event",
        Q3113758: "event",
        Q16038990: "software",
        Q16675432: "software",
        Q9332740: "event",
        Q19597382: "software",
        Q22001389: "software",
        Q28239334: "event",
        Q54151974: "software",
        Q48805056: "event",
        Q61008929: "software",
        Q61008981: "software",
        Q58002801: "book",
        Q58002806: "book",
        Q58002814: "book",
        Q58002818: "book",
        Q58002828: "book",
        Q58002835: "book",
        Q381: "software",
        Q2027: "software",
        Q70461930: "software",
        Q67476316: "event",
        Q80933428: "software",
        Q72226942: "book",
        Q20127660: "regulation",
        Q108730964: "software",
        Q101949943: "book",
        Q101950258: "book",
        Q3114031: "event",
        Q3114214: "event",
        Q3114255: "event",
        Q3540375: "event",
        Q3540451: "event",
        Q5547595: "event",
        Q5550042: "event",
        Q5637675: "event",
        Q5718367: "event",
        Q5718378: "event",
        Q5718376: "event",
        Q5718381: "event",
        Q5718386: "event",
        Q5718405: "event",
        Q5718410: "event",
        Q5718427: "event",
        Q5718556: "event",
        Q5718719: "event",
        Q5718800: "event",
        Q5718930: "event",
        Q5810056: "event",
        Q5976132: "event",
        Q6103689: "event",
        Q6103693: "event",
        Q6103696: "event",
        Q6153081: "event",
        Q6153146: "event",
        Q8241526: "event",
        Q8241529: "event",
        Q8241585: "event",
        Q8241682: "event",
        Q8241685: "event",
        Q8241743: "event",
        Q8241815: "event",
        Q8257792: "event",
        Q8261060: "event",
        Q8350731: "event",
        Q11168475: "event",
        Q11220799: "event",
        Q11680139: "event",
        Q12253181: "event",
        Q12253330: "event",
        Q12253766: "event",
        Q12253767: "event",
        Q12253898: "event",
        Q12254335: "event",
        Q12254860: "event",
        Q12255005: "event",
        Q12255021: "event",
        Q12255027: "event",
        Q12255144: "event",
        Q12255218: "event",
        Q12255219: "event",
        Q12255228: "event",
        Q12255326: "event",
        Q12255329: "event",
        Q12255335: "event",
        Q12255336: "event",
        Q12256635: "event",
        Q12256632: "event",
        Q12256633: "event",
        Q12256787: "event",
        Q12256788: "event",
        Q12256789: "event",
        Q12258133: "event",
        Q12258461: "event",
        Q12258469: "event",
        Q12258519: "event",
        Q12258520: "event",
        Q12259054: "event",
        Q12259231: "event",
        Q12259378: "event",
        Q12259632: "event",
        Q12259777: "event",
        Q12259849: "event",
        Q12261155: "event",
        Q12261467: "event",
        Q12261527: "event",
        Q12261600: "event",
        Q12261618: "event",
        Q12261636: "event",
        Q12261885: "event",
        Q12262151: "event",
        Q12262148: "event",
        Q12263879: "event",
        Q12263958: "event",
        Q12265246: "event",
        Q12265255: "event",
        Q12265256: "event",
        Q12265570: "event",
        Q12265568: "event",
        Q12265569: "event",
        Q12266044: "event",
        Q12266933: "event",
        Q12267870: "event",
        Q12267871: "event",
        Q12268147: "event",
        Q12268148: "event",
        Q12268205: "event",
        Q12268385: "event",
        Q108565643: "event",
        Q110620467: "event",
        Q110892617: "event",
        Q175173: "software",
        Q185029: "software",
        Q1044478: "software",
        Q3965952: "software",
        Q526730: "event",
        Q905917: "event",
        Q1896500: "event",
        Q2455683: "event",
        Q2543529: "event",
        Q1140366: "standard",
        Q1660393: "standard",
        Q3586716: "event",
        Q3586734: "event",
        Q3586740: "event",
        Q3586757: "event",
        Q3587402: "event",
        Q3587401: "event",
        Q3587405: "event",
        Q3657790: "event",
        Q4127443: "event",
        Q4127446: "event",
        Q4127447: "event",
        Q4127450: "event",
        Q4127451: "event",
        Q4127454: "event",
        Q4127452: "event",
        Q4127459: "event",
        Q4127461: "event",
        Q3191392: "standard",
        Q4652949: "standard",
        Q5424472: "standard",
        Q5754887: "standard",
        Q5968680: "standard",
        Q5968684: "standard",
        Q6329481: "standard",
        Q6331196: "standard",
        Q6340374: "standard",
        Q6340378: "standard",
        Q6341717: "standard",
        Q6341720: "standard",
        Q7907029: "standard",
        Q11656585: "event",
        Q12268757: "event",
        Q12269226: "event",
        Q12269225: "event",
        Q12269484: "event",
        Q16516664: "event",
        Q16516896: "event",
        Q16517217: "event",
        Q18289362: "event",
        Q18769744: "event",
        Q19951941: "event",
        Q20492177: "event",
        Q20492188: "event",
        Q20492274: "event",
        Q20492468: "event",
        Q20492577: "event",
        Q20723970: "event",
        Q21426489: "event",
        Q22907241: "standard",
        Q25473659: "event",
        Q25473779: "event",
        Q25474119: "event",
        Q25476057: "event",
        Q31188105: "event",
        Q31188485: "event",
        Q15407973: "webpage",
        Q22808320: "webpage",
        Q52392693: "event",
        Q57319737: "event",
        Q60854016: "event",
        Q61365131: "event",
        Q62011419: "event",
        Q62011463: "event",
        Q66425450: "event",
        Q66425448: "event",
        Q78958238: "standard",
        Q61996773: "webpage",
        Q66480449: "webpage",
        Q96093266: "event",
        Q97152477: "event",
        Q97188778: "event",
        Q97502254: "event",
        Q98593607: "event",
        Q100392103: "event",
        Q108268888: "event",
        Q108445380: "event",
        Q108489811: "event",
        Q107602: "software",
        Q138754: "software",
        Q228323: "software",
        Q543151: "software",
        Q605117: "software",
        Q624163: "software",
        Q626500: "software",
        Q655908: "software",
        Q846925: "software",
        Q864718: "software",
        Q900585: "software",
        Q1070358: "software",
        Q1961588: "software",
        Q2600488: "software",
        Q2793151: "software",
        Q2885530: "software",
        Q5196736: "software",
        Q5282311: "software",
        Q6559288: "software",
        Q7130810: "software",
        Q7289274: "software",
        Q7380031: "software",
        Q7493588: "software",
        Q7606662: "software",
        Q129519: "event",
        Q757581: "review",
        Q10111060: "software",
        Q10855346: "software",
        Q1345171: "event",
        Q1361443: "event",
        Q1362402: "event",
        Q1412276: "event",
        Q2186782: "book",
        Q1847651: "event",
        Q2062028: "event",
        Q2118149: "event",
        Q2350176: "event",
        Q4066165: "book",
        Q4626151: "event",
        Q15882299: "software",
        Q7144691: "book",
        Q7210039: "book",
        Q7423765: "book",
        Q7457643: "book",
        Q7061321: "event",
        Q7100858: "event",
        Q7100859: "event",
        Q7100861: "event",
        Q7361870: "event",
        Q10843458: "event",
        Q20923146: "software",
        Q11983097: "event",
        Q11992144: "event",
        Q11992167: "event",
        Q11992175: "event",
        Q16965930: "review",
        Q19833190: "event",
        Q19833191: "event",
        Q19833189: "event",
        Q19833192: "event",
        Q19833193: "event",
        Q19857023: "event",
        Q30607131: "software",
        Q25379510: "event",
        Q25379508: "event",
        Q25434256: "event",
        Q29027803: "book",
        Q28718565: "event",
        Q30225036: "event",
        Q50716248: "event",
        Q56407985: "event",
        Q2475782: "regulation",
        Q6522361: "regulation",
        Q7894671: "regulation",
        Q7894668: "regulation",
        Q64533434: "event",
        Q67591664: "event",
        Q73396547: "event",
        Q104201951: "software",
        Q104830011: "software",
        Q105702790: "software",
        Q105702814: "software",
        Q106405894: "software",
        Q108882014: "software",
        Q109324772: "software",
        Q111519486: "software",
        Q111525937: "software",
        Q103899162: "event",
        Q104860813: "book",
        Q104245330: "event",
        Q104630354: "event",
        Q104664668: "event",
        Q107335338: "legislation",
        Q108855280: "event",
        Q108855332: "event",
        Q110273355: "legislation",
        Q65204166: "regulation",
        Q18099930: "dataset",
        Q19220511: "dataset",
        Q131772: "event",
        Q283912: "event",
        Q1143290: "book",
        Q670146: "event",
        Q701398: "event",
        Q10308060: "software",
        Q824202: "event",
        Q1516890: "book",
        Q1538538: "book",
        Q912988: "event",
        Q915172: "event",
        Q1539031: "legislation",
        Q1137966: "event",
        Q1309022: "event",
        Q2138712: "review",
        Q1571145: "event",
        Q1771778: "event",
        Q1808124: "event",
        Q1842230: "event",
        Q1878822: "event",
        Q2028330: "event",
        Q2364511: "event",
        Q2365273: "event",
        Q2816453: "legislation",
        Q2381159: "event",
        Q2910355: "legislation",
        Q2626843: "event",
        Q2856528: "event",
        Q2954800: "event",
        Q3329739: "event",
        Q5275276: "review",
        Q5987970: "book",
        Q7233267: "legislation",
        Q6803505: "event",
        Q16381999: "software",
        Q7508283: "legislation",
        Q5420993: "standard",
        Q7304576: "event",
        Q8249787: "event",
        Q10712099: "event",
        Q11611579: "book",
        Q11622338: "book",
        Q11157818: "event",
        Q11300403: "event",
        Q11300407: "event",
        Q11570733: "event",
        Q11603286: "event",
        Q11782686: "event",
        Q12038210: "event",
        Q16680709: "event",
        Q16680747: "event",
        Q16680763: "event",
        Q17640110: "event",
        Q18669741: "event",
        Q25999230: "event",
        Q28129515: "event",
        Q28129513: "event",
        Q29974308: "book",
        Q30038136: "book",
        Q30936962: "event",
        Q51676421: "software",
        Q47008378: "event",
        Q61715376: "software",
        Q55025820: "event",
        Q1757670: "regulation",
        Q56755168: "event",
        Q56761847: "event",
        Q56761853: "event",
        Q56815551: "event",
        Q61741875: "book",
        Q61605094: "event",
        Q7973850: "regulation",
        Q65054195: "event",
        Q67138330: "event",
        Q98670663: "webpage",
        Q104735362: "software",
        Q98560886: "event",
        Q100165600: "legislation",
        Q108416019: "event",
        Q107436189: "standard",
        Q107436323: "standard",
        Q107436514: "standard",
        Q107436586: "standard",
        Q107436646: "standard",
        Q107442192: "standard",
        Q107442408: "standard",
        Q107442924: "standard",
        Q107649911: "standard",
        Q107649948: "standard",
        Q107649996: "standard",
        Q107650033: "standard",
        Q107650381: "standard",
        Q107650633: "standard",
        Q108198071: "standard",
        Q1165116: "software",
        Q1654284: "software",
        Q2529678: "software",
        Q70475: "standard",
        Q205509: "standard",
        Q207539: "standard",
        Q213423: "standard",
        Q214314: "standard",
        Q216334: "standard",
        Q237794: "standard",
        Q253278: "standard",
        Q277482: "standard",
        Q294818: "standard",
        Q294855: "standard",
        Q294857: "standard",
        Q294947: "standard",
        Q295003: "standard",
        Q295014: "standard",
        Q295032: "standard",
        Q295057: "standard",
        Q295064: "standard",
        Q319509: "standard",
        Q324536: "standard",
        Q324610: "standard",
        Q330255: "standard",
        Q338518: "standard",
        Q390389: "standard",
        Q390562: "standard",
        Q468451: "standard",
        Q622888: "standard",
        Q656154: "standard",
        Q657808: "standard",
        Q764978: "standard",
        Q1058943: "standard",
        Q1065726: "standard",
        Q1097284: "standard",
        Q1118075: "standard",
        Q1324219: "standard",
        Q1344884: "standard",
        Q3037385: "standard",
        Q3086999: "standard",
        Q3152990: "standard",
        Q3152991: "standard",
        Q3152989: "standard",
        Q3272893: "standard",
        Q3337772: "standard",
        Q3488028: "standard",
        Q3572526: "standard",
        Q3634178: "standard",
        Q3832580: "standard",
        Q3962657: "standard",
        Q19631771: "software",
        Q19631768: "software",
        Q19631769: "software",
        Q12021695: "standard",
        Q12021698: "standard",
        Q12021699: "standard",
        Q12021696: "standard",
        Q12021697: "standard",
        Q12021702: "standard",
        Q12021703: "standard",
        Q12021700: "standard",
        Q12021701: "standard",
        Q12021706: "standard",
        Q12021704: "standard",
        Q12021705: "standard",
        Q12021708: "standard",
        Q12021709: "standard",
        Q13055354: "standard",
        Q29639345: "software",
        Q20102321: "event",
        Q19621245: "standard",
        Q105342350: "regulation",
        Q105342361: "regulation",
        Q39690758: "software",
        Q28845729: "standard",
        Q28972980: "standard",
        Q33083031: "standard",
        Q65561361: "standard",
        Q65582574: "standard",
        Q65584693: "standard",
        Q66363583: "standard",
        Q80127854: "standard",
        Q80128468: "standard",
        Q80953877: "standard",
        Q80787826: "webpage",
        Q80789820: "webpage",
        Q111633188: "event",
        Q83787417: "webpage",
        Q85195830: "webpage",
        Q98645843: "webpage",
        Q99228802: "webpage",
        Q99441948: "webpage",
        Q100251488: "webpage",
        Q100707223: "webpage",
        Q12085765: "song",
        Q12115216: "song",
        Q12141189: "song",
        Q12157230: "song",
        Q3509118: "software",
        Q5500304: "software",
        Q106803564: "webpage",
        Q108107367: "webpage",
        Q7663614: "software",
        Q18407189: "song",
        Q108914572: "webpage",
        Q110095011: "webpage",
        Q9350446: "software",
        Q9350447: "software",
        Q9350444: "software",
        Q111046447: "webpage",
        Q1478895: "event",
        Q1812897: "event",
        Q1919769: "event",
        Q1990939: "event",
        Q2018244: "event",
        Q2178208: "event",
        Q2259724: "event",
        Q28705723: "song",
        Q12021710: "standard",
        Q12021711: "standard",
        Q12021714: "standard",
        Q12021712: "standard",
        Q12021713: "standard",
        Q12364601: "standard",
        Q18660354: "standard",
        Q18660382: "standard",
        Q18660390: "standard",
        Q19481932: "standard",
        Q20671116: "standard",
        Q25024949: "standard",
        Q27995423: "standard",
        Q31888920: "standard",
        Q11062089: "webpage",
        Q15623926: "webpage",
        Q15713835: "webpage",
        Q15851373: "webpage",
        Q16291412: "webpage",
        Q18091489: "webpage",
        Q18340550: "webpage",
        Q19692233: "webpage",
        Q21167233: "webpage",
        Q26657792: "webpage",
        Q26884324: "webpage",
        Q53700422: "standard",
        Q782395: "regulation",
        Q836575: "regulation",
        Q55606717: "standard",
        Q30032916: "webpage",
        Q33532284: "webpage",
        Q7247299: "regulation",
        Q66660880: "standard",
        Q66713386: "standard",
        Q66778155: "standard",
        Q66778599: "standard",
        Q56297104: "webpage",
        Q59156113: "webpage",
        Q59738577: "webpage",
        Q61034350: "dataset",
        Q63032896: "webpage",
        Q65181814: "webpage",
        Q66050442: "webpage",
        Q66711852: "webpage",
        Q67182947: "webpage",
        Q67325957: "webpage",
        Q96417607: "standard",
        Q111746312: "event",
        Q111746317: "event",
        Q87879655: "webpage",
        Q2406355: "software",
        Q107344376: "webpage",
        Q18100125: "dataset",
        Q18810260: "dataset",
        Q18922463: "dataset",
        Q82899: "event",
        Q309168: "event",
        Q586726: "event",
        Q732876: "event",
        Q878505: "event",
        Q906559: "event",
        Q2034044: "event",
        Q2034054: "event",
        Q2241734: "event",
        Q2265397: "event",
        Q2331139: "event",
        Q2387647: "event",
        Q2450933: "event",
        Q2482360: "event",
        Q2503599: "event",
        Q2639971: "event",
        Q2749033: "event",
        Q2804311: "event",
        Q981514: "standard",
        Q3118005: "event",
        Q3473924: "event",
        Q87648631: "regulation",
        Q4510180: "event",
        Q4689006: "event",
        Q5413443: "event",
        Q5523106: "event",
        Q15145755: "webpage",
        Q18711811: "webpage",
        Q11834046: "event",
        Q96754681: "regulation",
        Q14509387: "event",
        Q18400153: "event",
        Q19544378: "event",
        Q19544384: "event",
        Q19544385: "event",
        Q19544390: "event",
        Q19544393: "event",
        Q19544407: "event",
        Q19544424: "event",
        Q19544434: "event",
        Q19544446: "event",
        Q19544458: "event",
        Q19544457: "event",
        Q19544460: "event",
        Q20723955: "event",
        Q23020591: "event",
        Q111262319: "regulation",
        Q29561587: "event",
        Q28206714: "standard",
        Q14204246: "webpage",
        Q14360432: "webpage",
        Q17442446: "webpage",
        Q59259626: "webpage",
        Q21623879: "webpage",
        Q28092864: "webpage",
        Q56005592: "webpage",
        Q109318313: "software",
        Q109567034: "event",
        Q111384974: "event",
        Q7099284: "software",
        Q18889371: "dataset",
        Q18889411: "dataset",
        Q198889: "event",
        Q281772: "event",
        Q537249: "event",
        Q556569: "event",
        Q595865: "event",
        Q613439: "event",
        Q616438: "event",
        Q629222: "event",
        Q636051: "event",
        Q656532: "event",
        Q658888: "event",
        Q725531: "event",
        Q776859: "event",
        Q782015: "event",
        Q819955: "event",
        Q849814: "event",
        Q849851: "event",
        Q857351: "event",
        Q898966: "event",
        Q899197: "event",
        Q925509: "event",
        Q966789: "event",
        Q981367: "event",
        Q1083752: "event",
        Q1088759: "event",
        Q1166178: "event",
        Q1294855: "event",
        Q1321934: "event",
        Q2069352: "book",
        Q1466163: "event",
        Q1749242: "event",
        Q1811632: "event",
        Q1852267: "event",
        Q2095472: "event",
        Q2106857: "event",
        Q2298236: "event",
        Q2333258: "event",
        Q2429941: "event",
        Q2526994: "event",
        Q2585212: "event",
        Q2609272: "event",
        Q2690707: "event",
        Q2704335: "event",
        Q2717396: "event",
        Q2740399: "event",
        Q3418173: "event",
        Q3418197: "event",
        Q3924399: "event",
        Q4855141: "event",
        Q6098556: "event",
        Q6098563: "event",
        Q6098729: "event",
        Q6888051: "event",
        Q7287062: "event",
        Q7649370: "event",
        Q9066172: "event",
        Q9066173: "event",
        Q27855821: "broadcast",
        Q27876130: "broadcast",
        Q11506392: "event",
        Q11670304: "event",
        Q11701966: "event",
        Q12048793: "event",
        Q16040090: "event",
        Q16040088: "event",
        Q17092633: "event",
        Q17628122: "event",
        Q20545759: "event",
        Q27161247: "event",
        Q27161628: "event",
        Q27161724: "event",
        Q48893562: "software",
        Q47194527: "event",
        Q50601640: "event",
        Q51955127: "event",
        Q56610307: "event",
        Q60643384: "event",
        Q60862257: "event",
        Q62032617: "event",
        Q85827478: "software",
        Q85920708: "software",
        Q85101118: "event",
        Q86596395: "event",
        Q92566161: "event",
        Q92586589: "event",
        Q93622529: "event",
        Q105483835: "software",
        Q105483881: "software",
        Q96622033: "event",
        Q96795694: "event",
        Q107610634: "software",
        Q98822459: "event",
        Q98843551: "event",
        Q99207010: "event",
        Q99541036: "event",
        Q110165559: "book",
        Q110098625: "standard",
        Q722192: "software",
        Q773424: "software",
        Q837975: "software",
        Q1123036: "software",
        Q3509049: "software",
        Q6746712: "software",
        Q6822269: "software",
        Q756721: "event",
        Q1568346: "review",
        Q1485307: "event",
        Q1804248: "event",
        Q2568422: "event",
        Q2633735: "event",
        Q3496797: "event",
        Q3496803: "event",
        Q1665598: "standard",
        Q3556429: "event",
        Q3563383: "event",
        Q3563436: "event",
        Q3563446: "event",
        Q3566196: "event",
        Q3735285: "event",
        Q4689966: "event",
        Q4724094: "event",
        Q5653192: "review",
        Q6618808: "event",
        Q7525493: "book",
        Q7455897: "event",
        Q23891038: "webpage",
        Q23891036: "webpage",
        Q23891037: "webpage",
        Q23891042: "webpage",
        Q23891043: "webpage",
        Q23891040: "webpage",
        Q23891041: "webpage",
        Q23891045: "webpage",
        Q23891050: "webpage",
        Q23891051: "webpage",
        Q23891048: "webpage",
        Q23891049: "webpage",
        Q23891054: "webpage",
        Q23891055: "webpage",
        Q23891052: "webpage",
        Q23891053: "webpage",
        Q23891056: "webpage",
        Q23891075: "webpage",
        Q26430975: "software",
        Q20948997: "event",
        Q19591713: "standard",
        Q22949126: "event",
        Q25289192: "event",
        Q26228228: "book",
        Q27186004: "event",
        Q27491613: "event",
        Q27491654: "event",
        Q27491766: "event",
        Q27491798: "event",
        Q26329648: "standard",
        Q37787110: "software",
        Q28941872: "review",
        Q31839826: "book",
        Q59156760: "dataset",
        Q44606775: "event",
        Q54314590: "software",
        Q54323360: "software",
        Q2994309: "regulation",
        Q9662: "software",
        Q18756: "event",
        Q80134605: "software",
        Q75597003: "standard",
        Q75597419: "standard",
        Q75597761: "standard",
        Q75598901: "standard",
        Q75710135: "standard",
        Q75710254: "standard",
        Q106712577: "report",
        Q108883056: "report",
        Q91267365: "software",
        Q84081457: "event",
        Q89503149: "book",
        Q91399957: "event",
        Q91399971: "event",
        Q91931245: "event",
        Q92320908: "event",
        Q92321112: "event",
        Q102259548: "software",
        Q107542272: "software",
        Q107542373: "software",
        Q109656536: "software",
        Q111436256: "software",
        Q104771478: "event",
        Q109936157: "event",
        Q18086671: "dataset",
        Q18089574: "dataset",
        Q18089575: "dataset",
        Q182068: "event",
        Q182473: "event",
        Q219261: "event",
        Q223366: "event",
        Q279800: "event",
        Q387970: "event",
        Q484028: "event",
        Q646823: "event",
        Q670053: "event",
        Q677053: "event",
        Q725960: "event",
        Q748389: "event",
        Q1083915: "event",
        Q1477115: "event",
        Q175957: "standard",
        Q3138495: "event",
        Q3138502: "event",
        Q3353551: "event",
        Q3535028: "event",
        Q3587589: "event",
        Q3607252: "event",
        Q3963775: "event",
        Q3965460: "event",
        Q4690035: "event",
        Q5115542: "event",
        Q5827419: "event",
        Q5827491: "event",
        Q6348103: "event",
        Q6463413: "event",
        Q7053528: "event",
        Q7076194: "event",
        Q7565981: "event",
        Q8774346: "event",
        Q8774419: "event",
        Q6998854: "standard",
        Q11642810: "event",
        Q11918772: "event",
        Q12581010: "event",
        Q13221792: "event",
        Q22907871: "software",
        Q15980635: "event",
        Q17023673: "book",
        Q17165333: "event",
        Q18124297: "event",
        Q18127058: "event",
        Q21130129: "event",
        Q22338444: "event",
        Q23688019: "event",
        Q24199684: "event",
        Q26213387: "event",
        Q27925538: "event",
        Q27925644: "event",
        Q26219924: "standard",
        Q26225909: "standard",
        Q30056164: "event",
        Q30926925: "event",
        Q29578378: "standard",
        Q29579024: "standard",
        Q29579039: "standard",
        Q29579043: "standard",
        Q35823051: "event",
        Q51675393: "software",
        Q44404737: "event",
        Q47069668: "event",
        Q47711758: "event",
        Q51155374: "event",
        Q51155420: "event",
        Q51155488: "event",
        Q51155519: "event",
        Q51155608: "event",
        Q51155665: "event",
        Q51155862: "event",
        Q51155973: "event",
        Q51156130: "event",
        Q51156169: "event",
        Q51156241: "event",
        Q51156281: "event",
        Q51156342: "event",
        Q51156393: "event",
        Q51156444: "event",
        Q51156478: "event",
        Q51156540: "event",
        Q51156587: "event",
        Q51156682: "event",
        Q1607722: "regulation",
        Q2660896: "regulation",
        Q2824641: "regulation",
        Q56255056: "standard",
        Q60168059: "event",
        Q84592525: "event",
        Q85812479: "event",
        Q99485722: "event",
        Q111184276: "software",
        Q107185688: "event",
        Q108743617: "event",
        Q63226726: "regulation",
        Q63226762: "regulation",
        Q63259144: "regulation",
        Q64187271: "regulation",
        Q1609504: "dataset",
        Q71067930: "regulation",
        Q1443965: "software",
        Q378806: "event",
        Q520388: "event",
        Q1001620: "event",
        Q1683337: "book",
        Q1430576: "event",
        Q2200822: "event",
        Q2672940: "event",
        Q4038992: "event",
        Q5393774: "event",
        Q5874005: "event",
        Q6696254: "event",
        Q6952504: "event",
        Q7237930: "event",
        Q7680005: "event",
        Q7814142: "event",
        Q11924610: "event",
        Q12353726: "standard",
        Q12353724: "standard",
        Q16523578: "event",
        Q16852243: "event",
        Q16987422: "event",
        Q17084022: "event",
        Q30314076: "software",
        Q28448109: "event",
        Q59156162: "dataset",
        Q59156179: "dataset",
        Q59156199: "dataset",
        Q59156242: "dataset",
        Q39050643: "event",
        Q39050716: "event",
        Q42264013: "event",
        Q42377041: "event",
        Q65770536: "dataset",
        Q48782035: "event",
        Q56318100: "event",
        Q56318101: "event",
        Q56318106: "event",
        Q60969170: "event",
        Q71683262: "software",
        Q63860191: "event",
        Q64569595: "event",
        Q65742449: "event",
        Q73712583: "event",
        Q80781545: "book",
        Q80370583: "event",
        Q80708319: "event",
        Q86681276: "event",
        Q87267448: "event",
        Q87798979: "event",
        Q87849896: "event",
        Q89947880: "event",
        Q90567362: "event",
        Q90921908: "event",
        Q91270787: "event",
        Q92320983: "event",
        Q92321117: "event",
        Q92402259: "event",
        Q92475919: "event",
        Q92480586: "event",
        Q92480584: "event",
        Q92480588: "event",
        Q92480589: "event",
        Q92482708: "event",
        Q92482719: "event",
        Q92482728: "event",
        Q92482736: "event",
        Q96371234: "event",
        Q96379154: "event",
        Q96379153: "event",
        Q96393054: "event",
        Q106529593: "software",
        Q97685728: "event",
        Q97768050: "event",
        Q97769737: "event",
        Q104850774: "event",
        Q106201842: "event",
        Q106946690: "event",
        Q107366029: "event",
        Q107366160: "event",
        Q107418089: "event",
        Q107969818: "event",
        Q164848: "event",
        Q164885: "event",
        Q187579: "event",
        Q216323: "event",
        Q216331: "event",
        Q1649046: "event",
        Q1935482: "event",
        Q2076801: "event",
        Q2807389: "event",
        Q2818079: "event",
        Q4546048: "event",
        Q4546049: "event",
        Q4642512: "event",
        Q4642516: "event",
        Q15812736: "event",
        Q67438344: "event",
        Q29613: "event",
        Q74685863: "event",
        Q74686741: "event",
        Q87268198: "event",
        Q87292806: "event",
        Q87292877: "event",
        Q87344584: "event",
        Q87592754: "event",
        Q87776830: "event",
        Q87776839: "event",
        Q87776842: "event",
        Q88007175: "event",
        Q92282907: "event",
        Q92282909: "event",
        Q92312582: "event",
        Q92313829: "event",
        Q93154810: "event",
        Q93155836: "event",
        Q93306595: "event",
        Q93306847: "event",
        Q93395449: "event",
        Q93395542: "event",
        Q93455815: "event",
        Q93455943: "event",
        Q93462300: "event",
        Q93462304: "event",
        Q93557741: "event",
        Q93558099: "event",
        Q93558289: "event",
        Q93558491: "event",
        Q93559180: "event",
        Q93559266: "event",
        Q93559482: "event",
        Q93559484: "event",
        Q94175988: "event",
        Q94176089: "event",
        Q94179568: "event",
        Q94179811: "event",
        Q94184446: "event",
        Q94184448: "event",
        Q94328268: "event",
        Q94330804: "event",
        Q94334991: "event",
        Q94340605: "event",
        Q94343868: "event",
        Q94343874: "event",
        Q94440678: "event",
        Q94440695: "event",
        Q94449970: "event",
        Q94450051: "event",
        Q94456115: "event",
        Q94456180: "event",
        Q94461968: "event",
        Q94462023: "event",
        Q94464365: "event",
        Q94464422: "event",
        Q94466676: "event",
        Q94466778: "event",
        Q94553391: "event",
        Q94553400: "event",
        Q94566760: "event",
        Q94566909: "event",
        Q94572595: "event",
        Q94572597: "event",
        Q94602741: "event",
        Q94602898: "event",
        Q94606984: "event",
        Q94607074: "event",
        Q94609398: "event",
        Q94609435: "event",
        Q94614602: "event",
        Q94614685: "event",
        Q94620942: "event",
        Q94620977: "event",
        Q94635295: "event",
        Q94674229: "event",
        Q94679811: "event",
        Q94683284: "event",
        Q94684262: "event",
        Q94694462: "event",
        Q94694551: "event",
        Q94694792: "event",
        Q97667346: "event",
        Q109172450: "event",
        Q109322393: "event",
        Q109535776: "event",
        Q1204811: "event",
        Q1204815: "event",
        Q1204813: "event",
        Q1204823: "event",
        Q2332435: "event",
        Q2332459: "event",
        Q2575326: "event",
        Q3394364: "event",
        Q3664502: "event",
        Q3664508: "event",
        Q3827270: "event",
        Q4376957: "event",
        Q4376998: "event",
        Q4887639: "event",
        Q4887636: "event",
        Q4887640: "event",
        Q4896558: "event",
        Q4896567: "event",
        Q4921543: "event",
        Q4921548: "event",
        Q5449102: "event",
        Q5449103: "event",
        Q5449104: "event",
        Q5449105: "event",
        Q5461348: "event",
        Q5569251: "event",
        Q6359110: "event",
        Q6359124: "event",
        Q6359166: "event",
        Q6364027: "event",
        Q6963264: "event",
        Q7423198: "event",
        Q7423197: "event",
        Q7438990: "event",
        Q7438991: "event",
        Q7589630: "event",
        Q7929107: "event",
        Q15465716: "event",
        Q16058278: "event",
        Q16058282: "event",
        Q17001884: "event",
        Q17011291: "event",
        Q17011296: "event",
        Q17162317: "event",
        Q17500617: "event",
        Q18204260: "event",
        Q18654238: "event",
        Q18654241: "event",
        Q18657941: "event",
        Q18657945: "event",
        Q18760021: "event",
        Q20019002: "event",
        Q21050208: "event",
        Q22773457: "event",
        Q24057108: "event",
        Q24838077: "event",
        Q24838614: "event",
        Q24838841: "event",
        Q27958270: "event",
        Q27959453: "event",
        Q28417679: "event",
        Q28417682: "event",
        Q28417685: "event",
        Q43401538: "event",
        Q48842194: "event",
        Q52358547: "event",
        Q52358585: "event",
        Q52362037: "event",
        Q55474574: "event",
        Q55639517: "event",
        Q59511589: "event",
        Q63522873: "event",
        Q65121886: "event",
        Q95124560: "software",
        Q85870490: "event",
        Q94635434: "event",
        Q94674325: "event",
        Q94679999: "event",
        Q94683604: "event",
        Q94684504: "event",
        Q94694487: "event",
        Q94694569: "event",
        Q94694933: "event",
        Q106925271: "software",
        Q97579415: "event",
        Q97579418: "event",
        Q97579482: "event",
        Q97579484: "event",
        Q97581349: "event",
        Q97581369: "event",
        Q97671312: "event",
        Q104864731: "event",
        Q105967793: "event",
        Q106623590: "event",
        Q106958128: "event",
        Q107211053: "event",
        Q108196863: "event",
        Q110408400: "event",
        Q111433963: "event",
        Q1143132: "software",
        Q2108852: "software",
        Q546842: "legislation",
        Q1349659: "review",
        Q4861057: "event",
        Q4861618: "event",
        Q4861943: "event",
        Q4899805: "event",
        Q4916653: "event",
        Q4940252: "event",
        Q4954788: "event",
        Q4961598: "event",
        Q4973708: "event",
        Q5001131: "event",
        Q5019056: "event",
        Q5025826: "event",
        Q5189716: "event",
        Q5325494: "event",
        Q5377332: "event",
        Q5637384: "event",
        Q5645760: "event",
        Q5657629: "event",
        Q5666613: "event",
        Q5683838: "event",
        Q5763312: "event",
        Q5913321: "event",
        Q6084407: "event",
        Q6391510: "event",
        Q6481463: "event",
        Q6537337: "event",
        Q6820741: "event",
        Q7305510: "event",
        Q7331066: "event",
        Q7571176: "event",
        Q7650353: "event",
        Q7829682: "event",
        Q7966607: "event",
        Q7967318: "event",
        Q7989235: "event",
        Q16993367: "event",
        Q16995693: "event",
        Q16998864: "event",
        Q18129485: "event",
        Q18395406: "event",
        Q18395411: "event",
        Q18395413: "event",
        Q18395420: "event",
        Q22909824: "event",
        Q25052881: "event",
        Q61005756: "software",
        Q75387698: "dataset",
        Q51631: "book",
        Q104822202: "broadcast",
        Q101416992: "dataset",
        Q101417052: "dataset",
        Q97273737: "event",
        Q97365604: "event",
        Q97728938: "event",
        Q98821837: "event",
        Q100393529: "event",
        Q100458400: "event",
        Q100458525: "event",
        Q100458691: "event",
        Q100458780: "event",
        Q100458838: "event",
        Q100458931: "event",
        Q100459125: "event",
        Q100459319: "event",
        Q100459495: "event",
        Q110546562: "software",
        Q101442571: "event",
        Q101464718: "event",
        Q101464937: "event",
        Q101465135: "event",
        Q101465286: "event",
        Q101465464: "event",
        Q101465641: "event",
        Q101465816: "event",
        Q101466018: "event",
        Q101466197: "event",
        Q101466371: "event",
        Q101466540: "event",
        Q101552796: "event",
        Q101558899: "event",
        Q101559306: "event",
        Q101559475: "event",
        Q101833672: "event",
        Q106606189: "event",
        Q4685991: "event",
        Q4732111: "event",
        Q4734074: "event",
        Q4741330: "event",
        Q4804976: "event",
        Q4805016: "event",
        Q4831377: "event",
        Q4837784: "event",
        Q4863857: "event",
        Q4867320: "event",
        Q4867535: "event",
        Q4868097: "event",
        Q4896023: "event",
        Q4920022: "event",
        Q4930867: "event",
        Q4940076: "event",
        Q4948241: "event",
        Q4960051: "event",
        Q4961802: "event",
        Q4966909: "event",
        Q4972212: "event",
        Q4973773: "event",
        Q4976945: "event",
        Q5025632: "event",
        Q5032731: "event",
        Q5033715: "event",
        Q5037606: "event",
        Q5046152: "event",
        Q5050186: "event",
        Q5050233: "event",
        Q5086586: "event",
        Q5089977: "event",
        Q5090248: "event",
        Q5092666: "event",
        Q5093425: "event",
        Q5093783: "event",
        Q5093842: "event",
        Q5096023: "event",
        Q5099214: "event",
        Q5105173: "event",
        Q5109107: "event",
        Q5123664: "event",
        Q5142121: "event",
        Q5160482: "event",
        Q5168382: "event",
        Q5169827: "event",
        Q5175497: "event",
        Q5179131: "event",
        Q5182988: "event",
        Q5184838: "event",
        Q5207728: "event",
        Q5225620: "event",
        Q5230306: "event",
        Q5263366: "event",
        Q5295526: "event",
        Q5302538: "event",
        Q5312035: "event",
        Q5327527: "event",
        Q5327986: "event",
        Q5328228: "event",
        Q5328537: "event",
        Q5328578: "event",
        Q5328841: "event",
        Q5329053: "event",
        Q5329427: "event",
        Q5329832: "event",
        Q5330764: "event",
        Q5336965: "event",
        Q5365263: "event",
        Q5366435: "event",
        Q5383887: "event",
        Q5385735: "event",
        Q5420150: "event",
        Q5434971: "event",
        Q5443506: "event",
        Q5527173: "event",
        Q6415764: "event",
        Q6423494: "event",
        Q6516179: "event",
        Q7017567: "event",
        Q7057066: "event",
        Q7085670: "event",
        Q7353823: "event",
        Q7370451: "event",
        Q7404395: "event",
        Q7417064: "event",
        Q7446128: "event",
        Q7492800: "event",
        Q7558104: "event",
        Q7568703: "event",
        Q7593363: "event",
        Q7618182: "event",
        Q7639752: "event",
        Q7681174: "event",
        Q7832574: "event",
        Q7963798: "event",
        Q7999562: "event",
        Q8027003: "event",
        Q8030526: "event",
        Q16152241: "event",
        Q5468895: "event",
        Q5469167: "event",
        Q5511221: "event",
        Q5529711: "event",
        Q5587449: "event",
        Q5597930: "event",
        Q5600313: "event",
        Q5615855: "event",
        Q5643673: "event",
        Q5644235: "event",
        Q5654743: "event",
        Q5658992: "event",
        Q5666435: "event",
        Q5674285: "event",
        Q5680473: "event",
        Q5744884: "event",
        Q5756073: "event",
        Q5765799: "event",
        Q5906330: "event",
        Q5956948: "event",
        Q6065673: "event",
        Q6389767: "event",
        Q6394406: "event",
        Q6395482: "event",
        Q6411002: "event",
        Q6483290: "event",
        Q6543284: "event",
        Q6551208: "event",
        Q6658347: "event",
        Q6722945: "event",
        Q6735513: "event",
        Q6742885: "event",
        Q6751712: "event",
        Q6816652: "event",
        Q6840929: "event",
        Q6840950: "event",
        Q6841015: "event",
        Q6841023: "event",
        Q6895916: "event",
        Q7016808: "event",
        Q7054918: "event",
        Q7055129: "event",
        Q7055145: "event",
        Q7055190: "event",
        Q7055593: "event",
        Q7055784: "event",
        Q7056197: "event",
        Q7056730: "event",
        Q7057275: "event",
        Q7057402: "event",
        Q7057657: "event",
        Q7061564: "event",
        Q7069814: "event",
        Q7073397: "event",
        Q7108258: "event",
        Q7115568: "event",
        Q7165382: "event",
        Q7232516: "event",
        Q7242032: "event",
        Q7260890: "event",
        Q7305658: "event",
        Q7310088: "event",
        Q7316257: "event",
        Q7322247: "event",
        Q7331070: "event",
        Q7354086: "event",
        Q7369795: "event",
        Q7370415: "event",
        Q7378326: "event",
        Q7380093: "event",
        Q7380780: "event",
        Q7380856: "event",
        Q7385007: "event",
        Q7430326: "event",
        Q7445235: "event",
        Q7445246: "event",
        Q7447568: "event",
        Q7494580: "event",
        Q7503708: "event",
        Q7566487: "event",
        Q7567032: "event",
        Q7567424: "event",
        Q7567618: "event",
        Q7567780: "event",
        Q7568034: "event",
        Q7568036: "event",
        Q7568096: "event",
        Q7568303: "event",
        Q7568461: "event",
        Q7568522: "event",
        Q7575923: "event",
        Q7593008: "event",
        Q7596675: "event",
        Q7596702: "event",
        Q7615445: "event",
        Q7621927: "event",
        Q7624890: "event",
        Q7634541: "event",
        Q7646811: "event",
        Q7688785: "event",
        Q108939375: "event",
        Q108939378: "event",
        Q108939390: "event",
        Q108939403: "event",
        Q108939424: "event",
        Q108939450: "event",
        Q109669515: "event",
        Q109935409: "event",
        Q109935517: "event",
        Q109935543: "event",
        Q109935560: "event",
        Q109935583: "event",
        Q109935605: "event",
        Q2941225: "software",
        Q7688441: "event",
        Q7694995: "event",
        Q7699664: "event",
        Q7705742: "event",
        Q7710268: "event",
        Q7797773: "event",
        Q7820779: "event",
        Q7827123: "event",
        Q7903446: "event",
        Q7909498: "event",
        Q7909562: "event",
        Q7968074: "event",
        Q7971126: "event",
        Q7974635: "event",
        Q7975390: "event",
        Q7975447: "event",
        Q7978014: "event",
        Q7978128: "event",
        Q7981288: "event",
        Q7985706: "event",
        Q7985764: "event",
        Q7986134: "event",
        Q7987001: "event",
        Q7990392: "event",
        Q8023873: "event",
        Q8029339: "event",
        Q8034237: "event",
        Q8037234: "event",
        Q8039547: "event",
        Q8039654: "event",
        Q8040466: "event",
        Q8040465: "event",
        Q15077890: "event",
        Q16150755: "event",
        Q16254485: "event",
        Q16985514: "event",
        Q16994465: "event",
        Q16997251: "event",
        Q16998731: "event",
        Q16998845: "event",
        Q17035426: "event",
        Q17035706: "event",
        Q17059228: "event",
        Q17063120: "event",
        Q20055575: "event",
        Q20962139: "event",
        Q21061461: "event",
        Q24039182: "event",
        Q24039181: "event",
        Q24039246: "event",
        Q24039247: "event",
        Q24039245: "event",
        Q24039250: "event",
        Q24039251: "event",
        Q24039248: "event",
        Q24039249: "event",
        Q24039254: "event",
        Q24039255: "event",
        Q24039252: "event",
        Q24039253: "event",
        Q24039258: "event",
        Q24039257: "event",
        Q24039262: "event",
        Q24039263: "event",
        Q24039260: "event",
        Q24039261: "event",
        Q24039266: "event",
        Q24039267: "event",
        Q24039264: "event",
        Q24039265: "event",
        Q24039270: "event",
        Q24039271: "event",
        Q24039274: "event",
        Q24039275: "event",
        Q24039273: "event",
        Q24039278: "event",
        Q24993739: "event",
        Q24993740: "event",
        Q65042246: "event",
        Q65057522: "event",
        Q106453584: "event",
        Q107388279: "book",
        Q108570967: "review",
        Q108570971: "review",
        Q109935648: "event",
        Q109935680: "event",
        Q111324105: "event",
        Q65281628: "regulation",
        Q8953: "regulation",
        Q72688: "software",
        Q207440: "software",
        Q287539: "software",
        Q380153: "software",
        Q387168: "software",
        Q608297: "software",
        Q726378: "software",
        Q753651: "software",
        Q1001215: "software",
        Q1052843: "software",
        Q1141941: "software",
        Q1189978: "software",
        Q1224342: "software",
        Q1251544: "software",
        Q1350261: "software",
        Q2324639: "software",
        Q2628648: "software",
        Q3067620: "software",
        Q5441191: "software",
        Q5500256: "software",
        Q7003418: "software",
        Q7208362: "software",
        Q7448156: "software",
        Q7489513: "software",
        Q606652: "event",
        Q10314988: "software",
        Q12226408: "software",
        Q12562332: "software",
        Q16705695: "software",
        Q7269933: "event",
        Q17091412: "software",
        Q18915790: "software",
        Q11267647: "event",
        Q11267645: "event",
        Q21043363: "software",
        Q21306238: "software",
        Q23672887: "software",
        Q27964209: "software",
        Q21051154: "standard",
        Q34305781: "software",
        Q191903: "regulation",
        Q3492425: "regulation",
        Q2130: "software",
        Q11250: "software",
        Q14643: "software",
        Q39238: "software",
        Q72205464: "software",
        Q66771576: "standard",
        Q100320716: "software",
        Q110146494: "software",
        Q128555: "software",
        Q274089: "software",
        Q281472: "software",
        Q285861: "software",
        Q288405: "software",
        Q380172: "software",
        Q627921: "software",
        Q690265: "software",
        Q749893: "software",
        Q818944: "software",
        Q837274: "software",
        Q934791: "software",
        Q975060: "software",
        Q1143237: "software",
        Q1194708: "software",
        Q1198051: "software",
        Q1259393: "software",
        Q1260861: "software",
        Q1276370: "software",
        Q1330734: "software",
        Q1992074: "software",
        Q2374485: "software",
        Q2667487: "software",
        Q2902363: "software",
        Q2918662: "software",
        Q3607994: "software",
        Q3714476: "software",
        Q3841143: "software",
        Q4021212: "software",
        Q4096094: "software",
        Q4284934: "software",
        Q4344917: "software",
        Q4388728: "software",
        Q4646997: "software",
        Q4680745: "software",
        Q5165889: "software",
        Q5297305: "software",
        Q5377339: "software",
        Q5421528: "software",
        Q5426601: "software",
        Q6451496: "software",
        Q6451502: "software",
        Q6554218: "software",
        Q7449055: "software",
        Q7563772: "software",
        Q7855619: "software",
        Q7915684: "software",
        Q9092779: "software",
        Q115802: "event",
        Q210673: "event",
        Q240387: "event",
        Q294755: "standard",
        Q294758: "standard",
        Q295067: "standard",
        Q295098: "standard",
        Q298882: "standard",
        Q298898: "standard",
        Q298914: "standard",
        Q298939: "standard",
        Q2268379: "standard",
        Q4642499: "event",
        Q3152993: "standard",
        Q4036548: "standard",
        Q16976839: "software",
        Q20665486: "software",
        Q11187180: "event",
        Q11187928: "event",
        Q29791656: "software",
        Q29791662: "software",
        Q29791660: "software",
        Q29793089: "software",
        Q29794122: "software",
        Q29794311: "software",
        Q30235544: "software",
        Q25814150: "standard",
        Q26998715: "standard",
        Q28379902: "standard",
        Q28379905: "standard",
        Q29578214: "standard",
        Q55234451: "event",
        Q14746: "software",
        Q44337: "software",
        Q99746060: "software",
        Q105084498: "software",
        Q98609806: "standard",
        Q98642562: "standard",
        Q111525931: "software",
        Q111568537: "software",
        Q112081159: "software",
        Q105086361: "event",
        Q107457035: "event",
        Q108328936: "event",
        Q86915: "software",
        Q240116: "software",
        Q375944: "software",
        Q603889: "software",
        Q677416: "software",
        Q734215: "software",
        Q762308: "software",
        Q783066: "software",
        Q835016: "software",
        Q846205: "software",
        Q849450: "software",
        Q878825: "software",
        Q1000349: "software",
        Q1044361: "software",
        Q1190947: "software",
        Q1228785: "software",
        Q1335171: "software",
        Q1481191: "software",
        Q2880842: "software",
        Q2995268: "software",
        Q3062515: "software",
        Q3513438: "software",
        Q3536726: "software",
        Q3631710: "software",
        Q3696410: "software",
        Q4365417: "software",
        Q5198152: "software",
        Q6713956: "software",
        Q568946: "event",
        Q294885: "standard",
        Q294894: "standard",
        Q294895: "standard",
        Q294899: "standard",
        Q295021: "standard",
        Q11794350: "software",
        Q1054864: "standard",
        Q1134560: "standard",
        Q12635161: "software",
        Q1256727: "standard",
        Q1256912: "standard",
        Q3272930: "event",
        Q3275782: "event",
        Q3587393: "event",
        Q1756979: "standard",
        Q2840060: "standard",
        Q4489474: "standard",
        Q17084394: "software",
        Q17084934: "software",
        Q17144865: "software",
        Q8030805: "event",
        Q8078623: "event",
        Q18357227: "software",
        Q7280114: "standard",
        Q7280115: "standard",
        Q7280119: "standard",
        Q7280120: "standard",
        Q7280121: "standard",
        Q20707190: "software",
        Q11559206: "event",
        Q21122879: "software",
        Q11597392: "event",
        Q11644839: "event",
        Q10366633: "standard",
        Q22205802: "software",
        Q11977640: "standard",
        Q13218505: "standard",
        Q25345907: "software",
        Q14193598: "standard",
        Q15220335: "standard",
        Q15226510: "standard",
        Q17215318: "event",
        Q16672015: "standard",
        Q28972913: "software",
        Q28972917: "software",
        Q19864051: "standard",
        Q20017641: "standard",
        Q22050646: "event",
        Q22248386: "event",
        Q29652955: "standard",
        Q30640197: "standard",
        Q55357515: "software",
        Q484785: "regulation",
        Q1270767: "regulation",
        Q65947879: "software",
        Q4060660: "regulation",
        Q5177039: "regulation",
        Q7124832: "regulation",
        Q9357459: "regulation",
        Q64167209: "standard",
        Q76683717: "software",
        Q14625662: "regulation",
        Q18457081: "regulation",
        Q24886268: "regulation",
        Q28455391: "regulation",
        Q37062409: "regulation",
        Q104642575: "software",
        Q107282615: "software",
        Q100887313: "standard",
        Q110086978: "standard",
        Q110146407: "standard",
        Q60641635: "regulation",
        Q169233: "software",
        Q169338: "software",
        Q180943: "software",
        Q374230: "software",
        Q382486: "software",
        Q682772: "software",
        Q829915: "software",
        Q956343: "software",
        Q1107344: "software",
        Q1766038: "software",
        Q1936252: "software",
        Q2078122: "software",
        Q2454939: "software",
        Q3487968: "software",
        Q4683692: "software",
        Q5510283: "software",
        Q5553661: "software",
        Q5853100: "software",
        Q7269731: "software",
        Q9760157: "software",
        Q756822: "event",
        Q756825: "event",
        Q10364685: "software",
        Q137255: "standard",
        Q137292: "standard",
        Q137351: "standard",
        Q2111163: "event",
        Q1028580: "standard",
        Q1028816: "standard",
        Q1028832: "standard",
        Q1028854: "standard",
        Q1028865: "standard",
        Q1028872: "standard",
        Q1028881: "standard",
        Q1028889: "standard",
        Q1029186: "standard",
        Q1029536: "standard",
        Q1031226: "standard",
        Q1053242: "standard",
        Q3250343: "event",
        Q3310250: "event",
        Q3310270: "event",
        Q1652510: "standard",
        Q1665639: "standard",
        Q1665642: "standard",
        Q1665641: "standard",
        Q13222167: "software",
        Q4554158: "event",
        Q4554343: "event",
        Q4554571: "event",
        Q2755495: "standard",
        Q5529412: "standard",
        Q5529420: "standard",
        Q9085831: "event",
        Q96393271: "regulation",
        Q96398070: "regulation",
        Q22682016: "software",
        Q14192738: "event",
        Q14192736: "event",
        Q17839732: "event",
        Q17839758: "event",
        Q17839787: "event",
        Q17839872: "event",
        Q17839923: "event",
        Q17839948: "event",
        Q16246703: "standard",
        Q16246700: "standard",
        Q16927918: "standard",
        Q21050921: "standard",
        Q24033460: "standard",
        Q25393281: "standard",
        Q25393365: "standard",
        Q111214764: "regulation",
        Q31836350: "event",
        Q31842269: "standard",
        Q779415: "regulation",
        Q782614: "regulation",
        Q1094397: "regulation",
        Q1208927: "regulation",
        Q1351282: "regulation",
        Q1977835: "regulation",
        Q2914565: "regulation",
        Q56298334: "standard",
        Q67943569: "software",
        Q3569918: "regulation",
        Q14675: "software",
        Q4826838: "regulation",
        Q4826865: "regulation",
        Q71726635: "software",
        Q65238766: "standard",
        Q12892398: "regulation",
        Q80969887: "standard",
        Q48731499: "regulation",
        Q109690198: "standard",
        Q65591542: "regulation",
        Q300914: "software",
        Q821157: "software",
        Q826308: "software",
        Q1037904: "software",
        Q1978975: "software",
        Q2127647: "software",
        Q2134646: "software",
        Q2232267: "software",
        Q2367339: "software",
        Q3922358: "software",
        Q4263410: "software",
        Q5253991: "software",
        Q5448351: "software",
        Q5449460: "software",
        Q5477883: "software",
        Q7671563: "software",
        Q7687272: "software",
        Q134211: "event",
        Q187916: "event",
        Q207703: "event",
        Q211773: "event",
        Q216033: "event",
        Q362605: "event",
        Q610243: "event",
        Q633506: "event",
        Q10269379: "software",
        Q838781: "event",
        Q1194269: "event",
        Q1229455: "event",
        Q1392681: "event",
        Q1421697: "event",
        Q1519236: "event",
        Q1660416: "event",
        Q1744672: "event",
        Q11331406: "software",
        Q345335: "standard",
        Q11771157: "software",
        Q86059166: "regulation",
        Q2483906: "event",
        Q1153651: "standard",
        Q1623419: "standard",
        Q3590901: "event",
        Q2345193: "standard",
        Q2456186: "standard",
        Q4892040: "event",
        Q5905662: "event",
        Q6484470: "event",
        Q16662008: "software",
        Q7133630: "event",
        Q18759108: "software",
        Q19798263: "software",
        Q20388419: "software",
        Q12043782: "event",
        Q25450968: "software",
        Q17115899: "event",
        Q18482429: "event",
        Q18638656: "event",
        Q30347815: "software",
        Q24175331: "event",
        Q23306572: "standard",
        Q60480500: "software",
        Q63914682: "software",
        Q63914753: "software",
        Q63914927: "software",
        Q419911: "regulation",
        Q613918: "regulation",
        Q827792: "regulation",
        Q66230650: "software",
        Q2122110: "regulation",
        Q56196481: "standard",
        Q71477837: "software",
        Q7556714: "regulation",
        Q7644486: "regulation",
        Q61782186: "standard",
        Q61866970: "standard",
        Q73476571: "software",
        Q78145485: "software",
        Q66771570: "standard",
        Q14944024: "regulation",
        Q85797695: "software",
        Q30688465: "regulation",
        Q96146284: "software",
        Q107042005: "broadcast",
        Q105098453: "software",
        Q97368812: "event",
        Q98048858: "event",
        Q108924240: "software",
        Q109470190: "software",
        Q98822806: "standard",
        Q110887639: "software",
        Q111306718: "software",
        Q111411020: "software",
        Q112074728: "software",
        Q106810710: "event",
        Q111535559: "event",
        Q65556511: "regulation",
        Q332719: "software",
        Q334167: "software",
        Q1170308: "software",
        Q1260039: "software",
        Q2315057: "software",
        Q4035639: "software",
        Q4041455: "software",
        Q4041466: "software",
        Q5280436: "software",
        Q5696532: "software",
        Q6987213: "software",
        Q5337691: "review",
        Q17142169: "software",
        Q9044439: "event",
        Q12038181: "event",
        Q12202543: "event",
        Q12641786: "event",
        Q16515674: "event",
        Q20379572: "event",
        Q20436354: "event",
        Q25000767: "event",
        Q25165455: "event",
        Q25317694: "event",
        Q25317695: "event",
        Q25317692: "event",
        Q25317699: "event",
        Q25317696: "event",
        Q25317702: "event",
        Q25317703: "event",
        Q25317701: "event",
        Q25317707: "event",
        Q25435571: "event",
        Q25482756: "event",
        Q48845629: "software",
        Q56298645: "software",
        Q57977677: "software",
        Q63915290: "software",
        Q63915650: "software",
        Q54812340: "event",
        Q65243773: "event",
        Q94660628: "legislation",
        Q104152389: "software",
        Q97376601: "standard",
        Q109278692: "event",
        Q108695570: "standard",
        Q161410: "software",
        Q168210: "software",
        Q170963: "software",
        Q184973: "software",
        Q186165: "software",
        Q193162: "software",
        Q559856: "software",
        Q615699: "software",
        Q950152: "software",
        Q1073015: "software",
        Q1210425: "software",
        Q1273203: "software",
        Q1368679: "software",
        Q1780763: "software",
        Q2428155: "software",
        Q3220391: "software",
        Q3391957: "software",
        Q4007046: "software",
        Q5440723: "software",
        Q5892272: "software",
        Q7094065: "software",
        Q588586: "event",
        Q1202167: "event",
        Q1719235: "event",
        Q1730108: "event",
        Q1730115: "event",
        Q1857148: "event",
        Q1999275: "event",
        Q2117827: "event",
        Q2145391: "event",
        Q2213861: "event",
        Q2237879: "event",
        Q2273681: "event",
        Q2306623: "event",
        Q2362894: "event",
        Q2431042: "event",
        Q2490367: "event",
        Q2879531: "event",
        Q2950611: "event",
        Q3425916: "event",
        Q3548048: "event",
        Q13636813: "software",
        Q4989541: "event",
        Q18385544: "software",
        Q19778981: "software",
        Q19967801: "software",
        Q11456116: "event",
        Q21154509: "software",
        Q15116286: "event",
        Q15879714: "event",
        Q15879715: "event",
        Q15879712: "event",
        Q15879719: "event",
        Q28404302: "software",
        Q29021290: "software",
        Q19767716: "event",
        Q19827858: "event",
        Q33279156: "book",
        Q55387209: "software",
        Q55387247: "software",
        Q56240402: "software",
        Q58327688: "software",
        Q59392156: "software",
        Q61507686: "software",
        Q466: "software",
        Q76373554: "software",
        Q69681398: "event",
        Q69772310: "event",
        Q69790936: "event",
        Q69792758: "event",
        Q69870650: "event",
        Q69887041: "event",
        Q69997198: "event",
        Q70369541: "event",
        Q70384357: "event",
        Q70442641: "event",
        Q71791810: "event",
        Q74813502: "event",
        Q76544848: "event",
        Q76544874: "event",
        Q76544897: "event",
        Q76544929: "event",
        Q96405218: "software",
        Q107210714: "software",
        Q107389616: "software",
        Q98609804: "standard",
        Q98617327: "standard",
        Q98617382: "standard",
        Q98640210: "standard",
        Q98641984: "standard",
        Q110421313: "software",
        Q102187931: "event",
        Q105933268: "event",
        Q109043402: "event",
        Q67064711: "regulation",
        Q67205374: "regulation",
        Q375176: "software",
        Q3011118: "software",
        Q4034678: "software",
        Q5308021: "software",
        Q7124288: "software",
        Q82614: "event",
        Q116135: "event",
        Q203712: "event",
        Q238602: "event",
        Q252623: "event",
        Q259509: "event",
        Q280739: "event",
        Q280750: "event",
        Q303039: "event",
        Q380068: "event",
        Q406699: "event",
        Q474990: "event",
        Q611260: "event",
        Q693661: "event",
        Q738723: "event",
        Q743750: "event",
        Q746918: "event",
        Q746937: "event",
        Q746958: "event",
        Q749941: "event",
        Q784878: "event",
        Q806668: "event",
        Q827572: "event",
        Q841738: "event",
        Q913496: "event",
        Q968233: "event",
        Q1001292: "event",
        Q1001587: "event",
        Q1094440: "event",
        Q1104915: "event",
        Q1129898: "event",
        Q1307796: "event",
        Q1338371: "event",
        Q1401639: "event",
        Q1419587: "event",
        Q1436736: "event",
        Q1485140: "event",
        Q1505803: "event",
        Q1505841: "event",
        Q1505870: "event",
        Q370855: "standard",
        Q378640: "standard",
        Q1057260: "standard",
        Q1058975: "standard",
        Q1502020: "standard",
        Q3586646: "event",
        Q3586662: "event",
        Q3586664: "event",
        Q3924425: "event",
        Q2907041: "standard",
        Q2975671: "standard",
        Q3094393: "standard",
        Q3127699: "standard",
        Q7670767: "standard",
        Q7670765: "standard",
        Q12407530: "legislation",
        Q12138859: "event",
        Q26367719: "software",
        Q15223620: "standard",
        Q18662021: "standard",
        Q24574680: "event",
        Q24940151: "event",
        Q48748555: "event",
        Q48835554: "event",
        Q52177345: "event",
        Q52390813: "event",
        Q55806871: "standard",
        Q55806925: "standard",
        Q2872764: "regulation",
        Q14037025: "regulation",
        Q18087867: "regulation",
        Q81024457: "event",
        Q81024490: "event",
        Q81024520: "event",
        Q81024546: "event",
        Q81033892: "event",
        Q81036853: "event",
        Q81039301: "event",
        Q81042176: "event",
        Q85305177: "event",
        Q108934731: "software",
        Q101136446: "event",
        Q101136450: "event",
        Q101136451: "event",
        Q101136449: "event",
        Q101136456: "event",
        Q101136466: "event",
        Q111167865: "event",
        Q111589558: "event",
        Q111589687: "event",
        Q111996315: "event",
        Q835937: "software",
        Q840498: "software",
        Q1102408: "software",
        Q1201679: "software",
        Q2100701: "software",
        Q3708937: "software",
        Q4780987: "software",
        Q170096: "event",
        Q173271: "event",
        Q1505897: "event",
        Q1505910: "event",
        Q1506353: "event",
        Q1506443: "event",
        Q1726780: "event",
        Q1735816: "event",
        Q1817684: "event",
        Q1914237: "event",
        Q2069781: "event",
        Q2101180: "event",
        Q2113792: "event",
        Q2113818: "event",
        Q2152768: "event",
        Q2216590: "event",
        Q2245146: "event",
        Q2338574: "event",
        Q2477052: "event",
        Q3370130: "event",
        Q4354922: "event",
        Q4705943: "event",
        Q14500324: "software",
        Q7100860: "event",
        Q7707423: "event",
        Q7669185: "standard",
        Q9697654: "event",
        Q11261499: "event",
        Q11327742: "event",
        Q11618043: "event",
        Q11677885: "event",
        Q12379557: "event",
        Q27940843: "event",
        Q48829622: "event",
        Q58336227: "event",
        Q7849: "event",
        Q7854: "event",
        Q7870: "event",
        Q7876: "event",
        Q7885: "event",
        Q7954: "event",
        Q7961: "event",
        Q7965: "event",
        Q7980: "event",
        Q7994: "event",
        Q7993: "event",
        Q7998: "event",
        Q7997: "event",
        Q8000: "event",
        Q8019: "event",
        Q8025: "event",
        Q8032: "event",
        Q8039: "event",
        Q8036: "event",
        Q8069: "event",
        Q8082: "event",
        Q8100: "event",
        Q8109: "event",
        Q9102: "event",
        Q9109: "event",
        Q9113: "event",
        Q9117: "event",
        Q9122: "event",
        Q9137: "event",
        Q9208: "event",
        Q9209: "event",
        Q9214: "event",
        Q9223: "event",
        Q9220: "event",
        Q9227: "event",
        Q9225: "event",
        Q9229: "event",
        Q9233: "event",
        Q17012863: "regulation",
        Q109597309: "broadcast",
        Q96482998: "event",
        Q98637324: "event",
        Q100953125: "event",
        Q101206065: "event",
        Q104216769: "event",
        Q104901744: "event",
        Q104902941: "event",
        Q105047089: "event",
        Q105274163: "event",
        Q107102173: "event",
        Q107107237: "event",
        Q107131233: "event",
        Q107139226: "event",
        Q107139306: "event",
        Q108750321: "event",
        Q111443584: "event",
        Q87358148: "webpage",
        Q96707234: "webpage",
        Q97011660: "webpage",
        Q97303167: "webpage",
        Q98545791: "webpage",
        Q102333788: "webpage",
        Q106706063: "webpage",
        Q108460357: "webpage",
        Q18889701: "dataset",
        Q110597964: "webpage",
        Q1886157: "event",
        Q386903: "standard",
        Q1044821: "standard",
        Q1152382: "standard",
        Q6034516: "event",
        Q6059325: "event",
        Q6373950: "event",
        Q7417177: "standard",
        Q11668522: "event",
        Q16955224: "event",
        Q18923548: "event",
        Q19945033: "event",
        Q20723971: "event",
        Q20723968: "event",
        Q20723974: "event",
        Q20723975: "event",
        Q20723973: "event",
        Q20723976: "event",
        Q20723983: "event",
        Q20723986: "event",
        Q20723987: "event",
        Q20723984: "event",
        Q20723990: "event",
        Q20723988: "event",
        Q26877537: "event",
        Q111699174: "regulation",
        Q28739510: "standard",
        Q28850469: "standard",
        Q4167836: "webpage",
        Q4387047: "webpage",
        Q4663903: "webpage",
        Q8615872: "webpage",
        Q11266439: "webpage",
        Q18043430: "webpage",
        Q44671215: "standard",
        Q21281405: "webpage",
        Q21469493: "webpage",
        Q21479588: "webpage",
        Q22247630: "webpage",
        Q23841178: "webpage",
        Q24571886: "webpage",
        Q25051296: "webpage",
        Q26214208: "webpage",
        Q64787790: "software",
        Q28368760: "webpage",
        Q28373483: "webpage",
        Q29057009: "webpage",
        Q30415057: "webpage",
        Q35250433: "webpage",
        Q66730546: "standard",
        Q66788953: "standard",
        Q74173914: "event",
        Q47382471: "webpage",
        Q47524402: "webpage",
        Q55648788: "webpage",
        Q58408484: "webpage",
        Q58492747: "webpage",
        Q58573615: "webpage",
        Q60715851: "webpage",
        Q63090714: "webpage",
        Q65967030: "webpage",
        Q66474017: "webpage",
        Q66666236: "webpage",
        Q66715753: "webpage",
        Q66794983: "webpage",
        Q67184262: "webpage",
        Q67185183: "webpage",
        Q109598322: "software",
        Q72610003: "webpage",
        Q106545547: "event",
        Q106856346: "event",
        Q106861620: "event",
        Q110664731: "standard",
        Q65038211: "regulation",
        Q2204919: "dataset",
        Q66740187: "regulation",
        Q66741795: "regulation",
        Q99913107: "webpage",
        Q101032436: "webpage",
        Q599843: "software",
        Q612728: "software",
        Q646197: "software",
        Q721795: "software",
        Q1472856: "software",
        Q2025459: "software",
        Q87881365: "regulation",
        Q87968373: "regulation",
        Q88008946: "regulation",
        Q88009764: "regulation",
        Q88061699: "regulation",
        Q88095209: "regulation",
        Q88529542: "regulation",
        Q88532493: "regulation",
        Q88579339: "regulation",
        Q15726780: "software",
        Q6587910: "event",
        Q17042661: "software",
        Q22908173: "software",
        Q15952409: "standard",
        Q18012553: "event",
        Q18629983: "event",
        Q19275977: "event",
        Q19298799: "event",
        Q28871062: "software",
        Q19631227: "event",
        Q19946292: "event",
        Q19969488: "event",
        Q20180679: "event",
        Q20180690: "event",
        Q20682745: "event",
        Q23044632: "event",
        Q23903087: "event",
        Q24928262: "event",
        Q27159717: "event",
        Q27230592: "event",
        Q27832398: "event",
        Q28972895: "standard",
        Q28972936: "standard",
        Q28972964: "standard",
        Q28972976: "standard",
        Q28972986: "standard",
        Q28972984: "standard",
        Q28973005: "standard",
        Q28973012: "standard",
        Q28973026: "standard",
        Q36381476: "event",
        Q42265032: "event",
        Q47538737: "event",
        Q48814173: "event",
        Q221275: "regulation",
        Q1068383: "regulation",
        Q56017387: "event",
        Q2945120: "regulation",
        Q3029530: "regulation",
        Q3029536: "regulation",
        Q3029575: "regulation",
        Q3029605: "regulation",
        Q3029614: "regulation",
        Q3151623: "regulation",
        Q3256521: "regulation",
        Q3477309: "regulation",
        Q3480073: "regulation",
        Q3480412: "regulation",
        Q3480518: "regulation",
        Q58965890: "event",
        Q60969695: "event",
        Q6592216: "regulation",
        Q63556891: "event",
        Q10429773: "regulation",
        Q66363418: "standard",
        Q66363419: "standard",
        Q68542705: "event",
        Q69434505: "standard",
        Q28070921: "regulation",
        Q28070925: "regulation",
        Q67184635: "webpage",
        Q67197591: "webpage",
        Q67198564: "webpage",
        Q67202271: "webpage",
        Q68926185: "webpage",
        Q69766158: "webpage",
        Q106767234: "event",
        Q100154329: "webpage",
        Q603481: "software",
        Q1630770: "software",
        Q3177953: "software",
        Q4740553: "software",
        Q181336: "event",
        Q204012: "event",
        Q253309: "event",
        Q371385: "event",
        Q689010: "event",
        Q789760: "event",
        Q820665: "event",
        Q913964: "event",
        Q958775: "event",
        Q1071162: "event",
        Q1246312: "event",
        Q1350359: "event",
        Q1355573: "event",
        Q1528406: "event",
        Q1626609: "event",
        Q1634916: "event",
        Q1881195: "event",
        Q1894516: "event",
        Q1935979: "event",
        Q2053700: "event",
        Q2080867: "event",
        Q2088660: "event",
        Q2090907: "event",
        Q2291785: "event",
        Q2328431: "event",
        Q2379010: "event",
        Q2658171: "event",
        Q3113804: "event",
        Q3113848: "event",
        Q3113887: "event",
        Q3113951: "event",
        Q3114049: "event",
        Q3633116: "event",
        Q4035729: "event",
        Q4036036: "event",
        Q4044491: "event",
        Q4046559: "event",
        Q4048349: "event",
        Q4048381: "event",
        Q4815989: "event",
        Q5370895: "event",
        Q5451983: "event",
        Q5451981: "event",
        Q5451988: "event",
        Q5594968: "event",
        Q5594973: "event",
        Q5975766: "event",
        Q6349925: "event",
        Q6905314: "event",
        Q7206524: "event",
        Q7779855: "event",
        Q7863028: "event",
        Q7936111: "event",
        Q8042351: "event",
        Q10259870: "event",
        Q10264888: "event",
        Q10298081: "event",
        Q10322320: "event",
        Q10534956: "event",
        Q14935528: "event",
        Q16624207: "event",
        Q18351451: "event",
        Q25377259: "event",
        Q1229525: "webpage",
        Q61033232: "dataset",
        Q61033736: "dataset",
        Q66680750: "dataset",
        Q61449115: "software",
        Q61745129: "software",
        Q62019097: "software",
        Q63243980: "software",
        Q63645022: "software",
        Q63645039: "software",
        Q63645079: "software",
        Q70344413: "software",
        Q60889414: "event",
        Q60983843: "event",
        Q61627078: "event",
        Q71441946: "software",
        Q71468383: "software",
        Q71474750: "software",
        Q96678034: "software",
        Q109689777: "dataset",
        Q66763446: "webpage",
        Q108099928: "software",
        Q99528515: "event",
        Q107092176: "event",
        Q107307769: "event",
        Q107476730: "event",
        Q107578812: "event",
        Q108020227: "event",
        Q92896548: "webpage",
        Q7548531: "software",
        Q200734: "event",
        Q205505: "event",
        Q263803: "event",
        Q280744: "event",
        Q303028: "event",
        Q379159: "event",
        Q463761: "event",
        Q518751: "event",
        Q581077: "event",
        Q597387: "event",
        Q749307: "event",
        Q809958: "event",
        Q910531: "event",
        Q912234: "event",
        Q922166: "event",
        Q958591: "event",
        Q1000415: "event",
        Q1003057: "event",
        Q1031214: "event",
        Q1031230: "event",
        Q1031242: "event",
        Q1035963: "event",
        Q1134505: "event",
        Q1182913: "event",
        Q1208702: "event",
        Q1235654: "event",
        Q1235660: "event",
        Q1280421: "event",
        Q1401411: "event",
        Q1435937: "event",
        Q1436721: "event",
        Q1451349: "event",
        Q1566018: "event",
        Q1608283: "event",
        Q1789702: "event",
        Q1789700: "event",
        Q1827590: "event",
        Q1917749: "event",
        Q1965756: "event",
        Q2000963: "event",
        Q2043402: "event",
        Q2219130: "event",
        Q2261424: "event",
        Q2341353: "event",
        Q2362456: "event",
        Q597648: "standard",
        Q1054315: "standard",
        Q2740833: "standard",
        Q4639658: "event",
        Q4835621: "event",
        Q4883094: "event",
        Q5583736: "event",
        Q6023015: "event",
        Q6948589: "event",
        Q7196694: "event",
        Q16935625: "software",
        Q7394799: "event",
        Q7685866: "event",
        Q16982445: "event",
        Q16985526: "event",
        Q16986585: "event",
        Q21586294: "event",
        Q28448398: "event",
        Q48841214: "event",
        Q61793874: "software",
        Q84322930: "motion_picture",
        Q63914602: "software",
        Q64358330: "software",
        Q71467370: "software",
        Q71477585: "software",
        Q63868344: "event",
        Q67181439: "event",
        Q66363914: "standard",
        Q66363913: "standard",
        Q9114: "event",
        Q72225695: "book",
        Q73712633: "event",
        Q92602121: "software",
        Q96583353: "software",
        Q65181871: "webpage",
        Q65181907: "webpage",
        Q66050470: "webpage",
        Q66101878: "webpage",
        Q66385405: "webpage",
        Q67182786: "webpage",
        Q97120595: "event",
        Q107139679: "software",
        Q100251706: "event",
        Q111196346: "software",
        Q104846358: "event",
        Q104854821: "event",
        Q105360183: "event",
        Q105555777: "event",
        Q105905601: "event",
        Q2086463: "software",
        Q2587354: "software",
        Q296939: "book",
        Q171650: "event",
        Q216330: "event",
        Q786646: "event",
        Q843564: "event",
        Q843570: "event",
        Q843579: "event",
        Q843831: "event",
        Q843836: "event",
        Q843842: "event",
        Q909344: "event",
        Q1071362: "event",
        Q1436719: "event",
        Q1444311: "event",
        Q1526444: "event",
        Q1587816: "event",
        Q1726982: "event",
        Q1744820: "event",
        Q1770395: "event",
        Q1789698: "event",
        Q1789699: "event",
        Q1873096: "event",
        Q1873097: "event",
        Q1892098: "event",
        Q1950841: "event",
        Q1983921: "event",
        Q2043392: "event",
        Q2043399: "event",
        Q2798871: "event",
        Q2818080: "event",
        Q4044246: "event",
        Q4044501: "event",
        Q4147738: "event",
        Q4412527: "event",
        Q4532940: "event",
        Q4635078: "event",
        Q4642515: "event",
        Q4642513: "event",
        Q4642518: "event",
        Q4743696: "event",
        Q88434121: "regulation",
        Q4997088: "event",
        Q5089349: "event",
        Q5148694: "event",
        Q5594961: "event",
        Q7071936: "event",
        Q7170805: "event",
        Q7185707: "event",
        Q7206531: "event",
        Q7270880: "event",
        Q7537626: "event",
        Q7687408: "event",
        Q7707420: "event",
        Q7823966: "event",
        Q7907065: "event",
        Q8026605: "event",
        Q96246183: "regulation",
        Q16768882: "event",
        Q16826251: "event",
        Q16961295: "event",
        Q16970173: "event",
        Q16972009: "event",
        Q16980789: "event",
        Q16980923: "event",
        Q16982317: "event",
        Q17326251: "event",
        Q18166188: "event",
        Q22025348: "event",
        Q23867898: "event",
        Q28128142: "event",
        Q48785303: "event",
        Q48803181: "event",
        Q48841253: "event",
        Q60770328: "event",
        Q96313657: "software",
        Q88007346: "event",
        Q96473181: "standard",
        Q99485986: "event",
        Q99485988: "event",
        Q99525687: "event",
        Q100392376: "event",
        Q100392977: "event",
        Q100400750: "event",
        Q100460289: "event",
        Q100460437: "event",
        Q100460551: "event",
        Q100460885: "event",
        Q100461071: "event",
        Q100461224: "event",
        Q100461380: "event",
        Q100461529: "event",
        Q104847437: "event",
        Q105038186: "event",
        Q105044533: "event",
        Q105082119: "event",
        Q106696123: "event",
        Q109377975: "event",
        Q109669593: "event",
        Q109669620: "event",
        Q110295952: "legislation",
        Q111183874: "standard",
        Q497957: "song",
        Q3879286: "song",
        Q5747907: "song",
        Q99441966: "webpage",
        Q9051102: "song",
        Q100775261: "webpage",
        Q100775825: "webpage",
        Q176604: "software",
        Q223683: "software",
        Q295179: "software",
        Q370634: "software",
        Q506041: "software",
        Q884772: "software",
        Q1050404: "software",
        Q1413769: "software",
        Q1482183: "software",
        Q1502046: "software",
        Q1535147: "software",
        Q1543908: "software",
        Q2526030: "software",
        Q2562273: "software",
        Q2620519: "software",
        Q2709591: "software",
        Q2739329: "software",
        Q2915997: "software",
        Q3029670: "software",
        Q3360633: "software",
        Q4053513: "software",
        Q4421683: "software",
        Q5156840: "software",
        Q5160239: "software",
        Q5227315: "software",
        Q5249565: "software",
        Q5264358: "software",
        Q5287620: "software",
        Q5685117: "software",
        Q106548776: "webpage",
        Q6908274: "software",
        Q7122936: "software",
        Q7226737: "software",
        Q7233183: "software",
        Q7273285: "software",
        Q7545384: "software",
        Q108914573: "webpage",
        Q537769: "event",
        Q111450319: "webpage",
        Q1200915: "event",
        Q10754052: "software",
        Q16674797: "software",
        Q17014996: "software",
        Q17071746: "software",
        Q17098697: "software",
        Q10415567: "event",
        Q20180775: "software",
        Q11412524: "event",
        Q11453226: "event",
        Q21050603: "software",
        Q21661921: "software",
        Q25303672: "software",
        Q18395423: "event",
        Q28130292: "software",
        Q29654788: "software",
        Q21467672: "event",
        Q39278852: "software",
        Q63106609: "software",
        Q54837: "software",
        Q109615173: "software",
        Q109615332: "software",
        Q111662771: "software",
        Q111669986: "software",
        Q140676: "software",
        Q231143: "software",
        Q448593: "software",
        Q635985: "software",
        Q666455: "software",
        Q984179: "software",
        Q1007056: "software",
        Q1020019: "software",
        Q1050092: "software",
        Q1072314: "software",
        Q1224870: "software",
        Q1503337: "software",
        Q1557261: "software",
        Q2544432: "software",
        Q2923097: "software",
        Q3519361: "software",
        Q3646602: "software",
        Q4716232: "software",
        Q5678892: "software",
        Q6542704: "software",
        Q6979507: "software",
        Q593092: "event",
        Q812836: "event",
        Q13157341: "software",
        Q13223892: "software",
        Q14251017: "software",
        Q5179573: "event",
        Q8047025: "event",
        Q18029311: "software",
        Q19601935: "software",
        Q22907300: "software",
        Q22907686: "software",
        Q28017710: "software",
        Q28464970: "software",
        Q55162610: "software",
        Q55605753: "software",
        Q61625231: "software",
        Q65403895: "software",
        Q65648501: "software",
        Q22666: "software",
        Q43060: "software",
        Q77978441: "software",
        Q80002220: "software",
        Q88686174: "webpage",
        Q110256698: "software",
        Q58592966: "regulation",
        Q599079: "software",
        Q623818: "software",
        Q657881: "software",
        Q751292: "software",
        Q863506: "software",
        Q1156047: "software",
        Q2466492: "software",
        Q2562299: "software",
        Q4035705: "software",
        Q4634019: "software",
        Q4876324: "software",
        Q4893208: "software",
        Q4972931: "software",
        Q5003703: "software",
        Q5157028: "software",
        Q5203305: "software",
        Q5448353: "software",
        Q7124395: "software",
        Q7553986: "software",
        Q7824733: "software",
        Q180935: "event",
        Q182570: "event",
        Q184865: "event",
        Q257336: "event",
        Q321654: "event",
        Q358805: "event",
        Q696267: "event",
        Q811630: "event",
        Q1137643: "event",
        Q10854318: "software",
        Q1311060: "event",
        Q1313129: "event",
        Q1509642: "event",
        Q2000509: "event",
        Q2021750: "event",
        Q2300237: "event",
        Q2913518: "event",
        Q2992145: "event",
        Q3214425: "event",
        Q3427324: "event",
        Q1665626: "standard",
        Q3694579: "event",
        Q4442178: "event",
        Q5209396: "event",
        Q5416627: "event",
        Q5905918: "event",
        Q5946442: "event",
        Q6145635: "event",
        Q17152481: "software",
        Q7880385: "event",
        Q11411258: "event",
        Q11424403: "event",
        Q11573688: "event",
        Q11598585: "event",
        Q21189942: "software",
        Q16672129: "event",
        Q15260683: "standard",
        Q20160549: "event",
        Q20190522: "event",
        Q29791667: "software",
        Q29791664: "software",
        Q29791673: "software",
        Q29793551: "software",
        Q29794170: "software",
        Q39076481: "event",
        Q1382057: "regulation",
        Q3721928: "regulation",
        Q4059641: "regulation",
        Q4819894: "regulation",
        Q55516: "software",
        Q5758323: "regulation",
        Q7239271: "regulation",
        Q7242400: "regulation",
        Q65154248: "event",
        Q65211922: "event",
        Q10476086: "regulation",
        Q16947814: "regulation",
        Q17029629: "regulation",
        Q98614878: "standard",
        Q110272188: "software",
        Q110279334: "software",
        Q110279335: "software",
        Q106372749: "event",
        Q107185076: "event",
        Q108538088: "standard",
        Q57362: "regulation",
        Q73502333: "regulation",
        Q73522917: "regulation",
        Q162738: "software",
        Q221552: "software",
        Q588365: "software",
        Q776657: "software",
        Q1139146: "software",
        Q1257611: "software",
        Q1684163: "software",
        Q1797819: "software",
        Q2250178: "software",
        Q2277901: "software",
        Q2422383: "software",
        Q2445104: "software",
        Q2523931: "software",
        Q2721136: "software",
        Q3144517: "software",
        Q4038545: "software",
        Q4677602: "software",
        Q5205812: "software",
        Q5368818: "software",
        Q7392452: "software",
        Q164731: "event",
        Q170004: "event",
        Q231419: "event",
        Q264136: "event",
        Q270944: "event",
        Q1026754: "event",
        Q1250156: "event",
        Q10876391: "software",
        Q11337347: "software",
        Q1785695: "event",
        Q11349986: "software",
        Q2291837: "event",
        Q2291843: "event",
        Q2291841: "event",
        Q2291847: "event",
        Q4639907: "event",
        Q4640620: "event",
        Q5640597: "event",
        Q6044676: "event",
        Q8054632: "event",
        Q10379423: "event",
        Q11306923: "event",
        Q11476054: "event",
        Q11831080: "event",
        Q14134315: "event",
        Q13162293: "standard",
        Q25392778: "software",
        Q15914808: "event",
        Q99677797: "regulation",
        Q16593159: "event",
        Q15229424: "standard",
        Q17150120: "event",
        Q18630802: "event",
        Q21513768: "event",
        Q107663141: "regulation",
        Q28727823: "event",
        Q30947464: "event",
        Q8615206: "webpage",
        Q60784896: "software",
        Q61715186: "software",
        Q63247979: "software",
        Q64620757: "software",
        Q195951: "regulation",
        Q788104: "regulation",
        Q806869: "regulation",
        Q834614: "regulation",
        Q1336099: "regulation",
        Q1632136: "regulation",
        Q3516888: "regulation",
        Q60968417: "event",
        Q6467311: "regulation",
        Q7554361: "regulation",
        Q79411422: "software",
        Q15819790: "regulation",
        Q16532593: "regulation",
        Q77562458: "event",
        Q94340627: "event",
        Q94993531: "event",
        Q104844776: "software",
        Q96178258: "event",
        Q98611825: "standard",
        Q98614836: "standard",
        Q98617239: "standard",
        Q98640215: "standard",
        Q98640222: "standard",
        Q110643339: "software",
        Q99688802: "standard",
        Q99718939: "standard",
        Q123733: "software",
        Q182270: "software",
        Q612825: "software",
        Q746674: "software",
        Q1838229: "software",
        Q2892536: "software",
        Q3457058: "software",
        Q4835786: "software",
        Q5283178: "software",
        Q5913803: "software",
        Q18170752: "song",
        Q7978568: "software",
        Q184654: "event",
        Q243264: "event",
        Q585784: "event",
        Q1171070: "event",
        Q1508421: "event",
        Q11195180: "software",
        Q1670819: "event",
        Q11252199: "software",
        Q1802537: "event",
        Q1975861: "event",
        Q2291790: "event",
        Q2291795: "event",
        Q2291813: "event",
        Q2454443: "event",
        Q3496090: "event",
        Q3612215: "event",
        Q4335797: "event",
        Q11830861: "event",
        Q11831022: "event",
        Q13474477: "event",
        Q16592971: "event",
        Q16593107: "event",
        Q15218754: "standard",
        Q15219262: "standard",
        Q18630801: "event",
        Q18630804: "event",
        Q19309186: "event",
        Q19309187: "event",
        Q19309191: "event",
        Q19309188: "event",
        Q19309189: "event",
        Q19309192: "event",
        Q19309193: "event",
        Q30753169: "software",
        Q21515551: "event",
        Q23562927: "event",
        Q24688986: "event",
        Q38339877: "software",
        Q1474116: "webpage",
        Q30914000: "event",
        Q5612559: "webpage",
        Q15647814: "webpage",
        Q54844883: "software",
        Q57409838: "software",
        Q58071790: "software",
        Q20769287: "webpage",
        Q24571879: "webpage",
        Q24574745: "webpage",
        Q51963118: "standard",
        Q51963572: "standard",
        Q53106948: "standard",
        Q53107555: "standard",
        Q56325973: "event",
        Q56343479: "event",
        Q56343477: "event",
        Q30432511: "webpage",
        Q4826860: "regulation",
        Q60861658: "event",
        Q60906143: "event",
        Q6841282: "regulation",
        Q7007213: "regulation",
        Q7569779: "regulation",
        Q66771566: "standard",
        Q66771569: "standard",
        Q79260675: "software",
        Q18558685: "regulation",
        Q76947372: "event",
        Q80125455: "event",
        Q80125668: "event",
        Q25392081: "regulation",
        Q54662266: "webpage",
        Q56428020: "webpage",
        Q59541917: "webpage",
        Q100370374: "software",
        Q106040099: "software",
        Q106532138: "software",
        Q110949494: "software",
        Q111381712: "software",
        Q111525924: "software",
        Q111610229: "software",
        Q104772534: "event",
        Q109042920: "event",
        Q95691391: "webpage",
        Q10742: "regulation",
        Q97303168: "webpage",
        Q97950663: "webpage",
        Q140819: "software",
        Q382454: "software",
        Q614120: "software",
        Q921594: "software",
        Q1143087: "software",
        Q1262687: "software",
        Q1417348: "software",
        Q1631141: "software",
        Q1641122: "software",
        Q1970686: "software",
        Q1996088: "software",
        Q2166013: "software",
        Q2349394: "software",
        Q2662525: "software",
        Q3181044: "software",
        Q3493519: "software",
        Q3608019: "software",
        Q3684624: "software",
        Q3731270: "software",
        Q3833440: "software",
        Q3963243: "software",
        Q4388313: "software",
        Q4651388: "software",
        Q105528595: "webpage",
        Q105653689: "webpage",
        Q5136712: "software",
        Q106574913: "webpage",
        Q106575300: "webpage",
        Q106612246: "webpage",
        Q107302455: "webpage",
        Q7094076: "software",
        Q108091160: "webpage",
        Q108094999: "webpage",
        Q108292642: "webpage",
        Q7551266: "software",
        Q7647325: "software",
        Q108783631: "webpage",
        Q110010043: "webpage",
        Q110242953: "webpage",
        Q141025: "event",
        Q230057: "event",
        Q230061: "event",
        Q110637382: "webpage",
        Q488532: "event",
        Q110863562: "webpage",
        Q569319: "event",
        Q111019629: "webpage",
        Q744307: "event",
        Q111143474: "webpage",
        Q111803808: "webpage",
        Q11347580: "software",
        Q2076688: "event",
        Q11631156: "software",
        Q2532187: "event",
        Q3114131: "event",
        Q2050761: "standard",
        Q4959681: "review",
        Q5171626: "review",
        Q7449618: "review",
        Q19967846: "software",
        Q11445430: "event",
        Q11678910: "event",
        Q4657797: "webpage",
        Q6540326: "webpage",
        Q11753321: "webpage",
        Q15671253: "webpage",
        Q17437798: "webpage",
        Q17437796: "webpage",
        Q17506997: "webpage",
        Q17580674: "webpage",
        Q19887878: "webpage",
        Q48941970: "event",
        Q20769160: "webpage",
        Q24731821: "webpage",
        Q26142649: "webpage",
        Q26267864: "webpage",
        Q65940638: "software",
        Q55236031: "standard",
        Q55236718: "standard",
        Q55236863: "standard",
        Q55236930: "standard",
        Q35127: "software",
        Q36330215: "webpage",
        Q12400514: "regulation",
        Q48552277: "webpage",
        Q51759403: "webpage",
        Q56876519: "webpage",
        Q110874431: "software",
        Q111526022: "software",
        Q111526031: "software",
        Q74980542: "webpage",
        Q106702187: "event",
        Q107975053: "event",
        Q110373741: "event",
        Q56218841: "regulation",
        Q84597428: "webpage",
        Q65591238: "regulation",
        Q96726072: "webpage",
        Q70447391: "regulation",
        Q245955: "software",
        Q309949: "software",
        Q685216: "software",
        Q1457900: "software",
        Q1488974: "software",
        Q2422376: "software",
        Q3041441: "software",
        Q3297601: "software",
        Q104435523: "webpage",
        Q104637420: "webpage",
        Q6137535: "software",
        Q107563839: "webpage",
        Q7884742: "software",
        Q7979855: "software",
        Q624482: "event",
        Q917206: "event",
        Q1163256: "event",
        Q1477807: "event",
        Q11061289: "software",
        Q492935: "standard",
        Q3001473: "event",
        Q3216963: "event",
        Q3945829: "event",
        Q87884834: "regulation",
        Q17081746: "software",
        Q21040917: "software",
        Q14596454: "event",
        Q27247519: "software",
        Q28840786: "software",
        Q28871067: "software",
        Q28871064: "software",
        Q28871065: "software",
        Q29791960: "software",
        Q29792785: "software",
        Q41799425: "software",
        Q55376534: "software",
        Q55809450: "software",
        Q18720640: "webpage",
        Q23841351: "webpage",
        Q27949687: "webpage",
        Q27949697: "webpage",
        Q28858528: "webpage",
        Q29075123: "webpage",
        Q29075121: "webpage",
        Q67323023: "software",
        Q67356512: "software",
        Q56062710: "standard",
        Q56062735: "standard",
        Q56062787: "standard",
        Q56062798: "standard",
        Q56062822: "standard",
        Q56062886: "standard",
        Q56062941: "standard",
        Q67460526: "software",
        Q3029583: "regulation",
        Q3029581: "regulation",
        Q3029590: "regulation",
        Q3029595: "regulation",
        Q3029601: "regulation",
        Q3029606: "regulation",
        Q60842425: "event",
        Q60889734: "event",
        Q61627339: "event",
        Q61627528: "event",
        Q40218570: "webpage",
        Q66763849: "standard",
        Q44292661: "webpage",
        Q81757321: "event",
        Q28070924: "regulation",
        Q84312775: "event",
        Q98045224: "software",
        Q98046250: "software",
        Q99869602: "software",
        Q65932995: "webpage",
        Q106238790: "software",
        Q106697748: "software",
        Q71533077: "webpage",
        Q109615233: "software",
        Q111598731: "software",
        Q81706896: "webpage",
        Q97303176: "webpage",
        Q98851381: "webpage",
        Q99903892: "webpage",
        Q99913142: "webpage",
        Q100775361: "webpage",
        Q100775856: "webpage",
        Q162727: "software",
        Q251527: "software",
        Q300870: "software",
        Q354869: "software",
        Q477840: "software",
        Q770881: "software",
        Q968598: "software",
        Q1043805: "software",
        Q1071902: "software",
        Q1225034: "software",
        Q1230542: "software",
        Q1255677: "software",
        Q1276157: "software",
        Q1340449: "software",
        Q1350108: "software",
        Q1414426: "software",
        Q1671576: "software",
        Q1931587: "software",
        Q1938536: "software",
        Q2006488: "software",
        Q2024406: "software",
        Q2274480: "software",
        Q2373485: "software",
        Q105635705: "webpage",
        Q105690751: "webpage",
        Q105729294: "webpage",
        Q107428796: "webpage",
        Q76800: "event",
        Q87491759: "regulation",
        Q88903302: "regulation",
        Q89487202: "regulation",
        Q89966200: "regulation",
        Q90258006: "regulation",
        Q94141388: "regulation",
        Q94381343: "regulation",
        Q96401587: "regulation",
        Q96731773: "regulation",
        Q96731877: "regulation",
        Q22908390: "software",
        Q97861418: "regulation",
        Q103406861: "regulation",
        Q103407338: "regulation",
        Q103407878: "regulation",
        Q103408251: "regulation",
        Q104604512: "regulation",
        Q104857357: "regulation",
        Q105474669: "regulation",
        Q105730136: "regulation",
        Q106347456: "regulation",
        Q17099416: "webpage",
        Q2736168: "regulation",
        Q3297051: "regulation",
        Q171: "software",
        Q67184216: "webpage",
        Q67187625: "webpage",
        Q67200518: "webpage",
        Q67202353: "webpage",
        Q109520717: "software",
        Q109942850: "software",
        Q111411588: "software",
        Q74842049: "webpage",
        Q108471352: "event",
        Q452912: "software",
        Q1333015: "software",
        Q2435717: "software",
        Q2648547: "software",
        Q3081320: "software",
        Q3390477: "software",
        Q3485465: "software",
        Q3505741: "software",
        Q3538400: "software",
        Q4088258: "software",
        Q4382945: "software",
        Q4680777: "software",
        Q4685932: "software",
        Q4787276: "software",
        Q4819969: "software",
        Q5128435: "software",
        Q5172434: "software",
        Q5172507: "software",
        Q5406123: "software",
        Q5691097: "software",
        Q6466676: "software",
        Q6542714: "software",
        Q6590235: "software",
        Q7094081: "software",
        Q7144994: "software",
        Q7170631: "software",
        Q7225533: "software",
        Q7265244: "software",
        Q7295723: "software",
        Q7307094: "software",
        Q7319034: "software",
        Q7503177: "software",
        Q7550843: "software",
        Q7935008: "software",
        Q8245074: "software",
        Q9384680: "software",
        Q10493980: "software",
        Q11074464: "software",
        Q11278428: "software",
        Q11392035: "software",
        Q11410738: "software",
        Q11431055: "software",
        Q11448776: "software",
        Q11463684: "software",
        Q11605626: "software",
        Q11900959: "software",
        Q12050976: "software",
        Q15633582: "software",
        Q16001076: "software",
        Q16002093: "software",
        Q16465919: "software",
        Q16509734: "software",
        Q16825545: "software",
        Q17080944: "software",
        Q17164395: "software",
        Q17164466: "software",
        Q17589204: "software",
        Q21087288: "software",
        Q21606686: "software",
        Q22137024: "software",
        Q25420156: "software",
        Q27031827: "software",
        Q27881073: "software",
        Q28754053: "software",
        Q28933155: "software",
        Q30137770: "software",
        Q105032316: "regulation",
        Q33270324: "software",
        Q23869328: "event",
        Q39835986: "software",
        Q50988419: "software",
        Q52720701: "software",
        Q59925870: "software",
        Q62471276: "software",
        Q72705885: "software",
        Q76788359: "software",
        Q84324516: "software",
        Q89290172: "software",
        Q90799127: "software",
        Q96882133: "software",
        Q101040848: "software",
        Q105538253: "software",
        Q106458739: "software",
        Q107316103: "software",
        Q107553922: "software",
        Q107667728: "software",
        Q108599057: "software",
        Q109924251: "software",
        Q80729: "software",
        Q795087: "software",
        Q852081: "software",
        Q1757700: "software",
        Q2527949: "software",
        Q2750301: "software",
        Q2933833: "software",
        Q3495176: "software",
        Q3875648: "software",
        Q3977978: "software",
        Q4521948: "software",
        Q4544940: "software",
        Q4735906: "software",
        Q4927198: "software",
        Q5155255: "software",
        Q5450242: "software",
        Q7100701: "software",
        Q7433383: "software",
        Q7537931: "software",
        Q7683117: "software",
        Q163892: "event",
        Q164761: "event",
        Q191691: "event",
        Q211155: "event",
        Q211164: "event",
        Q215677: "event",
        Q223779: "event",
        Q223836: "event",
        Q240500: "event",
        Q246681: "event",
        Q271008: "event",
        Q334734: "event",
        Q500050: "event",
        Q675770: "event",
        Q943635: "event",
        Q1629556: "event",
        Q2164200: "event",
        Q2402434: "event",
        Q2538895: "event",
        Q2774730: "event",
        Q2807981: "event",
        Q2815830: "event",
        Q2817139: "event",
        Q2817913: "event",
        Q3500855: "event",
        Q3730762: "event",
        Q3730761: "event",
        Q4637974: "event",
        Q4640627: "event",
        Q4993704: "event",
        Q17123743: "software",
        Q25304244: "software",
        Q29792340: "software",
        Q29792647: "software",
        Q29794207: "software",
        Q29795767: "software",
        Q21041009: "event",
        Q26844379: "event",
        Q30588012: "event",
        Q31029244: "event",
        Q43219517: "software",
        Q65947619: "software",
        Q4056396: "regulation",
        Q63761275: "event",
        Q77967267: "software",
        Q77971078: "software",
        Q26303: "event",
        Q40244: "event",
        Q81510265: "software",
        Q97291175: "software",
        Q107415808: "software",
        Q106373179: "event",
        Q176583: "software",
        Q225107: "software",
        Q242188: "software",
        Q339011: "software",
        Q428813: "software",
        Q526790: "software",
        Q579544: "software",
        Q581505: "software",
        Q609566: "software",
        Q612991: "software",
        Q650670: "software",
        Q727035: "software",
        Q806350: "software",
        Q814361: "software",
        Q943800: "software",
        Q952222: "software",
        Q964330: "software",
        Q1125095: "software",
        Q1482452: "software",
        Q1575637: "software",
        Q1767080: "software",
        Q1778169: "software",
        Q1970975: "software",
        Q2004951: "software",
        Q2492680: "software",
        Q2494911: "software",
        Q2598955: "software",
        Q2610096: "software",
        Q2645505: "software",
        Q2731964: "software",
        Q3062594: "software",
        Q3064361: "software",
        Q3299244: "software",
        Q3299258: "software",
        Q3299275: "software",
        Q3684894: "software",
        Q3751720: "software",
        Q3757134: "software",
        Q3848436: "software",
        Q3851915: "software",
        Q3851923: "software",
        Q3851926: "software",
        Q3895032: "software",
        Q4284939: "software",
        Q4796198: "software",
        Q4957187: "software",
        Q5041155: "software",
        Q5156556: "software",
        Q5166397: "software",
        Q5171639: "software",
        Q5204933: "software",
        Q5251123: "software",
        Q5338959: "software",
        Q5532500: "software",
        Q5680044: "software",
        Q5758413: "software",
        Q5931208: "software",
        Q7001154: "software",
        Q7263850: "software",
        Q7857001: "software",
        Q7885227: "software",
        Q7990340: "software",
        Q170737: "event",
        Q178108: "event",
        Q187204: "event",
        Q1670875: "event",
        Q3216966: "event",
        Q12806125: "software",
        Q3991761: "event",
        Q5369934: "event",
        Q5591883: "event",
        Q17029643: "software",
        Q19360939: "software",
        Q19878155: "software",
        Q21071503: "software",
        Q12880212: "event",
        Q22666682: "software",
        Q30594545: "software",
        Q104867947: "regulation",
        Q104868307: "regulation",
        Q104868335: "regulation",
        Q104868974: "regulation",
        Q39351938: "software",
        Q43144845: "software",
        Q44043275: "event",
        Q44174726: "event",
        Q212108: "regulation",
        Q228502: "regulation",
        Q1342704: "regulation",
        Q3480484: "regulation",
        Q5176990: "regulation",
        Q7554259: "regulation",
        Q7554342: "regulation",
        Q7681779: "regulation",
        Q11430672: "regulation",
        Q11993827: "regulation",
        Q77969601: "software",
        Q77980392: "software",
        Q110172188: "software",
        Q83790536: "webpage",
        Q191769: "software",
        Q212805: "software",
        Q559557: "software",
        Q803847: "software",
        Q1051422: "software",
        Q1334294: "software",
        Q2499178: "software",
        Q3077240: "software",
        Q3491832: "software",
        Q3513788: "software",
        Q105623375: "webpage",
        Q5193188: "software",
        Q6031177: "software",
        Q107285679: "webpage",
        Q7096323: "software",
        Q165704: "event",
        Q185027: "event",
        Q640026: "event",
        Q679291: "event",
        Q983987: "event",
        Q11288427: "software",
        Q1891945: "event",
        Q12582228: "software",
        Q6117564: "event",
        Q16739336: "software",
        Q11598605: "event",
        Q26932627: "software",
        Q18336781: "event",
        Q18394290: "event",
        Q29791666: "software",
        Q29791669: "software",
        Q29793968: "software",
        Q38042244: "software",
        Q6465339: "webpage",
        Q17024293: "webpage",
        Q55341040: "software",
        Q19842659: "webpage",
        Q20010800: "webpage",
        Q59825643: "software",
        Q23894233: "webpage",
        Q24046192: "webpage",
        Q24514938: "webpage",
        Q25826840: "webpage",
        Q65697924: "software",
        Q66364374: "software",
        Q67131048: "software",
        Q30330522: "webpage",
        Q72970624: "software",
        Q75209826: "software",
        Q38084761: "webpage",
        Q83807365: "software",
        Q84863712: "software",
        Q85632250: "software",
        Q88179872: "software",
        Q90404711: "software",
        Q90404756: "software",
        Q56062113: "webpage",
        Q56876503: "webpage",
        Q58118449: "webpage",
        Q62026391: "webpage",
        Q67131190: "webpage",
        Q105003122: "software",
        Q105195034: "software",
        Q111429877: "software",
        Q111634851: "software",
        Q76735573: "webpage",
        Q76735989: "webpage",
        Q105489874: "event",
        Q99904240: "webpage",
        Q99904310: "webpage",
        Q638153: "software",
        Q1994977: "software",
        Q2036509: "software",
        Q3568027: "software",
        Q5145844: "software",
        Q6852339: "software",
        Q161222: "event",
        Q175125: "event",
        Q179845: "event",
        Q253394: "event",
        Q385385: "event",
        Q528634: "event",
        Q578794: "event",
        Q679106: "event",
        Q748757: "event",
        Q752138: "event",
        Q807910: "event",
        Q826038: "event",
        Q837910: "event",
        Q842293: "event",
        Q1000616: "event",
        Q1071285: "event",
        Q1071822: "event",
        Q1146353: "event",
        Q1167026: "event",
        Q1187515: "event",
        Q1815484: "event",
        Q12582250: "software",
        Q87945071: "regulation",
        Q16000445: "software",
        Q16175145: "software",
        Q8234897: "event",
        Q22100850: "software",
        Q20747768: "event",
        Q20748079: "event",
        Q33120876: "software",
        Q33120921: "software",
        Q27685564: "event",
        Q47495990: "software",
        Q58494329: "software",
        Q48968670: "event",
        Q55236840: "standard",
        Q55236849: "standard",
        Q55236906: "standard",
        Q55236915: "standard",
        Q17460: "software",
        Q92567250: "software",
        Q67202224: "webpage",
        Q105518398: "software",
        Q106513246: "software",
        Q109542220: "software",
        Q109542482: "software",
        Q111381667: "software",
        Q66439731: "regulation",
        Q333871: "software",
        Q727103: "software",
        Q1052516: "software",
        Q1224984: "software",
        Q1235234: "software",
        Q1243340: "software",
        Q1367055: "software",
        Q1469444: "software",
        Q2705070: "software",
        Q3299249: "software",
        Q5227240: "software",
        Q5583904: "software",
        Q6888018: "software",
        Q975979: "event",
        Q1191380: "event",
        Q1258425: "event",
        Q1270816: "event",
        Q1298208: "event",
        Q1460484: "event",
        Q1473381: "event",
        Q1477977: "event",
        Q1513658: "event",
        Q1534720: "event",
        Q1631470: "event",
        Q1892219: "event",
        Q1963627: "event",
        Q1980764: "event",
        Q2417902: "event",
        Q12328550: "software",
        Q3287504: "event",
        Q3598269: "event",
        Q5150074: "event",
        Q5407485: "event",
        Q5995293: "event",
        Q7405868: "event",
        Q7618012: "event",
        Q10223197: "event",
        Q10437559: "event",
        Q11234342: "event",
        Q11259947: "event",
        Q11340947: "event",
        Q11346175: "event",
        Q11369595: "event",
        Q11374825: "event",
        Q21040941: "software",
        Q11490916: "event",
        Q16023904: "event",
        Q16357768: "event",
        Q18339108: "event",
        Q18405099: "event",
        Q28455755: "software",
        Q28455762: "software",
        Q29033102: "software",
        Q21030981: "event",
        Q24869424: "event",
        Q56316865: "software",
        Q161157: "regulation",
        Q338966: "regulation",
        Q942499: "regulation",
        Q977772: "regulation",
        Q56015537: "event",
        Q1146283: "regulation",
        Q1702839: "regulation",
        Q56641237: "event",
        Q2085069: "regulation",
        Q2125156: "regulation",
        Q66656823: "software",
        Q2966717: "regulation",
        Q2996130: "regulation",
        Q3381663: "regulation",
        Q4825882: "regulation",
        Q60269762: "event",
        Q5368811: "regulation",
        Q5469869: "regulation",
        Q5636135: "regulation",
        Q60851124: "event",
        Q6944186: "regulation",
        Q7336206: "regulation",
        Q7933380: "regulation",
        Q63456030: "event",
        Q11802011: "regulation",
        Q67102580: "event",
        Q67104570: "event",
        Q67105178: "event",
        Q67107586: "event",
        Q13381252: "regulation",
        Q15841172: "regulation",
        Q17008721: "regulation",
        Q17081967: "regulation",
        Q17125828: "regulation",
        Q17238569: "regulation",
        Q24192034: "regulation",
        Q86737786: "event",
        Q86743140: "event",
        Q105490626: "event",
        Q106514710: "event",
        Q193794: "software",
        Q332791: "software",
        Q336233: "software",
        Q338028: "software",
        Q506265: "software",
        Q620495: "software",
        Q627595: "software",
        Q772067: "software",
        Q849428: "software",
        Q851512: "software",
        Q901698: "software",
        Q967853: "software",
        Q1024424: "software",
        Q1047380: "software",
        Q1383744: "software",
        Q1449266: "software",
        Q1565674: "software",
        Q2268788: "software",
        Q2859802: "software",
        Q2916484: "software",
        Q3064355: "software",
        Q3299259: "software",
        Q3738073: "software",
        Q3751716: "software",
        Q4284932: "software",
        Q4633426: "software",
        Q4774357: "software",
        Q4880037: "software",
        Q4929982: "software",
        Q5002751: "software",
        Q5005076: "software",
        Q5047286: "software",
        Q5060045: "software",
        Q5156522: "software",
        Q5176967: "software",
        Q5316014: "software",
        Q5406122: "software",
        Q5499622: "software",
        Q6116137: "software",
        Q6518931: "software",
        Q6899477: "software",
        Q7094057: "software",
        Q7168088: "software",
        Q7446630: "software",
        Q7492183: "software",
        Q7496248: "software",
        Q7523714: "software",
        Q7582079: "software",
        Q7837618: "software",
        Q7843207: "software",
        Q8002551: "software",
        Q1141795: "event",
        Q10949536: "software",
        Q11079470: "software",
        Q11498522: "software",
        Q2861656: "event",
        Q4999784: "event",
        Q5461326: "event",
        Q15847164: "software",
        Q16259339: "software",
        Q20181655: "software",
        Q21045276: "software",
        Q25304407: "software",
        Q25377924: "software",
        Q27212903: "software",
        Q28455756: "software",
        Q29097253: "software",
        Q30836236: "software",
        Q26108705: "event",
        Q39286912: "software",
        Q43217907: "software",
        Q45787211: "software",
        Q50255844: "software",
        Q44897107: "event",
        Q61723737: "software",
        Q61754307: "software",
        Q55246937: "event",
        Q55247078: "event",
        Q55247140: "event",
        Q55247191: "event",
        Q834285: "regulation",
        Q56641290: "event",
        Q56641325: "event",
        Q1934609: "regulation",
        Q63929201: "event",
        Q77601218: "software",
        Q77601306: "software",
        Q29358: "event",
        Q87409986: "software",
        Q97664752: "software",
        Q107362984: "software",
        Q107401762: "software",
        Q55603125: "regulation",
        Q55608710: "regulation",
        Q245457: "software",
        Q253728: "software",
        Q365857: "software",
        Q856952: "software",
        Q1045351: "software",
        Q1065413: "software",
        Q1151645: "software",
        Q1256564: "software",
        Q1755277: "software",
        Q2024419: "software",
        Q2051983: "software",
        Q3085391: "software",
        Q3750339: "software",
        Q4921154: "software",
        Q5155088: "software",
        Q5281480: "software",
        Q107285708: "webpage",
        Q107285856: "webpage",
        Q6586607: "software",
        Q7104936: "software",
        Q7141739: "software",
        Q7887041: "software",
        Q428242: "event",
        Q1529228: "event",
        Q1950900: "event",
        Q87406427: "regulation",
        Q5465755: "event",
        Q15156455: "software",
        Q15851502: "software",
        Q15967034: "software",
        Q17622025: "software",
        Q19840511: "software",
        Q21286559: "software",
        Q29043181: "software",
        Q20921542: "event",
        Q30688741: "software",
        Q30941437: "software",
        Q21652095: "event",
        Q33120867: "software",
        Q36509592: "software",
        Q27654292: "event",
        Q43144903: "software",
        Q13331174: "webpage",
        Q55623036: "software",
        Q59826893: "software",
        Q23894246: "webpage",
        Q62465093: "software",
        Q632959: "regulation",
        Q928740: "regulation",
        Q1137840: "regulation",
        Q1781810: "regulation",
        Q2053878: "regulation",
        Q2141748: "regulation",
        Q3708832: "regulation",
        Q3997499: "regulation",
        Q263: "software",
        Q5205810: "regulation",
        Q7246319: "regulation",
        Q11143071: "regulation",
        Q11282954: "regulation",
        Q77968835: "software",
        Q77968837: "software",
        Q77969295: "software",
        Q77969452: "software",
        Q81311730: "software",
        Q95948776: "software",
        Q105693306: "software",
        Q109339434: "software",
        Q109339469: "software",
        Q109339472: "software",
        Q109542655: "software",
        Q66166813: "regulation",
        Q652941: "software",
        Q831774: "software",
        Q939272: "software",
        Q1052034: "software",
        Q1134404: "software",
        Q1395012: "software",
        Q1409400: "software",
        Q1422682: "software",
        Q1466923: "software",
        Q2150789: "software",
        Q2490652: "software",
        Q2655506: "software",
        Q2910253: "software",
        Q3851929: "software",
        Q3893192: "software",
        Q4039090: "software",
        Q4849993: "software",
        Q6042601: "software",
        Q107285953: "webpage",
        Q107285965: "webpage",
        Q6961560: "software",
        Q7164949: "software",
        Q7309581: "software",
        Q7430596: "software",
        Q7449314: "software",
        Q7616382: "software",
        Q13476292: "software",
        Q14907374: "software",
        Q17008156: "software",
        Q17103829: "software",
        Q19826567: "software",
        Q20671729: "software",
        Q22001316: "software",
        Q22001361: "software",
        Q22001390: "software",
        Q22582534: "software",
        Q22582649: "software",
        Q100377165: "regulation",
        Q110884128: "regulation",
        Q39287244: "software",
        Q43144947: "software",
        Q43148722: "software",
        Q43217162: "software",
        Q47450814: "software",
        Q55162840: "software",
        Q56811127: "software",
        Q62382254: "software",
        Q192532: "regulation",
        Q335888: "regulation",
        Q614239: "regulation",
        Q880096: "regulation",
        Q1207845: "regulation",
        Q1228590: "regulation",
        Q1330218: "regulation",
        Q1351306: "regulation",
        Q1363759: "regulation",
        Q1639895: "regulation",
        Q1888932: "regulation",
        Q2069855: "regulation",
        Q2217314: "regulation",
        Q2535979: "regulation",
        Q3150832: "regulation",
        Q3697256: "regulation",
        Q4923114: "regulation",
        Q5140110: "regulation",
        Q5155274: "regulation",
        Q5656419: "regulation",
        Q6665725: "regulation",
        Q77601250: "software",
        Q77601480: "software",
        Q77969871: "software",
        Q77969876: "software",
        Q78480143: "software",
        Q15738686: "regulation",
        Q15848109: "regulation",
        Q16002734: "regulation",
        Q104018626: "software",
        Q111083433: "software"
    };
    function fe4({ value: Q, qualifiers: e }) {
        return Array.isArray(e.P1932) && typeof e.P1932[0] == "string" ? e.P1932[0] : typeof Q == "object" && Q !== null ? r(Q) : typeof Q == "string" ? Q : null;
    }
    function be3(Q) {
        let e = fe4(Q);
        if (e === null) return {
            literal: null
        };
        let { value: t, qualifiers: n } = Q, o = typeof t != "object" || t && t.claims.P31 && t.claims.P31.some((Y)=>Y.value === "Q5") ? iu(e) : {
            literal: e
        }, a = n.P1545 ? parseInt(n.P1545[0]) : null;
        return a !== null && (o._ordinal = a), o;
    }
    function le5(Q) {
        return Q.map(be3).sort((e, t)=>e._ordinal - t._ordinal);
    }
    function ke4(Q) {
        let e = Q.claims.P17[0].value, t = e.claims.P1813.filter(({ qualifiers: { P31: n } })=>!n || n[0] !== "Q28840786");
        return r(Q) + ", " + (t[0] || e.claims.P1448[0]).value;
    }
    function pe3(Q) {
        return Q.claims.P1476 ? Q.claims.P1476[0].value : r(Q);
    }
    function ce3(Q) {
        return Q.map(({ value: e })=>r(e)).join(",");
    }
    function ge3(Q) {
        return {
            "date-parts": Q.map((e)=>ue1(e.value)).filter((e)=>e && e["date-parts"]).map((e)=>e["date-parts"][0])
        };
    }
    function ue5(Q) {
        let e = {
            version: Q.value
        };
        return Q.qualifiers.P577 && (e.issued = ue1(Q.qualifiers.P577[0])), Q.qualifiers.P356 && (e.DOI = Q.qualifiers.P356[0]), Q.qualifiers.P6138 && (e.SWHID = Q.qualifiers.P6138[0]), e;
    }
    var u5 = {
        "review-book": 10,
        review: 9,
        "entry-dictionary": 5,
        "entry-encyclopedia": 5,
        map: 5,
        dataset: 4,
        legislation: 1,
        "article-magazine": 0,
        bill: 0,
        chapter: 0,
        classic: 0,
        collection: 0,
        entry: 0,
        figure: 0,
        graphic: 0,
        hearing: 0,
        interview: 0,
        legal_case: 0,
        manuscript: 0,
        motion_picture: 0,
        musical_score: 0,
        pamphlet: 0,
        "paper-conference": 0,
        patent: 0,
        personal_communication: 0,
        "post-weblog": 0,
        report: 0,
        song: 0,
        speech: 0,
        standard: 0,
        thesis: 0,
        treaty: 0,
        broadcast: -1,
        "article-newspaper": -1,
        "article-journal": -1,
        periodical: -2,
        regulation: -2,
        post: -5,
        webpage: -6,
        software: -7,
        article: -9,
        book: -10,
        performance: -11,
        event: -12,
        document: -100
    };
    function f5(Q, e, t) {
        switch(Q){
            case "type":
                return l6(e);
            case "author":
            case "chair":
            case "curator":
            case "container-author":
            case "collection-editor":
            case "composer":
            case "director":
            case "editor":
            case "executive-producer":
            case "guest":
            case "host":
            case "illustrator":
            case "narrator":
            case "organizer":
            case "original-author":
            case "performer":
            case "producer":
            case "recipient":
            case "reviewed-author":
            case "script-writer":
            case "translator":
                return le5(e);
            case "issued":
            case "original-date":
                return ue1(e);
            case "event-date":
                return ge3(e);
            case "keyword":
                return ce3(e);
            case "container-title":
            case "collection-title":
            case "event-title":
            case "medium":
            case "publisher":
            case "original-publisher":
                return pe3(e);
            case "event-place":
            case "jurisdiction":
            case "original-publisher-place":
            case "publisher-place":
                return ke4(e);
            case "chapter-number":
            case "collection-number":
                return parseInt(e[0]);
            case "number-of-volumes":
                return e.length;
            case "versions":
                return e.map(ue5);
            default:
                return e;
        }
    }
    function l6(Q) {
        let t = (Array.isArray(Q) ? Q : [
            Q
        ]).map((n)=>$4[n.value]).filter(Boolean);
        return t.length ? (t.sort((n, v)=>u5[v] - u5[n]), t[0]) : (p1.unmapped("[plugin-wikidata]", "publication type", Q), "document");
    }
    function r(Q) {
        if (!Q) return;
        let e = s1.langs.find((t)=>Q.labels[t]);
        return Q.labels[e];
    }
    var h5 = {
        author: {
            values: "all",
            props: [
                "P50",
                "P2093",
                "P170",
                "P178"
            ]
        },
        composer: {
            values: "all",
            props: [
                "P86"
            ]
        },
        chair: {
            values: "all",
            props: [
                "P488"
            ]
        },
        curator: {
            values: "all",
            props: [
                "P1640"
            ]
        },
        "executive-producer": {
            values: "all",
            props: [
                "P1431"
            ]
        },
        guest: {
            values: "all",
            props: [
                "P5030"
            ]
        },
        host: {
            values: "all",
            props: [
                "P371"
            ]
        },
        narrator: {
            values: "all",
            props: [
                "P2438"
            ]
        },
        organizer: {
            values: "all",
            props: [
                "P664"
            ]
        },
        performer: {
            values: "all",
            props: [
                "P175"
            ]
        },
        producer: {
            values: "all",
            props: [
                "P162"
            ]
        },
        "script-writer": {
            values: "all",
            props: [
                "P58"
            ]
        },
        "chapter-number": {
            values: "any",
            props: [
                "P1433#P1545",
                "P361#P1545"
            ]
        },
        "collection-editor": {
            values: "all",
            props: [
                "P179.P98"
            ]
        },
        "collection-number": {
            values: "any",
            props: [
                "P179#P1545"
            ]
        },
        "collection-title": "P179",
        "container-author": {
            values: "all",
            props: [
                "P1433.P50",
                "P1433.P2093",
                "P361.P50",
                "P361.P2093"
            ]
        },
        "container-title": {
            values: "any",
            props: [
                "P1433",
                "P361"
            ]
        },
        "container-title-short": {
            values: "any",
            props: [
                "P1433.P1813",
                "P1433.P1160"
            ]
        },
        director: {
            values: "all",
            props: [
                "P57"
            ]
        },
        DOI: "P356",
        edition: "P393",
        editor: {
            values: "all",
            props: [
                "P98"
            ]
        },
        "event-title": "P1433.P4745",
        "event-date": {
            values: "all",
            props: [
                "P1433.P4745.P580",
                "P1433.P4745.P582"
            ]
        },
        "event-place": "P1433.P4745.P276",
        illustrator: {
            values: "all",
            props: [
                "P110"
            ]
        },
        ISBN: {
            values: "any",
            props: [
                "P212",
                "P957"
            ]
        },
        ISSN: "P1433.P236",
        issue: {
            values: "any",
            props: [
                "P433",
                "P1433#P433"
            ]
        },
        issued: {
            values: "any",
            props: [
                "P577",
                "P1433#P577",
                "P348#P577"
            ]
        },
        journalAbbreviation: {
            values: "any",
            props: [
                "P1433.P1813",
                "P1433.P1160"
            ]
        },
        jurisdiction: "P1001",
        keyword: {
            values: "all",
            props: [
                "P921"
            ]
        },
        language: {
            values: "any",
            props: [
                "P407.P218",
                "P364.P218"
            ]
        },
        medium: {
            values: "any",
            props: [
                "P437",
                "P186"
            ]
        },
        "number-of-pages": "P1104",
        "number-of-volumes": {
            values: "all",
            props: [
                "P179.P527"
            ]
        },
        "original-author": {
            values: "all",
            props: [
                "P629.P50",
                "P629.P2093"
            ]
        },
        "original-date": "P629.P577",
        "original-publisher": "P629.P123",
        "original-publisher-place": {
            values: "any",
            props: [
                "P629.P123.P740",
                "P629.P123.P159"
            ]
        },
        "original-title": "P629.P1476",
        page: {
            values: "any",
            props: [
                "P304",
                "P1433#P304"
            ]
        },
        "part-number": "P792",
        "part-title": "P792",
        PMID: "P698",
        PMCID: "P932",
        publisher: "P123",
        "publisher-place": {
            values: "any",
            props: [
                "P123.P740",
                "P123.P159"
            ]
        },
        recipient: {
            values: "all",
            props: [
                "P1817"
            ]
        },
        "reviewed-title": "P921.P1476",
        "reviewed-author": {
            values: "all",
            props: [
                "P921.P50",
                "P921.P2093"
            ]
        },
        scale: "P1752",
        shortTitle: "P1813",
        title: "P1476",
        "title-short": "P1813",
        translator: {
            values: "all",
            props: [
                "P655"
            ]
        },
        type: {
            values: "all",
            props: [
                "P31"
            ]
        },
        version: "P348",
        volume: {
            values: "any",
            props: [
                "P478",
                "P1433#P478"
            ]
        },
        URL: {
            values: "any",
            props: [
                "P856",
                "P953",
                "P2699"
            ]
        }
    };
    var P9 = {
        versions: {
            values: "all",
            props: [
                "P348:all"
            ]
        },
        DistroWatchID: "P3112",
        FramalibreID: "P4107",
        RRID: "P9712",
        SW_MATHID: "P6830",
        SWHID: {
            values: "any",
            props: [
                "P6138",
                "P348#P6138"
            ]
        }
    };
    var B2 = {
        P2860: "Cites",
        P921: "Main subject",
        P3181: "OpenCitations bibliographic resource ID",
        P364: "Original language of work"
    };
    function V4(Q, { claims: e }) {
        let [t, n] = Q[0].split("#");
        if (!(!e[t] || !e[t].length)) return Q.length === 1 ? n ? e[t][0].qualifiers[n] ? e[t][0].qualifiers[n].map((v)=>({
                value: v
            })) : void 0 : e[t] : V4(Q.slice(1), e[t][0].value);
    }
    function U3(Q, e, t) {
        let n = Q.split(".");
        return t.delete(n[0]), V4(n, e);
    }
    function K5(Q, e, t) {
        if (typeof Q != "object") {
            let v = U3(Q, e, t);
            return v && v[0].value;
        }
        let n = [].concat(...Q.props.map((v)=>U3(v, e, t)).filter(Boolean));
        return Q.values === "all" ? n[0] && n : n[0] && n[0].value;
    }
    function y8(Q) {
        let e = {
            id: Q.id,
            custom: {
                QID: Q.id
            },
            source: "Wikidata"
        }, t = new Set(Object.keys(Q.claims));
        for(let n in h5){
            let v = K5(h5[n], Q, t);
            if (v) {
                let o = f5(n, v, Q);
                o && (e[n] = o);
            }
        }
        for(let n in P9){
            let v = K5(P9[n], Q, t);
            if (v) {
                let o = f5(n, v, Q);
                o && (e.custom[n] = o);
            }
        }
        for (let n of t)n in B2 || p1.unmapped("[plugin-wikidata]", "property", n);
        return e.title || (e.title = r(Q)), e.type.slice(0, 6) === "review" ? delete e.keyword : (delete e["reviewed-title"], delete e["reviewed-author"]), e.recipient && (e.type = "personal_communication"), e["event-title"] && (e.type = "paper-conference"), typeof e["part-number"] == "number" ? delete e["part-title"] : typeof e["part-title"] == "string" && delete e["part-number"], e.type !== "chapter" && e["chapter-number"] && delete e["chapter-number"], e["original-author"] && !e.author && (e.author = e["original-author"]), e;
    }
    async function j7({ entities: Q }) {
        return (await z6(Q)).map(y8);
    }
    function O5({ entities: Q }) {
        return W3(Q).map(y8);
    }
    var I7 = {};
    b5(I7, {
        parse: ()=>A6
    });
    function A6(Q) {
        return Q.match(/\/(Q\d+)(?:[#?/]|\s*$)/)[1];
    }
    var je3 = "@wikidata", Je3 = {
        id: k5,
        entity: T10,
        prop: _9,
        url: I7,
        api: p7
    }, Oe3 = {
        "@wikidata/id": {
            parse: d4,
            parseType: {
                dataType: "String",
                predicate: /^Q\d+$/
            }
        },
        "@wikidata/list+text": {
            parse (Q) {
                return Q.trim().split(/(?:[\s,]\s*)/g);
            },
            parseType: {
                dataType: "String",
                predicate: /^\s*((?:Q\d+(?:[\s,]\s*))*Q\d+)\s*$/
            }
        },
        "@wikidata/api": {
            parse: i5,
            parseAsync: w8,
            parseType: {
                dataType: "String",
                predicate: /^(https?:\/\/(?:www\.)?wikidata.org\/w\/api\.php(?:\?.*)?)$/,
                extends: "@else/url"
            }
        },
        "@wikidata/array+api": {
            parse: i5,
            parseAsync: w8,
            parseType: {
                dataType: "Array",
                elementConstraint: "@wikidata/api"
            }
        },
        "@wikidata/url": {
            parse: A6,
            parseType: {
                dataType: "String",
                predicate: /\/(Q\d+)(?:[#?/]|\s*$)/,
                extends: "@else/url"
            }
        },
        "@wikidata/list+object": {
            parse: d4,
            parseType: {
                dataType: "Array",
                elementConstraint: "@wikidata/id"
            }
        },
        "@wikidata/object": {
            parse: O5,
            parseAsync: j7,
            parseType: {
                dataType: "SimpleObject",
                propertyConstraint: {
                    props: "entities"
                }
            }
        },
        "@wikidata/array+object": {
            parse (Q) {
                return Q.reduce((e, { success: t, entities: n })=>(e.success &= t, Object.assign(e.entities, n), e), {});
            },
            parseType: {
                dataType: "Array",
                elementConstraint: "@wikidata/object"
            },
            outputs: "@wikidata/object"
        },
        "@wikidata/prop": {
            parse: f5
        },
        "@wikidata/type": {
            parse: l6
        }
    };
    tt.add(je3, {
        input: Oe3,
        config: s1
    });
    const mod63 = {
        formats: Oe3,
        parsers: Je3,
        ref: je3
    };
    var require3 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m, c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/core":
                return c(mod53);
            case "citeproc":
                return e(mod58);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var N8 = Object.create;
    var x7 = Object.defineProperty;
    var C6 = Object.getOwnPropertyDescriptor;
    var j8 = Object.getOwnPropertyNames;
    var I8 = Object.getPrototypeOf, H5 = Object.prototype.hasOwnProperty;
    var y9 = ((e)=>typeof require3 < "u" ? require3 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require3 < "u" ? require3 : t)[r]
        }) : e)(function(e) {
        if (typeof require3 < "u") return require3.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var g10 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), B3 = (e, t)=>{
        for(var r in t)x7(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, v8 = (e, t, r, m)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of j8(t))!H5.call(e, a) && a !== r && x7(e, a, {
            get: ()=>t[a],
            enumerable: !(m = C6(t, a)) || m.enumerable
        });
        return e;
    }, n4 = (e, t, r)=>(v8(e, t, "default"), r && v8(r, t, "default")), z7 = (e, t, r)=>(r = e != null ? N8(I8(e)) : {}, v8(t || !e || !e.__esModule ? x7(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var S7 = g10((se, D)=>{
        D.exports = {
            apa: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="never" page-range-format="expanded"><info><title>American Psychological Association 7th edition</title><title-short>APA</title-short><id>http://www.zotero.org/styles/apa</id><link href="http://www.zotero.org/styles/apa" rel="self"/><link href="http://www.zotero.org/styles/apa-6th-edition" rel="template"/><link href="https://apastyle.apa.org/style-grammar-guidelines/references/examples" rel="documentation"/><author><name>Brenton M. Wiernik</name><email>zotero@wiernik.org</email></author><category citation-format="author-date"/><category field="psychology"/><category field="generic-base"/><updated>2022-01-31T14:43:56+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en"><terms><term name="editortranslator" form="short"><single>ed. &amp; trans.</single><multiple>eds. &amp; trans.</multiple></term><term name="translator" form="short">trans.</term><term name="interviewer" form="short"><single>interviewer</single><multiple>interviewers</multiple></term><term name="collection-editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="circa" form="short">ca.</term><term name="bc"> B.C.E.</term><term name="ad"> C.E.</term><term name="letter">personal communication</term><term name="letter" form="short">letter</term><term name="issue" form="long"><single>issue</single><multiple>issues</multiple></term></terms></locale><locale xml:lang="af"><terms><term name="letter">persoonlike kommunikasie</term><term name="letter" form="short">brief</term></terms></locale><locale xml:lang="ar"><terms><term name="letter">\u0627\u062A\u0635\u0627\u0644 \u0634\u062E\u0635\u064A</term><term name="letter" form="short">\u062E\u0637\u0627\u0628</term></terms></locale><locale xml:lang="bg"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430 \u043A\u043E\u043C\u0443\u043D\u0438\u043A\u0430\u0446\u0438\u044F</term><term name="letter" form="short">\u043F\u0438\u0441\u043C\u043E</term></terms></locale><locale xml:lang="ca"><terms><term name="letter">comunicaci\xF3 personal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="cs"><terms><term name="letter">osobn\xED komunikace</term><term name="letter" form="short">dopis</term></terms></locale><locale xml:lang="cy"><terms><term name="letter">cyfathrebu personol</term><term name="letter" form="short">llythyr</term></terms></locale><locale xml:lang="da"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikation</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="de"><terms><term name="et-al">et al.</term><term name="letter">pers\xF6nliche Kommunikation</term><term name="letter" form="short">Brief</term></terms></locale><locale xml:lang="el"><terms><term name="letter">\u03C0\u03C1\u03BF\u03C3\u03C9\u03C0\u03B9\u03BA\u03AE \u03B5\u03C0\u03B9\u03BA\u03BF\u03B9\u03BD\u03C9\u03BD\u03AF\u03B1</term><term name="letter" form="short">\u03B5\u03C0\u03B9\u03C3\u03C4\u03BF\u03BB\u03AE</term></terms></locale><locale xml:lang="es"><terms><term name="from">de</term><term name="letter">comunicaci\xF3n personal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="et"><terms><term name="letter">isiklik suhtlus</term><term name="letter" form="short">kiri</term></terms></locale><locale xml:lang="eu"><terms><term name="letter">komunikazio pertsonala</term><term name="letter" form="short">gutuna</term></terms></locale><locale xml:lang="fa"><terms><term name="letter">\u0627\u0631\u062A\u0628\u0627\u0637 \u0634\u062E\u0635\u06CC</term><term name="letter" form="short">\u0646\u0627\u0645\u0647</term></terms></locale><locale xml:lang="fi"><terms><term name="letter">henkil\xF6kohtainen viestint\xE4</term><term name="letter" form="short">kirje</term></terms></locale><locale xml:lang="fr"><terms><term name="letter">communication personnelle</term><term name="letter" form="short">lettre</term><term name="editor" form="short"><single>\xE9d.</single><multiple>\xE9ds.</multiple></term></terms></locale><locale xml:lang="he"><terms><term name="letter">\u05EA\u05E7\u05E9\u05D5\u05E8\u05EA \u05D0\u05D9\u05E9\u05D9\u05EA</term><term name="letter" form="short">\u05DE\u05DB\u05EA\u05D1</term></terms></locale><locale xml:lang="hr"><terms><term name="letter">osobna komunikacija</term><term name="letter" form="short">pismo</term></terms></locale><locale xml:lang="hu"><terms><term name="letter">szem\xE9lyes kommunik\xE1ci\xF3</term><term name="letter" form="short">lev\xE9l</term></terms></locale><locale xml:lang="id"><terms><term name="letter">komunikasi pribadi</term><term name="letter" form="short">surat</term></terms></locale><locale xml:lang="is"><terms><term name="letter">pers\xF3nuleg samskipti</term><term name="letter" form="short">br\xE9f</term></terms></locale><locale xml:lang="it"><terms><term name="letter">comunicazione personale</term><term name="letter" form="short">lettera</term></terms></locale><locale xml:lang="ja"><terms><term name="letter">\u500B\u4EBA\u7684\u306A\u3084\u308A\u53D6\u308A</term><term name="letter" form="short">\u624B\u7D19</term></terms></locale><locale xml:lang="ko"><terms><term name="letter">\uAC1C\uC778 \uC11C\uC2E0</term><term name="letter" form="short">\uD3B8\uC9C0</term></terms></locale><locale xml:lang="la"><terms><term name="letter"/><term name="letter" form="short">epistula</term></terms></locale><locale xml:lang="lt"><terms><term name="letter">communicationis personalis</term><term name="letter" form="short"/></terms></locale><locale xml:lang="lv"><terms><term name="letter">person\u012Bga komunik\u0101cija</term><term name="letter" form="short">v\u0113stule</term></terms></locale><locale xml:lang="mn"><terms><term name="letter">\u0445\u0443\u0432\u0438\u0439\u043D \u0445\u0430\u0440\u0438\u043B\u0446\u0430\u0430 \u0445\u043E\u043B\u0431\u043E\u043E</term><term name="letter" form="short">\u0437\u0430\u0445\u0438\u0430</term></terms></locale><locale xml:lang="nb"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikasjon</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="nl"><terms><term name="et-al">et al.</term><term name="letter">persoonlijke communicatie</term><term name="letter" form="short">brief</term></terms></locale><locale xml:lang="nn"><terms><term name="et-al">et al.</term><term name="letter">personlig kommunikasjon</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="pl"><terms><term name="letter">osobista komunikacja</term><term name="letter" form="short">list</term></terms></locale><locale xml:lang="pt"><terms><term name="letter">comunica\xE7\xE3o pessoal</term><term name="letter" form="short">carta</term></terms></locale><locale xml:lang="ro"><terms><term name="letter">comunicare personal\u0103</term><term name="letter" form="short">scrisoare</term></terms></locale><locale xml:lang="ru"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430\u044F \u043F\u0435\u0440\u0435\u043F\u0438\u0441\u043A\u0430</term><term name="letter" form="short">\u043F\u0438\u0441\u044C\u043C\u043E</term></terms></locale><locale xml:lang="sk"><terms><term name="letter">osobn\xE1 komunik\xE1cia</term><term name="letter" form="short">list</term></terms></locale><locale xml:lang="sl"><terms><term name="letter">osebna komunikacija</term><term name="letter" form="short">pismo</term></terms></locale><locale xml:lang="sr"><terms><term name="letter">\u043B\u0438\u0447\u043D\u0430 \u043A\u043E\u043C\u0443\u043D\u0438\u043A\u0430\u0446\u0438\u0458\u0430</term><term name="letter" form="short">\u043F\u0438\u0441\u043C\u043E</term></terms></locale><locale xml:lang="sv"><terms><term name="letter">personlig kommunikation</term><term name="letter" form="short">brev</term></terms></locale><locale xml:lang="th"><terms><term name="letter">\u0E01\u0E32\u0E23\u0E2A\u0E37\u0E48\u0E2D\u0E2A\u0E32\u0E23\u0E2A\u0E48\u0E27\u0E19\u0E1A\u0E38\u0E04\u0E04\u0E25</term><term name="letter" form="short">\u0E08\u0E14\u0E2B\u0E21\u0E32\u0E22</term></terms></locale><locale xml:lang="tr"><terms><term name="letter">ki\u015Fisel ileti\u015Fim</term><term name="letter" form="short">mektup</term></terms></locale><locale xml:lang="uk"><terms><term name="letter">\u043E\u0441\u043E\u0431\u0438\u0441\u0442\u0435 \u0441\u043F\u0456\u043B\u043A\u0443\u0432\u0430\u043D\u043D\u044F</term><term name="letter" form="short">\u043B\u0438\u0441\u0442</term></terms></locale><locale xml:lang="vi"><terms><term name="letter">giao ti\u1EBFp c\xE1 nh\xE2n</term><term name="letter" form="short">th\u01B0</term></terms></locale><locale xml:lang="zh-CN"><terms><term name="letter">\u7684\u79C1\u4EBA\u4EA4\u6D41</term><term name="letter" form="short">\u4FE1\u51FD</term></terms></locale><locale xml:lang="zh-TW"><terms><term name="letter">\u79C1\u4EBA\u901A\u8A0A</term><term name="letter" form="short">\u4FE1\u51FD</term></terms></locale><!-- General categories of item types:Periodical: article-journal article-magazine article-newspaper post-weblog review review-bookPeriodical or Booklike: paper-conferenceBooklike: article book broadcast chapter dataset entry entry-dictionary entry-encyclopedia figure graphic interview manuscript map motion_picture musical_score pamphlet patent personal_communication report song speech thesis post webpageLegal: bill legal_case legislation treaty--><!-- APA references contain four parts: author, date, title, source --><macro name="author-bib"><names variable="composer" delimiter=", "><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><substitute><names variable="author"/><names variable="illustrator"/><names variable="director"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=" (" suffix=")" text-case="title"/></names><choose><if variable="container-title"><choose><if type="book entry entry-dictionary entry-encyclopedia" match="any"><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/></group></if><else><text macro="title-and-descriptions"/></else></choose></if></choose></if></choose><!-- Test for editortranslator and put that first as that becomes available --><names variable="editor" delimiter=", "><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><names variable="editorial-director"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><names variable="collection-editor"><name name-as-sort-order="all" and="symbol" sort-separator=", " initialize-with=". " delimiter=", " delimiter-precedes-last="always"/><label form="short" prefix=" (" suffix=")" text-case="title"/></names><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/></group></if><else><text macro="title-and-descriptions"/></else></choose></substitute></names></macro><macro name="author-intext"><choose><if type="bill legal_case legislation treaty" match="any"><text macro="title-intext"/></if><else-if type="interview personal_communication" match="any"><choose><!-- These variables indicate that the letter is retrievable by the reader. If not, then use the APA in-text-only personal communication format --><if variable="archive container-title DOI publisher URL" match="none"><group delimiter=", "><names variable="author"><name and="symbol" delimiter=", " initialize-with=". "/><substitute><text macro="title-intext"/></substitute></names><!-- Replace with term="personal-communication" if that becomes available --><text term="letter"/></group></if><else><names variable="author" delimiter=", "><name form="short" and="symbol" delimiter=", " initialize-with=". "/><substitute><text macro="title-intext"/></substitute></names></else></choose></else-if><else><names variable="composer" delimiter=", "><name form="short" and="symbol" delimiter=", " initialize-with=". "/><substitute><names variable="author"/><names variable="illustrator"/><names variable="director"/><choose><if variable="container-title"><choose><if type="book entry entry-dictionary entry-encyclopedia" match="any"><text macro="title-intext"/></if></choose></if></choose><names variable="editor"/><names variable="editorial-director"/><text macro="title-intext"/></substitute></names></else></choose></macro><macro name="date-bib"><group delimiter=" " prefix="(" suffix=")"><choose><if is-uncertain-date="issued"><text term="circa" form="short"/></if></choose><group><choose><if variable="issued"><date variable="issued"><date-part name="year"/></date><text variable="year-suffix"/><choose><if type="article-magazine article-newspaper broadcast interview motion_picture pamphlet personal_communication post post-weblog song speech webpage" match="any"><!-- Many video and audio examples in manual give full dates. Err on the side of too much information. --><date variable="issued"><date-part prefix=", " name="month"/><date-part prefix=" " name="day"/></date></if><else-if type="paper-conference"><!-- Capture 'speech' stored as 'paper-conference' --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><date variable="issued"><date-part prefix=", " name="month"/><date-part prefix=" " name="day"/></date></if></choose></else-if><!-- Only year: article article-journal book chapter entry entry-dictionary entry-encyclopedia dataset figure graphic manuscript map musical_score paper-conference[published] patent report review review-book thesis --></choose></if><else-if variable="status"><group><text variable="status" text-case="lowercase"/><text variable="year-suffix" prefix="-"/></group></else-if><else><text term="no date" form="short"/><text variable="year-suffix" prefix="-"/></else></choose></group></group></macro><macro name="date-sort-group"><!-- APA sorts 1. no-date items, 2. items with dates, 3. in-press (status) items --><choose><if variable="issued"><text value="1"/></if><else-if variable="status"><text value="2"/></else-if><else><text value="0"/></else></choose></macro><macro name="date-sort-date"><date variable="issued" form="numeric"/></macro><macro name="date-intext"><choose><if variable="issued"><group delimiter="/"><group delimiter=" "><choose><if is-uncertain-date="original-date"><text term="circa" form="short"/></if></choose><date variable="original-date"><date-part name="year"/></date></group><group delimiter=" "><choose><if is-uncertain-date="issued"><text term="circa" form="short"/></if></choose><group><choose><if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><!-- These variables indicate that the communication is retrievable by the reader. If not, then use the in-text-only personal communication format --><date variable="issued" form="text"/></if><else><date variable="issued"><date-part name="year"/></date></else></choose></if><else><date variable="issued"><date-part name="year"/></date></else></choose><text variable="year-suffix"/></group></group></group></if><else-if variable="status"><text variable="status" text-case="lowercase"/><text variable="year-suffix" prefix="-"/></else-if><else><text term="no date" form="short"/><text variable="year-suffix" prefix="-"/></else></choose></macro><!-- APA has two description elements following the title:title (parenthetical) [bracketed]  --><macro name="title-and-descriptions"><choose><if variable="title"><group delimiter=" "><text macro="title"/><text macro="parenthetical"/><text macro="bracketed"/></group></if><else><group delimiter=" "><text macro="bracketed"/><text macro="parenthetical"/></group></else></choose></macro><macro name="title"><choose><if type="post webpage" match="any"><!-- Webpages are always italicized --><text variable="title" font-style="italic"/></if><else-if variable="container-title" match="any"><!-- Other types are italicized based on presence of container-title.Assume that review and review-book are published in periodicals/blogs,not just on a web page (ex. 69) --><text variable="title"/></else-if><else><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><text variable="title" font-style="italic"/></if><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><group delimiter=": " font-style="italic"><text variable="title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></if><else><text variable="title" font-style="italic"/></else></choose></else-if><else><group delimiter=": " font-style="italic"><text variable="title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></else></choose></else></choose></macro><macro name="title-intext"><choose><if variable="title" match="none"><text macro="bracketed-intext" prefix="[" suffix="]"/></if><else-if type="bill"><!-- If a bill has no number or container-title, assume it is a hearing; italic --><choose><if variable="number container-title" match="none"><text variable="title" form="short" font-style="italic" text-case="title"/></if><else-if variable="title"><text variable="title" form="short" text-case="title"/></else-if><else><group delimiter=" "><text variable="genre"/><group delimiter=" "><choose><if variable="chapter-number container-title" match="none"><!-- Replace with label variable="number" as that becomes available --><text term="issue" form="short"/></if></choose><text variable="number"/></group></group></else></choose></else-if><else-if type="legal_case" match="any"><!-- Cases are italicized --><text variable="title" font-style="italic"/></else-if><else-if type="legislation treaty" match="any"><!-- Legislation and treaties not italicized or quoted --><text variable="title" form="short" text-case="title"/></else-if><else-if type="post webpage" match="any"><!-- Webpages are always italicized --><text variable="title" form="short" font-style="italic" text-case="title"/></else-if><else-if variable="container-title" match="any"><!-- Other types are italicized or quoted based on presence of container-title. As in title macro. --><text variable="title" form="short" quotes="true" text-case="title"/></else-if><else><text variable="title" form="short" font-style="italic" text-case="title"/></else></choose></macro><macro name="parenthetical"><!-- (Secondary contributors; Database location; Genre no. 123; Report Series 123, Version, Edition, Volume, Page) --><group prefix="(" suffix=")"><choose><if type="patent"><!-- authority: U.S. ; genre: patent ; number: 123,445 --><group delimiter=" "><text variable="authority" form="short"/><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else><!-- This should be localized --><text value="patent" text-case="capitalize-first"/></else></choose><group delimiter=" "><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></group></group></if><else-if type="post webpage" match="any"><!-- For post webpage, container-title is treated as publisher --><group delimiter="; "><text macro="secondary-contributors"/><text macro="database-location"/><text macro="number"/><text macro="locators-booklike"/></group></else-if><else-if variable="container-title"><group delimiter="; "><text macro="secondary-contributors"/><choose><if type="broadcast graphic map motion_picture song" match="any"><!-- For audiovisual media, number information comes after title, not container-title --><text macro="number"/></if></choose></group></else-if><else><group delimiter="; "><text macro="secondary-contributors"/><text macro="database-location"/><text macro="number"/><text macro="locators-booklike"/></group></else></choose></group></macro><macro name="parenthetical-container"><choose><if variable="container-title" match="any"><group prefix="(" suffix=")"><group delimiter="; "><text macro="database-location"/><choose><if type="broadcast graphic map motion_picture song" match="none"><!-- For audiovisual media, number information comes after title, not container-title --><text macro="number"/></if></choose><text macro="locators-booklike"/></group></group></if></choose></macro><macro name="bracketed"><!-- [Descriptive information] --><!-- If there is a number, genre is already printed in macro="number" --><group prefix="[" suffix="]"><choose><if variable="reviewed-author reviewed-title" type="review review-book" match="any"><!-- Reviewed item --><group delimiter="; "><group delimiter=", "><group delimiter=" "><!-- Assume that genre is entered as 'Review of the book' or similar --><choose><if variable="number" match="none"><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><else><!-- Replace with term="review" as that becomes available --><text value="Review of"/></else></choose></if><else><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/></if><else><!-- Replace with term="review" as that becomes available --><text value="Review of"/></else></choose></else></choose><text macro="reviewed-title"/></group><names variable="reviewed-author"><label form="verb-short" suffix=" "/><name and="symbol" initialize-with=". " delimiter=", "/></names></group><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></if><else-if type="thesis"><!-- Thesis type and institution --><group delimiter="; "><choose><if variable="number" match="none"><group delimiter=", "><text variable="genre" text-case="capitalize-first"/><choose><if variable="archive DOI URL" match="any"><!-- Include the university in brackets if thesis is published --><text variable="publisher"/></if></choose></group></if></choose><text variable="medium" text-case="capitalize-first"/></group></else-if><else-if variable="interviewer" type="interview" match="any"><!-- Interview information --><choose><if variable="title"><text macro="format"/></if><else-if variable="genre"><group delimiter="; "><group delimiter=" "><text variable="genre" text-case="capitalize-first"/><group delimiter=" "><text term="author" form="verb"/><names variable="interviewer"><name and="symbol" initialize-with=". " delimiter=", "/></names></group></group></group></else-if><else-if variable="interviewer"><group delimiter="; "><names variable="interviewer"><label form="verb" suffix=" " text-case="capitalize-first"/><name and="symbol" initialize-with=". " delimiter=", "/></names><text variable="medium" text-case="capitalize-first"/></group></else-if><else><text macro="format"/></else></choose></else-if><else-if type="personal_communication"><!-- Letter information --><choose><if variable="recipient"><group delimiter="; "><group delimiter=" "><choose><if variable="number" match="none"><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose></if><else><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/></if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose></else></choose><names variable="recipient" delimiter=", "><label form="verb" suffix=" "/><name and="symbol" delimiter=", "/></names></group><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></if><else><text macro="format"/></else></choose></else-if><else-if variable="composer" type="song" match="all"><!-- Performer of classical music works --><group delimiter="; "><choose><if variable="number" match="none"><group delimiter=" "><choose><if variable="genre"><text variable="genre" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else-if><else><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="Recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else></choose></group></if><else><group delimiter=" "><choose><if variable="medium"><text variable="medium" text-case="capitalize-first"/><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></if><else><!-- Replace prefix with performer label as that becomes available --><names variable="author" prefix="Recorded by "><name and="symbol" initialize-with=". " delimiter=", "/></names></else></choose></group></else></choose><choose><if variable="genre" match="any"><choose><if variable="number" match="none"><text variable="medium" text-case="capitalize-first"/></if></choose></if></choose></group></else-if><else-if variable="container-title" match="none"><!-- Other description --><text macro="format"/></else-if><else><!-- For conference presentations, chapters in reports, software, place bracketed after the container title --><choose><if type="paper-conference speech" match="any"><choose><if variable="collection-editor editor editorial-director issue page volume" match="any"><text macro="format"/></if></choose></if><else-if type="book"><choose><if variable="version" match="none"><text macro="format"/></if></choose></else-if><else-if type="report" match="none"><text macro="format"/></else-if></choose></else></choose></group></macro><macro name="bracketed-intext"><group prefix="[" suffix="]"><choose><if variable="reviewed-author reviewed-title" type="review review-book" match="any"><!-- This should be localized --><text macro="reviewed-title-intext" prefix="Review of "/></if><else-if variable="interviewer" type="interview" match="any"><names variable="interviewer"><label form="verb" suffix=" " text-case="capitalize-first"/><name and="symbol" initialize-with=". " delimiter=", "/><substitute><text macro="format-intext"/></substitute></names></else-if><else-if type="personal_communication"><!-- Letter information --><choose><if variable="recipient"><group delimiter=" "><choose><if variable="number" match="none"><text variable="genre" text-case="capitalize-first"/></if><else><text term="letter" form="short" text-case="capitalize-first"/></else></choose><names variable="recipient" delimiter=", "><label form="verb" suffix=" "/><name and="symbol" delimiter=", "/></names></group></if><else><text macro="format-intext"/></else></choose></else-if><else><text macro="format-intext"/></else></choose></group></macro><macro name="bracketed-container"><group prefix="[" suffix="]"><choose><if type="paper-conference speech" match="any"><!-- Conference presentations should describe the session [container] in bracketed unless published in a proceedings --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><text macro="format"/></if></choose></if><else-if type="book" variable="version" match="all"><!-- For entries in mobile app reference works, place bracketed after the container-title --><text macro="format"/></else-if><else-if type="report"><!-- For chapters in reports, place bracketed after the container title --><text macro="format"/></else-if></choose></group></macro><macro name="secondary-contributors"><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><text macro="secondary-contributors-periodical"/></if><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><text macro="secondary-contributors-booklike"/></if><else><text macro="secondary-contributors-periodical"/></else></choose></else-if><else><text macro="secondary-contributors-booklike"/></else></choose></macro><macro name="secondary-contributors-periodical"><group delimiter="; "><choose><if variable="title"><names variable="interviewer" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></if></choose><names variable="translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></macro><macro name="secondary-contributors-booklike"><group delimiter="; "><choose><if variable="title"><names variable="interviewer"><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></if></choose><!-- When editortranslator becomes available, add a test: variable="editortranslator" match="none"; then print translator --><choose><if type="post webpage" match="none"><!-- Webpages treat container-title like publisher --><choose><if variable="container-title" match="none"><group delimiter="; "><names variable="container-author"><label form="verb-short" suffix=" " text-case="title"/><name and="symbol" initialize-with=". " delimiter=", "/></names><names variable="editor translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></if></choose></if><else><group delimiter="; "><names variable="container-author"><label form="verb-short" suffix=" " text-case="title"/><name and="symbol" initialize-with=". " delimiter=", "/></names><names variable="editor translator" delimiter="; "><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" prefix=", " text-case="title"/></names></group></else></choose></group></macro><macro name="database-location"><choose><if variable="archive-place" match="none"><!-- With \`archive-place\`: physical archives. Without: online archives. --><!-- Add archive_collection as that becomes available --><text variable="archive_location"/></if></choose></macro><macro name="number"><choose><if variable="number"><group delimiter=", "><group delimiter=" "><text variable="genre" text-case="title"/><choose><if is-numeric="number"><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></if><else><text variable="number"/></else></choose></group><choose><if type="thesis"><choose><!-- Include the university in brackets if thesis is published --><if variable="archive DOI URL" match="any"><text variable="publisher"/></if></choose></if></choose></group></if></choose></macro><macro name="locators-booklike"><choose><if type="article-journal article-magazine article-newspaper broadcast interview patent post post-weblog review review-book speech webpage" match="any"/><else-if type="paper-conference"><choose><if variable="collection-editor editor editorial-director" match="any"><group delimiter=", "><text macro="version"/><text macro="edition"/><text macro="volume-booklike"/></group></if></choose></else-if><else><group delimiter=", "><text macro="version"/><text macro="edition"/><text macro="volume-booklike"/></group></else></choose></macro><macro name="version"><choose><if is-numeric="version"><group delimiter=" "><!-- replace with label variable="version" if that becomes available --><text term="version" text-case="capitalize-first"/><text variable="version"/></group></if><else><text variable="version"/></else></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><label variable="edition" form="short"/></group></if><else><text variable="edition"/></else></choose></macro><macro name="volume-booklike"><group delimiter=", "><!-- Report series [ex. 52] --><choose><if type="report"><group delimiter=" "><text variable="collection-title" text-case="title"/><text variable="collection-number"/></group></if></choose><choose><if variable="volume" match="any"><choose><!-- Non-numeric volumes are already printed as part of the book title --><if is-numeric="volume" match="none"/><else><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><number variable="volume" form="numeric"/></group></else></choose></if><else><group><!-- Replace with label variable="number-of-volumes" if that becomes available --><text term="volume" form="short" text-case="capitalize-first" suffix=" "/><text term="page-range-delimiter" prefix="1"/><number variable="number-of-volumes" form="numeric"/></group></else></choose><group delimiter=" "><label variable="issue" text-case="capitalize-first"/><text variable="issue"/></group><group delimiter=" "><label variable="page" form="short" suffix=" "/><text variable="page"/></group></group></macro><macro name="reviewed-title"><choose><if variable="reviewed-title"><!-- Not possible to distinguish TV series episode from other reviewed works [Ex. 69] --><text variable="reviewed-title" font-style="italic"/></if><else><!-- Assume title is title of reviewed work --><text variable="title" font-style="italic"/></else></choose></macro><macro name="reviewed-title-intext"><choose><if variable="reviewed-title"><!-- Not possible to distinguish TV series episode from other reviewed works [Ex. 69] --><text variable="reviewed-title" form="short" font-style="italic" text-case="title"/></if><else><!-- Assume title is title of reviewed work --><text variable="title" form="short" font-style="italic" text-case="title"/></else></choose></macro><macro name="format"><choose><if variable="genre medium" match="any"><group delimiter="; "><choose><if variable="number" match="none"><text variable="genre" text-case="capitalize-first"/></if></choose><text variable="medium" text-case="capitalize-first"/></group></if><!-- Generic labels for specific types --><!-- These should be localized when possible --><else-if type="dataset"><text value="Data set"/></else-if><else-if type="book" variable="version" match="all"><!-- Replace with type="software" and term="software" as that becomes available --><text value="Computer software"/></else-if><else-if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><text term="letter" text-case="capitalize-first"/></if><else-if type="interview"><text term="interview" text-case="capitalize-first"/></else-if></choose></else-if><else-if type="map"><text value="Map"/></else-if></choose></macro><macro name="format-intext"><choose><if variable="genre" match="any"><text variable="genre" text-case="capitalize-first"/></if><else-if variable="medium"><text variable="medium" text-case="capitalize-first"/></else-if><!-- Generic labels for specific types --><!-- These should be localized when possible --><else-if type="dataset"><text value="Data set"/></else-if><else-if type="book" variable="version" match="all"><!-- Replace with type="software" and term="software" as that becomes available --><text value="Computer software"/></else-if><else-if type="interview personal_communication" match="any"><choose><if variable="archive container-title DOI publisher URL" match="none"><text term="letter" text-case="capitalize-first"/></if><else-if type="interview"><text term="interview" text-case="capitalize-first"/></else-if></choose></else-if><else-if type="map"><text value="Map"/></else-if></choose></macro><!-- APA 'source' element contains four parts:container, event, publisher, access --><macro name="container"><choose><if type="article-journal article-magazine article-newspaper post-weblog review review-book" match="any"><!-- Periodical items --><text macro="container-periodical"/></if><else-if type="paper-conference"><!-- Determine if paper-conference is a periodical or booklike --><choose><if variable="editor editorial-director collection-editor container-author" match="any"><text macro="container-booklike"/></if><else><text macro="container-periodical"/></else></choose></else-if><else-if type="post webpage" match="none"><!-- post and webpage treat container-title like publisher --><text macro="container-booklike"/></else-if></choose></macro><macro name="container-periodical"><group delimiter=". "><group delimiter=", "><text variable="container-title" font-style="italic" text-case="title"/><choose><if variable="volume"><group><text variable="volume" font-style="italic"/><text variable="issue" prefix="(" suffix=")"/></group></if><else><text variable="issue" font-style="italic"/></else></choose><choose><if variable="page"><text variable="page"/></if><else><!-- Ex. 6: Journal article with article number or eLocator --><!-- This should be localized --><text variable="number" prefix="Article "/></else></choose></group><choose><if variable="issued"><choose><if variable="issue page volume" match="none"><text variable="status" text-case="capitalize-first"/></if></choose></if></choose></group></macro><macro name="container-booklike"><choose><if variable="container-title" match="any"><group delimiter=" "><text term="in" text-case="capitalize-first"/><group delimiter=", "><names variable="editor translator" delimiter=", &amp; "><!-- Change to editortranslator and move editor to substitute as that becomes available --><name and="symbol" initialize-with=". " delimiter=", "/><label form="short" text-case="title" prefix=" (" suffix=")"/><substitute><names variable="editorial-director"/><names variable="collection-editor"/><names variable="container-author"/></substitute></names><group delimiter=": " font-style="italic"><text variable="container-title"/><!-- Replace with volume-title as that becomes available --><choose><if is-numeric="volume" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose></group></group><text macro="parenthetical-container"/><text macro="bracketed-container"/></group></if></choose></macro><macro name="publisher"><group delimiter="; "><choose><if type="thesis"><choose><if variable="archive DOI URL" match="none"><text variable="publisher"/></if></choose></if><else-if type="post webpage" match="any"><!-- For websites, treat container title like publisher --><group delimiter="; "><text variable="container-title" text-case="title"/><text variable="publisher"/></group></else-if><else-if type="paper-conference"><!-- For paper-conference, don't print publisher if in a journal-like proceedings --><choose><if variable="collection-editor editor editorial-director" match="any"><text variable="publisher"/></if></choose></else-if><else-if type="article-journal article-magazine article-newspaper post-weblog" match="none"><text variable="publisher"/></else-if></choose><group delimiter=", "><choose><if variable="archive-place"><!-- With \`archive-place\`: physical archives. Without: online archives. --><!-- For physical archives, print the location before the archive name.For electronic archives, these are printed in macro="description". --><!-- Split "archive_location" into "archive_collection" and "archive_location" as that becomes available --><!-- Must test for archive_collection:With collection: archive_collection (archive_location), archive, archive-placeNo collection: archive (archive_location), archive-place--><text variable="archive_location"/></if></choose><text variable="archive"/><text variable="archive-place"/></group></group></macro><macro name="access"><choose><if variable="DOI" match="any"><text variable="DOI" prefix="https://doi.org/"/></if><else-if variable="URL"><group delimiter=" "><choose><if variable="issued status" match="none"><group delimiter=" "><text term="retrieved" text-case="capitalize-first"/><date variable="accessed" form="text" suffix=","/><text term="from"/></group></if></choose><text variable="URL"/></group></else-if></choose></macro><macro name="event"><choose><if variable="event"><!-- To prevent Zotero from printing event-place due to its double-mapping of all 'place' toboth publisher-place and event-place. Remove this 'choose' when that is changed. --><choose><if variable="collection-editor editor editorial-director issue page volume" match="none"><!-- Don't print event info if published in a proceedings --><group delimiter=", "><text variable="event"/><text variable="event-place"/></group></if></choose></if></choose></macro><!-- After 'source', APA also prints publication history (original publication, reprint info, retraction info) --><macro name="publication-history"><choose><if type="patent" match="none"><group prefix="(" suffix=")"><choose><if variable="references"><!-- This provides the option for more elaborate description of publication history, such as full "reprinted" references(examples 11, 43, 44) or retracted references --><text variable="references"/></if><else><group delimiter=" "><text value="Original work published"/><choose><if is-uncertain-date="original-date"><text term="circa" form="short"/></if></choose><date variable="original-date"><date-part name="year"/></date></group></else></choose></group></if><else><text variable="references" prefix="(" suffix=")"/></else></choose></macro><!-- Legal citations have their own rules --><macro name="legal-cites"><choose><if type="legal_case"><group delimiter=". "><group delimiter=", "><text variable="title"/><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/></group><text variable="references"/></group><text macro="access"/></group></if><else-if type="bill"><!-- Currently designed to handle bills, resolutions, hearings, rederal reports. --><group delimiter=". "><group delimiter=", "><choose><if variable="number container-title" match="none"><!-- If no number or container-title, then assume it is a hearing --><text variable="title" font-style="italic"/></if><else><text variable="title"/></else></choose><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/><choose><if variable="number container-title" match="none"><!-- If no number or container-title, then assume it is a hearing --><names variable="author" prefix="(testimony of " suffix=")"><name and="symbol" delimiter=", "/></names></if><else><text variable="status" prefix="(" suffix=")"/></else></choose></group><text variable="references"/></group><text macro="access"/></group></else-if><else-if type="legislation"><!-- Currently designed to handle statutes, codified regulations, executive orders.For uncodified regulations, assume future code section is in status. --><group delimiter=". "><group delimiter=", "><text variable="title"/><group delimiter=" "><text macro="container-legal"/><text macro="date-legal"/><text variable="status" prefix="(" suffix=")"/></group><text variable="references"/></group><text macro="access"/></group></else-if><else-if type="treaty"><!-- APA generally defers to Bluebook for legal citations, but diverges withoutexplanation for treaty items. The Bluebook format that was used in APA 6thed. is used here. --><group delimiter=", "><text variable="title" text-case="title"/><names variable="author"><name initialize-with="." form="short" delimiter="-"/></names><text macro="date-legal"/><text macro="container-legal"/><text macro="access"/></group></else-if></choose></macro><macro name="date-legal"><choose><if type="legal_case"><group prefix="(" suffix=")" delimiter=" "><text variable="authority"/><choose><if variable="container-title" match="any"><!-- Print only year for cases published in reporters--><date variable="issued" form="numeric" date-parts="year"/></if><else><date variable="issued" form="text"/></else></choose></group></if><else-if type="bill legislation" match="any"><group prefix="(" suffix=")" delimiter=" "><group delimiter=" "><date variable="original-date"><date-part name="year"/></date><text term="and" form="symbol"/></group><date variable="issued"><date-part name="year"/></date></group></else-if><else-if type="treaty"><date variable="issued" form="text"/></else-if></choose></macro><macro name="container-legal"><!-- Expect legal item container-titles to be stored in short form --><choose><if type="legal_case"><group delimiter=" "><choose><if variable="container-title"><group delimiter=" "><text variable="volume"/><text variable="container-title"/><group delimiter=" "><!-- Change to label variable="section" as that becomes available --><text term="section" form="symbol"/><text variable="section"/></group><choose><if variable="page page-first" match="any"><text variable="page-first"/></if><else><text value="___"/></else></choose></group></if><else><group delimiter=" "><choose><if is-numeric="number"><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/></if></choose><text variable="number"/></group></else></choose></group></if><else-if type="bill"><group delimiter=", "><group delimiter=" "><text variable="genre"/><group delimiter=" "><choose><if variable="chapter-number container-title" match="none"><!-- Replace with label variable="number" as that becomes available --><text term="issue" form="short"/></if></choose><text variable="number"/></group></group><text variable="authority"/><text variable="chapter-number"/><group delimiter=" "><text variable="volume"/><text variable="container-title"/><text variable="page-first"/></group></group></else-if><else-if type="legislation"><choose><if variable="number"><!--There's a public law number--><group delimiter=", "><text variable="number" prefix="Pub. L. No. "/><group delimiter=" "><text variable="volume"/><text variable="container-title"/><text variable="page-first"/></group></group></if><else><group delimiter=" "><text variable="volume"/><text variable="container-title"/><choose><if variable="section"><group delimiter=" "><!-- Change to label variable="section" as that becomes available --><text term="section" form="symbol"/><text variable="section"/></group></if><else><text variable="page-first"/></else></choose></group></else></choose></else-if><else-if type="treaty"><group delimiter=" "><number variable="volume"/><text variable="container-title"/><choose><if variable="page page-first" match="any"><text variable="page-first"/></if><else><group delimiter=" "><!-- Replace with label variable="number" if that becomes available --><text term="issue" form="short" text-case="capitalize-first"/><text variable="number"/></group></else></choose></group></else-if></choose></macro><macro name="citation-locator"><group delimiter=" "><choose><if locator="chapter"><label variable="locator" text-case="capitalize-first"/></if><else><label variable="locator" form="short"/></else></choose><text variable="locator"/></group></macro><citation et-al-min="3" et-al-use-first="1" disambiguate-add-year-suffix="true" disambiguate-add-names="true" disambiguate-add-givenname="true" collapse="year" givenname-disambiguation-rule="primary-name-with-initials"><sort><key macro="author-bib" names-min="3" names-use-first="1"/><key macro="date-sort-group"/><key macro="date-sort-date" sort="ascending"/><key variable="status"/></sort><layout prefix="(" suffix=")" delimiter="; "><group delimiter=", "><text macro="author-intext"/><text macro="date-intext"/><text macro="citation-locator"/></group></layout></citation><bibliography hanging-indent="true" et-al-min="21" et-al-use-first="19" et-al-use-last="true" entry-spacing="0" line-spacing="2"><sort><key macro="author-bib"/><key macro="date-sort-group"/><key macro="date-sort-date" sort="ascending"/><key variable="status"/><key macro="title"/></sort><layout><choose><if type="bill legal_case legislation treaty" match="any"><!-- Legal items have different orders and delimiters --><choose><if variable="DOI URL" match="any"><text macro="legal-cites"/></if><else><text macro="legal-cites" suffix="."/></else></choose></if><else><group delimiter=" "><group delimiter=". " suffix="."><text macro="author-bib"/><text macro="date-bib"/><text macro="title-and-descriptions"/><text macro="container"/><text macro="event"/><text macro="publisher"/></group><text macro="access"/><text macro="publication-history"/></group></else></choose></layout></bibliography>
</style>
`,
            vancouver: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="sort-only" initialize-with-hyphen="false" page-range-format="minimal"><info><title>Vancouver</title><id>http://www.zotero.org/styles/vancouver</id><link href="http://www.zotero.org/styles/vancouver" rel="self"/><link href="http://www.nlm.nih.gov/bsd/uniform_requirements.html" rel="documentation"/><author><name>Michael Berkowitz</name><email>mberkowi@gmu.edu</email></author><contributor><name>Sean Takats</name><email>stakats@gmu.edu</email></contributor><contributor><name>Sebastian Karcher</name></contributor><category citation-format="numeric"/><category field="medicine"/><summary>Vancouver style as outlined by International Committee of Medical Journal Editors Uniform Requirements for Manuscripts Submitted to Biomedical Journals: Sample References</summary><updated>2022-04-14T13:48:43+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en"><date form="text" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><terms><term name="collection-editor" form="long"><single>editor</single><multiple>editors</multiple></term><term name="presented at">presented at</term><term name="available at">available from</term><term name="section" form="short">sect.</term></terms></locale><locale xml:lang="fr"><date form="text" delimiter=" "><date-part name="day"/><date-part name="month" form="short" strip-periods="true"/><date-part name="year"/></date></locale><macro name="author"><names variable="author"><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/><substitute><names variable="editor"/></substitute></names></macro><macro name="editor"><names variable="editor" suffix="."><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/></names></macro><macro name="chapter-marker"><choose><if type="chapter paper-conference entry-dictionary entry-encyclopedia" match="any"><text term="in" text-case="capitalize-first"/></if></choose></macro><macro name="publisher"><choose><!--discard publisher info for articles--><if type="article-journal article-magazine article-newspaper" match="none"><group delimiter=": " suffix=";"><choose><if type="thesis"><text variable="publisher-place" prefix="[" suffix="]"/></if><else-if type="speech"/><else><text variable="publisher-place"/></else></choose><text variable="publisher"/></group></if></choose></macro><macro name="access"><choose><if variable="URL"><group delimiter=": "><text term="available at" text-case="capitalize-first"/><text variable="URL"/></group></if></choose></macro><macro name="accessed-date"><choose><if variable="URL"><group prefix="[" suffix="]" delimiter=" "><text term="cited" text-case="lowercase"/><date variable="accessed" form="text"/></group></if></choose></macro><macro name="container-title"><choose><if type="article-journal article-magazine chapter paper-conference article-newspaper review review-book entry-dictionary entry-encyclopedia" match="any"><group suffix="." delimiter=" "><choose><if type="article-journal review review-book" match="any"><text variable="container-title" form="short" strip-periods="true"/></if><else><text variable="container-title" strip-periods="true"/></else></choose><choose><if variable="URL"><text term="internet" prefix="[" suffix="]" text-case="capitalize-first"/></if></choose></group><text macro="edition" prefix=" "/></if><!--add event-name and event-place once they become available--><else-if type="bill legislation" match="any"><group delimiter=", "><group delimiter=". "><text variable="container-title"/><group delimiter=" "><text term="section" form="short" text-case="capitalize-first"/><text variable="section"/></group></group><text variable="number"/></group></else-if><else-if type="speech"><group delimiter=": " suffix=";"><group delimiter=" "><text variable="genre" text-case="capitalize-first"/><text term="presented at"/></group><text variable="event"/></group></else-if><else><group delimiter=", " suffix="."><choose><if variable="collection-title" match="none"><group delimiter=" "><label variable="volume" form="short" text-case="capitalize-first"/><text variable="volume"/></group></if></choose><text variable="container-title"/></group></else></choose></macro><macro name="title"><text variable="title"/><choose><if type="article-journal article-magazine chapter paper-conference article-newspaper review review-book entry-dictionary entry-encyclopedia" match="none"><choose><if variable="URL"><text term="internet" prefix=" [" suffix="]" text-case="capitalize-first"/></if></choose><text macro="edition" prefix=". "/></if></choose><choose><if type="thesis"><text variable="genre" prefix=" [" suffix="]"/></if></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><text term="edition" form="short"/></group></if><else><text variable="edition" suffix="."/></else></choose></macro><macro name="date"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="any"><group suffix=";" delimiter=" "><date variable="issued" form="text"/><text macro="accessed-date"/></group></if><else-if type="bill legislation" match="any"><group delimiter=", "><date variable="issued" delimiter=" "><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><date variable="issued"><date-part name="year"/></date></group></else-if><else-if type="report"><date variable="issued" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/></date><text macro="accessed-date" prefix=" "/></else-if><else-if type="patent"><group suffix="."><group delimiter=", "><text variable="number"/><date variable="issued"><date-part name="year"/></date></group><text macro="accessed-date" prefix=" "/></group></else-if><else-if type="speech"><group delimiter="; "><group delimiter=" "><date variable="issued" delimiter=" "><date-part name="year"/><date-part name="month" form="short" strip-periods="true"/><date-part name="day"/></date><text macro="accessed-date"/></group><text variable="event-place"/></group></else-if><else><group suffix="."><date variable="issued"><date-part name="year"/></date><text macro="accessed-date" prefix=" "/></group></else></choose></macro><macro name="pages"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="any"><text variable="page" prefix=":"/></if><else-if type="book" match="any"><text variable="number-of-pages" prefix=" "/><choose><if is-numeric="number-of-pages"><label variable="number-of-pages" form="short" prefix=" " plural="never"/></if></choose></else-if><else><group prefix=" " delimiter=" "><label variable="page" form="short" plural="never"/><text variable="page"/></group></else></choose></macro><macro name="journal-location"><choose><if type="article-journal article-magazine review review-book" match="any"><text variable="volume"/><text variable="issue" prefix="(" suffix=")"/></if></choose></macro><macro name="collection-details"><choose><if type="article-journal article-magazine article-newspaper review review-book" match="none"><choose><if variable="collection-title"><group delimiter=" " prefix="(" suffix=")"><names variable="collection-editor" suffix="."><name sort-separator=" " initialize-with="" name-as-sort-order="all" delimiter=", " delimiter-precedes-last="always"/><label form="long" prefix=", "/></names><group delimiter="; "><text variable="collection-title"/><group delimiter=" "><label variable="volume" form="short"/><text variable="volume"/></group></group></group></if></choose></if></choose></macro><macro name="report-details"><choose><if type="report"><text variable="number" prefix="Report No.: "/></if></choose></macro><citation collapse="citation-number"><sort><key variable="citation-number"/></sort><layout prefix="(" suffix=")" delimiter=","><text variable="citation-number"/></layout></citation><bibliography et-al-min="7" et-al-use-first="6" second-field-align="flush"><layout><text variable="citation-number" suffix=". "/><group delimiter=". " suffix=". "><text macro="author"/><text macro="title"/></group><group delimiter=" " suffix=". "><group delimiter=": "><text macro="chapter-marker"/><group delimiter=" "><text macro="editor"/><text macro="container-title"/></group></group><text macro="publisher"/><group><text macro="date"/><text macro="journal-location"/><text macro="pages"/></group></group><text macro="collection-details" suffix=". "/><text macro="report-details" suffix=". "/><text macro="access"/></layout></bibliography>
</style>
`,
            harvard1: `<?xml version="1.0" encoding="utf-8"?>
<style xmlns="http://purl.org/net/xbiblio/csl" class="in-text" version="1.0" demote-non-dropping-particle="sort-only" default-locale="en-GB"><info><title>Cite Them Right 11th edition - Harvard</title><id>http://www.zotero.org/styles/harvard-cite-them-right</id><link href="http://www.zotero.org/styles/harvard-cite-them-right" rel="self"/><link href="http://www.zotero.org/styles/harvard-cite-them-right-10th-edition" rel="template"/><link href="http://www.citethemrightonline.com/" rel="documentation"/><author><name>Patrick O'Brien</name></author><category citation-format="author-date"/><category field="generic-base"/><summary>Harvard according to Cite Them Right, 11th edition.</summary><updated>2021-09-01T10:12:20+00:00</updated><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights></info><locale xml:lang="en-GB"><terms><term name="editor" form="short"><single>ed.</single><multiple>eds</multiple></term><term name="editortranslator" form="verb">edited and translated by</term><term name="edition" form="short">edn.</term></terms></locale><macro name="editor"><choose><if type="chapter paper-conference" match="any"><names variable="container-author" delimiter=", " suffix=", "><name and="text" initialize-with=". " delimiter=", " sort-separator=", " name-as-sort-order="all"/></names><choose><if variable="container-author" match="none"><names variable="editor translator" delimiter=", "><name and="text" initialize-with="." name-as-sort-order="all"/><label form="short" prefix=" (" suffix=")"/></names></if></choose></if></choose></macro><macro name="secondary-contributors"><choose><if type="chapter paper-conference" match="none"><names variable="editor translator" delimiter=". "><label form="verb" text-case="capitalize-first" suffix=" "/><name and="text" initialize-with="."/></names></if><else-if variable="container-author" match="any"><names variable="editor translator" delimiter=". "><label form="verb" text-case="capitalize-first" suffix=" "/><name and="text" initialize-with=". " delimiter=", "/></names></else-if></choose></macro><macro name="author"><names variable="author"><name and="text" delimiter-precedes-last="never" initialize-with="." name-as-sort-order="all"/><label form="short" prefix=" (" suffix=")"/><et-al font-style="italic"/><substitute><names variable="editor"/><names variable="translator"/><choose><if type="article-newspaper article-magazine" match="any"><text variable="container-title" text-case="title" font-style="italic"/></if><else><text macro="title"/></else></choose></substitute></names></macro><macro name="author-short"><names variable="author"><name form="short" and="text" delimiter=", " delimiter-precedes-last="never" initialize-with=". "/><et-al font-style="italic"/><substitute><names variable="editor"/><names variable="translator"/><choose><if type="article-newspaper article-magazine" match="any"><text variable="container-title" text-case="title" font-style="italic"/></if><else><text macro="title"/></else></choose></substitute></names></macro><macro name="access"><choose><if variable="DOI"><text variable="DOI" prefix="doi:"/></if><else-if variable="URL"><text term="available at" suffix=": " text-case="capitalize-first"/><text variable="URL"/><group prefix=" (" delimiter=": " suffix=")"><text term="accessed" text-case="capitalize-first"/><date form="text" variable="accessed"><date-part name="day"/><date-part name="month"/><date-part name="year"/></date></group></else-if></choose></macro><macro name="number-volumes"><choose><if variable="volume" match="none"><group delimiter=" " prefix="(" suffix=")"><text variable="number-of-volumes"/><label variable="volume" form="short" strip-periods="true"/></group></if></choose></macro><macro name="title"><choose><if type="bill book legal_case legislation motion_picture report song thesis webpage graphic" match="any"><group delimiter=". "><group delimiter=" "><group delimiter=" "><text variable="title" font-style="italic"/><text variable="medium" prefix="[" suffix="]"/></group><text macro="number-volumes"/></group><text macro="edition"/></group></if><else><text variable="title" form="long" quotes="true"/></else></choose></macro><macro name="publisher"><choose><if type="thesis"><group delimiter=". "><text variable="genre"/><text variable="publisher"/></group></if><else-if type="report"><group delimiter=". "><group delimiter=" "><text variable="genre"/><text variable="number"/></group><group delimiter=": "><text variable="publisher-place"/><text variable="publisher"/></group></group></else-if><else-if type="article-journal article-newspaper article-magazine" match="none"><group delimiter=" "><group delimiter=", "><choose><if type="speech" variable="event" match="any"><text variable="event" font-style="italic"/></if></choose><group delimiter=": "><text variable="publisher-place"/><text variable="publisher"/></group></group><group prefix="(" suffix=")" delimiter=", "><text variable="collection-title"/><text variable="collection-number"/></group></group></else-if></choose></macro><macro name="year-date"><choose><if variable="issued"><date variable="issued"><date-part name="year"/></date><text variable="year-suffix"/></if><else><text term="no date"/><text variable="year-suffix" prefix=" "/></else></choose></macro><macro name="locator"><choose><if type="article-journal"><text variable="volume"/><text variable="issue" prefix="(" suffix=")"/></if></choose></macro><macro name="published-date"><choose><if type="article-newspaper article-magazine post-weblog speech" match="any"><date variable="issued"><date-part name="day" suffix=" "/><date-part name="month" form="long"/></date></if></choose></macro><macro name="pages"><choose><if type="chapter paper-conference article-journal article article-magazine article-newspaper book review review-book report" match="any"><group delimiter=" "><label variable="page" form="short"/><text variable="page"/></group></if></choose></macro><macro name="container-title"><choose><if variable="container-title"><group delimiter=". "><group delimiter=" "><text variable="container-title" font-style="italic"/><choose><if type="article article-journal" match="any"><choose><if match="none" variable="page volume"><text value="Preprint" prefix="[" suffix="]"/></if></choose></if></choose></group><text macro="edition"/></group></if></choose></macro><macro name="edition"><choose><if is-numeric="edition"><group delimiter=" "><number variable="edition" form="ordinal"/><text term="edition" form="short" strip-periods="true"/></group></if><else><text variable="edition"/></else></choose></macro><macro name="container-prefix"><choose><if type="chapter paper-conference" match="any"><text term="in"/></if></choose></macro><citation et-al-min="4" et-al-use-first="1" disambiguate-add-year-suffix="true" disambiguate-add-names="true" disambiguate-add-givenname="true" collapse="year"><sort><key macro="year-date"/></sort><layout prefix="(" suffix=")" delimiter="; "><group delimiter=", "><group delimiter=", "><text macro="author-short"/><text macro="year-date"/></group><group><label variable="locator" form="short" suffix=" "/><text variable="locator"/></group></group></layout></citation><bibliography and="text" et-al-min="4" et-al-use-first="1"><sort><key macro="author"/><key macro="year-date"/><key variable="title"/></sort><layout suffix="."><group delimiter=". "><group delimiter=" "><text macro="author"/><text macro="year-date" prefix="(" suffix=")"/><group delimiter=", "><text macro="title"/><group delimiter=" "><text macro="container-prefix"/><text macro="editor"/><text macro="container-title"/></group></group></group><text macro="secondary-contributors"/><text macro="publisher"/></group><group delimiter=", " prefix=", "><text macro="locator"/><text macro="published-date"/><text macro="pages"/></group><text macro="access" prefix=". "/></layout></bibliography>
</style>
`
        };
    });
    var T11 = g10((p)=>{
        "use strict";
        Object.defineProperty(p, "__esModule", {
            value: !0
        });
        p.templates = p.default = void 0;
        var P = y9("@citation-js/core"), U = G(S7());
        function G(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var h = new P.util.Register(U.default);
        p.templates = h;
        var V = (e)=>h.has(e) ? h.get(e) : h.get("apa"), J = V;
        p.default = J;
    });
    var M8 = g10((pe, W)=>{
        W.exports = {
            "en-US": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="en-US"><info><translator><name>Andrew Dunning</name></translator><translator><name>Sebastian Karcher</name></translator><translator><name>Rintze M. Zelle</name></translator><translator><name>Denis Meier</name></translator><translator><name>Brenton M. Wiernik</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2015-10-10T23:31:02+00:00</updated></info><style-options punctuation-in-quote="true"/><date form="text"><date-part name="month" suffix=" "/><date-part name="day" suffix=", "/><date-part name="year"/></date><date form="numeric"><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">personal communication</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">accessed</term><term name="and">and</term><term name="and others">and others</term><term name="anonymous">anonymous</term><term name="anonymous" form="short">anon.</term><term name="at">at</term><term name="available at">available at</term><term name="by">by</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">cited</term><term name="edition"><single>edition</single><multiple>editions</multiple></term><term name="edition" form="short">ed.</term><term name="et-al">et al.</term><term name="forthcoming">forthcoming</term><term name="from">from</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">in press</term><term name="internet">internet</term><term name="interview">interview</term><term name="letter">letter</term><term name="no date">no date</term><term name="no date" form="short">n.d.</term><term name="online">online</term><term name="presented at">presented at the</term><term name="reference"><single>reference</single><multiple>references</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">retrieved</term><term name="scale">scale</term><term name="version">version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">personal communication</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">AD</term><term name="bc">BC</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u201C</term><term name="close-quote">\u201D</term><term name="open-inner-quote">\u2018</term><term name="close-inner-quote">\u2019</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">th</term><term name="ordinal-01">st</term><term name="ordinal-02">nd</term><term name="ordinal-03">rd</term><term name="ordinal-11">th</term><term name="ordinal-12">th</term><term name="ordinal-13">th</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">first</term><term name="long-ordinal-02">second</term><term name="long-ordinal-03">third</term><term name="long-ordinal-04">fourth</term><term name="long-ordinal-05">fifth</term><term name="long-ordinal-06">sixth</term><term name="long-ordinal-07">seventh</term><term name="long-ordinal-08">eighth</term><term name="long-ordinal-09">ninth</term><term name="long-ordinal-10">tenth</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>book</single><multiple>books</multiple></term><term name="chapter"><single>chapter</single><multiple>chapters</multiple></term><term name="column"><single>column</single><multiple>columns</multiple></term><term name="figure"><single>figure</single><multiple>figures</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue"><single>number</single><multiple>numbers</multiple></term><term name="line"><single>line</single><multiple>lines</multiple></term><term name="note"><single>note</single><multiple>notes</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>page</single><multiple>pages</multiple></term><term name="number-of-pages"><single>page</single><multiple>pages</multiple></term><term name="paragraph"><single>paragraph</single><multiple>paragraphs</multiple></term><term name="part"><single>part</single><multiple>parts</multiple></term><term name="section"><single>section</single><multiple>sections</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>verse</single><multiple>verses</multiple></term><term name="volume"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix" form="short">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator" form="short">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation" form="short">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation" form="short">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule" form="short">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene" form="short">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table" form="short">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp" form="short"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator" form="short">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short"><single>bk.</single><multiple>bks.</multiple></term><term name="chapter" form="short"><single>chap.</single><multiple>chaps.</multiple></term><term name="column" form="short"><single>col.</single><multiple>cols.</multiple></term><term name="figure" form="short"><single>fig.</single><multiple>figs.</multiple></term><term name="folio" form="short"><single>fol.</single><multiple>fols.</multiple></term><term name="issue" form="short"><single>no.</single><multiple>nos.</multiple></term><term name="line" form="short"><single>l.</single><multiple>ll.</multiple></term><term name="note" form="short"><single>n.</single><multiple>nn.</multiple></term><term name="opus" form="short"><single>op.</single><multiple>opp.</multiple></term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short"><single>para.</single><multiple>paras.</multiple></term><term name="part" form="short"><single>pt.</single><multiple>pts.</multiple></term><term name="section" form="short"><single>sec.</single><multiple>secs.</multiple></term><term name="sub-verbo" form="short"><single>s.v.</single><multiple>s.vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>director</single><multiple>directors</multiple></term><term name="editor"><single>editor</single><multiple>editors</multiple></term><term name="editorial-director"><single>editor</single><multiple>editors</multiple></term><term name="illustrator"><single>illustrator</single><multiple>illustrators</multiple></term><term name="translator"><single>translator</single><multiple>translators</multiple></term><term name="editortranslator"><single>editor &amp; translator</single><multiple>editors &amp; translators</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>dir.</single><multiple>dirs.</multiple></term><term name="editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="editorial-director" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ills.</multiple></term><term name="translator" form="short"><single>tran.</single><multiple>trans.</multiple></term><term name="editortranslator" form="short"><single>ed. &amp; tran.</single><multiple>eds. &amp; trans.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">by</term><term name="director" form="verb">directed by</term><term name="editor" form="verb">edited by</term><term name="editorial-director" form="verb">edited by</term><term name="illustrator" form="verb">illustrated by</term><term name="interviewer" form="verb">interview by</term><term name="recipient" form="verb">to</term><term name="reviewed-author" form="verb">by</term><term name="translator" form="verb">translated by</term><term name="editortranslator" form="verb">edited &amp; translated by</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">dir. by</term><term name="editor" form="verb-short">ed. by</term><term name="editorial-director" form="verb-short">ed. by</term><term name="illustrator" form="verb-short">illus. by</term><term name="translator" form="verb-short">trans. by</term><term name="editortranslator" form="verb-short">ed. &amp; trans. by</term>
<!-- LONG MONTH FORMS --><term name="month-01">January</term><term name="month-02">February</term><term name="month-03">March</term><term name="month-04">April</term><term name="month-05">May</term><term name="month-06">June</term><term name="month-07">July</term><term name="month-08">August</term><term name="month-09">September</term><term name="month-10">October</term><term name="month-11">November</term><term name="month-12">December</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">Jan.</term><term name="month-02" form="short">Feb.</term><term name="month-03" form="short">Mar.</term><term name="month-04" form="short">Apr.</term><term name="month-05" form="short">May</term><term name="month-06" form="short">Jun.</term><term name="month-07" form="short">Jul.</term><term name="month-08" form="short">Aug.</term><term name="month-09" form="short">Sep.</term><term name="month-10" form="short">Oct.</term><term name="month-11" form="short">Nov.</term><term name="month-12" form="short">Dec.</term>
<!-- SEASONS --><term name="season-01">Spring</term><term name="season-02">Summer</term><term name="season-03">Autumn</term><term name="season-04">Winter</term></terms>
</locale>
`,
            "nl-NL": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="nl-NL"><info><translator><name>Rintze M. Zelle</name><uri>http://twitter.com/rintzezelle</uri></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2017-04-01T12:00:00+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" suffix="-" range-delimiter="/"/><date-part name="month" form="numeric" suffix="-" range-delimiter="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">persoonlijke communicatie</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">geraadpleegd</term><term name="and">en</term><term name="and others">en anderen</term><term name="anonymous">anoniem</term><term name="anonymous" form="short">anon.</term><term name="at">bij</term><term name="available at">beschikbaar op</term><term name="by">door</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">geciteerd</term><term name="edition"><single>druk</single><multiple>drukken</multiple></term><term name="edition" form="short">dr.</term><term name="et-al">e.a.</term><term name="forthcoming">in voorbereiding</term><term name="from">van</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">in druk</term><term name="internet">internet</term><term name="interview">interview</term><term name="letter">brief</term><term name="no date">zonder datum</term><term name="no date" form="short">z.d.</term><term name="online">online</term><term name="presented at">gepresenteerd bij</term><term name="reference"><single>referentie</single><multiple>referenties</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">geraadpleegd</term><term name="scale">schaal</term><term name="version">versie</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">persoonlijke communicatie</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">AD</term><term name="bc">BC</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u2018</term><term name="close-quote">\u2019</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">ste</term><term name="ordinal-00" match="whole-number">de</term><term name="ordinal-02" match="last-two-digits">de</term><term name="ordinal-03" match="last-two-digits">de</term><term name="ordinal-04" match="last-two-digits">de</term><term name="ordinal-05" match="last-two-digits">de</term><term name="ordinal-06" match="last-two-digits">de</term><term name="ordinal-07" match="last-two-digits">de</term><term name="ordinal-09" match="last-two-digits">de</term><term name="ordinal-10">de</term><term name="ordinal-11">de</term><term name="ordinal-12">de</term><term name="ordinal-13">de</term><term name="ordinal-14">de</term><term name="ordinal-15">de</term><term name="ordinal-16">de</term><term name="ordinal-17">de</term><term name="ordinal-18">de</term><term name="ordinal-19">de</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">eerste</term><term name="long-ordinal-02">tweede</term><term name="long-ordinal-03">derde</term><term name="long-ordinal-04">vierde</term><term name="long-ordinal-05">vijfde</term><term name="long-ordinal-06">zesde</term><term name="long-ordinal-07">zevende</term><term name="long-ordinal-08">achtste</term><term name="long-ordinal-09">negende</term><term name="long-ordinal-10">tiende</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>boek</single><multiple>boeken</multiple></term><term name="chapter"><single>hoofdstuk</single><multiple>hoofdstukken</multiple></term><term name="column"><single>column</single><multiple>columns</multiple></term><term name="figure"><single>figuur</single><multiple>figuren</multiple></term><term name="folio"><single>folio</single><multiple>folio's</multiple></term><term name="issue"><single>nummer</single><multiple>nummers</multiple></term><term name="line"><single>regel</single><multiple>regels</multiple></term><term name="note"><single>aantekening</single><multiple>aantekeningen</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>pagina</single><multiple>pagina's</multiple></term><term name="number-of-pages"><single>pagina</single><multiple>pagina's</multiple></term><term name="paragraph"><single>paragraaf</single><multiple>paragrafen</multiple></term><term name="part"><single>deel</single><multiple>delen</multiple></term><term name="section"><single>sectie</single><multiple>secties</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>vers</single><multiple>versen</multiple></term><term name="volume"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">bk.</term><term name="chapter" form="short">hfdst.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short">f.</term><term name="issue" form="short">nr.</term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short">par.</term><term name="part" form="short">deel</term><term name="section" form="short">sec.</term><term name="sub-verbo" form="short"><single>s.v.</single><multiple>s.vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>regisseur</single><multiple>regisseurs</multiple></term><term name="editor"><single>redacteur</single><multiple>redacteuren</multiple></term><term name="editorial-director"><single>redacteur</single><multiple>redacteuren</multiple></term><term name="illustrator"><single>illustrator</single><multiple>illustrators</multiple></term><term name="translator"><single>vertaler</single><multiple>vertalers</multiple></term><term name="editortranslator"><single>redacteur &amp; vertaler</single><multiple>redacteuren &amp; vertalers</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>reg.</single><multiple>reg.</multiple></term><term name="editor" form="short"><single>red.</single><multiple>red.</multiple></term><term name="editorial-director" form="short"><single>red.</single><multiple>red.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ill.</multiple></term><term name="translator" form="short"><single>vert.</single><multiple>vert.</multiple></term><term name="editortranslator" form="short"><single>red. &amp; vert.</single><multiple>red. &amp; vert.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">door</term><term name="director" form="verb">geregisseerd door</term><term name="editor" form="verb">onder redactie van</term><term name="editorial-director" form="verb">onder redactie van</term><term name="illustrator" form="verb">ge\xEFllustreerd door</term><term name="interviewer" form="verb">ge\xEFnterviewd door</term><term name="recipient" form="verb">ontvangen door</term><term name="reviewed-author" form="verb">door</term><term name="translator" form="verb">vertaald door</term><term name="editortranslator" form="verb">bewerkt &amp; vertaald door</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">geregisseerd door</term><term name="editor" form="verb-short">onder redactie van</term><term name="editorial-director" form="verb-short">bewerkt door</term><term name="illustrator" form="verb-short">ge\xEFllustreerd door</term><term name="translator" form="verb-short">vertaald door</term><term name="editortranslator" form="verb-short">bewerkt &amp; vertaald door</term>
<!-- LONG MONTH FORMS --><term name="month-01">januari</term><term name="month-02">februari</term><term name="month-03">maart</term><term name="month-04">april</term><term name="month-05">mei</term><term name="month-06">juni</term><term name="month-07">juli</term><term name="month-08">augustus</term><term name="month-09">september</term><term name="month-10">oktober</term><term name="month-11">november</term><term name="month-12">december</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">jan.</term><term name="month-02" form="short">feb.</term><term name="month-03" form="short">mrt.</term><term name="month-04" form="short">apr.</term><term name="month-05" form="short">mei</term><term name="month-06" form="short">jun.</term><term name="month-07" form="short">jul.</term><term name="month-08" form="short">aug.</term><term name="month-09" form="short">sep.</term><term name="month-10" form="short">okt.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">dec.</term>
<!-- SEASONS --><term name="season-01">lente</term><term name="season-02">zomer</term><term name="season-03">herst</term><term name="season-04">winter</term></terms>
</locale>
`,
            "fr-FR": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="fr-FR"><info><translator><name>Gr\xE9goire Colly</name></translator><translator><name>Collectif Zotero francophone</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false" limit-day-ordinals-to-day-1="true"/><date form="text"><date-part name="day" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">publication en ligne anticip\xE9e</term><term name="album">album</term><term name="audio-recording">enregistrement audio</term><term name="film">film</term><term name="henceforth">d\xE9sormais</term><term name="loc-cit">loc.&#160;cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">sans lieu</term><term name="no-place" form="short">s.&#160;l.</term><term name="no-publisher">sans nom</term> <!-- sine nomine --><term name="no-publisher" form="short">s.&#160;n.</term><term name="on">sur</term><term name="op-cit">op.&#160;cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">\xE9dition originale</term><term name="personal-communication">communication personnelle</term><term name="podcast">podcast</term><term name="podcast-episode">\xE9pisode de podcast</term><term name="preprint">pr\xE9publication</term><term name="radio-broadcast">\xE9mission de radio</term><term name="radio-series">s\xE9rie radiophonique</term><term name="radio-series-episode">\xE9pisode de s\xE9rie radiophonique</term><term name="special-issue">num\xE9ro sp\xE9cial</term><term name="special-section">section sp\xE9ciale</term><term name="television-broadcast">\xE9mission de t\xE9l\xE9vision</term><term name="television-series">s\xE9rie t\xE9l\xE9vis\xE9e</term><term name="television-series-episode">\xE9pisode de s\xE9rie t\xE9l\xE9vis\xE9e</term><term name="video">vid\xE9o</term><term name="working-paper">document de travail</term><term name="accessed">consult\xE9 le</term><term name="and">et</term><term name="and others">et autres</term><term name="anonymous">anonyme</term><term name="anonymous" form="short">anon.</term><term name="at">sur</term><term name="available at">disponible sur</term><term name="by">par</term><term name="circa">vers</term><term name="circa" form="short">v.</term><term name="cited">cit\xE9</term><term name="edition" gender="feminine"><single>\xE9dition</single><multiple>\xE9ditions</multiple></term><term name="edition" form="short">\xE9d.</term><term name="et-al">et al.</term><term name="forthcoming">\xE0 para\xEEtre</term><term name="from">\xE0 l'adresse</term><term name="ibid">ibid.</term><term name="in">in</term><term name="in press">sous presse</term><term name="internet">Internet</term><term name="interview">entretien</term><term name="letter">lettre</term><term name="no date">sans date</term><term name="no date" form="short">s.&#160;d.</term><term name="online">en ligne</term><term name="presented at">pr\xE9sent\xE9 \xE0</term><term name="reference"><single>r\xE9f\xE9rence</single><multiple>r\xE9f\xE9rences</multiple></term><term name="reference" form="short"><single>r\xE9f.</single><multiple>r\xE9f.</multiple></term><term name="retrieved">consult\xE9</term><term name="scale">\xE9chelle</term><term name="version">version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">article</term><term name="article-journal">article de revue</term><term name="article-magazine">article de magazine</term><term name="article-newspaper">article de presse</term><term name="bill">projet de loi</term><term name="book">livre</term><term name="broadcast">\xE9mission</term><term name="chapter">chapitre de livre</term><term name="classic">classique</term><term name="collection">collection</term><term name="dataset">jeu de donn\xE9es</term><term name="document">document</term><term name="entry">entr\xE9e</term><term name="entry-dictionary">entr\xE9e de dictionnaire</term><term name="entry-encyclopedia">entr\xE9e d'encyclop\xE9die</term><term name="event">\xE9v\xE9nement</term><!-- figure is in the list of locator terms --><term name="graphic">image</term><term name="hearing">audience</term><term name="interview">interview</term><term name="legal_case">affaire</term><term name="legislation">acte juridique</term><term name="manuscript">manuscrit</term><term name="map">carte</term><term name="motion_picture">enregistrement vid\xE9o</term><term name="musical_score">partition</term><term name="pamphlet">pamphlet</term><term name="paper-conference">article de colloque</term><term name="patent">brevet</term><term name="performance">interpr\xE9tation</term><term name="periodical">p\xE9riodique</term><term name="personal_communication">communication personnelle</term><term name="post">billet</term><term name="post-weblog">billet de blog</term><term name="regulation">r\xE8glement</term><term name="report">rapport</term><term name="review">recension</term><term name="review-book">recension de livre</term><term name="software">logiciel</term><term name="song">chanson</term><term name="speech">pr\xE9sentation</term><term name="standard">norme</term><term name="thesis">th\xE8se</term><term name="treaty">trait\xE9</term><term name="webpage">page web</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">art. de revue</term><term name="article-magazine" form="short">art. de mag.</term><term name="article-newspaper" form="short">art. de presse</term><term name="book" form="short">liv.</term><term name="chapter" form="short">chap. de liv.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">ms</term><term name="motion_picture" form="short">enr. vid\xE9o</term><term name="report" form="short">rap.</term><term name="review" form="short">recens.</term><term name="review-book" form="short">recens. de liv.</term><term name="song" form="short">enr. audio</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">apr. J.-C.</term><term name="bc">av. J.-C.</term><term name="bce">av. n. \xE8.</term><term name="ce">n. \xE8.</term>
<!-- PUNCTUATION --><term name="open-quote">\xAB&#160;</term><term name="close-quote">&#160;\xBB</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">&#8209;</term> <!-- non-breaking hyphen --><term name="colon">&#160;:</term><term name="comma">,</term><term name="semicolon">&#160;;</term>
<!-- ORDINALS --><term name="ordinal">\u1D49</term><term name="ordinal-01" gender-form="feminine" match="whole-number">\u02B3\u1D49</term><term name="ordinal-01" gender-form="masculine" match="whole-number">\u1D49\u02B3</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">premier</term><term name="long-ordinal-02">deuxi\xE8me</term><term name="long-ordinal-03">troisi\xE8me</term><term name="long-ordinal-04">quatri\xE8me</term><term name="long-ordinal-05">cinqui\xE8me</term><term name="long-ordinal-06">sixi\xE8me</term><term name="long-ordinal-07">septi\xE8me</term><term name="long-ordinal-08">huiti\xE8me</term><term name="long-ordinal-09">neuvi\xE8me</term><term name="long-ordinal-10">dixi\xE8me</term>
<!-- LONG LOCATOR FORMS --><term name="act"><single>acte</single><multiple>actes</multiple></term><term name="appendix"><single>appendice</single><multiple>appendices</multiple></term><term name="article-locator"><single>article</single><multiple>articles</multiple></term><term name="canon"><single>canon</single><multiple>canons</multiple></term><term name="elocation"><single>emplacement</single><multiple>emplacements</multiple></term><term name="equation"><single>\xE9quation</single><multiple>\xE9quations</multiple></term><term name="rule"><single>r\xE8gle</single><multiple>r\xE8gles</multiple></term><term name="scene"><single>sc\xE8ne</single><multiple>sc\xE8nes</multiple></term><term name="table"><single>tableau</single><multiple>tableaux</multiple></term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple></term><term name="title-locator"><single>titre</single><multiple>titres</multiple></term><term name="book"><single>livre</single><multiple>livres</multiple></term><term name="chapter"><single>chapitre</single><multiple>chapitres</multiple></term><term name="column"><single>colonne</single><multiple>colonnes</multiple></term><term name="figure"><single>figure</single><multiple>figures</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue" gender="masculine"><single>num\xE9ro</single><multiple>num\xE9ros</multiple></term><term name="line"><single>ligne</single><multiple>lignes</multiple></term><term name="note"><single>note</single><multiple>notes</multiple></term><term name="opus"><single>opus</single><multiple>opus</multiple></term><term name="page"><single>page</single><multiple>pages</multiple></term><term name="number-of-pages"><single>page</single><multiple>pages</multiple></term><term name="paragraph"><single>paragraphe</single><multiple>paragraphes</multiple></term><term name="part"><single>partie</single><multiple>parties</multiple></term><term name="section"><single>section</single><multiple>sections</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>verset</single><multiple>versets</multiple></term><term name="volume" gender="masculine"><single>volume</single><multiple>volumes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix"><single>append.</single><multiple>append.</multiple></term><term name="article-locator"><single>art.</single><multiple>art.</multiple></term><term name="elocation"><single>emplact</single><multiple>emplact</multiple></term><term name="equation"><single>eq.</single><multiple>eq.</multiple></term><term name="rule"><single>r\xE8gle</single><multiple>r\xE8gles</multiple></term><term name="scene"><single>sc.</single><multiple>sc.</multiple></term><term name="table"><single>tab.</single><multiple>tab.</multiple></term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple></term><term name="title-locator"><single>tit.</single><multiple>tit.</multiple></term><term name="book" form="short">liv.</term><term name="chapter" form="short">chap.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short"><single>f\u1D52</single><multiple>f\u1D52\u02E2</multiple></term><term name="issue" form="short"><single>n\u1D52</single><multiple>n\u1D52\u02E2</multiple></term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>p.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>p.</multiple></term><term name="paragraph" form="short">paragr.</term><term name="part" form="short">part.</term><term name="section" form="short">sect.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>v.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vol.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>pr\xE9sident</single><multiple>pr\xE9sidents</multiple></term><term name="compiler"><single>compilateur</single><multiple>compilateurs</multiple></term><term name="contributor"><single>contributeur</single><multiple>contributeurs</multiple></term><term name="curator"><single>commissaire</single><multiple>commissaires</multiple></term><term name="executive-producer"><single>producteur ex\xE9cutif</single><multiple>producteurs ex\xE9cutifs</multiple></term><term name="guest"><single>invit\xE9</single><multiple>invit\xE9s</multiple></term><term name="host"><single>h\xF4te</single><multiple>h\xF4tes</multiple></term><term name="narrator"><single>narrateur</single><multiple>narrateurs</multiple></term><term name="organizer"><single>organisateur</single><multiple>organisateurs</multiple></term><term name="performer"><single>interpr\xE8te</single><multiple>interpr\xE8tes</multiple></term><term name="producer"><single>producteur</single><multiple>producteurs</multiple></term><term name="script-writer"><single>sc\xE9nariste</single><multiple>sc\xE9naristes</multiple></term><term name="series-creator"><single>cr\xE9ateur de s\xE9rie</single><multiple>cr\xE9ateurs de s\xE9rie</multiple></term><term name="director"><single>r\xE9alisateur</single><multiple>r\xE9alisateurs</multiple></term><term name="editor"><single>\xE9diteur</single><multiple>\xE9diteurs</multiple></term><term name="editorial-director"><single>directeur</single><multiple>directeurs</multiple></term><term name="illustrator"><single>illustrateur</single><multiple>illustrateurs</multiple></term><term name="translator"><single>traducteur</single><multiple>traducteurs</multiple></term><term name="editortranslator"><single>\xE9diteur et traducteur</single><multiple>\xE9diteurs et traducteurs</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>compil.</single><multiple>compil.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contrib.</multiple></term><term name="curator" form="short"><single>commiss.</single><multiple>commiss.</multiple></term><term name="executive-producer" form="short"><single>prod. ex\xE9.</single><multiple>prod. ex\xE9.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narr.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>org.</multiple></term><term name="performer" form="short"><single>interpr.</single><multiple>interpr.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prod.</multiple></term><term name="script-writer" form="short"><single>sc\xE9nar.</single><multiple>sc\xE9nar.</multiple></term><term name="series-creator" form="short"><single>cr\xE9at.</single><multiple>cr\xE9at.</multiple></term><term name="director" form="short"><single>r\xE9al.</single><multiple>r\xE9al.</multiple></term><term name="editor" form="short"><single>\xE9d.</single><multiple>\xE9d.</multiple></term><term name="editorial-director" form="short"><single>dir.</single><multiple>dir.</multiple></term><term name="illustrator" form="short"><single>ill.</single><multiple>ill.</multiple></term><term name="translator" form="short"><single>trad.</single><multiple>trad.</multiple></term><term name="editortranslator" form="short"><single>\xE9d. et trad.</single><multiple>\xE9d. et trad.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">pr\xE9sid\xE9 par</term><term name="compiler" form="verb">compil\xE9 par</term><term name="contributor" form="verb">avec</term><term name="curator" form="verb">organis\xE9 par</term><term name="executive-producer" form="verb">production ex\xE9cutive par</term><term name="guest" form="verb">avec pour invit\xE9</term><term name="host" form="verb">anim\xE9 par</term><term name="narrator" form="verb">lu par</term><term name="organizer" form="verb">organis\xE9 par</term><term name="performer" form="verb">interpr\xE9t\xE9 par</term><term name="producer" form="verb">produit par</term><term name="script-writer" form="verb">sc\xE9nario de</term><term name="series-creator" form="verb">cr\xE9\xE9 par</term><term name="container-author" form="verb">par</term><term name="director" form="verb">r\xE9alis\xE9 par</term><term name="editor" form="verb">\xE9dit\xE9 par</term><term name="editorial-director" form="verb">sous la direction de</term><term name="illustrator" form="verb">illustr\xE9 par</term><term name="interviewer" form="verb">entretien r\xE9alis\xE9 par</term><term name="recipient" form="verb">\xE0</term><term name="reviewed-author" form="verb">par</term><term name="translator" form="verb">traduit par</term><term name="editortranslator" form="verb">\xE9dit\xE9 et traduit par</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">compil. par</term><term name="contributor" form="verb-short">ac</term><term name="curator" form="verb-short">org. par</term><term name="executive-producer" form="verb-short">prod. ex\xE9. par</term><term name="guest" form="verb-short">ac pr inv.</term><term name="host" form="verb-short">anim. par</term><term name="narrator" form="verb-short">lu par</term><term name="organizer" form="verb-short">org. par</term><term name="performer" form="verb-short">interpr. par</term><term name="producer" form="verb-short">prod. par</term><term name="script-writer" form="verb-short">sc\xE9nar. de</term><term name="series-creator" form="verb-short">cr\xE9\xE9 par</term><term name="director" form="verb-short">r\xE9al. par</term><term name="editor" form="verb-short">\xE9d. par</term><term name="editorial-director" form="verb-short">ss la dir. de</term><term name="illustrator" form="verb-short">ill. par</term><term name="translator" form="verb-short">trad. par</term><term name="editortranslator" form="verb-short">\xE9d. et trad. par</term>
<!-- LONG MONTH FORMS --><term name="month-01" gender="masculine">janvier</term><term name="month-02" gender="masculine">f\xE9vrier</term><term name="month-03" gender="masculine">mars</term><term name="month-04" gender="masculine">avril</term><term name="month-05" gender="masculine">mai</term><term name="month-06" gender="masculine">juin</term><term name="month-07" gender="masculine">juillet</term><term name="month-08" gender="masculine">ao\xFBt</term><term name="month-09" gender="masculine">septembre</term><term name="month-10" gender="masculine">octobre</term><term name="month-11" gender="masculine">novembre</term><term name="month-12" gender="masculine">d\xE9cembre</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">janv.</term><term name="month-02" form="short">f\xE9vr.</term><term name="month-03" form="short">mars</term><term name="month-04" form="short">avr.</term><term name="month-05" form="short">mai</term><term name="month-06" form="short">juin</term><term name="month-07" form="short">juill.</term><term name="month-08" form="short">ao\xFBt</term><term name="month-09" form="short">sept.</term><term name="month-10" form="short">oct.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">d\xE9c.</term>
<!-- SEASONS --><term name="season-01">printemps</term><term name="season-02">\xE9t\xE9</term><term name="season-03">automne</term><term name="season-04">hiver</term></terms>
</locale>
`,
            "de-DE": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="de-DE"><info><translator><name>Till A. Heilmann</name></translator><translator><name>Ulrich</name></translator><translator><name>Rintze M. Zelle</name></translator><translator><name>Sebastian Karcher</name></translator><translator><name>jakov</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" form="ordinal" suffix=" "/><date-part name="month" suffix=" "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="."/><date-part name="month" form="numeric-leading-zeros" suffix="."/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">pers\xF6nliche Kommunikation</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">zugegriffen</term><term name="and">und</term><term name="and others">und andere</term><term name="anonymous">ohne Autor</term><term name="anonymous" form="short">o.&#160;A.</term><term name="at">auf</term><term name="available at">verf\xFCgbar unter</term><term name="by">von</term><term name="circa">circa</term><term name="circa" form="short">ca.</term><term name="cited">zitiert</term><term name="edition"><single>Auflage</single><multiple>Auflagen</multiple></term><term name="edition" form="short">Aufl.</term><term name="et-al">u.&#160;a.</term><term name="forthcoming">i.&#160;E.</term><term name="from">von</term><term name="ibid">ebd.</term><term name="in">in</term><term name="in press">im Druck</term><term name="internet">Internet</term><term name="interview">Interview</term><term name="letter">Brief</term><term name="no date">ohne Datum</term><term name="no date" form="short">o.&#160;J.</term><term name="online">online</term><term name="presented at">gehalten auf der</term><term name="reference"><single>Referenz</single><multiple>Referenzen</multiple></term><term name="reference" form="short"><single>Ref.</single><multiple>Ref.</multiple></term><term name="retrieved">abgerufen</term><term name="scale">Ma\xDFstab</term><term name="version">Version</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">pers\xF6nliche Kommunikation</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">&#160;n.&#160;Chr.</term><term name="bc">&#160;v.&#160;Chr.</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\u201E</term><term name="close-quote">\u201C</term><term name="open-inner-quote">\u201A</term><term name="close-inner-quote">\u2018</term><term name="page-range-delimiter">\u2013</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">.</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">erster</term><term name="long-ordinal-02">zweiter</term><term name="long-ordinal-03">dritter</term><term name="long-ordinal-04">vierter</term><term name="long-ordinal-05">f\xFCnfter</term><term name="long-ordinal-06">sechster</term><term name="long-ordinal-07">siebter</term><term name="long-ordinal-08">achter</term><term name="long-ordinal-09">neunter</term><term name="long-ordinal-10">zehnter</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>Buch</single><multiple>B\xFCcher</multiple></term><term name="chapter"><single>Kapitel</single><multiple>Kapitel</multiple></term><term name="column"><single>Spalte</single><multiple>Spalten</multiple></term><term name="figure"><single>Abbildung</single><multiple>Abbildungen</multiple></term><term name="folio"><single>Blatt</single><multiple>Bl\xE4tter</multiple></term><term name="issue"><single>Nummer</single><multiple>Nummern</multiple></term><term name="line"><single>Zeile</single><multiple>Zeilen</multiple></term><term name="note"><single>Note</single><multiple>Noten</multiple></term><term name="opus"><single>Opus</single><multiple>Opera</multiple></term><term name="page"><single>Seite</single><multiple>Seiten</multiple></term><term name="number-of-pages"><single>Seite</single><multiple>Seiten</multiple></term><term name="paragraph"><single>Absatz</single><multiple>Abs\xE4tze</multiple></term><term name="part"><single>Teil</single><multiple>Teile</multiple></term><term name="section"><single>Abschnitt</single><multiple>Abschnitte</multiple></term><term name="sub-verbo"><single>sub verbo</single><multiple>sub verbis</multiple></term><term name="verse"><single>Vers</single><multiple>Verse</multiple></term><term name="volume"><single>Band</single><multiple>B\xE4nde</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">B.</term><term name="chapter" form="short">Kap.</term><term name="column" form="short">Sp.</term><term name="figure" form="short">Abb.</term><term name="folio" form="short">Fol.</term><term name="issue" form="short">Nr.</term><term name="line" form="short">Z.</term><term name="note" form="short">N.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>S.</single><multiple>S.</multiple></term><term name="number-of-pages" form="short"><single>S.</single><multiple>S.</multiple></term><term name="paragraph" form="short">Abs.</term><term name="part" form="short">Teil</term><term name="section" form="short">Abschn.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>V.</single><multiple>V.</multiple></term><term name="volume" form="short"><single>Bd.</single><multiple>Bde.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xB6</single><multiple>\xB6\xB6</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>Regisseur</single><multiple>Regisseure</multiple></term><term name="editor"><single>Herausgeber</single><multiple>Herausgeber</multiple></term><term name="collection-editor"><single>Reihenherausgeber</single><multiple>Reihenherausgeber</multiple></term><term name="editorial-director"><single>Herausgeber</single><multiple>Herausgeber</multiple></term><term name="illustrator"><single>Illustrator</single><multiple>Illustratoren</multiple></term><term name="translator"><single>\xDCbersetzer</single><multiple>\xDCbersetzer</multiple></term><term name="editortranslator"><single>Herausgeber&#160;&amp; \xDCbersetzer</single><multiple>Herausgeber&#160;&amp; \xDCbersetzer</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>Reg.</single><multiple>Reg.</multiple></term><term name="editor" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="collection-editor" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="editorial-director" form="short"><single>Hrsg.</single><multiple>Hrsg.</multiple></term><term name="illustrator" form="short"><single>Ill.</single><multiple>Ill.</multiple></term><term name="translator" form="short"><single>\xDCbers.</single><multiple>\xDCbers.</multiple></term><term name="editortranslator" form="short"><single>Hrsg.&#160;&amp; \xDCbers.</single><multiple>Hrsg.&#160;&amp; \xDCbers.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">von</term><term name="director" form="verb">Regie von</term><term name="editor" form="verb">herausgegeben von</term><term name="collection-editor" form="verb">herausgegeben von</term><term name="editorial-director" form="verb">herausgegeben von</term><term name="illustrator" form="verb">illustriert von</term><term name="interviewer" form="verb">interviewt von</term><term name="recipient" form="verb">an</term><term name="reviewed-author" form="verb">von</term><term name="translator" form="verb">\xFCbersetzt von</term><term name="editortranslator" form="verb">herausgegeben und \xFCbersetzt von</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">Reg.</term><term name="editor" form="verb-short">hg. von</term><term name="collection-editor" form="verb-short">hg. von</term><term name="editorial-director" form="verb-short">hg. von</term><term name="illustrator" form="verb-short">illus. von</term><term name="translator" form="verb-short">\xFCbers. von</term><term name="editortranslator" form="verb-short">hg.&#160;&amp; \xFCbers. von</term>
<!-- LONG MONTH FORMS --><term name="month-01">Januar</term><term name="month-02">Februar</term><term name="month-03">M\xE4rz</term><term name="month-04">April</term><term name="month-05">Mai</term><term name="month-06">Juni</term><term name="month-07">Juli</term><term name="month-08">August</term><term name="month-09">September</term><term name="month-10">Oktober</term><term name="month-11">November</term><term name="month-12">Dezember</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">Jan.</term><term name="month-02" form="short">Feb.</term><term name="month-03" form="short">M\xE4rz</term><term name="month-04" form="short">Apr.</term><term name="month-05" form="short">Mai</term><term name="month-06" form="short">Juni</term><term name="month-07" form="short">Juli</term><term name="month-08" form="short">Aug.</term><term name="month-09" form="short">Sep.</term><term name="month-10" form="short">Okt.</term><term name="month-11" form="short">Nov.</term><term name="month-12" form="short">Dez.</term>
<!-- SEASONS --><term name="season-01">Fr\xFChjahr</term><term name="season-02">Sommer</term><term name="season-03">Herbst</term><term name="season-04">Winter</term></terms>
</locale>
`,
            "es-ES": `<?xml version="1.0" encoding="utf-8"?>
<locale xmlns="http://purl.org/net/xbiblio/csl" version="1.0" xml:lang="es-ES"><info><translator><name>javimat</name></translator><rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights><updated>2012-07-04T23:31:02+00:00</updated></info><style-options punctuation-in-quote="false"/><date form="text"><date-part name="day" suffix=" de "/><date-part name="month" suffix=" de "/><date-part name="year"/></date><date form="numeric"><date-part name="day" form="numeric-leading-zeros" suffix="/"/><date-part name="month" form="numeric-leading-zeros" suffix="/"/><date-part name="year"/></date><terms><term name="advance-online-publication">advance online publication</term><term name="album">album</term><term name="audio-recording">audio recording</term><term name="film">film</term><term name="henceforth">henceforth</term><term name="loc-cit">loc. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="no-place">no place</term><term name="no-place" form="short">n.p.</term><term name="no-publisher">no publisher</term> <!-- sine nomine --><term name="no-publisher" form="short">n.p.</term><term name="on">on</term><term name="op-cit">op. cit.</term> <!-- like ibid., the abbreviated form is the regular form  --><term name="original-work-published">original work published</term><term name="personal-communication">comunicaci\xF3n personal</term><term name="podcast">podcast</term><term name="podcast-episode">podcast episode</term><term name="preprint">preprint</term><term name="radio-broadcast">radio broadcast</term><term name="radio-series">radio series</term><term name="radio-series-episode">radio series episode</term><term name="special-issue">special issue</term><term name="special-section">special section</term><term name="television-broadcast">television broadcast</term><term name="television-series">television series</term><term name="television-series-episode">television series episode</term><term name="video">video</term><term name="working-paper">working paper</term><term name="accessed">accedido</term><term name="and">y</term><term name="and others">y otros</term><term name="anonymous">an\xF3nimo</term><term name="anonymous" form="short">an\xF3n.</term><term name="at">en</term><term name="available at">disponible en</term><term name="by">de</term><term name="circa">circa</term><term name="circa" form="short">c.</term><term name="cited">citado</term><term name="edition"><single>edici\xF3n</single><multiple>ediciones</multiple></term><term name="edition" form="short">ed.</term><term name="et-al">et&#160;al.</term><term name="forthcoming">previsto</term><term name="from">a partir de</term><term name="ibid">ibid.</term><term name="in">en</term><term name="in press">en imprenta</term><term name="internet">internet</term><term name="interview">entrevista</term><term name="letter">carta</term><term name="no date">sin fecha</term><term name="no date" form="short">s.&#160;f.</term><term name="online">en l\xEDnea</term><term name="presented at">presentado en</term><term name="reference"><single>referencia</single><multiple>referencias</multiple></term><term name="reference" form="short"><single>ref.</single><multiple>refs.</multiple></term><term name="retrieved">recuperado</term><term name="scale">escala</term><term name="version">versi\xF3n</term>
<!-- LONG ITEM TYPE FORMS --><term name="article">preprint</term><term name="article-journal">journal article</term><term name="article-magazine">magazine article</term><term name="article-newspaper">newspaper article</term><term name="bill">bill</term><term name="book">book</term><term name="broadcast">broadcast</term><term name="chapter">book chapter</term><term name="classic">classic</term><term name="collection">collection</term><term name="dataset">dataset</term><term name="document">document</term><term name="entry">entry</term><term name="entry-dictionary">dictionary entry</term><term name="entry-encyclopedia">encyclopedia entry</term><term name="event">event</term><!-- figure is in the list of locator terms --><term name="graphic">graphic</term><term name="hearing">hearing</term><term name="interview">interview</term><term name="legal_case">legal case</term><term name="legislation">legislation</term><term name="manuscript">manuscript</term><term name="map">map</term><term name="motion_picture">video recording</term><term name="musical_score">musical score</term><term name="pamphlet">pamphlet</term><term name="paper-conference">conference paper</term><term name="patent">patent</term><term name="performance">performance</term><term name="periodical">periodical</term><term name="personal_communication">comunicaci\xF3n personal</term><term name="post">post</term><term name="post-weblog">blog post</term><term name="regulation">regulation</term><term name="report">report</term><term name="review">review</term><term name="review-book">book review</term><term name="software">software</term><term name="song">audio recording</term><term name="speech">presentation</term><term name="standard">standard</term><term name="thesis">thesis</term><term name="treaty">treaty</term><term name="webpage">webpage</term>
<!-- SHORT ITEM TYPE FORMS --><term name="article-journal" form="short">journal art.</term><term name="article-magazine" form="short">mag. art.</term><term name="article-newspaper" form="short">newspaper art.</term><term name="book" form="short">bk.</term><term name="chapter" form="short">bk. chap.</term><term name="document" form="short">doc.</term><!-- figure is in the list of locator terms --><term name="graphic" form="short">graph.</term><term name="interview" form="short">interv.</term><term name="manuscript" form="short">MS</term><term name="motion_picture" form="short">video rec.</term><term name="report" form="short">rep.</term><term name="review" form="short">rev.</term><term name="review-book" form="short">bk. rev.</term><term name="song" form="short">audio rec.</term>
<!-- HISTORICAL ERA TERMS --><term name="ad">d.&#160;C.</term><term name="bc">a.&#160;C.</term><term name="bce">BCE</term><term name="ce">CE</term>
<!-- PUNCTUATION --><term name="open-quote">\xAB</term><term name="close-quote">\xBB</term><term name="open-inner-quote">\u201C</term><term name="close-inner-quote">\u201D</term><term name="page-range-delimiter">-</term><term name="colon">:</term><term name="comma">,</term><term name="semicolon">;</term>
<!-- ORDINALS --><term name="ordinal">.\xAA</term>
<!-- LONG ORDINALS --><term name="long-ordinal-01">primera</term><term name="long-ordinal-02">segunda</term><term name="long-ordinal-03">tercera</term><term name="long-ordinal-04">cuarta</term><term name="long-ordinal-05">quinta</term><term name="long-ordinal-06">sexta</term><term name="long-ordinal-07">s\xE9ptima</term><term name="long-ordinal-08">octava</term><term name="long-ordinal-09">novena</term><term name="long-ordinal-10">d\xE9cima</term>
<!-- LONG LOCATOR FORMS --><term name="act">			 <single>act</single><multiple>acts</multiple>						 </term><term name="appendix">			 <single>appendix</single><multiple>appendices</multiple>						 </term><term name="article-locator">			 <single>article</single><multiple>articles</multiple>						 </term><term name="canon">			 <single>canon</single><multiple>canons</multiple>						 </term><term name="elocation">			 <single>location</single><multiple>locations</multiple>						 </term><term name="equation">			 <single>equation</single><multiple>equations</multiple>						 </term><term name="rule">			 <single>rule</single><multiple>rules</multiple>						 </term><term name="scene">			 <single>scene</single><multiple>scenes</multiple>						 </term><term name="table">			 <single>table</single><multiple>tables</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>title</single><multiple>titles</multiple>						 </term><term name="book"><single>libro</single><multiple>libros</multiple></term><term name="chapter"><single>cap\xEDtulo</single><multiple>cap\xEDtulos</multiple></term><term name="column"><single>columna</single><multiple>columnas</multiple></term><term name="figure"><single>figura</single><multiple>figuras</multiple></term><term name="folio"><single>folio</single><multiple>folios</multiple></term><term name="issue"><single>n\xFAmero</single><multiple>n\xFAmeros</multiple></term><term name="line"><single>l\xEDnea</single><multiple>l\xEDneas</multiple></term><term name="note"><single>nota</single><multiple>notas</multiple></term><term name="opus"><single>opus</single><multiple>opera</multiple></term><term name="page"><single>p\xE1gina</single><multiple>p\xE1ginas</multiple></term><term name="number-of-pages"><single>p\xE1gina</single><multiple>p\xE1ginas</multiple></term><term name="paragraph"><single>p\xE1rrafo</single><multiple>p\xE1rrafos</multiple></term><term name="part"><single>parte</single><multiple>partes</multiple></term><term name="section"><single>secci\xF3n</single><multiple>secciones</multiple></term><term name="sub-verbo"><single>sub voce</single><multiple>sub vocibus</multiple></term><term name="verse"><single>verso</single><multiple>versos</multiple></term><term name="volume"><single>volumen</single><multiple>vol\xFAmenes</multiple></term>
<!-- SHORT LOCATOR FORMS --><term name="appendix">			 <single>app.</single><multiple>apps.</multiple>						 </term><term name="article-locator">			 <single>art.</single><multiple>arts.</multiple></term><term name="elocation">			 <single>loc.</single><multiple>locs.</multiple></term><term name="equation">			 <single>eq.</single><multiple>eqs.</multiple></term><term name="rule">			 <single>r.</single><multiple>rr.</multiple>						 </term><term name="scene">			 <single>sc.</single><multiple>scs.</multiple>						 </term><term name="table">			 <single>tbl.</single><multiple>tbls.</multiple>						 </term><term name="timestamp"> <!-- generally blank --><single></single><multiple></multiple>						 </term><term name="title-locator">			 <single>tit.</single><multiple>tits.</multiple></term><term name="book" form="short">lib.</term><term name="chapter" form="short">cap.</term><term name="column" form="short">col.</term><term name="figure" form="short">fig.</term><term name="folio" form="short">f.</term><term name="issue" form="short">n.\xBA</term><term name="line" form="short">l.</term><term name="note" form="short">n.</term><term name="opus" form="short">op.</term><term name="page" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="number-of-pages" form="short"><single>p.</single><multiple>pp.</multiple></term><term name="paragraph" form="short">p\xE1rr.</term><term name="part" form="short">pt.</term><term name="section" form="short">sec.</term><term name="sub-verbo" form="short"><single>s.&#160;v.</single><multiple>s.&#160;vv.</multiple></term><term name="verse" form="short"><single>v.</single><multiple>vv.</multiple></term><term name="volume" form="short"><single>vol.</single><multiple>vols.</multiple></term>
<!-- SYMBOL LOCATOR FORMS --><term name="paragraph" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term><term name="section" form="symbol"><single>\xA7</single><multiple>\xA7</multiple></term>
<!-- LONG ROLE FORMS --><term name="chair"><single>chair</single><multiple>chairs</multiple></term><term name="compiler"><single>compiler</single><multiple>compilers</multiple></term><term name="contributor"><single>contributor</single><multiple>contributors</multiple></term><term name="curator"><single>curator</single><multiple>curators</multiple></term><term name="executive-producer"><single>executive producer</single><multiple>executive producers</multiple></term><term name="guest"><single>guest</single><multiple>guests</multiple></term><term name="host"><single>host</single><multiple>hosts</multiple></term><term name="narrator"><single>narrator</single><multiple>narrators</multiple></term><term name="organizer"><single>organizer</single><multiple>organizers</multiple></term><term name="performer"><single>performer</single><multiple>performers</multiple></term><term name="producer"><single>producer</single><multiple>producers</multiple></term><term name="script-writer"><single>writer</single><multiple>writers</multiple></term><term name="series-creator"><single>series creator</single><multiple>series creators</multiple></term><term name="director"><single>director</single><multiple>directores</multiple></term><term name="editor"><single>editor</single><multiple>editores</multiple></term><term name="editorial-director"><single>editor</single><multiple>editores</multiple></term><term name="illustrator"><single>ilustrador</single><multiple>ilustradores</multiple></term><term name="translator"><single>traductor</single><multiple>traductores</multiple></term><term name="editortranslator"><single>editor y traductor</single><multiple>editores y traductores</multiple></term>
<!-- SHORT ROLE FORMS --><term name="compiler" form="short"><single>comp.</single><multiple>comps.</multiple></term><term name="contributor" form="short"><single>contrib.</single><multiple>contribs.</multiple></term><term name="curator" form="short"><single>cur.</single><multiple>curs.</multiple></term><term name="executive-producer" form="short"><single>exec. prod.</single><multiple>exec. prods.</multiple></term><term name="narrator" form="short"><single>narr.</single><multiple>narrs.</multiple></term><term name="organizer" form="short"><single>org.</single><multiple>orgs.</multiple></term><term name="performer" form="short"><single>perf.</single><multiple>perfs.</multiple></term><term name="producer" form="short"><single>prod.</single><multiple>prods.</multiple></term><term name="script-writer" form="short"><single>writ.</single><multiple>writs.</multiple></term><term name="series-creator" form="short"><single>cre.</single><multiple>cres.</multiple></term><term name="director" form="short"><single>dir.</single><multiple>dirs.</multiple></term><term name="editor" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="editorial-director" form="short"><single>ed.</single><multiple>eds.</multiple></term><term name="illustrator" form="short"><single>ilust.</single><multiple>ilusts.</multiple></term><term name="translator" form="short"><single>trad.</single><multiple>trads.</multiple></term><term name="editortranslator" form="short"><single>ed. y trad.</single><multiple>eds. y trads.</multiple></term>
<!-- VERB ROLE FORMS --><term name="chair" form="verb">chaired by</term><term name="compiler" form="verb">compiled by</term><term name="contributor" form="verb">with</term><term name="curator" form="verb">curated by</term><term name="executive-producer" form="verb">executive produced by</term><term name="guest" form="verb">with guest</term><term name="host" form="verb">hosted by</term><term name="narrator" form="verb">narrated by</term><term name="organizer" form="verb">organized by</term><term name="performer" form="verb">performed by</term><term name="producer" form="verb">produced by</term><term name="script-writer" form="verb">written by</term><term name="series-creator" form="verb">created by</term><term name="container-author" form="verb">de</term><term name="director" form="verb">dirigido por</term><term name="editor" form="verb">editado por</term><term name="editorial-director" form="verb">editado por</term><term name="illustrator" form="verb">ilustrado por</term><term name="interviewer" form="verb">entrevistado por</term><term name="recipient" form="verb">a</term><term name="reviewed-author" form="verb">por</term><term name="translator" form="verb">traducido por</term><term name="editortranslator" form="verb">editado y traducido por</term>
<!-- SHORT VERB ROLE FORMS --><term name="compiler" form="verb-short">comp. by</term><term name="contributor" form="verb-short">w.</term><term name="curator" form="verb-short">cur. by</term><term name="executive-producer" form="verb-short">exec. prod. by</term><term name="guest" form="verb-short">w. guest</term><term name="host" form="verb-short">hosted by</term><term name="narrator" form="verb-short">narr. by</term><term name="organizer" form="verb-short">org. by</term><term name="performer" form="verb-short">perf. by</term><term name="producer" form="verb-short">prod. by</term><term name="script-writer" form="verb-short">writ. by</term><term name="series-creator" form="verb-short">cre. by</term><term name="director" form="verb-short">dir.</term><term name="editor" form="verb-short">ed.</term><term name="editorial-director" form="verb-short">ed.</term><term name="illustrator" form="verb-short">ilust.</term><term name="translator" form="verb-short">trad.</term><term name="editortranslator" form="verb-short">ed. y trad.</term>
<!-- LONG MONTH FORMS --><term name="month-01">enero</term><term name="month-02">febrero</term><term name="month-03">marzo</term><term name="month-04">abril</term><term name="month-05">mayo</term><term name="month-06">junio</term><term name="month-07">julio</term><term name="month-08">agosto</term><term name="month-09">septiembre</term><term name="month-10">octubre</term><term name="month-11">noviembre</term><term name="month-12">diciembre</term>
<!-- SHORT MONTH FORMS --><term name="month-01" form="short">ene.</term><term name="month-02" form="short">feb.</term><term name="month-03" form="short">mar.</term><term name="month-04" form="short">abr.</term><term name="month-05" form="short">may</term><term name="month-06" form="short">jun.</term><term name="month-07" form="short">jul.</term><term name="month-08" form="short">ago.</term><term name="month-09" form="short">sep.</term><term name="month-10" form="short">oct.</term><term name="month-11" form="short">nov.</term><term name="month-12" form="short">dic.</term>
<!-- SEASONS --><term name="season-01">primavera</term><term name="season-02">verano</term><term name="season-03">oto\xF1o</term><term name="season-04">invierno</term></terms>
</locale>
`
        };
    });
    var L7 = g10((u)=>{
        "use strict";
        Object.defineProperty(u, "__esModule", {
            value: !0
        });
        u.locales = u.default = void 0;
        var Y = y9("@citation-js/core"), K = Z(M8());
        function Z(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var b = new Y.util.Register(K.default);
        u.locales = b;
        var $ = (e)=>b.has(e) ? b.get(e) : b.get("en-US"), Q = $;
        u.default = Q;
    });
    var k6 = g10((f)=>{
        "use strict";
        Object.defineProperty(f, "__esModule", {
            value: !0
        });
        f.fetchEngine = f.default = void 0;
        var s = X(y9("citeproc")), A = T11(), d = L7();
        function X(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var E = Symbol.for("proxied"), ee = function(e) {
            let t = function(r, m) {
                if (r.sys.wrapBibliographyEntry) {
                    let [a, l] = r.sys.wrapBibliographyEntry(this.system_id);
                    m = [
                        a,
                        m,
                        l
                    ].join("");
                }
                return e.call(this, r, m);
            };
            return t[E] = !0, t;
        };
        for(let e in s.default.Output.Formats){
            let t = s.default.Output.Formats[e]["@bibliography/entry"];
            !t || t[E] || (s.default.Output.Formats[e]["@bibliography/entry"] = ee(t));
        }
        function te(e) {
            if (d.locales.has(e)) return d.locales.get(e);
            let t = e.replace("-", "_");
            return d.locales.has(t) ? d.locales.get(t) : {};
        }
        var w = {}, _ = function(e, t, r, m, a) {
            let l = `${e}|${t}`, o;
            return w[l] instanceof s.default.Engine ? (o = w[l], o.sys.retrieveItem = m, o.sys.wrapBibliographyEntry = void 0, o.updateItems([])) : o = w[l] = new s.default.Engine({
                retrieveLocale: a,
                retrieveItem: m
            }, r, t, !0), o;
        };
        f.fetchEngine = _;
        var re = function(e, t, r, m) {
            if (!s.default.Output.Formats[m] || !s.default.Output.Formats[m]["@bibliography/entry"]) throw new TypeError(`Cannot find format '${m}'`);
            let a = e.reduce((c, R)=>(c[R.id] = R, c), {}), l = A.templates.get(A.templates.has(t) ? t : "apa");
            r = d.locales.has(r) ? r : void 0;
            let O = _(t, r, l, function(c) {
                if (Object.prototype.hasOwnProperty.call(a, c)) return a[c];
                throw new Error(`Cannot find entry with id '${c}'`);
            }, te);
            return O.setOutputFormat(m), O;
        }, me = re;
        f.default = me;
    });
    var i6 = {};
    B3(i6, {
        __esModule: ()=>ae6,
        default: ()=>oe7,
        fetchEngine: ()=>ie6
    });
    var F5 = z7(k6());
    n4(i6, z7(k6()));
    var { __esModule: ae6, fetchEngine: ie6 } = F5, { default: q8, ...le6 } = F5, oe7 = q8 !== void 0 ? q8 : le6;
    const mod64 = {
        __esModule: ae6,
        default: oe7,
        fetchEngine: ie6
    };
    var require4 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m, c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/date":
                return c(mod54);
            case "moo":
                return e(mod56);
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var it1 = Object.create;
    var F6 = Object.defineProperty;
    var nt2 = Object.getOwnPropertyDescriptor;
    var at3 = Object.getOwnPropertyNames;
    var ot2 = Object.getPrototypeOf, st2 = Object.prototype.hasOwnProperty;
    var h6 = ((e)=>typeof require4 < "u" ? require4 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require4 < "u" ? require4 : t)[r]
        }) : e)(function(e) {
        if (typeof require4 < "u") return require4.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var p8 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), lt2 = (e, t)=>{
        for(var r in t)F6(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, z8 = (e, t, r, i)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let n of at3(t))!st2.call(e, n) && n !== r && F6(e, n, {
            get: ()=>t[n],
            enumerable: !(i = nt2(t, n)) || i.enumerable
        });
        return e;
    }, y10 = (e, t, r)=>(z8(e, t, "default"), r && z8(r, t, "default")), V5 = (e, t, r)=>(r = e != null ? it1(ot2(e)) : {}, z8(t || !e || !e.__esModule ? F6(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var X2 = p8((ii, ct)=>{
        ct.exports = {
            biblatex: {
                article: [
                    "author",
                    "title",
                    "journaltitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                book: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvbook: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inbook: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                booklet: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                collection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvcollection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                dataset: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                online: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                patent: [
                    "author",
                    "title",
                    "number",
                    [
                        "year",
                        "date"
                    ]
                ],
                periodical: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                proceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvproceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                report: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                thesis: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                unpublished: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                conference: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                electronic: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                phdthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                www: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ]
            },
            bibtex: {
                article: [
                    "author",
                    "title",
                    "journal",
                    "year"
                ],
                book: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    "publisher",
                    "year"
                ],
                booklet: [
                    "title"
                ],
                inbook: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "chapter",
                        "pages"
                    ],
                    "publisher",
                    "year"
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    "publisher",
                    "year"
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    "year"
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                phdthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                proceedings: [
                    "title",
                    "year"
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    "year"
                ],
                unpublished: [
                    "author",
                    "title",
                    "note"
                ]
            }
        };
    });
    var Z5 = p8((ni, ut)=>{
        ut.exports = {
            abstract: [
                "field",
                "literal"
            ],
            addendum: [
                "field",
                "literal"
            ],
            afterword: [
                "list",
                "name"
            ],
            annotation: [
                "field",
                "literal"
            ],
            annotator: [
                "list",
                "name"
            ],
            author: [
                "list",
                "name"
            ],
            authortype: [
                "field",
                "key"
            ],
            bookauthor: [
                "list",
                "name"
            ],
            bookpagination: [
                "field",
                "key"
            ],
            booksubtitle: [
                "field",
                "literal"
            ],
            booktitle: [
                "field",
                "title"
            ],
            booktitleaddon: [
                "field",
                "literal"
            ],
            chapter: [
                "field",
                "literal"
            ],
            commentator: [
                "list",
                "name"
            ],
            date: [
                "field",
                "date"
            ],
            doi: [
                "field",
                "verbatim"
            ],
            edition: [
                "field",
                "literal"
            ],
            editor: [
                "list",
                "name"
            ],
            editora: [
                "list",
                "name"
            ],
            editorb: [
                "list",
                "name"
            ],
            editorc: [
                "list",
                "name"
            ],
            editortype: [
                "field",
                "key"
            ],
            editoratype: [
                "field",
                "key"
            ],
            editorbtype: [
                "field",
                "key"
            ],
            editorctype: [
                "field",
                "key"
            ],
            eid: [
                "field",
                "literal"
            ],
            entrysubtype: [
                "field",
                "literal"
            ],
            eprint: [
                "field",
                "verbatim"
            ],
            eprintclass: [
                "field",
                "literal"
            ],
            eprinttype: [
                "field",
                "literal"
            ],
            eventdate: [
                "field",
                "date"
            ],
            eventtitle: [
                "field",
                "title"
            ],
            eventtitleaddon: [
                "field",
                "literal"
            ],
            file: [
                "field",
                "verbatim"
            ],
            foreword: [
                "list",
                "name"
            ],
            holder: [
                "list",
                "name"
            ],
            howpublished: [
                "field",
                "literal"
            ],
            indextitle: [
                "field",
                "literal"
            ],
            institution: [
                "list",
                "literal"
            ],
            introduction: [
                "list",
                "name"
            ],
            isan: [
                "field",
                "literal"
            ],
            isbn: [
                "field",
                "literal"
            ],
            ismn: [
                "field",
                "literal"
            ],
            isrn: [
                "field",
                "literal"
            ],
            issn: [
                "field",
                "literal"
            ],
            issue: [
                "field",
                "literal"
            ],
            issuesubtitle: [
                "field",
                "literal"
            ],
            issuetitle: [
                "field",
                "literal"
            ],
            iswc: [
                "field",
                "literal"
            ],
            journalsubtitle: [
                "field",
                "literal"
            ],
            journaltitle: [
                "field",
                "literal"
            ],
            label: [
                "field",
                "literal"
            ],
            language: [
                "list",
                "key"
            ],
            library: [
                "field",
                "literal"
            ],
            location: [
                "list",
                "literal"
            ],
            mainsubtitle: [
                "field",
                "literal"
            ],
            maintitle: [
                "field",
                "title"
            ],
            maintitleaddon: [
                "field",
                "literal"
            ],
            month: [
                "field",
                "literal"
            ],
            nameaddon: [
                "field",
                "literal"
            ],
            note: [
                "field",
                "literal"
            ],
            number: [
                "field",
                "literal"
            ],
            organization: [
                "list",
                "literal"
            ],
            origdate: [
                "field",
                "date"
            ],
            origlanguage: [
                "list",
                "key"
            ],
            origlocation: [
                "list",
                "literal"
            ],
            origpublisher: [
                "list",
                "literal"
            ],
            origtitle: [
                "field",
                "title"
            ],
            pages: [
                "field",
                "range"
            ],
            pagetotal: [
                "field",
                "literal"
            ],
            pagination: [
                "field",
                "key"
            ],
            part: [
                "field",
                "literal"
            ],
            publisher: [
                "list",
                "literal"
            ],
            pubstate: [
                "field",
                "key"
            ],
            reprinttitle: [
                "field",
                "literal"
            ],
            series: [
                "field",
                "title"
            ],
            shortauthor: [
                "list",
                "name"
            ],
            shorteditor: [
                "list",
                "name"
            ],
            shorthand: [
                "field",
                "literal"
            ],
            shorthandintro: [
                "field",
                "literal"
            ],
            shortjournal: [
                "field",
                "literal"
            ],
            shortseries: [
                "field",
                "literal"
            ],
            shorttitle: [
                "field",
                "title"
            ],
            subtitle: [
                "field",
                "literal"
            ],
            title: [
                "field",
                "title"
            ],
            titleaddon: [
                "field",
                "literal"
            ],
            translator: [
                "list",
                "name"
            ],
            type: [
                "field",
                "title"
            ],
            url: [
                "field",
                "uri"
            ],
            urldate: [
                "field",
                "date"
            ],
            venue: [
                "field",
                "literal"
            ],
            version: [
                "field",
                "literal"
            ],
            volume: [
                "field",
                "integer"
            ],
            volumes: [
                "field",
                "integer"
            ],
            year: [
                "field",
                "literal"
            ],
            crossref: [
                "field",
                "entry key"
            ],
            entryset: [
                "separated",
                "literal"
            ],
            execute: [
                "field",
                "code"
            ],
            gender: [
                "field",
                "gender"
            ],
            langid: [
                "field",
                "identifier"
            ],
            langidopts: [
                "field",
                "literal"
            ],
            ids: [
                "separated",
                "entry key"
            ],
            indexsorttitle: [
                "field",
                "literal"
            ],
            keywords: [
                "separated",
                "literal"
            ],
            options: [
                "separated",
                "options"
            ],
            presort: [
                "field",
                "string"
            ],
            related: [
                "separated",
                "literal"
            ],
            relatedoptions: [
                "separated",
                "literal"
            ],
            relatedtype: [
                "field",
                "identifier"
            ],
            relatedstring: [
                "field",
                "literal"
            ],
            sortkey: [
                "field",
                "literal"
            ],
            sortname: [
                "list",
                "name"
            ],
            sortshorthand: [
                "field",
                "literal"
            ],
            sorttitle: [
                "field",
                "literal"
            ],
            sortyear: [
                "field",
                "integer"
            ],
            xdata: [
                "separated",
                "entry key"
            ],
            xref: [
                "field",
                "entry key"
            ],
            namea: [
                "list",
                "name"
            ],
            nameb: [
                "list",
                "name"
            ],
            namec: [
                "list",
                "name"
            ],
            nameatype: [
                "field",
                "key"
            ],
            namebtype: [
                "field",
                "key"
            ],
            namectype: [
                "field",
                "key"
            ],
            lista: [
                "list",
                "literal"
            ],
            listb: [
                "list",
                "literal"
            ],
            listc: [
                "list",
                "literal"
            ],
            listd: [
                "list",
                "literal"
            ],
            liste: [
                "list",
                "literal"
            ],
            listf: [
                "list",
                "literal"
            ],
            usera: [
                "field",
                "literal"
            ],
            userb: [
                "field",
                "literal"
            ],
            userc: [
                "field",
                "literal"
            ],
            userd: [
                "field",
                "literal"
            ],
            usere: [
                "field",
                "literal"
            ],
            userf: [
                "field",
                "literal"
            ],
            verba: [
                "field",
                "literal"
            ],
            verbb: [
                "field",
                "literal"
            ],
            verbc: [
                "field",
                "literal"
            ],
            address: [
                "list",
                "literal"
            ],
            annote: [
                "field",
                "literal"
            ],
            archiveprefix: [
                "field",
                "literal"
            ],
            journal: [
                "field",
                "literal"
            ],
            key: [
                "field",
                "literal"
            ],
            pdf: [
                "field",
                "verbatim"
            ],
            primaryclass: [
                "field",
                "literal"
            ],
            school: [
                "list",
                "literal"
            ],
            numpages: [
                "field",
                "integer"
            ],
            pmid: [
                "field",
                "literal"
            ],
            pmcid: [
                "field",
                "literal"
            ]
        };
    });
    var Q4 = p8((ai, pt)=>{
        pt.exports = {
            diacritics: {
                "`": "\u0300",
                "'": "\u0301",
                "^": "\u0302",
                "~": "\u0303",
                "=": "\u0304",
                u: "\u0306",
                ".": "\u0307",
                '"': "\u0308",
                r: "\u030A",
                H: "\u030B",
                v: "\u030C",
                b: "\u0332",
                d: "\u0323",
                c: "\u0327",
                k: "\u0328",
                t: "\u0361",
                textcommabelow: "\u0326"
            },
            commands: {
                textquotesingle: "'",
                textasciigrave: "`",
                textquotedbl: '"',
                textdollar: "$",
                textless: "<",
                textgreater: ">",
                textbackslash: "\\",
                textasciicircum: "^",
                textunderscore: "_",
                textbraceleft: "{",
                textbar: "|",
                textbraceright: "}",
                textasciitilde: "~",
                textexclamdown: "\xA1",
                textcent: "\xA2",
                textsterling: "\xA3",
                textcurrency: "\xA4",
                textyen: "\xA5",
                textbrokenbar: "\xA6",
                textsection: "\xA7",
                textasciidieresis: "\xA8",
                textcopyright: "\xA9",
                textordfeminine: "\xAA",
                guillemetleft: "\xAB",
                guillemotleft: "\xAB",
                textlnot: "\xAC",
                textregistered: "\xAE",
                textasciimacron: "\xAF",
                textdegree: "\xB0",
                textpm: "\xB1",
                texttwosuperior: "\xB2",
                textthreesuperior: "\xB3",
                textasciiacute: "\xB4",
                textmu: "\xB5",
                textparagraph: "\xB6",
                textperiodcentered: "\xB7",
                textonesuperior: "\xB9",
                textordmasculine: "\xBA",
                guillemetright: "\xBB",
                guillemotright: "\xBB",
                textonequarter: "\xBC",
                textonehalf: "\xBD",
                textthreequarters: "\xBE",
                textquestiondown: "\xBF",
                AE: "\xC6",
                DH: "\xD0",
                texttimes: "\xD7",
                O: "\xD8",
                TH: "\xDE",
                ss: "\xDF",
                ae: "\xE6",
                dh: "\xF0",
                textdiv: "\xF7",
                o: "\xF8",
                th: "\xFE",
                DJ: "\u0110",
                dj: "\u0111",
                i: "\u0131",
                IJ: "\u0132",
                ij: "\u0133",
                L: "\u0141",
                l: "\u0142",
                NG: "\u014A",
                ng: "\u014B",
                OE: "\u0152",
                oe: "\u0153",
                textflorin: "\u0192",
                j: "\u0237",
                textasciicaron: "\u02C7",
                textasciibreve: "\u02D8",
                textacutedbl: "\u02DD",
                textgravedbl: "\u02F5",
                texttildelow: "\u02F7",
                textbaht: "\u0E3F",
                SS: "\u1E9E",
                textcompwordmark: "\u200C",
                textendash: "\u2013",
                textemdash: "\u2014",
                textbardbl: "\u2016",
                textquoteleft: "\u2018",
                textquoteright: "\u2019",
                quotesinglbase: "\u201A",
                textquotedblleft: "\u201C",
                textquotedblright: "\u201D",
                quotedblbase: "\u201E",
                textdagger: "\u2020",
                textdaggerdbl: "\u2021",
                textbullet: "\u2022",
                textellipsis: "\u2026",
                textperthousand: "\u2030",
                textpertenthousand: "\u2031",
                guilsinglleft: "\u2039",
                guilsinglright: "\u203A",
                textreferencemark: "\u203B",
                textinterrobang: "\u203D",
                textfractionsolidus: "\u2044",
                textlquill: "\u2045",
                textrquill: "\u2046",
                textdiscount: "\u2052",
                textcolonmonetary: "\u20A1",
                textlira: "\u20A4",
                textnaira: "\u20A6",
                textwon: "\u20A9",
                textdong: "\u20AB",
                texteuro: "\u20AC",
                textpeso: "\u20B1",
                textcelsius: "\u2103",
                textnumero: "\u2116",
                textcircledP: "\u2117",
                textrecipe: "\u211E",
                textservicemark: "\u2120",
                texttrademark: "\u2122",
                textohm: "\u2126",
                textmho: "\u2127",
                textestimated: "\u212E",
                textleftarrow: "\u2190",
                textuparrow: "\u2191",
                textrightarrow: "\u2192",
                textdownarrow: "\u2193",
                textminus: "\u2212",
                Hwithstroke: "\u0126",
                hwithstroke: "\u0127",
                textasteriskcentered: "\u2217",
                textsurd: "\u221A",
                textlangle: "\u2329",
                textrangle: "\u232A",
                textblank: "\u2422",
                textvisiblespace: "\u2423",
                textopenbullet: "\u25E6",
                textbigcircle: "\u25EF",
                textmusicalnote: "\u266A",
                textmarried: "\u26AD",
                textdivorced: "\u26AE",
                textinterrobangdown: "\u2E18",
                textcommabelow: null,
                copyright: "\xA9",
                Gamma: "\u0393",
                Delta: "\u0394",
                Theta: "\u0398",
                Lambda: "\u039B",
                Xi: "\u039E",
                Pi: "\u03A0",
                Sigma: "\u03A3",
                Phi: "\u03A6",
                Psi: "\u03A8",
                Omega: "\u03A9",
                alpha: "\u03B1",
                beta: "\u03B2",
                gamma: "\u03B3",
                delta: "\u03B4",
                varepsilon: "\u03B5",
                zeta: "\u03B6",
                eta: "\u03B7",
                theta: "\u03B8",
                iota: "\u03B9",
                kappa: "\u03BA",
                lambda: "\u03BB",
                mu: "\u03BC",
                nu: "\u03BD",
                xi: "\u03BE",
                pi: "\u03C0",
                rho: "\u03C1",
                varsigma: "\u03C2",
                sigma: "\u03C3",
                tau: "\u03C4",
                upsilon: "\u03C5",
                varphi: "\u03C6",
                chi: "\u03C7",
                psi: "\u03C8",
                omega: "\u03C9",
                vartheta: "\u03D1",
                Upsilon: "\u03D2",
                phi: "\u03D5",
                varpi: "\u03D6",
                varrho: "\u03F1",
                epsilon: "\u03F5"
            }
        };
    });
    var S8 = p8((l)=>{
        "use strict";
        Object.defineProperty(l, "__esModule", {
            value: !0
        });
        l.sentenceCaseLanguages = l.required = l.mathScripts = l.mathScriptFormatting = l.ligatures = l.ligaturePattern = l.formattingEnvs = l.formattingCommands = l.formatting = l.fieldTypes = l.diacritics = l.defaultStrings = l.commands = l.argumentCommands = void 0;
        var dt = K(X2()), ft = K(Z5()), ee = K(Q4());
        function K(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var mt = dt.default;
        l.required = mt;
        var ht = ft.default;
        l.fieldTypes = ht;
        var gt = ee.default.diacritics;
        l.diacritics = gt;
        var bt = ee.default.commands;
        l.commands = bt;
        var vt = {
            jan: "01",
            feb: "02",
            mar: "03",
            apr: "04",
            may: "05",
            jun: "06",
            jul: "07",
            aug: "08",
            sep: "09",
            oct: "10",
            nov: "11",
            dec: "12",
            acmcs: "ACM Computing Surveys",
            acta: "Acta Informatica",
            cacm: "Communications of the ACM",
            ibmjrd: "IBM Journal of Research and Development",
            ibmsj: "IBM Systems Journal",
            ieeese: "IEEE Transactions on Software Engineering",
            ieeetc: "IEEE Transactions on Computers",
            ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
            ipl: "Information Processing Letters",
            jacm: "Journal of the ACM",
            jcss: "Journal of Computer and System Sciences",
            scp: "Science of Computer Programming",
            sicomp: "SIAM Journal on Computing",
            tocs: "ACM Transactions on Computer Systems",
            tods: "ACM Transactions on Database Systems",
            tog: "ACM Transactions on Graphics",
            toms: "ACM Transactions on Mathematical Software",
            toois: "ACM Transactions on Office Information Systems",
            toplas: "ACM Transactions on Programming Languages and Systems",
            tcs: "Theoretical Computer Science"
        };
        l.defaultStrings = vt;
        var yt = {
            it: "italics",
            itshape: "italics",
            sl: "italics",
            slshape: "italics",
            em: "italics",
            bf: "bold",
            bfseries: "bold",
            sc: "smallcaps",
            scshape: "smallcaps",
            rm: void 0,
            sf: void 0,
            tt: void 0
        };
        l.formattingEnvs = yt;
        var wt = {
            textit: "italics",
            textsl: "italics",
            emph: "italics",
            mkbibitalic: "italics",
            mkbibemph: "italics",
            textbf: "bold",
            strong: "bold",
            mkbibbold: "bold",
            textsc: "smallcaps",
            textsuperscript: "superscript",
            textsubscript: "subscript",
            enquote: "quotes",
            mkbibquote: "quotes",
            textmd: void 0,
            textrm: void 0,
            textsf: void 0,
            texttt: void 0,
            textup: void 0
        };
        l.formattingCommands = wt;
        var Tt = {
            italics: [
                "<i>",
                "</i>"
            ],
            bold: [
                "<b>",
                "</b>"
            ],
            superscript: [
                "<sup>",
                "</sup>"
            ],
            subscript: [
                "<sub>",
                "</sub>"
            ],
            smallcaps: [
                '<span style="font-variant:small-caps;">',
                "</span>"
            ],
            nocase: [
                '<span class="nocase">',
                "</span>"
            ],
            quotes: [
                "\u201C",
                "\u201D"
            ]
        };
        l.formatting = Tt;
        var xt = {
            ElsevierGlyph (e) {
                return String.fromCharCode(parseInt(e, 16));
            },
            href (e, t) {
                return e;
            },
            url (e) {
                return e;
            }
        };
        l.argumentCommands = xt;
        var kt = /---?|''|``|~/g;
        l.ligaturePattern = kt;
        var _t = {
            "--": "\u2013",
            "---": "\u2014",
            "``": "\u201C",
            "''": "\u201D",
            "~": "\xA0"
        };
        l.ligatures = _t;
        var Pt = {
            "^": "superscript",
            sp: "superscript",
            _: "subscript",
            sb: "subscript",
            mathrm: void 0
        };
        l.mathScriptFormatting = Pt;
        var Et = {
            "^": {
                0: "\u2070",
                1: "\xB9",
                2: "\xB2",
                3: "\xB3",
                4: "\u2074",
                5: "\u2075",
                6: "\u2076",
                7: "\u2077",
                8: "\u2078",
                9: "\u2079",
                "+": "\u207A",
                "-": "\u207B",
                "=": "\u207C",
                "(": "\u207D",
                ")": "\u207E",
                i: "\u2071",
                n: "\u207F"
            },
            _: {
                0: "\u2080",
                1: "\u2081",
                2: "\u2082",
                3: "\u2083",
                4: "\u2084",
                5: "\u2085",
                6: "\u2086",
                7: "\u2087",
                8: "\u2088",
                9: "\u2089",
                "+": "\u208A",
                "-": "\u208B",
                "=": "\u208C",
                "(": "\u208D",
                ")": "\u208E",
                a: "\u2090",
                e: "\u2091",
                o: "\u2092",
                x: "\u2093",
                ə: "\u2094",
                h: "\u2095",
                k: "\u2096",
                l: "\u2097",
                m: "\u2098",
                n: "\u2099",
                s: "\u209A",
                p: "\u209B",
                t: "\u209C"
            }
        };
        l.mathScripts = Et;
        var St = [
            "american",
            "british",
            "canadian",
            "english",
            "australian",
            "newzealand",
            "usenglish",
            "ukenglish",
            "en",
            "eng",
            "en-au",
            "en-bz",
            "en-ca",
            "en-cb",
            "en-gb",
            "en-ie",
            "en-jm",
            "en-nz",
            "en-ph",
            "en-tt",
            "en-us",
            "en-za",
            "en-zw",
            "anglais"
        ];
        l.sentenceCaseLanguages = St;
    });
    var ae7 = p8((O)=>{
        "use strict";
        Object.defineProperty(O, "__esModule", {
            value: !0
        });
        O.bibtexGrammar = void 0;
        O.parse = Dt;
        var te = h6("@citation-js/core"), Ot = jt(h6("moo")), Ct = S8();
        function jt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function re(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(n) {
                    return Object.getOwnPropertyDescriptor(e, n).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function g(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? re(Object(r), !0).forEach(function(i) {
                    Rt(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : re(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Rt(e, t, r) {
            return t = Lt(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Lt(e) {
            var t = qt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function qt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var ie = /[a-zA-Z_][a-zA-Z0-9_:-]*/, R = {
            comment: /%.*/,
            whitespace: {
                match: /\s+/,
                lineBreaks: !0
            }
        }, At = Ot.default.states({
            main: {
                junk: {
                    match: /@[cC][oO][mM][mM][eE][nN][tT].+|[^@]+/,
                    lineBreaks: !0
                },
                at: {
                    match: "@",
                    push: "entry"
                }
            },
            entry: g(g({}, R), {}, {
                otherEntryType: {
                    match: /[sS][tT][rR][iI][nN][gG]|[pP][rR][eE][aA][mM][bB][lL][eE]/,
                    next: "otherEntryContents"
                },
                dataEntryType: {
                    match: ie,
                    next: "dataEntryContents"
                }
            }),
            otherEntryContents: g(g({}, R), {}, {
                lbrace: {
                    match: /[{(]/,
                    next: "fields"
                }
            }),
            dataEntryContents: g(g({}, R), {}, {
                lbrace: {
                    match: /[{(]/,
                    next: "dataEntryContents"
                },
                label: /[^,\s]+/,
                comma: {
                    match: ",",
                    next: "fields"
                }
            }),
            fields: g(g({}, R), {}, {
                identifier: ie,
                number: /-?\d+/,
                hash: "#",
                equals: "=",
                comma: ",",
                quote: {
                    match: '"',
                    push: "quotedLiteral"
                },
                lbrace: {
                    match: "{",
                    push: "bracedLiteral"
                },
                rbrace: {
                    match: /[})]/,
                    pop: !0
                }
            }),
            quotedLiteral: {
                lbrace: {
                    match: "{",
                    push: "bracedLiteral"
                },
                quote: {
                    match: '"',
                    pop: !0
                },
                text: {
                    match: /(?:\\[\\{]|[^{"])+/,
                    lineBreaks: !0
                }
            },
            bracedLiteral: {
                lbrace: {
                    match: "{",
                    push: "bracedLiteral"
                },
                rbrace: {
                    match: "}",
                    pop: !0
                },
                text: {
                    match: /(?:\\[\\{}]|[^{}])+/,
                    lineBreaks: !0
                }
            }
        }), Nt = {
            "(": ")",
            "{": "}"
        }, ne = new te.util.Grammar({
            Main () {
                let e = [];
                for(;;){
                    for(; this.matchToken("junk");)this.consumeToken("junk");
                    if (this.matchEndOfFile()) break;
                    e.push(this.consumeRule("Entry"));
                }
                return e.filter(Boolean);
            },
            _ () {
                let e;
                for(; e !== this.token;)e = this.token, this.consumeToken("whitespace", !0), this.consumeToken("comment", !0);
            },
            Entry () {
                this.consumeToken("at"), this.consumeRule("_");
                let e = (this.matchToken("otherEntryType") ? this.consumeToken("otherEntryType") : this.consumeToken("dataEntryType")).value.toLowerCase();
                this.consumeRule("_");
                let t = this.consumeToken("lbrace").value;
                this.consumeRule("_");
                let r;
                if (e === "string") {
                    let [n, a] = this.consumeRule("Field");
                    this.state.strings[n] = a;
                } else if (e === "preamble") this.consumeRule("Expression");
                else {
                    let n = this.consumeToken("label").value;
                    this.consumeRule("_"), this.consumeToken("comma"), this.consumeRule("_");
                    let a = this.consumeRule("EntryBody");
                    r = {
                        type: e,
                        label: n,
                        properties: a
                    };
                }
                this.consumeRule("_");
                let i = this.consumeToken("rbrace").value;
                return i !== Nt[t] && te.logger.warn("[plugin-bibtex]", `entry started with "${t}", but ends with "${i}"`), r;
            },
            EntryBody () {
                let e = {};
                for(; this.matchToken("identifier");){
                    let [t, r] = this.consumeRule("Field");
                    if (e[t] = r, this.consumeRule("_"), this.consumeToken("comma", !0)) this.consumeRule("_");
                    else break;
                }
                return e;
            },
            Field () {
                let e = this.consumeToken("identifier").value.toLowerCase();
                this.consumeRule("_"), this.consumeToken("equals"), this.consumeRule("_");
                let t = this.consumeRule("Expression");
                return [
                    e,
                    t
                ];
            },
            Expression () {
                let e = this.consumeRule("ExpressionPart");
                for(this.consumeRule("_"); this.matchToken("hash");)this.consumeToken("hash"), this.consumeRule("_"), e += this.consumeRule("ExpressionPart").toString(), this.consumeRule("_");
                return e;
            },
            ExpressionPart () {
                return this.matchToken("identifier") ? this.state.strings[this.consumeToken("identifier").value.toLowerCase()] || "" : this.matchToken("number") ? parseInt(this.consumeToken("number")) : this.matchToken("quote") ? this.consumeRule("QuoteString") : this.consumeRule("BracketString");
            },
            QuoteString () {
                let e = "";
                for(this.consumeToken("quote"); !this.matchToken("quote");)e += this.consumeRule("Text");
                return this.consumeToken("quote"), e;
            },
            BracketString () {
                let e = "";
                for(this.consumeToken("lbrace"); !this.matchToken("rbrace");)e += this.consumeRule("Text");
                return this.consumeToken("rbrace"), e;
            },
            Text () {
                return this.matchToken("lbrace") ? `{${this.consumeRule("BracketString")}}` : this.consumeToken("text").value;
            }
        }, {
            strings: Ct.defaultStrings
        });
        O.bibtexGrammar = ne;
        function Dt(e) {
            return ne.parse(At.reset(e));
        }
    });
    var se5 = p8((b)=>{
        "use strict";
        Object.defineProperty(b, "__esModule", {
            value: !0
        });
        b.textEntry = b.text = b.parse = void 0;
        var L = {
            splitEntries: /\n\s*(?=\[)/g,
            parseEntry: /^\[(.+?)\]\s*(?:\n([\s\S]+))?$/,
            splitPairs: /((?=.)\s)*\n\s*/g,
            splitPair: /:(.*)/
        }, oe = (e)=>{
            let [, t, r] = e.match(L.parseEntry) || [];
            if (!t || !r) return {};
            {
                let i = {
                    type: "book",
                    label: t,
                    properties: {}
                };
                return r.trim().split(L.splitPairs).filter((n)=>n).forEach((n)=>{
                    let [a, s] = n.split(L.splitPair);
                    s && (a = a.trim(), s = s.trim(), a === "type" ? i.type = s : i.properties[a] = s);
                }), i;
            }
        };
        b.textEntry = oe;
        var Mt = (e)=>e.trim().split(L.splitEntries).map(oe);
        b.text = b.parse = Mt;
    });
    var U4 = p8((ci, It)=>{
        It.exports = {
            source: {
                article: "article-journal",
                book: "book",
                mvbook: "book",
                inbook: "chapter",
                bookinbook: "book",
                booklet: "book",
                collection: "book",
                mvcollection: "book",
                incollection: "chapter",
                dataset: "dataset",
                manual: "report",
                misc: "document",
                online: "webpage",
                patent: "patent",
                periodical: "periodical",
                proceedings: "book",
                mvproceedings: "book",
                inproceedings: "paper-conference",
                reference: "book",
                mvreference: "book",
                inreference: "entry",
                report: "report",
                software: "software",
                thesis: "thesis",
                unpublished: "manuscript",
                artwork: "graphic",
                audio: "song",
                image: "figure",
                jurisdiction: "legal_case",
                legislation: "legislation",
                legal: "treaty",
                letter: "personal_communication",
                movie: "motion_picture",
                music: "musical_score",
                performance: "performance",
                review: "review",
                standard: "standard",
                video: "motion_picture",
                conference: "paper-conference",
                electronic: "webpage",
                mastersthesis: "thesis",
                phdthesis: "thesis",
                techreport: "report",
                www: "webpage"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                bill: "legislation",
                book: "book",
                broadcast: "audio",
                chapter: "inbook",
                classic: "unpublished",
                collection: "misc",
                dataset: "dataset",
                document: "misc",
                entry: "inreference",
                "entry-dictionary": "inreference",
                "entry-encyclopedia": "inreference",
                event: "misc",
                figure: "artwork",
                graphic: "artwork",
                hearing: "legal",
                interview: "audio",
                legal_case: "jurisdiction",
                legislation: "legislation",
                manuscript: "unpublished",
                motion_picture: "movie",
                musical_score: "music",
                "paper-conference": "inproceedings",
                patent: "patent",
                performance: "performance",
                periodical: "periodical",
                personal_communication: "letter",
                post: "online",
                "post-weblog": "online",
                regulation: "legal",
                report: "report",
                review: "review",
                "review-book": "review",
                software: "software",
                song: "music",
                speech: "audio",
                standard: "standard",
                thesis: "thesis",
                treaty: "legal",
                webpage: "online"
            }
        };
    });
    var W4 = p8((ui, Bt)=>{
        Bt.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var A7 = p8((q)=>{
        "use strict";
        Object.defineProperty(q, "__esModule", {
            value: !0
        });
        q.default = void 0;
        var $t = ce(U4()), Yt = ce(W4()), zt = Ft(S8());
        function le(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (le = function(i) {
                return i ? r : t;
            })(e);
        }
        function Ft(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = le(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var a in e)if (a !== "default" && Object.prototype.hasOwnProperty.call(e, a)) {
                var s = n ? Object.getOwnPropertyDescriptor(e, a) : null;
                s && (s.get || s.set) ? Object.defineProperty(i, a, s) : i[a] = e[a];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function ce(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Kt = {
            constants: zt,
            types: {
                biblatex: $t.default,
                bibtex: Yt.default
            },
            parse: {
                biblatex: !0,
                strict: !1,
                sentenceCase: "never"
            },
            format: {
                useIdAsLabel: !1
            }
        };
        q.default = Kt;
    });
    var N9 = p8((d)=>{
        "use strict";
        Object.defineProperty(d, "__esModule", {
            value: !0
        });
        d.TYPE_KEYS = d.TYPE = d.STANDARD_NUMBERS_PATTERN = d.MONTHS = d.LABEL = d.Converters = void 0;
        d.formatLabel = he;
        d.parseDate = fe;
        d.parseMonth = me;
        var Ut = h6("@citation-js/core"), Wt = Gt(A7());
        function Gt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Ht = new Set([
            "the",
            "a",
            "an"
        ]), G = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, Jt = /[^\u0020-\u007F]+/g;
        function ue(e) {
            return e ? e.normalize("NFKD").replace(Jt, "").split(G).find((t)=>t.length && !Ht.has(t.toLowerCase())) : "";
        }
        var pe = new Ut.util.Translator([
            {
                source: "given",
                target: "given"
            },
            {
                source: "family",
                target: "family"
            },
            {
                source: "suffix",
                target: "suffix"
            },
            {
                source: "prefix",
                target: "non-dropping-particle"
            },
            {
                source: "family",
                target: "literal",
                when: {
                    source: !1,
                    target: {
                        family: !1,
                        given: !1
                    }
                }
            }
        ]), Vt = [
            "jan",
            "feb",
            "mar",
            "apr",
            "may",
            "jun",
            "jul",
            "aug",
            "sep",
            "oct",
            "nov",
            "dec"
        ], Xt = "BibTeX type";
        d.TYPE = Xt;
        var Zt = "BibTeX label";
        d.LABEL = Zt;
        var w = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12,
            january: 1,
            february: 2,
            march: 3,
            april: 4,
            may: 5,
            june: 6,
            july: 7,
            august: 8,
            september: 9,
            october: 10,
            november: 11,
            december: 12
        };
        d.MONTHS = w;
        var Qt = {
            bathesis: "Bachelor's thesis",
            mathesis: "Master's thesis",
            phdthesis: "PhD thesis",
            candthesis: "Candidate thesis",
            techreport: "technical report",
            resreport: "research report",
            software: "computer software",
            datacd: "data cd",
            audiocd: "audio cd",
            patent: "patent",
            patentde: "German patent",
            patenteu: "European patent",
            patentfr: "French patent",
            patentuk: "British patent",
            patentus: "U.S. patent",
            patreq: "patent request",
            patreqde: "German patent request",
            patreqeu: "European patent request",
            patreqfr: "French patent request",
            patrequk: "British patent request",
            patrequs: "U.S. patent request"
        };
        d.TYPE_KEYS = Qt;
        var de = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
        d.STANDARD_NUMBERS_PATTERN = de;
        function fe(e) {
            let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), i = +t[1], n = +t[2];
            return !i || i > 20 ? [
                r
            ] : n ? [
                r,
                i,
                n
            ] : [
                r,
                i
            ];
        }
        function me(e) {
            if (e == null) return [];
            if (+e) return [
                parseInt(e, 10)
            ];
            if (e = e.trim().toLowerCase(), e in w) return [
                w[e]
            ];
            let t = e.split(/\s+/), r, i;
            return t[0] in w ? (r = w[t[0]], i = parseInt(t[1])) : t[1] in w && (r = w[t[1]], i = parseInt(t[0])), i ? [
                r,
                i
            ] : r ? [
                r
            ] : [];
        }
        function he(e, t, r, i) {
            let n = "";
            return e && e[0] && (n += ue(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (n += t["date-parts"][0][0]), r ? n += r : i && (n += ue(i)), n;
        }
        var er = {
            PICK: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            },
            DATE: {
                toTarget (e) {
                    let t = e.split("/").map((r)=>r && r !== ".." ? fe(r) : void 0);
                    return isNaN(t[0][0]) ? {
                        literal: e
                    } : {
                        "date-parts": t
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
                }
            },
            YEAR_MONTH: {
                toTarget (e, t, r) {
                    return isNaN(+e) ? {
                        literal: e
                    } : !isNaN(+r) && !isNaN(+t) ? {
                        "date-parts": [
                            [
                                +e,
                                +t,
                                +r
                            ]
                        ]
                    } : {
                        "date-parts": [
                            [
                                +e,
                                ...me(t)
                            ]
                        ]
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) {
                        let [t, r, i] = e["date-parts"][0];
                        return [
                            t.toString(),
                            r ? i ? `${Vt[r - 1]} ${i}` : r : void 0
                        ];
                    } else return [];
                }
            },
            EPRINT: {
                toTarget (e, t) {
                    if (t === "pubmed") return e;
                },
                toSource (e) {
                    return [
                        e,
                        "pubmed"
                    ];
                }
            },
            EVENT_TITLE: {
                toTarget (e, t) {
                    return t && (e += " (" + t + ")"), e;
                },
                toSource (e) {
                    return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
                }
            },
            HOW_PUBLISHED: {
                toTarget (e) {
                    if (e.startsWith("http")) return e;
                }
            },
            KEYWORDS: {
                toTarget (e) {
                    return e.join(",");
                },
                toSource (e) {
                    return e.split(",");
                }
            },
            LABEL: {
                toTarget (e) {
                    return [
                        e,
                        e
                    ];
                },
                toSource (e, t, r, i, n, a) {
                    let s;
                    return e === null ? s = "null" : e === void 0 ? s = "undefined" : s = e.toString().replace(G, ""), Wt.default.format.useIdAsLabel ? s : t && !G.test(t) ? t : he(r, i, n, a) || s;
                }
            },
            NAMES: {
                toTarget (e) {
                    return e.map(pe.convertToTarget);
                },
                toSource (e) {
                    return e.map(pe.convertToSource);
                }
            },
            PAGES: {
                toTarget (e) {
                    return e.replace(/[–—]/, "-");
                },
                toSource (e) {
                    return e.replace("-", "--");
                }
            },
            STANDARD_NUMBERS: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    let t = e.toString().match(de);
                    return t ? t.slice(1, 5) : [];
                }
            },
            STATUS: {
                toSource (e) {
                    if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
                }
            },
            TITLE: {
                toTarget (e, t, r) {
                    return t && (e += ": " + t), e;
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            }
        };
        d.Converters = er;
    });
    var be4 = p8((D)=>{
        "use strict";
        Object.defineProperty(D, "__esModule", {
            value: !0
        });
        D.default = void 0;
        var tr = h6("@citation-js/core"), rr = h6("@citation-js/date"), ge = ir(U4()), o = N9();
        function ir(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var nr = [
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1,
                        addendum: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, rr.format)(e)}]`;
                    }
                }
            },
            {
                source: "numpages",
                target: "number-of-pages",
                when: {
                    source: {
                        pagetotal: !1
                    },
                    target: !1
                }
            },
            {
                source: "pmid",
                target: "PMID",
                when: {
                    source: {
                        eprinttype (e) {
                            return e !== "pmid";
                        },
                        archiveprefix (e) {
                            return e !== "pmid";
                        }
                    },
                    target: !1
                }
            },
            {
                source: "pmcid",
                target: "PMCID",
                when: {
                    target: !1
                }
            },
            {
                source: "s2id",
                target: "custom",
                convert: {
                    toTarget (e) {
                        return {
                            S2ID: e
                        };
                    },
                    toSource ({ S2ID: e }) {
                        return e;
                    }
                }
            }
        ], ar = [
            {
                source: "annote",
                target: "annote",
                when: {
                    source: {
                        annotation: !1
                    },
                    target: !1
                }
            },
            {
                source: "address",
                target: "publisher-place",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        location: !1
                    },
                    target: !1
                }
            },
            {
                source: [
                    "eprint",
                    "archiveprefix"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT,
                when: {
                    source: {
                        eprinttype: !1
                    },
                    target: !1
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1,
                        booktitle: !1,
                        journaltitle: !1
                    },
                    target: !1
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: !1
                }
            }
        ], or = new tr.util.Translator([
            ...ar,
            ...nr,
            {
                source: "abstract",
                target: "abstract"
            },
            {
                source: "urldate",
                target: "accessed",
                convert: o.Converters.DATE
            },
            {
                source: "annotation",
                target: "annote"
            },
            {
                source: "author",
                target: "author",
                convert: o.Converters.NAMES
            },
            {
                source: "library",
                target: "call-number"
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "bookauthor",
                target: "container-author",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    "maintitle",
                    "mainsubtitle",
                    "maintitleaddon"
                ],
                target: "container-title",
                when: {
                    source: !0,
                    target: {
                        "number-of-volumes": !0
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "booktitle",
                    "booksubtitle",
                    "booktitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1
                    },
                    target: {
                        "number-of-volumes": !1,
                        type (e) {
                            return !e || !e.startsWith("article");
                        }
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "journaltitle",
                    "journalsubtitle",
                    "journaltitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: "shortjournal",
                target: "container-title-short",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "shortjournal",
                target: "journalAbbreviation",
                when: {
                    source: !1,
                    target: {
                        "container-title-short": !1
                    }
                }
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "bookinbook",
                            "suppbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "shortseries",
                target: "collection-title-short"
            },
            {
                source: "doi",
                target: "DOI"
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    o.TYPE,
                    "entrysubtype",
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t, r) {
                        return r || (e === "mastersthesis" && (r = "mathesis"), e === "phdthesis" && (r = "phdthesis"), e === "techreport" && (r = "techreport")), [
                            ge.default.source[e] || "document",
                            r || t
                        ];
                    },
                    toSource (e, t) {
                        let r = ge.default.target[e] || "misc";
                        return t in o.TYPE_KEYS ? [
                            r,
                            void 0,
                            t
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: o.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "eventdate",
                target: "event-date",
                convert: o.Converters.DATE
            },
            {
                source: "venue",
                target: "event-place"
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event-title",
                convert: o.Converters.EVENT_TITLE
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event",
                convert: o.Converters.EVENT_TITLE,
                when: {
                    source: !1,
                    target: {
                        "event-title": !1
                    }
                }
            },
            {
                source: o.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: o.Converters.LABEL
            },
            {
                source: "isbn",
                target: "ISBN"
            },
            {
                source: "issn",
                target: "ISSN"
            },
            {
                source: "issue",
                target: "issue",
                when: {
                    source: {
                        number: !1,
                        [o.TYPE]: [
                            "article",
                            "periodical"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "string" && !e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [o.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return e && (typeof e == "number" || e.match(/\d+/));
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "date",
                target: "issued",
                convert: o.Converters.DATE
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: o.Converters.YEAR_MONTH,
                when: {
                    source: {
                        date: !1
                    },
                    target: !1
                }
            },
            {
                source: "location",
                target: "jurisdiction",
                when: {
                    source: {
                        type: "patent"
                    },
                    target: {
                        type: "patent"
                    }
                }
            },
            {
                source: "keywords",
                target: "keyword",
                convert: o.Converters.KEYWORDS
            },
            {
                source: "language",
                target: "language",
                convert: o.Converters.PICK
            },
            {
                source: "langid",
                target: "language",
                when: {
                    source: {
                        language: !1
                    },
                    target: !1
                }
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "addendum",
                target: "note",
                when: {
                    source: {
                        note: !1
                    },
                    target: !1
                }
            },
            {
                source: "eid",
                target: "number",
                when: {
                    target: {
                        type: [
                            "article-journal"
                        ]
                    }
                }
            },
            {
                source: [
                    "isan",
                    "ismn",
                    "isrn",
                    "iswc"
                ],
                target: "number",
                convert: o.Converters.STANDARD_NUMBERS,
                when: {
                    source: {
                        [o.TYPE] (e) {
                            return e !== "patent";
                        }
                    },
                    target: {
                        type (e) {
                            return e !== "patent";
                        }
                    }
                }
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "patent",
                            "report",
                            "techreport",
                            "legislation"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report",
                            "legislation"
                        ]
                    }
                }
            },
            {
                source: "origdate",
                target: "original-date",
                convert: o.Converters.DATE
            },
            {
                source: "origlocation",
                target: "original-publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "origpublisher",
                target: "original-publisher",
                convert: o.Converters.PICK
            },
            {
                source: "origtitle",
                target: "original-title"
            },
            {
                source: "pages",
                target: "page",
                when: {
                    source: {
                        bookpagination: [
                            void 0,
                            "page"
                        ]
                    }
                },
                convert: o.Converters.PAGES
            },
            {
                source: "pagetotal",
                target: "number-of-pages"
            },
            {
                source: "part",
                target: "part-number"
            },
            {
                source: [
                    "eprint",
                    "eprinttype"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT
            },
            {
                source: "location",
                target: "publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "publisher",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: !0,
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "paper-conference",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "webpage"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: [
                            "report",
                            "thesis"
                        ]
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: [
                    "pages",
                    "bookpagination"
                ],
                target: "section",
                when: {
                    source: {
                        bookpagination: "section"
                    },
                    target: {
                        page: !1
                    }
                },
                convert: {
                    toTarget (e) {
                        return e;
                    },
                    toSource (e) {
                        return [
                            e,
                            "section"
                        ];
                    }
                }
            },
            {
                source: "pubstate",
                target: "status",
                convert: o.Converters.STATUS
            },
            {
                source: "shorttitle",
                target: "title-short"
            },
            {
                source: "shorttitle",
                target: "shortTitle",
                when: {
                    source: !1,
                    target: {
                        "title-short": !1
                    }
                }
            },
            {
                source: [
                    "title",
                    "subtitle",
                    "titleaddon"
                ],
                target: "title",
                convert: o.Converters.TITLE
            },
            {
                source: "translator",
                target: "translator",
                convert: o.Converters.NAMES
            },
            {
                source: "url",
                target: "URL"
            },
            {
                source: "howpublished",
                target: "URL",
                convert: o.Converters.HOW_PUBLISHED,
                when: {
                    source: {
                        url: !1
                    },
                    target: !1
                }
            },
            {
                source: "version",
                target: "version"
            },
            {
                source: "volume",
                target: "volume"
            },
            {
                source: "volumes",
                target: "number-of-volumes"
            },
            {
                source: [
                    "issuetitle",
                    "issuesubtitle",
                    "issuetitleaddon"
                ],
                target: "volume-title",
                convert: o.Converters.TITLE
            }
        ]);
        D.default = or;
    });
    var ye3 = p8((M)=>{
        "use strict";
        Object.defineProperty(M, "__esModule", {
            value: !0
        });
        M.default = void 0;
        var sr = h6("@citation-js/core"), lr = h6("@citation-js/date"), ve = cr(W4()), u = N9();
        function cr(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var ur = new sr.util.Translator([
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, lr.format)(e)}]`;
                    }
                }
            },
            {
                source: "annote",
                target: "annote"
            },
            {
                source: "address",
                target: "publisher-place",
                convert: u.Converters.PICK
            },
            {
                source: "author",
                target: "author",
                convert: u.Converters.NAMES
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [u.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "booktitle",
                target: "container-title",
                when: {
                    target: {
                        type: [
                            "chapter",
                            "paper-conference"
                        ]
                    }
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        [u.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: u.Converters.NAMES
            },
            {
                source: u.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: u.Converters.LABEL
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [u.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "number" || typeof e == "string" && e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: u.Converters.YEAR_MONTH
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [u.TYPE]: [
                            "patent",
                            "report",
                            "techreport"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report"
                        ]
                    }
                }
            },
            {
                source: "pages",
                target: "page",
                convert: u.Converters.PAGES
            },
            {
                source: "publisher",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "paper-conference"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: "report"
                    }
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: {
                        type: "thesis"
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1,
                        school: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: "title",
                target: "title"
            },
            {
                source: [
                    u.TYPE,
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t) {
                        let r = ve.default.source[e] || "document";
                        return t ? [
                            r,
                            t
                        ] : e === "mastersthesis" ? [
                            r,
                            "Master's thesis"
                        ] : e === "phdthesis" ? [
                            r,
                            "PhD thesis"
                        ] : [
                            r
                        ];
                    },
                    toSource (e, t) {
                        let r = ve.default.target[e] || "misc";
                        return /^(master'?s|diploma) thesis$/i.test(t) ? [
                            "mastersthesis"
                        ] : /^(phd|doctoral) thesis$/i.test(t) ? [
                            "phdthesis"
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: u.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "howpublished",
                target: "URL",
                convert: u.Converters.HOW_PUBLISHED,
                when: {
                    target: {
                        publisher: !1
                    }
                }
            },
            {
                source: "volume",
                target: "volume"
            }
        ]);
        M.default = ur;
    });
    var Ee3 = p8((H)=>{
        "use strict";
        Object.defineProperty(H, "__esModule", {
            value: !0
        });
        H.crossref = Pe;
        function we(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(n) {
                    return Object.getOwnPropertyDescriptor(e, n).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function pr(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? we(Object(r), !0).forEach(function(i) {
                    dr(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : we(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function dr(e, t, r) {
            return t = fr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function fr(e) {
            var t = mr(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function mr(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var hr = new Set([
            "book",
            "inbook",
            "bookinbook",
            "suppbook"
        ]), _e = new Set([
            "inbook",
            "bookinbook",
            "suppbook"
        ]), Te = new Set([
            "collection",
            "reference",
            "incollection",
            "inreference",
            "suppcollection"
        ]), xe = new Set([
            "incollection",
            "inreference",
            "suppcollection"
        ]), gr = new Set([
            "proceedings",
            "inproceedings"
        ]), br = new Set([
            "inproceedings"
        ]), vr = new Set([
            "article",
            "suppperiodical"
        ]), ke = {
            mvbook: [
                "main",
                hr
            ],
            mvcollection: [
                "main",
                Te
            ],
            mvreference: [
                "main",
                Te
            ],
            mvproceedings: [
                "main",
                gr
            ],
            book: [
                "book",
                _e
            ],
            collection: [
                "book",
                xe
            ],
            reference: [
                "book",
                xe
            ],
            proceedings: [
                "book",
                br
            ],
            periodical: [
                "journal",
                vr
            ]
        };
        function Pe(e, t, r) {
            if (t.crossref in r) {
                let i = r[t.crossref];
                if (i.properties === t) return t;
                let n = pr({}, Pe(i.type, i.properties, r));
                if (delete n.ids, delete n.crossref, delete n.xref, delete n.entryset, delete n.entrysubtype, delete n.execute, delete n.label, delete n.options, delete n.presort, delete n.related, delete n.relatedoptions, delete n.relatedstring, delete n.relatedtype, delete n.shortand, delete n.shortandintro, delete n.sortkey, (i.type === "mvbook" || i.type === "book") && _e.has(e) && (n.bookauthor = n.author), i.type in ke) {
                    let [a, s] = ke[i.type];
                    s.has(e) && (n[a + "title"] = n.title, n[a + "subtitle"] = n.subtitle, a !== "journal" && (n[a + "titleaddon"] = n.titleaddon), delete n.title, delete n.subtitle, delete n.titleaddon, delete n.shorttitle, delete n.sorttitle, delete n.indextitle, delete n.indexsorttitle);
                }
                return Object.assign(n, t);
            }
            return t;
        }
    });
    var Ae4 = p8((k)=>{
        "use strict";
        Object.defineProperty(k, "__esModule", {
            value: !0
        });
        k.format = Or;
        k.formatBibtex = Er;
        k.parse = Sr;
        k.parseBibtex = Pr;
        var x = N9(), Oe = je(be4()), Ce = je(ye3()), yr = Ee3();
        function je(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function wr(e, t) {
            if (e == null) return {};
            var r = Tr(e, t), i, n;
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for(n = 0; n < a.length; n++)i = a[n], !(t.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(e, i) && (r[i] = e[i]);
            }
            return r;
        }
        function Tr(e, t) {
            if (e == null) return {};
            var r = {}, i = Object.keys(e), n, a;
            for(a = 0; a < i.length; a++)n = i[a], !(t.indexOf(n) >= 0) && (r[n] = e[n]);
            return r;
        }
        function Se(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(n) {
                    return Object.getOwnPropertyDescriptor(e, n).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function xr(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? Se(Object(r), !0).forEach(function(i) {
                    kr(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Se(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function kr(e, t, r) {
            return t = Re(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Re(e) {
            var t = _r(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function _r(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function Le(e, t) {
            let r = {};
            for (let i of e)r[i.label] = i;
            return e.map(({ type: i, label: n, properties: a })=>t.convertToTarget(xr({
                    [x.TYPE]: i,
                    [x.LABEL]: n
                }, (0, yr.crossref)(i, a, r))));
        }
        function qe(e, t) {
            return e.map((r)=>{
                let i = t.convertToSource(r), { [x.TYPE]: n, [x.LABEL]: a } = i, s = wr(i, [
                    x.TYPE,
                    x.LABEL
                ].map(Re));
                return {
                    type: n,
                    label: a,
                    properties: s
                };
            });
        }
        function Pr(e) {
            return Le(e, Ce.default);
        }
        function Er(e) {
            return qe(e, Ce.default);
        }
        function Sr(e) {
            return Le(e, Oe.default);
        }
        function Or(e) {
            return qe(e, Oe.default);
        }
    });
    var De3 = p8((_)=>{
        "use strict";
        Object.defineProperty(_, "__esModule", {
            value: !0
        });
        _.formatNameParts = T;
        _.getStringCase = Cr;
        _.orderNameParts = Ne;
        _.orderNamePieces = jr;
        function Cr(e) {
            let t = e.toUpperCase(), r = e.toLowerCase();
            for(let i = 0; i < e.length; i++)if (t[i] !== r[i]) return t[i] === e[i];
            return null;
        }
        function T(e) {
            if (e.length === 0) return;
            let t = "";
            for(; e.length > 1;){
                let { value: i, hyphenated: n } = e.shift();
                t += i + (n ? "-" : " ");
            }
            let r = t + e[0].value;
            return r[0] && r;
        }
        function Ne(e, t = !0) {
            let r = [], i = [];
            if (t) for(; e.length > 1 && e[0].upperCase !== !1;){
                for(r.push(...i), i.length = 0; e.length > 1 && e[0].upperCase !== !1 && !e[0].hyphenated;)r.push(e.shift());
                for(; e.length > 0 && e[0].upperCase !== !1 && e[0].hyphenated;)i.push(e.shift());
            }
            let n = [], a = [];
            for(; e.length > 1;){
                for(n.push(...a), a.length = 0; e.length > 1 && e[0].upperCase === !1;)n.push(e.shift());
                for(; e.length > 0 && e[0].upperCase !== !1;)a.push(e.shift());
            }
            return i.length && a.unshift(...i), e.length && a.push(e[0]), [
                T(r),
                T(n),
                T(a)
            ];
        }
        function jr(e) {
            if (e[0][0].label) {
                let a = {};
                for (let [{ value: s, label: m }] of e)a[m] = s;
                return a;
            }
            let t = {}, [r, i, n] = Ne(e[0], e.length === 1);
            return n && (t.family = n), i && (t.prefix = i), e.length === 3 ? (t.given = T(e[2]), t.suffix = T(e[1])) : e.length === 2 ? t.given = T(e[1]) : r && (t.given = r), t;
        }
    });
    var Fe3 = p8((j)=>{
        "use strict";
        Object.defineProperty(j, "__esModule", {
            value: !0
        });
        j.parse = Yr;
        j.valueGrammar = void 0;
        var Rr = h6("@citation-js/core"), Be = Ye(h6("moo")), Lr = Ye(A7()), c = qr(S8()), I = De3();
        function $e(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return ($e = function(i) {
                return i ? r : t;
            })(e);
        }
        function qr(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = $e(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, n = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var a in e)if (a !== "default" && Object.prototype.hasOwnProperty.call(e, a)) {
                var s = n ? Object.getOwnPropertyDescriptor(e, a) : null;
                s && (s.get || s.set) ? Object.defineProperty(i, a, s) : i[a] = e[a];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function Ye(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Me(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(n) {
                    return Object.getOwnPropertyDescriptor(e, n).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function f(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? Me(Object(r), !0).forEach(function(i) {
                    Ar(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Me(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Ar(e, t, r) {
            return t = Nr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Nr(e) {
            var t = Dr(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Dr(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var P = {
            command: {
                match: /\\(?:[a-zA-Z]+|.) */,
                type: Be.default.keywords({
                    commandBegin: "\\begin",
                    commandEnd: "\\end"
                }),
                value: (e)=>e.slice(1).trim()
            },
            lbrace: {
                match: "{",
                push: "bracedLiteral"
            },
            mathShift: {
                match: "$",
                push: "mathLiteral"
            },
            whitespace: {
                match: /[\s]+|~/,
                lineBreaks: !0,
                value (e) {
                    return e === "~" ? "\xA0" : " ";
                }
            }
        }, Mr = Be.default.states({
            stringLiteral: f(f({}, P), {}, {
                text: /[^{$}\s~\\]+/
            }),
            namesLiteral: f(f({
                and: /\s+[aA][nN][dD]\s+/,
                comma: ",",
                hyphen: "-",
                equals: "="
            }, P), {}, {
                text: /[^{$}\s~\\,=-]+/
            }),
            listLiteral: f(f({
                and: /\s+and\s+/
            }, P), {}, {
                text: /[^{$}\s~\\]+/
            }),
            separatedLiteral: f(f({
                comma: ","
            }, P), {}, {
                text: /[^{$}\s~\\,]+/
            }),
            bracedLiteral: f(f({}, P), {}, {
                rbrace: {
                    match: "}",
                    pop: !0
                },
                text: /[^{$}\s~\\]+/
            }),
            mathLiteral: f(f({}, P), {}, {
                mathShift: {
                    match: "$",
                    pop: !0
                },
                script: /[\^_]/,
                text: /[^{$}\s~\\^_]+/
            })
        });
        function B(e) {
            return e[0], e;
        }
        function C(e, t) {
            return t in c.formatting ? e && c.formatting[t].join(e) : e;
        }
        var ze = new Rr.util.Grammar({
            String () {
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
                return B(e);
            },
            StringNames () {
                let e = [];
                for(;;){
                    if (this.consumeToken("whitespace", !0), e.push(this.consumeRule("Name")), this.consumeToken("whitespace", !0), this.matchEndOfFile()) return e;
                    this.consumeToken("and");
                }
            },
            Name () {
                let e = [];
                for(;;){
                    if (e.push(this.consumeRule("NamePiece")), this.matchEndOfFile() || this.matchToken("and")) return (0, I.orderNamePieces)(e);
                    this.consumeToken("comma"), this.consumeToken("whitespace", !0);
                }
            },
            NamePiece () {
                let e = [];
                for(;;){
                    let t = this.consumeRule("NameToken");
                    if (t.label) return t.label = (0, I.formatNameParts)([
                        ...e,
                        {
                            value: t.label
                        }
                    ]), [
                        t
                    ];
                    if (e.push(t), this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma")) return e;
                    for(; this.matchToken("hyphen") || this.matchToken("whitespace");)this.consumeToken();
                }
            },
            NameToken () {
                let e = null, t = "";
                for(;;)if (e === null && this.matchToken("text")) {
                    let r = this.consumeToken().value;
                    t += r, e = (0, I.getStringCase)(r);
                } else {
                    if (this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma") || this.matchToken("whitespace")) return {
                        value: t,
                        upperCase: e
                    };
                    if (this.matchToken("hyphen")) return {
                        value: t,
                        upperCase: e,
                        hyphenated: !0
                    };
                    if (this.matchToken("equals")) {
                        this.consumeToken("equals");
                        let r = this.consumeRule("NamePiece");
                        return r[0].label && (t += "=" + r[0].label), {
                            value: (0, I.formatNameParts)(r),
                            label: t
                        };
                    } else t += this.consumeRule("Text");
                }
            },
            StringList () {
                let e = [];
                for(; !this.matchEndOfFile();){
                    let t = "";
                    for(; !this.matchEndOfFile() && !this.matchToken("and");)t += this.consumeRule("Text");
                    e.push(B(t)), this.consumeToken("and", !0);
                }
                return e.length === 1 ? e[0] : e;
            },
            StringSeparated () {
                let e = [];
                for(; !this.matchEndOfFile();){
                    let t = "";
                    for(; !this.matchEndOfFile() && !this.matchToken("comma");)t += this.consumeRule("Text");
                    e.push(t.trim()), this.consumeToken("comma", !0), this.consumeToken("whitespace", !0);
                }
                return e;
            },
            StringVerbatim () {
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeToken().text;
                return B(e);
            },
            StringUri () {
                let e = this.consumeRule("StringVerbatim");
                try {
                    return decodeURI(e) === e ? encodeURI(e) : e;
                } catch  {
                    return encodeURI(e);
                }
            },
            StringTitleCase () {
                this.state.sentenceCase = !0;
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
                return B(e);
            },
            BracketString () {
                var e;
                let t = "";
                this.consumeToken("lbrace");
                let r = this.state.sentenceCase;
                for(this.state.sentenceCase = r && this.matchToken("command"), (e = this.state).partlyLowercase && (e.partlyLowercase = this.state.sentenceCase); !this.matchToken("rbrace");)t += this.consumeRule("Text");
                let n = r && !this.state.sentenceCase && this.state.partlyLowercase;
                return this.state.sentenceCase = r, this.consumeToken("rbrace"), n ? C(t, "nocase") : t;
            },
            MathString () {
                let e = "";
                for(this.consumeToken("mathShift"); !this.matchToken("mathShift");){
                    if (this.matchToken("script")) {
                        let t = this.consumeToken("script").value, r = this.consumeRule("Text").split("");
                        if (r.every((i)=>i in c.mathScripts[t])) e += r.map((i)=>c.mathScripts[t][i]).join("");
                        else {
                            let i = c.mathScriptFormatting[t];
                            e += c.formatting[i].join(r.join(""));
                        }
                        continue;
                    }
                    if (this.matchToken("command")) {
                        let t = this.token.value;
                        if (t in c.mathScriptFormatting) {
                            this.consumeToken("command");
                            let r = this.consumeRule("BracketString");
                            e += C(r, c.mathScriptFormatting[t]);
                            continue;
                        }
                    }
                    e += this.consumeRule("Text");
                }
                return this.consumeToken("mathShift"), e;
            },
            Text () {
                if (this.matchToken("lbrace")) return this.consumeRule("BracketString");
                if (this.matchToken("mathShift")) return this.consumeRule("MathString");
                if (this.matchToken("whitespace")) return this.consumeToken("whitespace").value;
                if (this.matchToken("commandBegin")) return this.consumeRule("EnclosedEnv");
                if (this.matchToken("command")) return this.consumeRule("Command");
                let e = this.consumeToken("text").value.replace(c.ligaturePattern, (m)=>c.ligatures[m]), t = this.state.afterPunctuation;
                if (this.state.afterPunctuation = /[?!.:]$/.test(e), !this.state.sentenceCase) {
                    var r;
                    return (r = this.state).partlyLowercase || (r.partlyLowercase = e === e.toLowerCase() && e !== e.toUpperCase()), e;
                }
                let [i, ...n] = e, a = n.join(""), s = a.toLowerCase();
                return a !== s ? e : t ? i + s : e.toLowerCase();
            },
            Command () {
                let e = this.consumeToken("command"), t = e.value;
                if (t in c.formattingEnvs) {
                    let r = this.consumeRule("Env"), i = c.formattingEnvs[t];
                    return C(r, i);
                } else if (t in c.formattingCommands) {
                    let r = this.consumeRule("BracketString"), i = c.formattingCommands[t];
                    return C(r, i);
                } else {
                    if (t in c.commands) return c.commands[t];
                    if (t in c.diacritics && !this.matchEndOfFile()) {
                        let r = this.consumeRule("Text");
                        return (r[0] + c.diacritics[t]).normalize("NFC") + r.slice(1);
                    } else if (t in c.argumentCommands) {
                        let r = c.argumentCommands[t], i = [], n = r.length;
                        for(; n-- > 0;)this.consumeToken("whitespace", !0), i.push(this.consumeRule("BracketString"));
                        return r(...i);
                    } else return /^[&%$#_{}]$/.test(t) ? e.text.slice(1) : e.text;
                }
            },
            Env () {
                let e = "";
                for(; !this.matchEndOfFile() && !this.matchToken("rbrace");)e += this.consumeRule("Text");
                return e;
            },
            EnclosedEnv () {
                this.consumeToken("commandBegin");
                let e = this.consumeRule("BracketString"), t = "";
                for(; !this.matchToken("commandEnd");)t += this.consumeRule("Text");
                let r = this.consumeToken("commandEnd"), i = this.consumeRule("BracketString");
                if (e !== i) throw new SyntaxError(this.lexer.formatError(r, `environment started with "${e}", ended with "${i}"`));
                return C(t, c.formattingEnvs[e]);
            }
        }, {
            sentenceCase: !1,
            partlyLowercase: !1,
            afterPunctuation: !0
        });
        j.valueGrammar = ze;
        function Ie(e) {
            return c.sentenceCaseLanguages.includes(e.toLowerCase());
        }
        function Ir(e) {
            return Array.isArray(e) ? e.every(Ie) : Ie(e);
        }
        function Br(e, t) {
            if (e[1] === "name") return e[0] === "list" ? "StringNames" : "Name";
            if (e[1] === "title") {
                let r = Lr.default.parse.sentenceCase;
                return r === "always" || r === "english" && Ir(t) ? "StringTitleCase" : "String";
            }
            switch(e[0] === "field" ? e[1] : e[0]){
                case "list":
                    return "StringList";
                case "separated":
                    return "StringSeparated";
                case "verbatim":
                    return "StringVerbatim";
                case "uri":
                    return "StringUri";
                case "title":
                case "literal":
                default:
                    return "String";
            }
        }
        function $r(e) {
            if (e[1] === "name") return "namesLiteral";
            switch(e[0]){
                case "list":
                    return "listLiteral";
                case "separated":
                    return "separatedLiteral";
                case "field":
                default:
                    return "stringLiteral";
            }
        }
        function Yr(e, t, r = []) {
            let i = c.fieldTypes[t] || [];
            return ze.parse(Mr.reset(e, {
                state: $r(i),
                line: 0,
                col: 0
            }), Br(i, r));
        }
    });
    var Ze2 = p8(($)=>{
        "use strict";
        Object.defineProperty($, "__esModule", {
            value: !0
        });
        $.parse = Wr;
        $.parseBibtex = Gr;
        var Ge = zr(A7()), He = Ae4(), Ke = Fe3(), Je = S8();
        function zr(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Ue(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(n) {
                    return Object.getOwnPropertyDescriptor(e, n).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function We(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? Ue(Object(r), !0).forEach(function(i) {
                    Fr(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Ue(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Fr(e, t, r) {
            return t = Kr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Kr(e) {
            var t = Ur(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Ur(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function Ve(e, t) {
            let r = [];
            for (let { type: i, label: n, properties: a } of e)if (i in t) {
                let s = [];
                for (let m of t[i])Array.isArray(m) && !m.some((rt)=>rt in a) ? s.push(m.join("/")) : typeof m == "string" && !(m in a) && s.push(m);
                s.length && r.push([
                    n,
                    `missing fields: ${s.join(", ")}`
                ]);
            } else r.push([
                n,
                `invalid type: "${i}"`
            ]);
            if (r.length) throw new RangeError([
                "Invalid entries:"
            ].concat(r.map(([i, n])=>`  - ${i} has ${n}`)).join(`
`));
        }
        function Xe(e) {
            let t = {};
            "language" in e.properties && (t.language = (0, Ke.parse)(e.properties.language, "language"));
            for(let r in e.properties){
                let i = e.properties[r];
                i !== "" && (t[r] = (0, Ke.parse)(i + "", r, t.language));
            }
            return We(We({}, e), {}, {
                properties: t
            });
        }
        function Wr(e) {
            return Ge.default.parse.strict && Ve(e, Je.required.biblatex), (0, He.parse)(e.map(Xe));
        }
        function Gr(e) {
            return Ge.default.parse.strict && Ve(e, Je.required.bibtex), (0, He.parseBibtex)(e.map(Xe));
        }
    });
    var J3 = p8((E)=>{
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        E.ref = E.formats = void 0;
        var Qe = ae7(), Hr = se5(), Y = Ze2(), Jr = "@bibtex";
        E.ref = Jr;
        var Vr = {
            "@biblatex/text": {
                parse: Qe.parse,
                parseType: {
                    dataType: "String",
                    predicate: /@\s{0,5}[A-Za-z]{1,13}\s{0,5}\{\s{0,5}[^@{}"=,\\\s]{0,100}\s{0,5},[\s\S]*\}/
                }
            },
            "@biblatex/entry+object": {
                parse (e) {
                    return (0, Y.parse)([
                        e
                    ]);
                },
                parseType: {
                    dataType: "SimpleObject",
                    propertyConstraint: {
                        props: [
                            "type",
                            "label",
                            "properties"
                        ]
                    }
                }
            },
            "@biblatex/entries+list": {
                parse: Y.parse,
                parseType: {
                    elementConstraint: "@biblatex/entry+object"
                }
            },
            "@bibtex/text": {
                parse: Qe.parse,
                outputs: "@bibtex/entries+list"
            },
            "@bibtex/entry+object": {
                parse (e) {
                    return (0, Y.parseBibtex)([
                        e
                    ]);
                }
            },
            "@bibtex/entries+list": {
                parse: Y.parseBibtex
            },
            "@bibtxt/text": {
                parse: Hr.parse,
                parseType: {
                    dataType: "String",
                    predicate: /^\s*(\[(?!\s*[{[]).*?\]\s*(\n\s*[^[]((?!:)\S)+\s*:\s*.+?\s*)*\s*)+$/
                }
            }
        };
        E.formats = Vr;
    });
    var v9 = {};
    lt2(v9, {
        __esModule: ()=>Xr,
        default: ()=>ti1,
        formats: ()=>Qr,
        ref: ()=>Zr
    });
    var tt2 = V5(J3());
    y10(v9, V5(J3()));
    var { __esModule: Xr, ref: Zr, formats: Qr } = tt2, { default: et2, ...ei2 } = tt2, ti1 = et2 !== void 0 ? et2 : ei2;
    const mod65 = {
        __esModule: Xr,
        default: ti1,
        formats: Qr,
        ref: Zr
    };
    var require5 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m, c = (m)=>Object.assign({}, m);
        switch(n){
            case "moo":
                return e(mod56);
            case "@citation-js/date":
                return c(mod54);
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var $e2 = Object.create;
    var I9 = Object.defineProperty;
    var ze3 = Object.getOwnPropertyDescriptor;
    var Ke2 = Object.getOwnPropertyNames;
    var Fe4 = Object.getPrototypeOf, Ue3 = Object.prototype.hasOwnProperty;
    var g11 = ((e)=>typeof require5 < "u" ? require5 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require5 < "u" ? require5 : t)[r]
        }) : e)(function(e) {
        if (typeof require5 < "u") return require5.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var d5 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), We2 = (e, t)=>{
        for(var r in t)I9(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, R7 = (e, t, r, i)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of Ke2(t))!Ue3.call(e, a) && a !== r && I9(e, a, {
            get: ()=>t[a],
            enumerable: !(i = ze3(t, a)) || i.enumerable
        });
        return e;
    }, b6 = (e, t, r)=>(R7(e, t, "default"), r && R7(r, t, "default")), K6 = (e, t, r)=>(r = e != null ? $e2(Fe4(e)) : {}, R7(t || !e || !e.__esModule ? I9(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var D5 = d5((Cr, He)=>{
        He.exports = {
            source: {
                article: "article-journal",
                book: "book",
                mvbook: "book",
                inbook: "chapter",
                bookinbook: "book",
                booklet: "book",
                collection: "book",
                mvcollection: "book",
                incollection: "chapter",
                dataset: "dataset",
                manual: "report",
                misc: "document",
                online: "webpage",
                patent: "patent",
                periodical: "periodical",
                proceedings: "book",
                mvproceedings: "book",
                inproceedings: "paper-conference",
                reference: "book",
                mvreference: "book",
                inreference: "entry",
                report: "report",
                software: "software",
                thesis: "thesis",
                unpublished: "manuscript",
                artwork: "graphic",
                audio: "song",
                image: "figure",
                jurisdiction: "legal_case",
                legislation: "legislation",
                legal: "treaty",
                letter: "personal_communication",
                movie: "motion_picture",
                music: "musical_score",
                performance: "performance",
                review: "review",
                standard: "standard",
                video: "motion_picture",
                conference: "paper-conference",
                electronic: "webpage",
                mastersthesis: "thesis",
                phdthesis: "thesis",
                techreport: "report",
                www: "webpage"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                bill: "legislation",
                book: "book",
                broadcast: "audio",
                chapter: "inbook",
                classic: "unpublished",
                collection: "misc",
                dataset: "dataset",
                document: "misc",
                entry: "inreference",
                "entry-dictionary": "inreference",
                "entry-encyclopedia": "inreference",
                event: "misc",
                figure: "artwork",
                graphic: "artwork",
                hearing: "legal",
                interview: "audio",
                legal_case: "jurisdiction",
                legislation: "legislation",
                manuscript: "unpublished",
                motion_picture: "movie",
                musical_score: "music",
                "paper-conference": "inproceedings",
                patent: "patent",
                performance: "performance",
                periodical: "periodical",
                personal_communication: "letter",
                post: "online",
                "post-weblog": "online",
                regulation: "legal",
                report: "report",
                review: "review",
                "review-book": "review",
                software: "software",
                song: "music",
                speech: "audio",
                standard: "standard",
                thesis: "thesis",
                treaty: "legal",
                webpage: "online"
            }
        };
    });
    var M9 = d5((Or, Ge)=>{
        Ge.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var F7 = d5((jr, Je)=>{
        Je.exports = {
            biblatex: {
                article: [
                    "author",
                    "title",
                    "journaltitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                book: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvbook: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inbook: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                booklet: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                collection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvcollection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                dataset: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                online: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                patent: [
                    "author",
                    "title",
                    "number",
                    [
                        "year",
                        "date"
                    ]
                ],
                periodical: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                proceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvproceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                report: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                thesis: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                unpublished: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                conference: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                electronic: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                phdthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                www: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ]
            },
            bibtex: {
                article: [
                    "author",
                    "title",
                    "journal",
                    "year"
                ],
                book: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    "publisher",
                    "year"
                ],
                booklet: [
                    "title"
                ],
                inbook: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "chapter",
                        "pages"
                    ],
                    "publisher",
                    "year"
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    "publisher",
                    "year"
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    "year"
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                phdthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                proceedings: [
                    "title",
                    "year"
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    "year"
                ],
                unpublished: [
                    "author",
                    "title",
                    "note"
                ]
            }
        };
    });
    var U5 = d5((Lr, Ve)=>{
        Ve.exports = {
            abstract: [
                "field",
                "literal"
            ],
            addendum: [
                "field",
                "literal"
            ],
            afterword: [
                "list",
                "name"
            ],
            annotation: [
                "field",
                "literal"
            ],
            annotator: [
                "list",
                "name"
            ],
            author: [
                "list",
                "name"
            ],
            authortype: [
                "field",
                "key"
            ],
            bookauthor: [
                "list",
                "name"
            ],
            bookpagination: [
                "field",
                "key"
            ],
            booksubtitle: [
                "field",
                "literal"
            ],
            booktitle: [
                "field",
                "title"
            ],
            booktitleaddon: [
                "field",
                "literal"
            ],
            chapter: [
                "field",
                "literal"
            ],
            commentator: [
                "list",
                "name"
            ],
            date: [
                "field",
                "date"
            ],
            doi: [
                "field",
                "verbatim"
            ],
            edition: [
                "field",
                "literal"
            ],
            editor: [
                "list",
                "name"
            ],
            editora: [
                "list",
                "name"
            ],
            editorb: [
                "list",
                "name"
            ],
            editorc: [
                "list",
                "name"
            ],
            editortype: [
                "field",
                "key"
            ],
            editoratype: [
                "field",
                "key"
            ],
            editorbtype: [
                "field",
                "key"
            ],
            editorctype: [
                "field",
                "key"
            ],
            eid: [
                "field",
                "literal"
            ],
            entrysubtype: [
                "field",
                "literal"
            ],
            eprint: [
                "field",
                "verbatim"
            ],
            eprintclass: [
                "field",
                "literal"
            ],
            eprinttype: [
                "field",
                "literal"
            ],
            eventdate: [
                "field",
                "date"
            ],
            eventtitle: [
                "field",
                "title"
            ],
            eventtitleaddon: [
                "field",
                "literal"
            ],
            file: [
                "field",
                "verbatim"
            ],
            foreword: [
                "list",
                "name"
            ],
            holder: [
                "list",
                "name"
            ],
            howpublished: [
                "field",
                "literal"
            ],
            indextitle: [
                "field",
                "literal"
            ],
            institution: [
                "list",
                "literal"
            ],
            introduction: [
                "list",
                "name"
            ],
            isan: [
                "field",
                "literal"
            ],
            isbn: [
                "field",
                "literal"
            ],
            ismn: [
                "field",
                "literal"
            ],
            isrn: [
                "field",
                "literal"
            ],
            issn: [
                "field",
                "literal"
            ],
            issue: [
                "field",
                "literal"
            ],
            issuesubtitle: [
                "field",
                "literal"
            ],
            issuetitle: [
                "field",
                "literal"
            ],
            iswc: [
                "field",
                "literal"
            ],
            journalsubtitle: [
                "field",
                "literal"
            ],
            journaltitle: [
                "field",
                "literal"
            ],
            label: [
                "field",
                "literal"
            ],
            language: [
                "list",
                "key"
            ],
            library: [
                "field",
                "literal"
            ],
            location: [
                "list",
                "literal"
            ],
            mainsubtitle: [
                "field",
                "literal"
            ],
            maintitle: [
                "field",
                "title"
            ],
            maintitleaddon: [
                "field",
                "literal"
            ],
            month: [
                "field",
                "literal"
            ],
            nameaddon: [
                "field",
                "literal"
            ],
            note: [
                "field",
                "literal"
            ],
            number: [
                "field",
                "literal"
            ],
            organization: [
                "list",
                "literal"
            ],
            origdate: [
                "field",
                "date"
            ],
            origlanguage: [
                "list",
                "key"
            ],
            origlocation: [
                "list",
                "literal"
            ],
            origpublisher: [
                "list",
                "literal"
            ],
            origtitle: [
                "field",
                "title"
            ],
            pages: [
                "field",
                "range"
            ],
            pagetotal: [
                "field",
                "literal"
            ],
            pagination: [
                "field",
                "key"
            ],
            part: [
                "field",
                "literal"
            ],
            publisher: [
                "list",
                "literal"
            ],
            pubstate: [
                "field",
                "key"
            ],
            reprinttitle: [
                "field",
                "literal"
            ],
            series: [
                "field",
                "title"
            ],
            shortauthor: [
                "list",
                "name"
            ],
            shorteditor: [
                "list",
                "name"
            ],
            shorthand: [
                "field",
                "literal"
            ],
            shorthandintro: [
                "field",
                "literal"
            ],
            shortjournal: [
                "field",
                "literal"
            ],
            shortseries: [
                "field",
                "literal"
            ],
            shorttitle: [
                "field",
                "title"
            ],
            subtitle: [
                "field",
                "literal"
            ],
            title: [
                "field",
                "title"
            ],
            titleaddon: [
                "field",
                "literal"
            ],
            translator: [
                "list",
                "name"
            ],
            type: [
                "field",
                "title"
            ],
            url: [
                "field",
                "uri"
            ],
            urldate: [
                "field",
                "date"
            ],
            venue: [
                "field",
                "literal"
            ],
            version: [
                "field",
                "literal"
            ],
            volume: [
                "field",
                "integer"
            ],
            volumes: [
                "field",
                "integer"
            ],
            year: [
                "field",
                "literal"
            ],
            crossref: [
                "field",
                "entry key"
            ],
            entryset: [
                "separated",
                "literal"
            ],
            execute: [
                "field",
                "code"
            ],
            gender: [
                "field",
                "gender"
            ],
            langid: [
                "field",
                "identifier"
            ],
            langidopts: [
                "field",
                "literal"
            ],
            ids: [
                "separated",
                "entry key"
            ],
            indexsorttitle: [
                "field",
                "literal"
            ],
            keywords: [
                "separated",
                "literal"
            ],
            options: [
                "separated",
                "options"
            ],
            presort: [
                "field",
                "string"
            ],
            related: [
                "separated",
                "literal"
            ],
            relatedoptions: [
                "separated",
                "literal"
            ],
            relatedtype: [
                "field",
                "identifier"
            ],
            relatedstring: [
                "field",
                "literal"
            ],
            sortkey: [
                "field",
                "literal"
            ],
            sortname: [
                "list",
                "name"
            ],
            sortshorthand: [
                "field",
                "literal"
            ],
            sorttitle: [
                "field",
                "literal"
            ],
            sortyear: [
                "field",
                "integer"
            ],
            xdata: [
                "separated",
                "entry key"
            ],
            xref: [
                "field",
                "entry key"
            ],
            namea: [
                "list",
                "name"
            ],
            nameb: [
                "list",
                "name"
            ],
            namec: [
                "list",
                "name"
            ],
            nameatype: [
                "field",
                "key"
            ],
            namebtype: [
                "field",
                "key"
            ],
            namectype: [
                "field",
                "key"
            ],
            lista: [
                "list",
                "literal"
            ],
            listb: [
                "list",
                "literal"
            ],
            listc: [
                "list",
                "literal"
            ],
            listd: [
                "list",
                "literal"
            ],
            liste: [
                "list",
                "literal"
            ],
            listf: [
                "list",
                "literal"
            ],
            usera: [
                "field",
                "literal"
            ],
            userb: [
                "field",
                "literal"
            ],
            userc: [
                "field",
                "literal"
            ],
            userd: [
                "field",
                "literal"
            ],
            usere: [
                "field",
                "literal"
            ],
            userf: [
                "field",
                "literal"
            ],
            verba: [
                "field",
                "literal"
            ],
            verbb: [
                "field",
                "literal"
            ],
            verbc: [
                "field",
                "literal"
            ],
            address: [
                "list",
                "literal"
            ],
            annote: [
                "field",
                "literal"
            ],
            archiveprefix: [
                "field",
                "literal"
            ],
            journal: [
                "field",
                "literal"
            ],
            key: [
                "field",
                "literal"
            ],
            pdf: [
                "field",
                "verbatim"
            ],
            primaryclass: [
                "field",
                "literal"
            ],
            school: [
                "list",
                "literal"
            ],
            numpages: [
                "field",
                "integer"
            ],
            pmid: [
                "field",
                "literal"
            ],
            pmcid: [
                "field",
                "literal"
            ]
        };
    });
    var W5 = d5((qr, Xe)=>{
        Xe.exports = {
            diacritics: {
                "`": "\u0300",
                "'": "\u0301",
                "^": "\u0302",
                "~": "\u0303",
                "=": "\u0304",
                u: "\u0306",
                ".": "\u0307",
                '"': "\u0308",
                r: "\u030A",
                H: "\u030B",
                v: "\u030C",
                b: "\u0332",
                d: "\u0323",
                c: "\u0327",
                k: "\u0328",
                t: "\u0361",
                textcommabelow: "\u0326"
            },
            commands: {
                textquotesingle: "'",
                textasciigrave: "`",
                textquotedbl: '"',
                textdollar: "$",
                textless: "<",
                textgreater: ">",
                textbackslash: "\\",
                textasciicircum: "^",
                textunderscore: "_",
                textbraceleft: "{",
                textbar: "|",
                textbraceright: "}",
                textasciitilde: "~",
                textexclamdown: "\xA1",
                textcent: "\xA2",
                textsterling: "\xA3",
                textcurrency: "\xA4",
                textyen: "\xA5",
                textbrokenbar: "\xA6",
                textsection: "\xA7",
                textasciidieresis: "\xA8",
                textcopyright: "\xA9",
                textordfeminine: "\xAA",
                guillemetleft: "\xAB",
                guillemotleft: "\xAB",
                textlnot: "\xAC",
                textregistered: "\xAE",
                textasciimacron: "\xAF",
                textdegree: "\xB0",
                textpm: "\xB1",
                texttwosuperior: "\xB2",
                textthreesuperior: "\xB3",
                textasciiacute: "\xB4",
                textmu: "\xB5",
                textparagraph: "\xB6",
                textperiodcentered: "\xB7",
                textonesuperior: "\xB9",
                textordmasculine: "\xBA",
                guillemetright: "\xBB",
                guillemotright: "\xBB",
                textonequarter: "\xBC",
                textonehalf: "\xBD",
                textthreequarters: "\xBE",
                textquestiondown: "\xBF",
                AE: "\xC6",
                DH: "\xD0",
                texttimes: "\xD7",
                O: "\xD8",
                TH: "\xDE",
                ss: "\xDF",
                ae: "\xE6",
                dh: "\xF0",
                textdiv: "\xF7",
                o: "\xF8",
                th: "\xFE",
                DJ: "\u0110",
                dj: "\u0111",
                i: "\u0131",
                IJ: "\u0132",
                ij: "\u0133",
                L: "\u0141",
                l: "\u0142",
                NG: "\u014A",
                ng: "\u014B",
                OE: "\u0152",
                oe: "\u0153",
                textflorin: "\u0192",
                j: "\u0237",
                textasciicaron: "\u02C7",
                textasciibreve: "\u02D8",
                textacutedbl: "\u02DD",
                textgravedbl: "\u02F5",
                texttildelow: "\u02F7",
                textbaht: "\u0E3F",
                SS: "\u1E9E",
                textcompwordmark: "\u200C",
                textendash: "\u2013",
                textemdash: "\u2014",
                textbardbl: "\u2016",
                textquoteleft: "\u2018",
                textquoteright: "\u2019",
                quotesinglbase: "\u201A",
                textquotedblleft: "\u201C",
                textquotedblright: "\u201D",
                quotedblbase: "\u201E",
                textdagger: "\u2020",
                textdaggerdbl: "\u2021",
                textbullet: "\u2022",
                textellipsis: "\u2026",
                textperthousand: "\u2030",
                textpertenthousand: "\u2031",
                guilsinglleft: "\u2039",
                guilsinglright: "\u203A",
                textreferencemark: "\u203B",
                textinterrobang: "\u203D",
                textfractionsolidus: "\u2044",
                textlquill: "\u2045",
                textrquill: "\u2046",
                textdiscount: "\u2052",
                textcolonmonetary: "\u20A1",
                textlira: "\u20A4",
                textnaira: "\u20A6",
                textwon: "\u20A9",
                textdong: "\u20AB",
                texteuro: "\u20AC",
                textpeso: "\u20B1",
                textcelsius: "\u2103",
                textnumero: "\u2116",
                textcircledP: "\u2117",
                textrecipe: "\u211E",
                textservicemark: "\u2120",
                texttrademark: "\u2122",
                textohm: "\u2126",
                textmho: "\u2127",
                textestimated: "\u212E",
                textleftarrow: "\u2190",
                textuparrow: "\u2191",
                textrightarrow: "\u2192",
                textdownarrow: "\u2193",
                textminus: "\u2212",
                Hwithstroke: "\u0126",
                hwithstroke: "\u0127",
                textasteriskcentered: "\u2217",
                textsurd: "\u221A",
                textlangle: "\u2329",
                textrangle: "\u232A",
                textblank: "\u2422",
                textvisiblespace: "\u2423",
                textopenbullet: "\u25E6",
                textbigcircle: "\u25EF",
                textmusicalnote: "\u266A",
                textmarried: "\u26AD",
                textdivorced: "\u26AE",
                textinterrobangdown: "\u2E18",
                textcommabelow: null,
                copyright: "\xA9",
                Gamma: "\u0393",
                Delta: "\u0394",
                Theta: "\u0398",
                Lambda: "\u039B",
                Xi: "\u039E",
                Pi: "\u03A0",
                Sigma: "\u03A3",
                Phi: "\u03A6",
                Psi: "\u03A8",
                Omega: "\u03A9",
                alpha: "\u03B1",
                beta: "\u03B2",
                gamma: "\u03B3",
                delta: "\u03B4",
                varepsilon: "\u03B5",
                zeta: "\u03B6",
                eta: "\u03B7",
                theta: "\u03B8",
                iota: "\u03B9",
                kappa: "\u03BA",
                lambda: "\u03BB",
                mu: "\u03BC",
                nu: "\u03BD",
                xi: "\u03BE",
                pi: "\u03C0",
                rho: "\u03C1",
                varsigma: "\u03C2",
                sigma: "\u03C3",
                tau: "\u03C4",
                upsilon: "\u03C5",
                varphi: "\u03C6",
                chi: "\u03C7",
                psi: "\u03C8",
                omega: "\u03C9",
                vartheta: "\u03D1",
                Upsilon: "\u03D2",
                phi: "\u03D5",
                varpi: "\u03D6",
                varrho: "\u03F1",
                epsilon: "\u03F5"
            }
        };
    });
    var _10 = d5((s)=>{
        "use strict";
        Object.defineProperty(s, "__esModule", {
            value: !0
        });
        s.sentenceCaseLanguages = s.required = s.mathScripts = s.mathScriptFormatting = s.ligatures = s.ligaturePattern = s.formattingEnvs = s.formattingCommands = s.formatting = s.fieldTypes = s.diacritics = s.defaultStrings = s.commands = s.argumentCommands = void 0;
        var Ze = B(F7()), Qe = B(U5()), H = B(W5());
        function B(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var et = Ze.default;
        s.required = et;
        var tt = Qe.default;
        s.fieldTypes = tt;
        var rt = H.default.diacritics;
        s.diacritics = rt;
        var it = H.default.commands;
        s.commands = it;
        var at = {
            jan: "01",
            feb: "02",
            mar: "03",
            apr: "04",
            may: "05",
            jun: "06",
            jul: "07",
            aug: "08",
            sep: "09",
            oct: "10",
            nov: "11",
            dec: "12",
            acmcs: "ACM Computing Surveys",
            acta: "Acta Informatica",
            cacm: "Communications of the ACM",
            ibmjrd: "IBM Journal of Research and Development",
            ibmsj: "IBM Systems Journal",
            ieeese: "IEEE Transactions on Software Engineering",
            ieeetc: "IEEE Transactions on Computers",
            ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
            ipl: "Information Processing Letters",
            jacm: "Journal of the ACM",
            jcss: "Journal of Computer and System Sciences",
            scp: "Science of Computer Programming",
            sicomp: "SIAM Journal on Computing",
            tocs: "ACM Transactions on Computer Systems",
            tods: "ACM Transactions on Database Systems",
            tog: "ACM Transactions on Graphics",
            toms: "ACM Transactions on Mathematical Software",
            toois: "ACM Transactions on Office Information Systems",
            toplas: "ACM Transactions on Programming Languages and Systems",
            tcs: "Theoretical Computer Science"
        };
        s.defaultStrings = at;
        var nt = {
            it: "italics",
            itshape: "italics",
            sl: "italics",
            slshape: "italics",
            em: "italics",
            bf: "bold",
            bfseries: "bold",
            sc: "smallcaps",
            scshape: "smallcaps",
            rm: void 0,
            sf: void 0,
            tt: void 0
        };
        s.formattingEnvs = nt;
        var ot = {
            textit: "italics",
            textsl: "italics",
            emph: "italics",
            mkbibitalic: "italics",
            mkbibemph: "italics",
            textbf: "bold",
            strong: "bold",
            mkbibbold: "bold",
            textsc: "smallcaps",
            textsuperscript: "superscript",
            textsubscript: "subscript",
            enquote: "quotes",
            mkbibquote: "quotes",
            textmd: void 0,
            textrm: void 0,
            textsf: void 0,
            texttt: void 0,
            textup: void 0
        };
        s.formattingCommands = ot;
        var st = {
            italics: [
                "<i>",
                "</i>"
            ],
            bold: [
                "<b>",
                "</b>"
            ],
            superscript: [
                "<sup>",
                "</sup>"
            ],
            subscript: [
                "<sub>",
                "</sub>"
            ],
            smallcaps: [
                '<span style="font-variant:small-caps;">',
                "</span>"
            ],
            nocase: [
                '<span class="nocase">',
                "</span>"
            ],
            quotes: [
                "\u201C",
                "\u201D"
            ]
        };
        s.formatting = st;
        var lt = {
            ElsevierGlyph (e) {
                return String.fromCharCode(parseInt(e, 16));
            },
            href (e, t) {
                return e;
            },
            url (e) {
                return e;
            }
        };
        s.argumentCommands = lt;
        var ct = /---?|''|``|~/g;
        s.ligaturePattern = ct;
        var ut = {
            "--": "\u2013",
            "---": "\u2014",
            "``": "\u201C",
            "''": "\u201D",
            "~": "\xA0"
        };
        s.ligatures = ut;
        var pt = {
            "^": "superscript",
            sp: "superscript",
            _: "subscript",
            sb: "subscript",
            mathrm: void 0
        };
        s.mathScriptFormatting = pt;
        var dt = {
            "^": {
                0: "\u2070",
                1: "\xB9",
                2: "\xB2",
                3: "\xB3",
                4: "\u2074",
                5: "\u2075",
                6: "\u2076",
                7: "\u2077",
                8: "\u2078",
                9: "\u2079",
                "+": "\u207A",
                "-": "\u207B",
                "=": "\u207C",
                "(": "\u207D",
                ")": "\u207E",
                i: "\u2071",
                n: "\u207F"
            },
            _: {
                0: "\u2080",
                1: "\u2081",
                2: "\u2082",
                3: "\u2083",
                4: "\u2084",
                5: "\u2085",
                6: "\u2086",
                7: "\u2087",
                8: "\u2088",
                9: "\u2089",
                "+": "\u208A",
                "-": "\u208B",
                "=": "\u208C",
                "(": "\u208D",
                ")": "\u208E",
                a: "\u2090",
                e: "\u2091",
                o: "\u2092",
                x: "\u2093",
                ə: "\u2094",
                h: "\u2095",
                k: "\u2096",
                l: "\u2097",
                m: "\u2098",
                n: "\u2099",
                s: "\u209A",
                p: "\u209B",
                t: "\u209C"
            }
        };
        s.mathScripts = dt;
        var ft = [
            "american",
            "british",
            "canadian",
            "english",
            "australian",
            "newzealand",
            "usenglish",
            "ukenglish",
            "en",
            "eng",
            "en-au",
            "en-bz",
            "en-ca",
            "en-cb",
            "en-gb",
            "en-ie",
            "en-jm",
            "en-nz",
            "en-ph",
            "en-tt",
            "en-us",
            "en-za",
            "en-zw",
            "anglais"
        ];
        s.sentenceCaseLanguages = ft;
    });
    var C7 = d5((E)=>{
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        E.default = void 0;
        var mt = J(D5()), ht = J(M9()), gt = bt(_10());
        function G(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (G = function(i) {
                return i ? r : t;
            })(e);
        }
        function bt(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = G(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var n in e)if (n !== "default" && Object.prototype.hasOwnProperty.call(e, n)) {
                var l = a ? Object.getOwnPropertyDescriptor(e, n) : null;
                l && (l.get || l.set) ? Object.defineProperty(i, n, l) : i[n] = e[n];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function J(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var vt = {
            constants: gt,
            types: {
                biblatex: mt.default,
                bibtex: ht.default
            },
            parse: {
                biblatex: !0,
                strict: !1,
                sentenceCase: "never"
            },
            format: {
                useIdAsLabel: !1
            }
        };
        E.default = vt;
    });
    var O6 = d5((p)=>{
        "use strict";
        Object.defineProperty(p, "__esModule", {
            value: !0
        });
        p.TYPE_KEYS = p.TYPE = p.STANDARD_NUMBERS_PATTERN = p.MONTHS = p.LABEL = p.Converters = void 0;
        p.formatLabel = te;
        p.parseDate = Q;
        p.parseMonth = ee;
        var yt = g11("@citation-js/core"), wt = xt(C7());
        function xt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Tt = new Set([
            "the",
            "a",
            "an"
        ]), Y = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, kt = /[^\u0020-\u007F]+/g;
        function V(e) {
            return e ? e.normalize("NFKD").replace(kt, "").split(Y).find((t)=>t.length && !Tt.has(t.toLowerCase())) : "";
        }
        var X = new yt.util.Translator([
            {
                source: "given",
                target: "given"
            },
            {
                source: "family",
                target: "family"
            },
            {
                source: "suffix",
                target: "suffix"
            },
            {
                source: "prefix",
                target: "non-dropping-particle"
            },
            {
                source: "family",
                target: "literal",
                when: {
                    source: !1,
                    target: {
                        family: !1,
                        given: !1
                    }
                }
            }
        ]), St = [
            "jan",
            "feb",
            "mar",
            "apr",
            "may",
            "jun",
            "jul",
            "aug",
            "sep",
            "oct",
            "nov",
            "dec"
        ], Pt = "BibTeX type";
        p.TYPE = Pt;
        var _t = "BibTeX label";
        p.LABEL = _t;
        var v = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12,
            january: 1,
            february: 2,
            march: 3,
            april: 4,
            may: 5,
            june: 6,
            july: 7,
            august: 8,
            september: 9,
            october: 10,
            november: 11,
            december: 12
        };
        p.MONTHS = v;
        var Et = {
            bathesis: "Bachelor's thesis",
            mathesis: "Master's thesis",
            phdthesis: "PhD thesis",
            candthesis: "Candidate thesis",
            techreport: "technical report",
            resreport: "research report",
            software: "computer software",
            datacd: "data cd",
            audiocd: "audio cd",
            patent: "patent",
            patentde: "German patent",
            patenteu: "European patent",
            patentfr: "French patent",
            patentuk: "British patent",
            patentus: "U.S. patent",
            patreq: "patent request",
            patreqde: "German patent request",
            patreqeu: "European patent request",
            patreqfr: "French patent request",
            patrequk: "British patent request",
            patrequs: "U.S. patent request"
        };
        p.TYPE_KEYS = Et;
        var Z = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
        p.STANDARD_NUMBERS_PATTERN = Z;
        function Q(e) {
            let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), i = +t[1], a = +t[2];
            return !i || i > 20 ? [
                r
            ] : a ? [
                r,
                i,
                a
            ] : [
                r,
                i
            ];
        }
        function ee(e) {
            if (e == null) return [];
            if (+e) return [
                parseInt(e, 10)
            ];
            if (e = e.trim().toLowerCase(), e in v) return [
                v[e]
            ];
            let t = e.split(/\s+/), r, i;
            return t[0] in v ? (r = v[t[0]], i = parseInt(t[1])) : t[1] in v && (r = v[t[1]], i = parseInt(t[0])), i ? [
                r,
                i
            ] : r ? [
                r
            ] : [];
        }
        function te(e, t, r, i) {
            let a = "";
            return e && e[0] && (a += V(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (a += t["date-parts"][0][0]), r ? a += r : i && (a += V(i)), a;
        }
        var Ct = {
            PICK: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            },
            DATE: {
                toTarget (e) {
                    let t = e.split("/").map((r)=>r && r !== ".." ? Q(r) : void 0);
                    return isNaN(t[0][0]) ? {
                        literal: e
                    } : {
                        "date-parts": t
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
                }
            },
            YEAR_MONTH: {
                toTarget (e, t, r) {
                    return isNaN(+e) ? {
                        literal: e
                    } : !isNaN(+r) && !isNaN(+t) ? {
                        "date-parts": [
                            [
                                +e,
                                +t,
                                +r
                            ]
                        ]
                    } : {
                        "date-parts": [
                            [
                                +e,
                                ...ee(t)
                            ]
                        ]
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) {
                        let [t, r, i] = e["date-parts"][0];
                        return [
                            t.toString(),
                            r ? i ? `${St[r - 1]} ${i}` : r : void 0
                        ];
                    } else return [];
                }
            },
            EPRINT: {
                toTarget (e, t) {
                    if (t === "pubmed") return e;
                },
                toSource (e) {
                    return [
                        e,
                        "pubmed"
                    ];
                }
            },
            EVENT_TITLE: {
                toTarget (e, t) {
                    return t && (e += " (" + t + ")"), e;
                },
                toSource (e) {
                    return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
                }
            },
            HOW_PUBLISHED: {
                toTarget (e) {
                    if (e.startsWith("http")) return e;
                }
            },
            KEYWORDS: {
                toTarget (e) {
                    return e.join(",");
                },
                toSource (e) {
                    return e.split(",");
                }
            },
            LABEL: {
                toTarget (e) {
                    return [
                        e,
                        e
                    ];
                },
                toSource (e, t, r, i, a, n) {
                    let l;
                    return e === null ? l = "null" : e === void 0 ? l = "undefined" : l = e.toString().replace(Y, ""), wt.default.format.useIdAsLabel ? l : t && !Y.test(t) ? t : te(r, i, a, n) || l;
                }
            },
            NAMES: {
                toTarget (e) {
                    return e.map(X.convertToTarget);
                },
                toSource (e) {
                    return e.map(X.convertToSource);
                }
            },
            PAGES: {
                toTarget (e) {
                    return e.replace(/[–—]/, "-");
                },
                toSource (e) {
                    return e.replace("-", "--");
                }
            },
            STANDARD_NUMBERS: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    let t = e.toString().match(Z);
                    return t ? t.slice(1, 5) : [];
                }
            },
            STATUS: {
                toSource (e) {
                    if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
                }
            },
            TITLE: {
                toTarget (e, t, r) {
                    return t && (e += ": " + t), e;
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            }
        };
        p.Converters = Ct;
    });
    var ie7 = d5((j)=>{
        "use strict";
        Object.defineProperty(j, "__esModule", {
            value: !0
        });
        j.default = void 0;
        var Ot = g11("@citation-js/core"), jt = g11("@citation-js/date"), re = Lt(D5()), o = O6();
        function Lt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var qt = [
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1,
                        addendum: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, jt.format)(e)}]`;
                    }
                }
            },
            {
                source: "numpages",
                target: "number-of-pages",
                when: {
                    source: {
                        pagetotal: !1
                    },
                    target: !1
                }
            },
            {
                source: "pmid",
                target: "PMID",
                when: {
                    source: {
                        eprinttype (e) {
                            return e !== "pmid";
                        },
                        archiveprefix (e) {
                            return e !== "pmid";
                        }
                    },
                    target: !1
                }
            },
            {
                source: "pmcid",
                target: "PMCID",
                when: {
                    target: !1
                }
            },
            {
                source: "s2id",
                target: "custom",
                convert: {
                    toTarget (e) {
                        return {
                            S2ID: e
                        };
                    },
                    toSource ({ S2ID: e }) {
                        return e;
                    }
                }
            }
        ], At = [
            {
                source: "annote",
                target: "annote",
                when: {
                    source: {
                        annotation: !1
                    },
                    target: !1
                }
            },
            {
                source: "address",
                target: "publisher-place",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        location: !1
                    },
                    target: !1
                }
            },
            {
                source: [
                    "eprint",
                    "archiveprefix"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT,
                when: {
                    source: {
                        eprinttype: !1
                    },
                    target: !1
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1,
                        booktitle: !1,
                        journaltitle: !1
                    },
                    target: !1
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: !1
                }
            }
        ], Nt = new Ot.util.Translator([
            ...At,
            ...qt,
            {
                source: "abstract",
                target: "abstract"
            },
            {
                source: "urldate",
                target: "accessed",
                convert: o.Converters.DATE
            },
            {
                source: "annotation",
                target: "annote"
            },
            {
                source: "author",
                target: "author",
                convert: o.Converters.NAMES
            },
            {
                source: "library",
                target: "call-number"
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "bookauthor",
                target: "container-author",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    "maintitle",
                    "mainsubtitle",
                    "maintitleaddon"
                ],
                target: "container-title",
                when: {
                    source: !0,
                    target: {
                        "number-of-volumes": !0
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "booktitle",
                    "booksubtitle",
                    "booktitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1
                    },
                    target: {
                        "number-of-volumes": !1,
                        type (e) {
                            return !e || !e.startsWith("article");
                        }
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "journaltitle",
                    "journalsubtitle",
                    "journaltitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: "shortjournal",
                target: "container-title-short",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "shortjournal",
                target: "journalAbbreviation",
                when: {
                    source: !1,
                    target: {
                        "container-title-short": !1
                    }
                }
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "bookinbook",
                            "suppbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "shortseries",
                target: "collection-title-short"
            },
            {
                source: "doi",
                target: "DOI"
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    o.TYPE,
                    "entrysubtype",
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t, r) {
                        return r || (e === "mastersthesis" && (r = "mathesis"), e === "phdthesis" && (r = "phdthesis"), e === "techreport" && (r = "techreport")), [
                            re.default.source[e] || "document",
                            r || t
                        ];
                    },
                    toSource (e, t) {
                        let r = re.default.target[e] || "misc";
                        return t in o.TYPE_KEYS ? [
                            r,
                            void 0,
                            t
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: o.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "eventdate",
                target: "event-date",
                convert: o.Converters.DATE
            },
            {
                source: "venue",
                target: "event-place"
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event-title",
                convert: o.Converters.EVENT_TITLE
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event",
                convert: o.Converters.EVENT_TITLE,
                when: {
                    source: !1,
                    target: {
                        "event-title": !1
                    }
                }
            },
            {
                source: o.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: o.Converters.LABEL
            },
            {
                source: "isbn",
                target: "ISBN"
            },
            {
                source: "issn",
                target: "ISSN"
            },
            {
                source: "issue",
                target: "issue",
                when: {
                    source: {
                        number: !1,
                        [o.TYPE]: [
                            "article",
                            "periodical"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "string" && !e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [o.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return e && (typeof e == "number" || e.match(/\d+/));
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "date",
                target: "issued",
                convert: o.Converters.DATE
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: o.Converters.YEAR_MONTH,
                when: {
                    source: {
                        date: !1
                    },
                    target: !1
                }
            },
            {
                source: "location",
                target: "jurisdiction",
                when: {
                    source: {
                        type: "patent"
                    },
                    target: {
                        type: "patent"
                    }
                }
            },
            {
                source: "keywords",
                target: "keyword",
                convert: o.Converters.KEYWORDS
            },
            {
                source: "language",
                target: "language",
                convert: o.Converters.PICK
            },
            {
                source: "langid",
                target: "language",
                when: {
                    source: {
                        language: !1
                    },
                    target: !1
                }
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "addendum",
                target: "note",
                when: {
                    source: {
                        note: !1
                    },
                    target: !1
                }
            },
            {
                source: "eid",
                target: "number",
                when: {
                    target: {
                        type: [
                            "article-journal"
                        ]
                    }
                }
            },
            {
                source: [
                    "isan",
                    "ismn",
                    "isrn",
                    "iswc"
                ],
                target: "number",
                convert: o.Converters.STANDARD_NUMBERS,
                when: {
                    source: {
                        [o.TYPE] (e) {
                            return e !== "patent";
                        }
                    },
                    target: {
                        type (e) {
                            return e !== "patent";
                        }
                    }
                }
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "patent",
                            "report",
                            "techreport",
                            "legislation"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report",
                            "legislation"
                        ]
                    }
                }
            },
            {
                source: "origdate",
                target: "original-date",
                convert: o.Converters.DATE
            },
            {
                source: "origlocation",
                target: "original-publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "origpublisher",
                target: "original-publisher",
                convert: o.Converters.PICK
            },
            {
                source: "origtitle",
                target: "original-title"
            },
            {
                source: "pages",
                target: "page",
                when: {
                    source: {
                        bookpagination: [
                            void 0,
                            "page"
                        ]
                    }
                },
                convert: o.Converters.PAGES
            },
            {
                source: "pagetotal",
                target: "number-of-pages"
            },
            {
                source: "part",
                target: "part-number"
            },
            {
                source: [
                    "eprint",
                    "eprinttype"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT
            },
            {
                source: "location",
                target: "publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "publisher",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: !0,
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "paper-conference",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "webpage"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: [
                            "report",
                            "thesis"
                        ]
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: [
                    "pages",
                    "bookpagination"
                ],
                target: "section",
                when: {
                    source: {
                        bookpagination: "section"
                    },
                    target: {
                        page: !1
                    }
                },
                convert: {
                    toTarget (e) {
                        return e;
                    },
                    toSource (e) {
                        return [
                            e,
                            "section"
                        ];
                    }
                }
            },
            {
                source: "pubstate",
                target: "status",
                convert: o.Converters.STATUS
            },
            {
                source: "shorttitle",
                target: "title-short"
            },
            {
                source: "shorttitle",
                target: "shortTitle",
                when: {
                    source: !1,
                    target: {
                        "title-short": !1
                    }
                }
            },
            {
                source: [
                    "title",
                    "subtitle",
                    "titleaddon"
                ],
                target: "title",
                convert: o.Converters.TITLE
            },
            {
                source: "translator",
                target: "translator",
                convert: o.Converters.NAMES
            },
            {
                source: "url",
                target: "URL"
            },
            {
                source: "howpublished",
                target: "URL",
                convert: o.Converters.HOW_PUBLISHED,
                when: {
                    source: {
                        url: !1
                    },
                    target: !1
                }
            },
            {
                source: "version",
                target: "version"
            },
            {
                source: "volume",
                target: "volume"
            },
            {
                source: "volumes",
                target: "number-of-volumes"
            },
            {
                source: [
                    "issuetitle",
                    "issuesubtitle",
                    "issuetitleaddon"
                ],
                target: "volume-title",
                convert: o.Converters.TITLE
            }
        ]);
        j.default = Nt;
    });
    var ne7 = d5((L)=>{
        "use strict";
        Object.defineProperty(L, "__esModule", {
            value: !0
        });
        L.default = void 0;
        var Rt = g11("@citation-js/core"), It = g11("@citation-js/date"), ae = Dt(M9()), u = O6();
        function Dt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Mt = new Rt.util.Translator([
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, It.format)(e)}]`;
                    }
                }
            },
            {
                source: "annote",
                target: "annote"
            },
            {
                source: "address",
                target: "publisher-place",
                convert: u.Converters.PICK
            },
            {
                source: "author",
                target: "author",
                convert: u.Converters.NAMES
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [u.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "booktitle",
                target: "container-title",
                when: {
                    target: {
                        type: [
                            "chapter",
                            "paper-conference"
                        ]
                    }
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        [u.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: u.Converters.NAMES
            },
            {
                source: u.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: u.Converters.LABEL
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [u.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "number" || typeof e == "string" && e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: u.Converters.YEAR_MONTH
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [u.TYPE]: [
                            "patent",
                            "report",
                            "techreport"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report"
                        ]
                    }
                }
            },
            {
                source: "pages",
                target: "page",
                convert: u.Converters.PAGES
            },
            {
                source: "publisher",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "paper-conference"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: "report"
                    }
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: {
                        type: "thesis"
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: u.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1,
                        school: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: "title",
                target: "title"
            },
            {
                source: [
                    u.TYPE,
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t) {
                        let r = ae.default.source[e] || "document";
                        return t ? [
                            r,
                            t
                        ] : e === "mastersthesis" ? [
                            r,
                            "Master's thesis"
                        ] : e === "phdthesis" ? [
                            r,
                            "PhD thesis"
                        ] : [
                            r
                        ];
                    },
                    toSource (e, t) {
                        let r = ae.default.target[e] || "misc";
                        return /^(master'?s|diploma) thesis$/i.test(t) ? [
                            "mastersthesis"
                        ] : /^(phd|doctoral) thesis$/i.test(t) ? [
                            "phdthesis"
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: u.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "howpublished",
                target: "URL",
                convert: u.Converters.HOW_PUBLISHED,
                when: {
                    target: {
                        publisher: !1
                    }
                }
            },
            {
                source: "volume",
                target: "volume"
            }
        ]);
        L.default = Mt;
    });
    var de3 = d5(($)=>{
        "use strict";
        Object.defineProperty($, "__esModule", {
            value: !0
        });
        $.crossref = pe;
        function oe(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function Bt(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? oe(Object(r), !0).forEach(function(i) {
                    Yt(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : oe(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Yt(e, t, r) {
            return t = $t(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function $t(e) {
            var t = zt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function zt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var Kt = new Set([
            "book",
            "inbook",
            "bookinbook",
            "suppbook"
        ]), ue = new Set([
            "inbook",
            "bookinbook",
            "suppbook"
        ]), se = new Set([
            "collection",
            "reference",
            "incollection",
            "inreference",
            "suppcollection"
        ]), le = new Set([
            "incollection",
            "inreference",
            "suppcollection"
        ]), Ft = new Set([
            "proceedings",
            "inproceedings"
        ]), Ut = new Set([
            "inproceedings"
        ]), Wt = new Set([
            "article",
            "suppperiodical"
        ]), ce = {
            mvbook: [
                "main",
                Kt
            ],
            mvcollection: [
                "main",
                se
            ],
            mvreference: [
                "main",
                se
            ],
            mvproceedings: [
                "main",
                Ft
            ],
            book: [
                "book",
                ue
            ],
            collection: [
                "book",
                le
            ],
            reference: [
                "book",
                le
            ],
            proceedings: [
                "book",
                Ut
            ],
            periodical: [
                "journal",
                Wt
            ]
        };
        function pe(e, t, r) {
            if (t.crossref in r) {
                let i = r[t.crossref];
                if (i.properties === t) return t;
                let a = Bt({}, pe(i.type, i.properties, r));
                if (delete a.ids, delete a.crossref, delete a.xref, delete a.entryset, delete a.entrysubtype, delete a.execute, delete a.label, delete a.options, delete a.presort, delete a.related, delete a.relatedoptions, delete a.relatedstring, delete a.relatedtype, delete a.shortand, delete a.shortandintro, delete a.sortkey, (i.type === "mvbook" || i.type === "book") && ue.has(e) && (a.bookauthor = a.author), i.type in ce) {
                    let [n, l] = ce[i.type];
                    l.has(e) && (a[n + "title"] = a.title, a[n + "subtitle"] = a.subtitle, n !== "journal" && (a[n + "titleaddon"] = a.titleaddon), delete a.title, delete a.subtitle, delete a.titleaddon, delete a.shorttitle, delete a.sorttitle, delete a.indextitle, delete a.indexsorttitle);
                }
                return Object.assign(a, t);
            }
            return t;
        }
    });
    var we4 = d5((x)=>{
        "use strict";
        Object.defineProperty(x, "__esModule", {
            value: !0
        });
        x.format = rr;
        x.formatBibtex = er;
        x.parse = tr;
        x.parseBibtex = Qt;
        var w = O6(), me = ge(ie7()), he = ge(ne7()), Ht = de3();
        function ge(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Gt(e, t) {
            if (e == null) return {};
            var r = Jt(e, t), i, a;
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                for(a = 0; a < n.length; a++)i = n[a], !(t.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(e, i) && (r[i] = e[i]);
            }
            return r;
        }
        function Jt(e, t) {
            if (e == null) return {};
            var r = {}, i = Object.keys(e), a, n;
            for(n = 0; n < i.length; n++)a = i[n], !(t.indexOf(a) >= 0) && (r[a] = e[a]);
            return r;
        }
        function fe(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function Vt(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? fe(Object(r), !0).forEach(function(i) {
                    Xt(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : fe(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Xt(e, t, r) {
            return t = be(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function be(e) {
            var t = Zt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Zt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function ve(e, t) {
            let r = {};
            for (let i of e)r[i.label] = i;
            return e.map(({ type: i, label: a, properties: n })=>t.convertToTarget(Vt({
                    [w.TYPE]: i,
                    [w.LABEL]: a
                }, (0, Ht.crossref)(i, n, r))));
        }
        function ye(e, t) {
            return e.map((r)=>{
                let i = t.convertToSource(r), { [w.TYPE]: a, [w.LABEL]: n } = i, l = Gt(i, [
                    w.TYPE,
                    w.LABEL
                ].map(be));
                return {
                    type: a,
                    label: n,
                    properties: l
                };
            });
        }
        function Qt(e) {
            return ve(e, he.default);
        }
        function er(e) {
            return ye(e, he.default);
        }
        function tr(e) {
            return ve(e, me.default);
        }
        function rr(e) {
            return ye(e, me.default);
        }
    });
    var Te3 = d5((T)=>{
        "use strict";
        Object.defineProperty(T, "__esModule", {
            value: !0
        });
        T.formatNameParts = y;
        T.getStringCase = ir;
        T.orderNameParts = xe;
        T.orderNamePieces = ar;
        function ir(e) {
            let t = e.toUpperCase(), r = e.toLowerCase();
            for(let i = 0; i < e.length; i++)if (t[i] !== r[i]) return t[i] === e[i];
            return null;
        }
        function y(e) {
            if (e.length === 0) return;
            let t = "";
            for(; e.length > 1;){
                let { value: i, hyphenated: a } = e.shift();
                t += i + (a ? "-" : " ");
            }
            let r = t + e[0].value;
            return r[0] && r;
        }
        function xe(e, t = !0) {
            let r = [], i = [];
            if (t) for(; e.length > 1 && e[0].upperCase !== !1;){
                for(r.push(...i), i.length = 0; e.length > 1 && e[0].upperCase !== !1 && !e[0].hyphenated;)r.push(e.shift());
                for(; e.length > 0 && e[0].upperCase !== !1 && e[0].hyphenated;)i.push(e.shift());
            }
            let a = [], n = [];
            for(; e.length > 1;){
                for(a.push(...n), n.length = 0; e.length > 1 && e[0].upperCase === !1;)a.push(e.shift());
                for(; e.length > 0 && e[0].upperCase !== !1;)n.push(e.shift());
            }
            return i.length && n.unshift(...i), e.length && n.push(e[0]), [
                y(r),
                y(a),
                y(n)
            ];
        }
        function ar(e) {
            if (e[0][0].label) {
                let n = {};
                for (let [{ value: l, label: m }] of e)n[m] = l;
                return n;
            }
            let t = {}, [r, i, a] = xe(e[0], e.length === 1);
            return a && (t.family = a), i && (t.prefix = i), e.length === 3 ? (t.given = y(e[2]), t.suffix = y(e[1])) : e.length === 2 ? t.given = y(e[1]) : r && (t.given = r), t;
        }
    });
    var Oe4 = d5((P)=>{
        "use strict";
        Object.defineProperty(P, "__esModule", {
            value: !0
        });
        P.parse = hr;
        P.valueGrammar = void 0;
        var nr = g11("@citation-js/core"), Pe = Ee(g11("moo")), or = Ee(C7()), c = sr(_10()), q = Te3();
        function _e(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (_e = function(i) {
                return i ? r : t;
            })(e);
        }
        function sr(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = _e(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var n in e)if (n !== "default" && Object.prototype.hasOwnProperty.call(e, n)) {
                var l = a ? Object.getOwnPropertyDescriptor(e, n) : null;
                l && (l.get || l.set) ? Object.defineProperty(i, n, l) : i[n] = e[n];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function Ee(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function ke(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function f(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ke(Object(r), !0).forEach(function(i) {
                    lr(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ke(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function lr(e, t, r) {
            return t = cr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function cr(e) {
            var t = ur(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function ur(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var k = {
            command: {
                match: /\\(?:[a-zA-Z]+|.) */,
                type: Pe.default.keywords({
                    commandBegin: "\\begin",
                    commandEnd: "\\end"
                }),
                value: (e)=>e.slice(1).trim()
            },
            lbrace: {
                match: "{",
                push: "bracedLiteral"
            },
            mathShift: {
                match: "$",
                push: "mathLiteral"
            },
            whitespace: {
                match: /[\s]+|~/,
                lineBreaks: !0,
                value (e) {
                    return e === "~" ? "\xA0" : " ";
                }
            }
        }, pr = Pe.default.states({
            stringLiteral: f(f({}, k), {}, {
                text: /[^{$}\s~\\]+/
            }),
            namesLiteral: f(f({
                and: /\s+[aA][nN][dD]\s+/,
                comma: ",",
                hyphen: "-",
                equals: "="
            }, k), {}, {
                text: /[^{$}\s~\\,=-]+/
            }),
            listLiteral: f(f({
                and: /\s+and\s+/
            }, k), {}, {
                text: /[^{$}\s~\\]+/
            }),
            separatedLiteral: f(f({
                comma: ","
            }, k), {}, {
                text: /[^{$}\s~\\,]+/
            }),
            bracedLiteral: f(f({}, k), {}, {
                rbrace: {
                    match: "}",
                    pop: !0
                },
                text: /[^{$}\s~\\]+/
            }),
            mathLiteral: f(f({}, k), {}, {
                mathShift: {
                    match: "$",
                    pop: !0
                },
                script: /[\^_]/,
                text: /[^{$}\s~\\^_]+/
            })
        });
        function A(e) {
            return e[0], e;
        }
        function S(e, t) {
            return t in c.formatting ? e && c.formatting[t].join(e) : e;
        }
        var Ce = new nr.util.Grammar({
            String () {
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
                return A(e);
            },
            StringNames () {
                let e = [];
                for(;;){
                    if (this.consumeToken("whitespace", !0), e.push(this.consumeRule("Name")), this.consumeToken("whitespace", !0), this.matchEndOfFile()) return e;
                    this.consumeToken("and");
                }
            },
            Name () {
                let e = [];
                for(;;){
                    if (e.push(this.consumeRule("NamePiece")), this.matchEndOfFile() || this.matchToken("and")) return (0, q.orderNamePieces)(e);
                    this.consumeToken("comma"), this.consumeToken("whitespace", !0);
                }
            },
            NamePiece () {
                let e = [];
                for(;;){
                    let t = this.consumeRule("NameToken");
                    if (t.label) return t.label = (0, q.formatNameParts)([
                        ...e,
                        {
                            value: t.label
                        }
                    ]), [
                        t
                    ];
                    if (e.push(t), this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma")) return e;
                    for(; this.matchToken("hyphen") || this.matchToken("whitespace");)this.consumeToken();
                }
            },
            NameToken () {
                let e = null, t = "";
                for(;;)if (e === null && this.matchToken("text")) {
                    let r = this.consumeToken().value;
                    t += r, e = (0, q.getStringCase)(r);
                } else {
                    if (this.matchEndOfFile() || this.matchToken("and") || this.matchToken("comma") || this.matchToken("whitespace")) return {
                        value: t,
                        upperCase: e
                    };
                    if (this.matchToken("hyphen")) return {
                        value: t,
                        upperCase: e,
                        hyphenated: !0
                    };
                    if (this.matchToken("equals")) {
                        this.consumeToken("equals");
                        let r = this.consumeRule("NamePiece");
                        return r[0].label && (t += "=" + r[0].label), {
                            value: (0, q.formatNameParts)(r),
                            label: t
                        };
                    } else t += this.consumeRule("Text");
                }
            },
            StringList () {
                let e = [];
                for(; !this.matchEndOfFile();){
                    let t = "";
                    for(; !this.matchEndOfFile() && !this.matchToken("and");)t += this.consumeRule("Text");
                    e.push(A(t)), this.consumeToken("and", !0);
                }
                return e.length === 1 ? e[0] : e;
            },
            StringSeparated () {
                let e = [];
                for(; !this.matchEndOfFile();){
                    let t = "";
                    for(; !this.matchEndOfFile() && !this.matchToken("comma");)t += this.consumeRule("Text");
                    e.push(t.trim()), this.consumeToken("comma", !0), this.consumeToken("whitespace", !0);
                }
                return e;
            },
            StringVerbatim () {
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeToken().text;
                return A(e);
            },
            StringUri () {
                let e = this.consumeRule("StringVerbatim");
                try {
                    return decodeURI(e) === e ? encodeURI(e) : e;
                } catch  {
                    return encodeURI(e);
                }
            },
            StringTitleCase () {
                this.state.sentenceCase = !0;
                let e = "";
                for(; !this.matchEndOfFile();)e += this.consumeRule("Text");
                return A(e);
            },
            BracketString () {
                var e;
                let t = "";
                this.consumeToken("lbrace");
                let r = this.state.sentenceCase;
                for(this.state.sentenceCase = r && this.matchToken("command"), (e = this.state).partlyLowercase && (e.partlyLowercase = this.state.sentenceCase); !this.matchToken("rbrace");)t += this.consumeRule("Text");
                let a = r && !this.state.sentenceCase && this.state.partlyLowercase;
                return this.state.sentenceCase = r, this.consumeToken("rbrace"), a ? S(t, "nocase") : t;
            },
            MathString () {
                let e = "";
                for(this.consumeToken("mathShift"); !this.matchToken("mathShift");){
                    if (this.matchToken("script")) {
                        let t = this.consumeToken("script").value, r = this.consumeRule("Text").split("");
                        if (r.every((i)=>i in c.mathScripts[t])) e += r.map((i)=>c.mathScripts[t][i]).join("");
                        else {
                            let i = c.mathScriptFormatting[t];
                            e += c.formatting[i].join(r.join(""));
                        }
                        continue;
                    }
                    if (this.matchToken("command")) {
                        let t = this.token.value;
                        if (t in c.mathScriptFormatting) {
                            this.consumeToken("command");
                            let r = this.consumeRule("BracketString");
                            e += S(r, c.mathScriptFormatting[t]);
                            continue;
                        }
                    }
                    e += this.consumeRule("Text");
                }
                return this.consumeToken("mathShift"), e;
            },
            Text () {
                if (this.matchToken("lbrace")) return this.consumeRule("BracketString");
                if (this.matchToken("mathShift")) return this.consumeRule("MathString");
                if (this.matchToken("whitespace")) return this.consumeToken("whitespace").value;
                if (this.matchToken("commandBegin")) return this.consumeRule("EnclosedEnv");
                if (this.matchToken("command")) return this.consumeRule("Command");
                let e = this.consumeToken("text").value.replace(c.ligaturePattern, (m)=>c.ligatures[m]), t = this.state.afterPunctuation;
                if (this.state.afterPunctuation = /[?!.:]$/.test(e), !this.state.sentenceCase) {
                    var r;
                    return (r = this.state).partlyLowercase || (r.partlyLowercase = e === e.toLowerCase() && e !== e.toUpperCase()), e;
                }
                let [i, ...a] = e, n = a.join(""), l = n.toLowerCase();
                return n !== l ? e : t ? i + l : e.toLowerCase();
            },
            Command () {
                let e = this.consumeToken("command"), t = e.value;
                if (t in c.formattingEnvs) {
                    let r = this.consumeRule("Env"), i = c.formattingEnvs[t];
                    return S(r, i);
                } else if (t in c.formattingCommands) {
                    let r = this.consumeRule("BracketString"), i = c.formattingCommands[t];
                    return S(r, i);
                } else {
                    if (t in c.commands) return c.commands[t];
                    if (t in c.diacritics && !this.matchEndOfFile()) {
                        let r = this.consumeRule("Text");
                        return (r[0] + c.diacritics[t]).normalize("NFC") + r.slice(1);
                    } else if (t in c.argumentCommands) {
                        let r = c.argumentCommands[t], i = [], a = r.length;
                        for(; a-- > 0;)this.consumeToken("whitespace", !0), i.push(this.consumeRule("BracketString"));
                        return r(...i);
                    } else return /^[&%$#_{}]$/.test(t) ? e.text.slice(1) : e.text;
                }
            },
            Env () {
                let e = "";
                for(; !this.matchEndOfFile() && !this.matchToken("rbrace");)e += this.consumeRule("Text");
                return e;
            },
            EnclosedEnv () {
                this.consumeToken("commandBegin");
                let e = this.consumeRule("BracketString"), t = "";
                for(; !this.matchToken("commandEnd");)t += this.consumeRule("Text");
                let r = this.consumeToken("commandEnd"), i = this.consumeRule("BracketString");
                if (e !== i) throw new SyntaxError(this.lexer.formatError(r, `environment started with "${e}", ended with "${i}"`));
                return S(t, c.formattingEnvs[e]);
            }
        }, {
            sentenceCase: !1,
            partlyLowercase: !1,
            afterPunctuation: !0
        });
        P.valueGrammar = Ce;
        function Se(e) {
            return c.sentenceCaseLanguages.includes(e.toLowerCase());
        }
        function dr(e) {
            return Array.isArray(e) ? e.every(Se) : Se(e);
        }
        function fr(e, t) {
            if (e[1] === "name") return e[0] === "list" ? "StringNames" : "Name";
            if (e[1] === "title") {
                let r = or.default.parse.sentenceCase;
                return r === "always" || r === "english" && dr(t) ? "StringTitleCase" : "String";
            }
            switch(e[0] === "field" ? e[1] : e[0]){
                case "list":
                    return "StringList";
                case "separated":
                    return "StringSeparated";
                case "verbatim":
                    return "StringVerbatim";
                case "uri":
                    return "StringUri";
                case "title":
                case "literal":
                default:
                    return "String";
            }
        }
        function mr(e) {
            if (e[1] === "name") return "namesLiteral";
            switch(e[0]){
                case "list":
                    return "listLiteral";
                case "separated":
                    return "separatedLiteral";
                case "field":
                default:
                    return "stringLiteral";
            }
        }
        function hr(e, t, r = []) {
            let i = c.fieldTypes[t] || [];
            return Ce.parse(pr.reset(e, {
                state: mr(i),
                line: 0,
                col: 0
            }), fr(i, r));
        }
    });
    var z9 = d5((N)=>{
        "use strict";
        Object.defineProperty(N, "__esModule", {
            value: !0
        });
        N.parse = wr;
        N.parseBibtex = xr;
        var Ae = gr(C7()), Ne = we4(), je = Oe4(), Re = _10();
        function gr(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Le(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function qe(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? Le(Object(r), !0).forEach(function(i) {
                    br(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Le(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function br(e, t, r) {
            return t = vr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function vr(e) {
            var t = yr(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function yr(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function Ie(e, t) {
            let r = [];
            for (let { type: i, label: a, properties: n } of e)if (i in t) {
                let l = [];
                for (let m of t[i])Array.isArray(m) && !m.some((Ye)=>Ye in n) ? l.push(m.join("/")) : typeof m == "string" && !(m in n) && l.push(m);
                l.length && r.push([
                    a,
                    `missing fields: ${l.join(", ")}`
                ]);
            } else r.push([
                a,
                `invalid type: "${i}"`
            ]);
            if (r.length) throw new RangeError([
                "Invalid entries:"
            ].concat(r.map(([i, a])=>`  - ${i} has ${a}`)).join(`
`));
        }
        function De(e) {
            let t = {};
            "language" in e.properties && (t.language = (0, je.parse)(e.properties.language, "language"));
            for(let r in e.properties){
                let i = e.properties[r];
                i !== "" && (t[r] = (0, je.parse)(i + "", r, t.language));
            }
            return qe(qe({}, e), {}, {
                properties: t
            });
        }
        function wr(e) {
            return Ae.default.parse.strict && Ie(e, Re.required.biblatex), (0, Ne.parse)(e.map(De));
        }
        function xr(e) {
            return Ae.default.parse.strict && Ie(e, Re.required.bibtex), (0, Ne.parseBibtex)(e.map(De));
        }
    });
    var h7 = {};
    We2(h7, {
        __esModule: ()=>Tr1,
        default: ()=>_r1,
        parse: ()=>kr2,
        parseBibtex: ()=>Sr1
    });
    var Be3 = K6(z9());
    b6(h7, K6(z9()));
    var { __esModule: Tr1, parse: kr2, parseBibtex: Sr1 } = Be3, { default: Me2, ...Pr1 } = Be3, _r1 = Me2 !== void 0 ? Me2 : Pr1;
    const mod66 = {
        __esModule: Tr1,
        default: _r1,
        parse: kr2,
        parseBibtex: Sr1
    };
    var E7 = Object.create;
    var f6 = Object.defineProperty;
    var b7 = Object.getOwnPropertyDescriptor;
    var P10 = Object.getOwnPropertyNames;
    var g12 = Object.getPrototypeOf, v10 = Object.prototype.hasOwnProperty;
    var T12 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), h8 = (e, t)=>{
        for(var r in t)f6(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, x8 = (e, t, r, l)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let s of P10(t))!v10.call(e, s) && s !== r && f6(e, s, {
            get: ()=>t[s],
            enumerable: !(l = b7(t, s)) || l.enumerable
        });
        return e;
    }, o2 = (e, t, r)=>(x8(e, t, "default"), r && x8(r, t, "default")), y11 = (e, t, r)=>(r = e != null ? E7(g12(e)) : {}, x8(t || !e || !e.__esModule ? f6(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var c6 = T12((i)=>{
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.textEntry = i.text = i.parse = void 0;
        var u = {
            splitEntries: /\n\s*(?=\[)/g,
            parseEntry: /^\[(.+?)\]\s*(?:\n([\s\S]+))?$/,
            splitPairs: /((?=.)\s)*\n\s*/g,
            splitPair: /:(.*)/
        }, d = (e)=>{
            let [, t, r] = e.match(u.parseEntry) || [];
            if (!t || !r) return {};
            {
                let l = {
                    type: "book",
                    label: t,
                    properties: {}
                };
                return r.trim().split(u.splitPairs).filter((s)=>s).forEach((s)=>{
                    let [a, n] = s.split(u.splitPair);
                    n && (a = a.trim(), n = n.trim(), a === "type" ? l.type = n : l.properties[a] = n);
                }), l;
            }
        };
        i.textEntry = d;
        var k = (e)=>e.trim().split(u.splitEntries).map(d);
        i.text = i.parse = k;
    });
    var p9 = {};
    h8(p9, {
        __esModule: ()=>B4,
        default: ()=>S9,
        parse: ()=>O7,
        text: ()=>j9,
        textEntry: ()=>M10
    });
    var _11 = y11(c6());
    o2(p9, y11(c6()));
    var { __esModule: B4, textEntry: M10, text: j9, parse: O7 } = _11, { default: m8, ...R8 } = _11, S9 = m8 !== void 0 ? m8 : R8;
    const mod67 = {
        __esModule: B4,
        default: S9,
        parse: O7,
        text: j9,
        textEntry: M10
    };
    var D6 = Object.create;
    var m9 = Object.defineProperty;
    var E8 = Object.getOwnPropertyDescriptor;
    var R9 = Object.getOwnPropertyNames;
    var b8 = Object.getPrototypeOf, H6 = Object.prototype.hasOwnProperty;
    var o3 = (e, r)=>()=>(r || e((r = {
                exports: {}
            }).exports, r), r.exports), I10 = (e, r)=>{
        for(var t in r)m9(e, t, {
            get: r[t],
            enumerable: !0
        });
    }, v11 = (e, r, t, s)=>{
        if (r && typeof r == "object" || typeof r == "function") for (let p of R9(r))!H6.call(e, p) && p !== t && m9(e, p, {
            get: ()=>r[p],
            enumerable: !(s = E8(r, p)) || s.enumerable
        });
        return e;
    }, u6 = (e, r, t)=>(v11(e, r, "default"), t && v11(t, r, "default")), M11 = (e, r, t)=>(t = e != null ? D6(b8(e)) : {}, v11(r || !e || !e.__esModule ? m9(t, "default", {
            value: e,
            enumerable: !0
        }) : t, e));
    var P11 = o3((O)=>{
        "use strict";
        Object.defineProperty(O, "__esModule", {
            value: !0
        });
        O.parse = L;
        function L() {
            return [];
        }
    });
    var w9 = o3((f)=>{
        "use strict";
        Object.defineProperty(f, "__esModule", {
            value: !0
        });
        f.default = void 0;
        var i = {
            _output (e, r, t) {
                this._log.push(r, t), !(this._levels.indexOf(e) < this._levels.indexOf(this.level)) && this._console.log(r, ...t);
            },
            _console: null,
            _log: [],
            _levels: [
                "http",
                "debug",
                "unmapped",
                "info",
                "warn",
                "error",
                "silent"
            ],
            level: "silent"
        };
        for (let e of i._levels)i[e] = (r, ...t)=>i._output(e, r, t);
        typeof console.Console == "function" ? i._console = new console.Console(process2.stderr) : i._console = console;
        var Q = i;
        f.default = Q;
    });
    var x9 = o3((d)=>{
        "use strict";
        Object.defineProperty(d, "__esModule", {
            value: !0
        });
        d.default = d.parse = F;
        var B = z(w9());
        function z(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var A = [
            [
                /((?:\[|:|,)\s*)'((?:\\'|[^'])*?[^\\])?'(?=\s*(?:\]|}|,))/g,
                '$1"$2"'
            ],
            [
                /((?:(?:"|]|}|\/[gmiuys]|\.|(?:\d|\.|-)*\d)\s*,|{)\s*)(?:"([^":\n]+?)"|'([^":\n]+?)'|([^":\n]+?))(\s*):/g,
                '$1"$2$3$4"$5:'
            ]
        ];
        function F(e) {
            if (typeof e != "string") return JSON.parse(e);
            try {
                return JSON.parse(e);
            } catch  {
                return B.default.debug("[plugin-common]", "Invalid JSON, switching to experimental parser"), A.forEach(([t, s])=>{
                    e = e.replace(t, s);
                }), JSON.parse(e);
            }
        }
    });
    var S10 = o3((g)=>{
        "use strict";
        Object.defineProperty(g, "__esModule", {
            value: !0
        });
        g.parse = G;
        function G(e) {
            return e.val() || e.text() || e.html();
        }
    });
    var q9 = o3((h)=>{
        "use strict";
        Object.defineProperty(h, "__esModule", {
            value: !0
        });
        h.parse = K;
        function K(e) {
            return e.value || e.textContent;
        }
    });
    var T13 = o3((a)=>{
        "use strict";
        Object.defineProperty(a, "__esModule", {
            value: !0
        });
        a.ref = a.parsers = a.formats = void 0;
        var _ = y(P11()), $ = y(x9()), C = y(S10()), N = y(q9());
        function J(e) {
            if (typeof WeakMap != "function") return null;
            var r = new WeakMap, t = new WeakMap;
            return (J = function(s) {
                return s ? t : r;
            })(e);
        }
        function y(e, r) {
            if (!r && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var t = J(r);
            if (t && t.has(e)) return t.get(e);
            var s = {}, p = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var l in e)if (l !== "default" && Object.prototype.hasOwnProperty.call(e, l)) {
                var c = p ? Object.getOwnPropertyDescriptor(e, l) : null;
                c && (c.get || c.set) ? Object.defineProperty(s, l, c) : s[l] = e[l];
            }
            return s.default = e, t && t.set(e, s), s;
        }
        var U = "@else";
        a.ref = U;
        var V = {
            empty: _,
            json: $,
            jquery: C,
            html: N
        };
        a.parsers = V;
        var X = {
            "@empty/text": {
                parse: _.parse,
                parseType: {
                    dataType: "String",
                    predicate: (e)=>e === ""
                }
            },
            "@empty/whitespace+text": {
                parse: _.parse,
                parseType: {
                    dataType: "String",
                    predicate: /^\s+$/
                }
            },
            "@empty": {
                parse: _.parse,
                parseType: {
                    dataType: "Primitive",
                    predicate: (e)=>e == null
                }
            },
            "@else/json": {
                parse: $.parse,
                parseType: {
                    dataType: "String",
                    predicate: /^\s*(\{[\S\s]*\}|\[[\S\s]*\])\s*$/
                }
            },
            "@else/url": {
                parseType: {
                    dataType: "String",
                    predicate: /^https?:\/\/(([\w-]+\.)*[\w-]+)(:\d+)?(\/[^?/]*)*(\?[^#]*)?(#.*)?$/i
                }
            },
            "@else/jquery": {
                parse: C.parse,
                parseType: {
                    dataType: "ComplexObject",
                    predicate (e) {
                        return typeof jQuery < "u" && e instanceof jQuery;
                    }
                }
            },
            "@else/html": {
                parse: N.parse,
                parseType: {
                    dataType: "ComplexObject",
                    predicate (e) {
                        return typeof HTMLElement < "u" && e instanceof HTMLElement;
                    }
                }
            }
        };
        a.formats = X;
    });
    var n5 = {};
    I10(n5, {
        __esModule: ()=>Y4,
        default: ()=>te7,
        formats: ()=>ee6,
        parsers: ()=>k7,
        ref: ()=>Z6
    });
    var j10 = M11(T13());
    u6(n5, M11(T13()));
    var { __esModule: Y4, ref: Z6, parsers: k7, formats: ee6 } = j10, { default: W6, ...re5 } = j10, te7 = W6 !== void 0 ? W6 : re5;
    const mod68 = {
        __esModule: Y4,
        default: te7,
        formats: ee6,
        parsers: k7,
        ref: Z6
    };
    var require6 = (n)=>{
        const c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/date":
                return c(mod54);
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var Me3 = Object.create;
    var S11 = Object.defineProperty;
    var De4 = Object.getOwnPropertyDescriptor;
    var Le3 = Object.getOwnPropertyNames;
    var Ne4 = Object.getPrototypeOf, Be4 = Object.prototype.hasOwnProperty;
    var h9 = ((e)=>typeof require6 < "u" ? require6 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require6 < "u" ? require6 : t)[r]
        }) : e)(function(e) {
        if (typeof require6 < "u") return require6.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var c7 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), Re4 = (e, t)=>{
        for(var r in t)S11(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, P12 = (e, t, r, i)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of Le3(t))!Be4.call(e, a) && a !== r && S11(e, a, {
            get: ()=>t[a],
            enumerable: !(i = De4(t, a)) || i.enumerable
        });
        return e;
    }, m10 = (e, t, r)=>(P12(e, t, "default"), r && P12(r, t, "default")), K7 = (e, t, r)=>(r = e != null ? Me3(Ne4(e)) : {}, P12(t || !e || !e.__esModule ? S11(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var C8 = c7((mr, Ye)=>{
        Ye.exports = {
            source: {
                article: "article-journal",
                book: "book",
                mvbook: "book",
                inbook: "chapter",
                bookinbook: "book",
                booklet: "book",
                collection: "book",
                mvcollection: "book",
                incollection: "chapter",
                dataset: "dataset",
                manual: "report",
                misc: "document",
                online: "webpage",
                patent: "patent",
                periodical: "periodical",
                proceedings: "book",
                mvproceedings: "book",
                inproceedings: "paper-conference",
                reference: "book",
                mvreference: "book",
                inreference: "entry",
                report: "report",
                software: "software",
                thesis: "thesis",
                unpublished: "manuscript",
                artwork: "graphic",
                audio: "song",
                image: "figure",
                jurisdiction: "legal_case",
                legislation: "legislation",
                legal: "treaty",
                letter: "personal_communication",
                movie: "motion_picture",
                music: "musical_score",
                performance: "performance",
                review: "review",
                standard: "standard",
                video: "motion_picture",
                conference: "paper-conference",
                electronic: "webpage",
                mastersthesis: "thesis",
                phdthesis: "thesis",
                techreport: "report",
                www: "webpage"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                bill: "legislation",
                book: "book",
                broadcast: "audio",
                chapter: "inbook",
                classic: "unpublished",
                collection: "misc",
                dataset: "dataset",
                document: "misc",
                entry: "inreference",
                "entry-dictionary": "inreference",
                "entry-encyclopedia": "inreference",
                event: "misc",
                figure: "artwork",
                graphic: "artwork",
                hearing: "legal",
                interview: "audio",
                legal_case: "jurisdiction",
                legislation: "legislation",
                manuscript: "unpublished",
                motion_picture: "movie",
                musical_score: "music",
                "paper-conference": "inproceedings",
                patent: "patent",
                performance: "performance",
                periodical: "periodical",
                personal_communication: "letter",
                post: "online",
                "post-weblog": "online",
                regulation: "legal",
                report: "report",
                review: "review",
                "review-book": "review",
                software: "software",
                song: "music",
                speech: "audio",
                standard: "standard",
                thesis: "thesis",
                treaty: "legal",
                webpage: "online"
            }
        };
    });
    var O8 = c7((br, $e)=>{
        $e.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var U6 = c7((hr, ze)=>{
        ze.exports = {
            biblatex: {
                article: [
                    "author",
                    "title",
                    "journaltitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                book: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvbook: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inbook: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                booklet: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                collection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvcollection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                dataset: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                online: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                patent: [
                    "author",
                    "title",
                    "number",
                    [
                        "year",
                        "date"
                    ]
                ],
                periodical: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                proceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvproceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                report: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                thesis: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                unpublished: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                conference: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                electronic: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                phdthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                www: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ]
            },
            bibtex: {
                article: [
                    "author",
                    "title",
                    "journal",
                    "year"
                ],
                book: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    "publisher",
                    "year"
                ],
                booklet: [
                    "title"
                ],
                inbook: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "chapter",
                        "pages"
                    ],
                    "publisher",
                    "year"
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    "publisher",
                    "year"
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    "year"
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                phdthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                proceedings: [
                    "title",
                    "year"
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    "year"
                ],
                unpublished: [
                    "author",
                    "title",
                    "note"
                ]
            }
        };
    });
    var W7 = c7((vr, Ke)=>{
        Ke.exports = {
            abstract: [
                "field",
                "literal"
            ],
            addendum: [
                "field",
                "literal"
            ],
            afterword: [
                "list",
                "name"
            ],
            annotation: [
                "field",
                "literal"
            ],
            annotator: [
                "list",
                "name"
            ],
            author: [
                "list",
                "name"
            ],
            authortype: [
                "field",
                "key"
            ],
            bookauthor: [
                "list",
                "name"
            ],
            bookpagination: [
                "field",
                "key"
            ],
            booksubtitle: [
                "field",
                "literal"
            ],
            booktitle: [
                "field",
                "title"
            ],
            booktitleaddon: [
                "field",
                "literal"
            ],
            chapter: [
                "field",
                "literal"
            ],
            commentator: [
                "list",
                "name"
            ],
            date: [
                "field",
                "date"
            ],
            doi: [
                "field",
                "verbatim"
            ],
            edition: [
                "field",
                "literal"
            ],
            editor: [
                "list",
                "name"
            ],
            editora: [
                "list",
                "name"
            ],
            editorb: [
                "list",
                "name"
            ],
            editorc: [
                "list",
                "name"
            ],
            editortype: [
                "field",
                "key"
            ],
            editoratype: [
                "field",
                "key"
            ],
            editorbtype: [
                "field",
                "key"
            ],
            editorctype: [
                "field",
                "key"
            ],
            eid: [
                "field",
                "literal"
            ],
            entrysubtype: [
                "field",
                "literal"
            ],
            eprint: [
                "field",
                "verbatim"
            ],
            eprintclass: [
                "field",
                "literal"
            ],
            eprinttype: [
                "field",
                "literal"
            ],
            eventdate: [
                "field",
                "date"
            ],
            eventtitle: [
                "field",
                "title"
            ],
            eventtitleaddon: [
                "field",
                "literal"
            ],
            file: [
                "field",
                "verbatim"
            ],
            foreword: [
                "list",
                "name"
            ],
            holder: [
                "list",
                "name"
            ],
            howpublished: [
                "field",
                "literal"
            ],
            indextitle: [
                "field",
                "literal"
            ],
            institution: [
                "list",
                "literal"
            ],
            introduction: [
                "list",
                "name"
            ],
            isan: [
                "field",
                "literal"
            ],
            isbn: [
                "field",
                "literal"
            ],
            ismn: [
                "field",
                "literal"
            ],
            isrn: [
                "field",
                "literal"
            ],
            issn: [
                "field",
                "literal"
            ],
            issue: [
                "field",
                "literal"
            ],
            issuesubtitle: [
                "field",
                "literal"
            ],
            issuetitle: [
                "field",
                "literal"
            ],
            iswc: [
                "field",
                "literal"
            ],
            journalsubtitle: [
                "field",
                "literal"
            ],
            journaltitle: [
                "field",
                "literal"
            ],
            label: [
                "field",
                "literal"
            ],
            language: [
                "list",
                "key"
            ],
            library: [
                "field",
                "literal"
            ],
            location: [
                "list",
                "literal"
            ],
            mainsubtitle: [
                "field",
                "literal"
            ],
            maintitle: [
                "field",
                "title"
            ],
            maintitleaddon: [
                "field",
                "literal"
            ],
            month: [
                "field",
                "literal"
            ],
            nameaddon: [
                "field",
                "literal"
            ],
            note: [
                "field",
                "literal"
            ],
            number: [
                "field",
                "literal"
            ],
            organization: [
                "list",
                "literal"
            ],
            origdate: [
                "field",
                "date"
            ],
            origlanguage: [
                "list",
                "key"
            ],
            origlocation: [
                "list",
                "literal"
            ],
            origpublisher: [
                "list",
                "literal"
            ],
            origtitle: [
                "field",
                "title"
            ],
            pages: [
                "field",
                "range"
            ],
            pagetotal: [
                "field",
                "literal"
            ],
            pagination: [
                "field",
                "key"
            ],
            part: [
                "field",
                "literal"
            ],
            publisher: [
                "list",
                "literal"
            ],
            pubstate: [
                "field",
                "key"
            ],
            reprinttitle: [
                "field",
                "literal"
            ],
            series: [
                "field",
                "title"
            ],
            shortauthor: [
                "list",
                "name"
            ],
            shorteditor: [
                "list",
                "name"
            ],
            shorthand: [
                "field",
                "literal"
            ],
            shorthandintro: [
                "field",
                "literal"
            ],
            shortjournal: [
                "field",
                "literal"
            ],
            shortseries: [
                "field",
                "literal"
            ],
            shorttitle: [
                "field",
                "title"
            ],
            subtitle: [
                "field",
                "literal"
            ],
            title: [
                "field",
                "title"
            ],
            titleaddon: [
                "field",
                "literal"
            ],
            translator: [
                "list",
                "name"
            ],
            type: [
                "field",
                "title"
            ],
            url: [
                "field",
                "uri"
            ],
            urldate: [
                "field",
                "date"
            ],
            venue: [
                "field",
                "literal"
            ],
            version: [
                "field",
                "literal"
            ],
            volume: [
                "field",
                "integer"
            ],
            volumes: [
                "field",
                "integer"
            ],
            year: [
                "field",
                "literal"
            ],
            crossref: [
                "field",
                "entry key"
            ],
            entryset: [
                "separated",
                "literal"
            ],
            execute: [
                "field",
                "code"
            ],
            gender: [
                "field",
                "gender"
            ],
            langid: [
                "field",
                "identifier"
            ],
            langidopts: [
                "field",
                "literal"
            ],
            ids: [
                "separated",
                "entry key"
            ],
            indexsorttitle: [
                "field",
                "literal"
            ],
            keywords: [
                "separated",
                "literal"
            ],
            options: [
                "separated",
                "options"
            ],
            presort: [
                "field",
                "string"
            ],
            related: [
                "separated",
                "literal"
            ],
            relatedoptions: [
                "separated",
                "literal"
            ],
            relatedtype: [
                "field",
                "identifier"
            ],
            relatedstring: [
                "field",
                "literal"
            ],
            sortkey: [
                "field",
                "literal"
            ],
            sortname: [
                "list",
                "name"
            ],
            sortshorthand: [
                "field",
                "literal"
            ],
            sorttitle: [
                "field",
                "literal"
            ],
            sortyear: [
                "field",
                "integer"
            ],
            xdata: [
                "separated",
                "entry key"
            ],
            xref: [
                "field",
                "entry key"
            ],
            namea: [
                "list",
                "name"
            ],
            nameb: [
                "list",
                "name"
            ],
            namec: [
                "list",
                "name"
            ],
            nameatype: [
                "field",
                "key"
            ],
            namebtype: [
                "field",
                "key"
            ],
            namectype: [
                "field",
                "key"
            ],
            lista: [
                "list",
                "literal"
            ],
            listb: [
                "list",
                "literal"
            ],
            listc: [
                "list",
                "literal"
            ],
            listd: [
                "list",
                "literal"
            ],
            liste: [
                "list",
                "literal"
            ],
            listf: [
                "list",
                "literal"
            ],
            usera: [
                "field",
                "literal"
            ],
            userb: [
                "field",
                "literal"
            ],
            userc: [
                "field",
                "literal"
            ],
            userd: [
                "field",
                "literal"
            ],
            usere: [
                "field",
                "literal"
            ],
            userf: [
                "field",
                "literal"
            ],
            verba: [
                "field",
                "literal"
            ],
            verbb: [
                "field",
                "literal"
            ],
            verbc: [
                "field",
                "literal"
            ],
            address: [
                "list",
                "literal"
            ],
            annote: [
                "field",
                "literal"
            ],
            archiveprefix: [
                "field",
                "literal"
            ],
            journal: [
                "field",
                "literal"
            ],
            key: [
                "field",
                "literal"
            ],
            pdf: [
                "field",
                "verbatim"
            ],
            primaryclass: [
                "field",
                "literal"
            ],
            school: [
                "list",
                "literal"
            ],
            numpages: [
                "field",
                "integer"
            ],
            pmid: [
                "field",
                "literal"
            ],
            pmcid: [
                "field",
                "literal"
            ]
        };
    });
    var H7 = c7((yr, Ue)=>{
        Ue.exports = {
            diacritics: {
                "`": "\u0300",
                "'": "\u0301",
                "^": "\u0302",
                "~": "\u0303",
                "=": "\u0304",
                u: "\u0306",
                ".": "\u0307",
                '"': "\u0308",
                r: "\u030A",
                H: "\u030B",
                v: "\u030C",
                b: "\u0332",
                d: "\u0323",
                c: "\u0327",
                k: "\u0328",
                t: "\u0361",
                textcommabelow: "\u0326"
            },
            commands: {
                textquotesingle: "'",
                textasciigrave: "`",
                textquotedbl: '"',
                textdollar: "$",
                textless: "<",
                textgreater: ">",
                textbackslash: "\\",
                textasciicircum: "^",
                textunderscore: "_",
                textbraceleft: "{",
                textbar: "|",
                textbraceright: "}",
                textasciitilde: "~",
                textexclamdown: "\xA1",
                textcent: "\xA2",
                textsterling: "\xA3",
                textcurrency: "\xA4",
                textyen: "\xA5",
                textbrokenbar: "\xA6",
                textsection: "\xA7",
                textasciidieresis: "\xA8",
                textcopyright: "\xA9",
                textordfeminine: "\xAA",
                guillemetleft: "\xAB",
                guillemotleft: "\xAB",
                textlnot: "\xAC",
                textregistered: "\xAE",
                textasciimacron: "\xAF",
                textdegree: "\xB0",
                textpm: "\xB1",
                texttwosuperior: "\xB2",
                textthreesuperior: "\xB3",
                textasciiacute: "\xB4",
                textmu: "\xB5",
                textparagraph: "\xB6",
                textperiodcentered: "\xB7",
                textonesuperior: "\xB9",
                textordmasculine: "\xBA",
                guillemetright: "\xBB",
                guillemotright: "\xBB",
                textonequarter: "\xBC",
                textonehalf: "\xBD",
                textthreequarters: "\xBE",
                textquestiondown: "\xBF",
                AE: "\xC6",
                DH: "\xD0",
                texttimes: "\xD7",
                O: "\xD8",
                TH: "\xDE",
                ss: "\xDF",
                ae: "\xE6",
                dh: "\xF0",
                textdiv: "\xF7",
                o: "\xF8",
                th: "\xFE",
                DJ: "\u0110",
                dj: "\u0111",
                i: "\u0131",
                IJ: "\u0132",
                ij: "\u0133",
                L: "\u0141",
                l: "\u0142",
                NG: "\u014A",
                ng: "\u014B",
                OE: "\u0152",
                oe: "\u0153",
                textflorin: "\u0192",
                j: "\u0237",
                textasciicaron: "\u02C7",
                textasciibreve: "\u02D8",
                textacutedbl: "\u02DD",
                textgravedbl: "\u02F5",
                texttildelow: "\u02F7",
                textbaht: "\u0E3F",
                SS: "\u1E9E",
                textcompwordmark: "\u200C",
                textendash: "\u2013",
                textemdash: "\u2014",
                textbardbl: "\u2016",
                textquoteleft: "\u2018",
                textquoteright: "\u2019",
                quotesinglbase: "\u201A",
                textquotedblleft: "\u201C",
                textquotedblright: "\u201D",
                quotedblbase: "\u201E",
                textdagger: "\u2020",
                textdaggerdbl: "\u2021",
                textbullet: "\u2022",
                textellipsis: "\u2026",
                textperthousand: "\u2030",
                textpertenthousand: "\u2031",
                guilsinglleft: "\u2039",
                guilsinglright: "\u203A",
                textreferencemark: "\u203B",
                textinterrobang: "\u203D",
                textfractionsolidus: "\u2044",
                textlquill: "\u2045",
                textrquill: "\u2046",
                textdiscount: "\u2052",
                textcolonmonetary: "\u20A1",
                textlira: "\u20A4",
                textnaira: "\u20A6",
                textwon: "\u20A9",
                textdong: "\u20AB",
                texteuro: "\u20AC",
                textpeso: "\u20B1",
                textcelsius: "\u2103",
                textnumero: "\u2116",
                textcircledP: "\u2117",
                textrecipe: "\u211E",
                textservicemark: "\u2120",
                texttrademark: "\u2122",
                textohm: "\u2126",
                textmho: "\u2127",
                textestimated: "\u212E",
                textleftarrow: "\u2190",
                textuparrow: "\u2191",
                textrightarrow: "\u2192",
                textdownarrow: "\u2193",
                textminus: "\u2212",
                Hwithstroke: "\u0126",
                hwithstroke: "\u0127",
                textasteriskcentered: "\u2217",
                textsurd: "\u221A",
                textlangle: "\u2329",
                textrangle: "\u232A",
                textblank: "\u2422",
                textvisiblespace: "\u2423",
                textopenbullet: "\u25E6",
                textbigcircle: "\u25EF",
                textmusicalnote: "\u266A",
                textmarried: "\u26AD",
                textdivorced: "\u26AE",
                textinterrobangdown: "\u2E18",
                textcommabelow: null,
                copyright: "\xA9",
                Gamma: "\u0393",
                Delta: "\u0394",
                Theta: "\u0398",
                Lambda: "\u039B",
                Xi: "\u039E",
                Pi: "\u03A0",
                Sigma: "\u03A3",
                Phi: "\u03A6",
                Psi: "\u03A8",
                Omega: "\u03A9",
                alpha: "\u03B1",
                beta: "\u03B2",
                gamma: "\u03B3",
                delta: "\u03B4",
                varepsilon: "\u03B5",
                zeta: "\u03B6",
                eta: "\u03B7",
                theta: "\u03B8",
                iota: "\u03B9",
                kappa: "\u03BA",
                lambda: "\u03BB",
                mu: "\u03BC",
                nu: "\u03BD",
                xi: "\u03BE",
                pi: "\u03C0",
                rho: "\u03C1",
                varsigma: "\u03C2",
                sigma: "\u03C3",
                tau: "\u03C4",
                upsilon: "\u03C5",
                varphi: "\u03C6",
                chi: "\u03C7",
                psi: "\u03C8",
                omega: "\u03C9",
                vartheta: "\u03D1",
                Upsilon: "\u03D2",
                phi: "\u03D5",
                varpi: "\u03D6",
                varrho: "\u03F1",
                epsilon: "\u03F5"
            }
        };
    });
    var A8 = c7((s)=>{
        "use strict";
        Object.defineProperty(s, "__esModule", {
            value: !0
        });
        s.sentenceCaseLanguages = s.required = s.mathScripts = s.mathScriptFormatting = s.ligatures = s.ligaturePattern = s.formattingEnvs = s.formattingCommands = s.formatting = s.fieldTypes = s.diacritics = s.defaultStrings = s.commands = s.argumentCommands = void 0;
        var We = j(U6()), He = j(W7()), F = j(H7());
        function j(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Fe = We.default;
        s.required = Fe;
        var Ge = He.default;
        s.fieldTypes = Ge;
        var Je = F.default.diacritics;
        s.diacritics = Je;
        var Ve = F.default.commands;
        s.commands = Ve;
        var Xe = {
            jan: "01",
            feb: "02",
            mar: "03",
            apr: "04",
            may: "05",
            jun: "06",
            jul: "07",
            aug: "08",
            sep: "09",
            oct: "10",
            nov: "11",
            dec: "12",
            acmcs: "ACM Computing Surveys",
            acta: "Acta Informatica",
            cacm: "Communications of the ACM",
            ibmjrd: "IBM Journal of Research and Development",
            ibmsj: "IBM Systems Journal",
            ieeese: "IEEE Transactions on Software Engineering",
            ieeetc: "IEEE Transactions on Computers",
            ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
            ipl: "Information Processing Letters",
            jacm: "Journal of the ACM",
            jcss: "Journal of Computer and System Sciences",
            scp: "Science of Computer Programming",
            sicomp: "SIAM Journal on Computing",
            tocs: "ACM Transactions on Computer Systems",
            tods: "ACM Transactions on Database Systems",
            tog: "ACM Transactions on Graphics",
            toms: "ACM Transactions on Mathematical Software",
            toois: "ACM Transactions on Office Information Systems",
            toplas: "ACM Transactions on Programming Languages and Systems",
            tcs: "Theoretical Computer Science"
        };
        s.defaultStrings = Xe;
        var Ze = {
            it: "italics",
            itshape: "italics",
            sl: "italics",
            slshape: "italics",
            em: "italics",
            bf: "bold",
            bfseries: "bold",
            sc: "smallcaps",
            scshape: "smallcaps",
            rm: void 0,
            sf: void 0,
            tt: void 0
        };
        s.formattingEnvs = Ze;
        var Qe = {
            textit: "italics",
            textsl: "italics",
            emph: "italics",
            mkbibitalic: "italics",
            mkbibemph: "italics",
            textbf: "bold",
            strong: "bold",
            mkbibbold: "bold",
            textsc: "smallcaps",
            textsuperscript: "superscript",
            textsubscript: "subscript",
            enquote: "quotes",
            mkbibquote: "quotes",
            textmd: void 0,
            textrm: void 0,
            textsf: void 0,
            texttt: void 0,
            textup: void 0
        };
        s.formattingCommands = Qe;
        var et = {
            italics: [
                "<i>",
                "</i>"
            ],
            bold: [
                "<b>",
                "</b>"
            ],
            superscript: [
                "<sup>",
                "</sup>"
            ],
            subscript: [
                "<sub>",
                "</sub>"
            ],
            smallcaps: [
                '<span style="font-variant:small-caps;">',
                "</span>"
            ],
            nocase: [
                '<span class="nocase">',
                "</span>"
            ],
            quotes: [
                "\u201C",
                "\u201D"
            ]
        };
        s.formatting = et;
        var tt = {
            ElsevierGlyph (e) {
                return String.fromCharCode(parseInt(e, 16));
            },
            href (e, t) {
                return e;
            },
            url (e) {
                return e;
            }
        };
        s.argumentCommands = tt;
        var rt = /---?|''|``|~/g;
        s.ligaturePattern = rt;
        var it = {
            "--": "\u2013",
            "---": "\u2014",
            "``": "\u201C",
            "''": "\u201D",
            "~": "\xA0"
        };
        s.ligatures = it;
        var at = {
            "^": "superscript",
            sp: "superscript",
            _: "subscript",
            sb: "subscript",
            mathrm: void 0
        };
        s.mathScriptFormatting = at;
        var ot = {
            "^": {
                0: "\u2070",
                1: "\xB9",
                2: "\xB2",
                3: "\xB3",
                4: "\u2074",
                5: "\u2075",
                6: "\u2076",
                7: "\u2077",
                8: "\u2078",
                9: "\u2079",
                "+": "\u207A",
                "-": "\u207B",
                "=": "\u207C",
                "(": "\u207D",
                ")": "\u207E",
                i: "\u2071",
                n: "\u207F"
            },
            _: {
                0: "\u2080",
                1: "\u2081",
                2: "\u2082",
                3: "\u2083",
                4: "\u2084",
                5: "\u2085",
                6: "\u2086",
                7: "\u2087",
                8: "\u2088",
                9: "\u2089",
                "+": "\u208A",
                "-": "\u208B",
                "=": "\u208C",
                "(": "\u208D",
                ")": "\u208E",
                a: "\u2090",
                e: "\u2091",
                o: "\u2092",
                x: "\u2093",
                ə: "\u2094",
                h: "\u2095",
                k: "\u2096",
                l: "\u2097",
                m: "\u2098",
                n: "\u2099",
                s: "\u209A",
                p: "\u209B",
                t: "\u209C"
            }
        };
        s.mathScripts = ot;
        var nt = [
            "american",
            "british",
            "canadian",
            "english",
            "australian",
            "newzealand",
            "usenglish",
            "ukenglish",
            "en",
            "eng",
            "en-au",
            "en-bz",
            "en-ca",
            "en-cb",
            "en-gb",
            "en-ie",
            "en-jm",
            "en-nz",
            "en-ph",
            "en-tt",
            "en-us",
            "en-za",
            "en-zw",
            "anglais"
        ];
        s.sentenceCaseLanguages = nt;
    });
    var V6 = c7((w)=>{
        "use strict";
        Object.defineProperty(w, "__esModule", {
            value: !0
        });
        w.default = void 0;
        var st = J(C8()), lt = J(O8()), ut = ct(A8());
        function G(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (G = function(i) {
                return i ? r : t;
            })(e);
        }
        function ct(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = G(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var n in e)if (n !== "default" && Object.prototype.hasOwnProperty.call(e, n)) {
                var u = a ? Object.getOwnPropertyDescriptor(e, n) : null;
                u && (u.get || u.set) ? Object.defineProperty(i, n, u) : i[n] = e[n];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function J(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var pt = {
            constants: ut,
            types: {
                biblatex: st.default,
                bibtex: lt.default
            },
            parse: {
                biblatex: !0,
                strict: !1,
                sentenceCase: "never"
            },
            format: {
                useIdAsLabel: !1
            }
        };
        w.default = pt;
    });
    var x10 = c7((p)=>{
        "use strict";
        Object.defineProperty(p, "__esModule", {
            value: !0
        });
        p.TYPE_KEYS = p.TYPE = p.STANDARD_NUMBERS_PATTERN = p.MONTHS = p.LABEL = p.Converters = void 0;
        p.formatLabel = re;
        p.parseDate = ee;
        p.parseMonth = te;
        var dt = h9("@citation-js/core"), ft = gt(V6());
        function gt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var mt = new Set([
            "the",
            "a",
            "an"
        ]), I = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, bt = /[^\u0020-\u007F]+/g;
        function X(e) {
            return e ? e.normalize("NFKD").replace(bt, "").split(I).find((t)=>t.length && !mt.has(t.toLowerCase())) : "";
        }
        var Z = new dt.util.Translator([
            {
                source: "given",
                target: "given"
            },
            {
                source: "family",
                target: "family"
            },
            {
                source: "suffix",
                target: "suffix"
            },
            {
                source: "prefix",
                target: "non-dropping-particle"
            },
            {
                source: "family",
                target: "literal",
                when: {
                    source: !1,
                    target: {
                        family: !1,
                        given: !1
                    }
                }
            }
        ]), ht = [
            "jan",
            "feb",
            "mar",
            "apr",
            "may",
            "jun",
            "jul",
            "aug",
            "sep",
            "oct",
            "nov",
            "dec"
        ], vt = "BibTeX type";
        p.TYPE = vt;
        var yt = "BibTeX label";
        p.LABEL = yt;
        var b = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12,
            january: 1,
            february: 2,
            march: 3,
            april: 4,
            may: 5,
            june: 6,
            july: 7,
            august: 8,
            september: 9,
            october: 10,
            november: 11,
            december: 12
        };
        p.MONTHS = b;
        var wt = {
            bathesis: "Bachelor's thesis",
            mathesis: "Master's thesis",
            phdthesis: "PhD thesis",
            candthesis: "Candidate thesis",
            techreport: "technical report",
            resreport: "research report",
            software: "computer software",
            datacd: "data cd",
            audiocd: "audio cd",
            patent: "patent",
            patentde: "German patent",
            patenteu: "European patent",
            patentfr: "French patent",
            patentuk: "British patent",
            patentus: "U.S. patent",
            patreq: "patent request",
            patreqde: "German patent request",
            patreqeu: "European patent request",
            patreqfr: "French patent request",
            patrequk: "British patent request",
            patrequs: "U.S. patent request"
        };
        p.TYPE_KEYS = wt;
        var Q = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
        p.STANDARD_NUMBERS_PATTERN = Q;
        function ee(e) {
            let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), i = +t[1], a = +t[2];
            return !i || i > 20 ? [
                r
            ] : a ? [
                r,
                i,
                a
            ] : [
                r,
                i
            ];
        }
        function te(e) {
            if (e == null) return [];
            if (+e) return [
                parseInt(e, 10)
            ];
            if (e = e.trim().toLowerCase(), e in b) return [
                b[e]
            ];
            let t = e.split(/\s+/), r, i;
            return t[0] in b ? (r = b[t[0]], i = parseInt(t[1])) : t[1] in b && (r = b[t[1]], i = parseInt(t[0])), i ? [
                r,
                i
            ] : r ? [
                r
            ] : [];
        }
        function re(e, t, r, i) {
            let a = "";
            return e && e[0] && (a += X(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (a += t["date-parts"][0][0]), r ? a += r : i && (a += X(i)), a;
        }
        var xt = {
            PICK: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            },
            DATE: {
                toTarget (e) {
                    let t = e.split("/").map((r)=>r && r !== ".." ? ee(r) : void 0);
                    return isNaN(t[0][0]) ? {
                        literal: e
                    } : {
                        "date-parts": t
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
                }
            },
            YEAR_MONTH: {
                toTarget (e, t, r) {
                    return isNaN(+e) ? {
                        literal: e
                    } : !isNaN(+r) && !isNaN(+t) ? {
                        "date-parts": [
                            [
                                +e,
                                +t,
                                +r
                            ]
                        ]
                    } : {
                        "date-parts": [
                            [
                                +e,
                                ...te(t)
                            ]
                        ]
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) {
                        let [t, r, i] = e["date-parts"][0];
                        return [
                            t.toString(),
                            r ? i ? `${ht[r - 1]} ${i}` : r : void 0
                        ];
                    } else return [];
                }
            },
            EPRINT: {
                toTarget (e, t) {
                    if (t === "pubmed") return e;
                },
                toSource (e) {
                    return [
                        e,
                        "pubmed"
                    ];
                }
            },
            EVENT_TITLE: {
                toTarget (e, t) {
                    return t && (e += " (" + t + ")"), e;
                },
                toSource (e) {
                    return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
                }
            },
            HOW_PUBLISHED: {
                toTarget (e) {
                    if (e.startsWith("http")) return e;
                }
            },
            KEYWORDS: {
                toTarget (e) {
                    return e.join(",");
                },
                toSource (e) {
                    return e.split(",");
                }
            },
            LABEL: {
                toTarget (e) {
                    return [
                        e,
                        e
                    ];
                },
                toSource (e, t, r, i, a, n) {
                    let u;
                    return e === null ? u = "null" : e === void 0 ? u = "undefined" : u = e.toString().replace(I, ""), ft.default.format.useIdAsLabel ? u : t && !I.test(t) ? t : re(r, i, a, n) || u;
                }
            },
            NAMES: {
                toTarget (e) {
                    return e.map(Z.convertToTarget);
                },
                toSource (e) {
                    return e.map(Z.convertToSource);
                }
            },
            PAGES: {
                toTarget (e) {
                    return e.replace(/[–—]/, "-");
                },
                toSource (e) {
                    return e.replace("-", "--");
                }
            },
            STANDARD_NUMBERS: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    let t = e.toString().match(Q);
                    return t ? t.slice(1, 5) : [];
                }
            },
            STATUS: {
                toSource (e) {
                    if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
                }
            },
            TITLE: {
                toTarget (e, t, r) {
                    return t && (e += ": " + t), e;
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            }
        };
        p.Converters = xt;
    });
    var ae8 = c7((_)=>{
        "use strict";
        Object.defineProperty(_, "__esModule", {
            value: !0
        });
        _.default = void 0;
        var _t = h9("@citation-js/core"), Tt = h9("@citation-js/date"), ie = kt(C8()), o = x10();
        function kt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Et = [
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1,
                        addendum: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, Tt.format)(e)}]`;
                    }
                }
            },
            {
                source: "numpages",
                target: "number-of-pages",
                when: {
                    source: {
                        pagetotal: !1
                    },
                    target: !1
                }
            },
            {
                source: "pmid",
                target: "PMID",
                when: {
                    source: {
                        eprinttype (e) {
                            return e !== "pmid";
                        },
                        archiveprefix (e) {
                            return e !== "pmid";
                        }
                    },
                    target: !1
                }
            },
            {
                source: "pmcid",
                target: "PMCID",
                when: {
                    target: !1
                }
            },
            {
                source: "s2id",
                target: "custom",
                convert: {
                    toTarget (e) {
                        return {
                            S2ID: e
                        };
                    },
                    toSource ({ S2ID: e }) {
                        return e;
                    }
                }
            }
        ], Pt = [
            {
                source: "annote",
                target: "annote",
                when: {
                    source: {
                        annotation: !1
                    },
                    target: !1
                }
            },
            {
                source: "address",
                target: "publisher-place",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        location: !1
                    },
                    target: !1
                }
            },
            {
                source: [
                    "eprint",
                    "archiveprefix"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT,
                when: {
                    source: {
                        eprinttype: !1
                    },
                    target: !1
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1,
                        booktitle: !1,
                        journaltitle: !1
                    },
                    target: !1
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: !1
                }
            }
        ], St = new _t.util.Translator([
            ...Pt,
            ...Et,
            {
                source: "abstract",
                target: "abstract"
            },
            {
                source: "urldate",
                target: "accessed",
                convert: o.Converters.DATE
            },
            {
                source: "annotation",
                target: "annote"
            },
            {
                source: "author",
                target: "author",
                convert: o.Converters.NAMES
            },
            {
                source: "library",
                target: "call-number"
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "bookauthor",
                target: "container-author",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    "maintitle",
                    "mainsubtitle",
                    "maintitleaddon"
                ],
                target: "container-title",
                when: {
                    source: !0,
                    target: {
                        "number-of-volumes": !0
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "booktitle",
                    "booksubtitle",
                    "booktitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1
                    },
                    target: {
                        "number-of-volumes": !1,
                        type (e) {
                            return !e || !e.startsWith("article");
                        }
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "journaltitle",
                    "journalsubtitle",
                    "journaltitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: "shortjournal",
                target: "container-title-short",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "shortjournal",
                target: "journalAbbreviation",
                when: {
                    source: !1,
                    target: {
                        "container-title-short": !1
                    }
                }
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "bookinbook",
                            "suppbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "shortseries",
                target: "collection-title-short"
            },
            {
                source: "doi",
                target: "DOI"
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    o.TYPE,
                    "entrysubtype",
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t, r) {
                        return r || (e === "mastersthesis" && (r = "mathesis"), e === "phdthesis" && (r = "phdthesis"), e === "techreport" && (r = "techreport")), [
                            ie.default.source[e] || "document",
                            r || t
                        ];
                    },
                    toSource (e, t) {
                        let r = ie.default.target[e] || "misc";
                        return t in o.TYPE_KEYS ? [
                            r,
                            void 0,
                            t
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: o.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "eventdate",
                target: "event-date",
                convert: o.Converters.DATE
            },
            {
                source: "venue",
                target: "event-place"
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event-title",
                convert: o.Converters.EVENT_TITLE
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event",
                convert: o.Converters.EVENT_TITLE,
                when: {
                    source: !1,
                    target: {
                        "event-title": !1
                    }
                }
            },
            {
                source: o.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: o.Converters.LABEL
            },
            {
                source: "isbn",
                target: "ISBN"
            },
            {
                source: "issn",
                target: "ISSN"
            },
            {
                source: "issue",
                target: "issue",
                when: {
                    source: {
                        number: !1,
                        [o.TYPE]: [
                            "article",
                            "periodical"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "string" && !e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [o.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return e && (typeof e == "number" || e.match(/\d+/));
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "date",
                target: "issued",
                convert: o.Converters.DATE
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: o.Converters.YEAR_MONTH,
                when: {
                    source: {
                        date: !1
                    },
                    target: !1
                }
            },
            {
                source: "location",
                target: "jurisdiction",
                when: {
                    source: {
                        type: "patent"
                    },
                    target: {
                        type: "patent"
                    }
                }
            },
            {
                source: "keywords",
                target: "keyword",
                convert: o.Converters.KEYWORDS
            },
            {
                source: "language",
                target: "language",
                convert: o.Converters.PICK
            },
            {
                source: "langid",
                target: "language",
                when: {
                    source: {
                        language: !1
                    },
                    target: !1
                }
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "addendum",
                target: "note",
                when: {
                    source: {
                        note: !1
                    },
                    target: !1
                }
            },
            {
                source: "eid",
                target: "number",
                when: {
                    target: {
                        type: [
                            "article-journal"
                        ]
                    }
                }
            },
            {
                source: [
                    "isan",
                    "ismn",
                    "isrn",
                    "iswc"
                ],
                target: "number",
                convert: o.Converters.STANDARD_NUMBERS,
                when: {
                    source: {
                        [o.TYPE] (e) {
                            return e !== "patent";
                        }
                    },
                    target: {
                        type (e) {
                            return e !== "patent";
                        }
                    }
                }
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "patent",
                            "report",
                            "techreport",
                            "legislation"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report",
                            "legislation"
                        ]
                    }
                }
            },
            {
                source: "origdate",
                target: "original-date",
                convert: o.Converters.DATE
            },
            {
                source: "origlocation",
                target: "original-publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "origpublisher",
                target: "original-publisher",
                convert: o.Converters.PICK
            },
            {
                source: "origtitle",
                target: "original-title"
            },
            {
                source: "pages",
                target: "page",
                when: {
                    source: {
                        bookpagination: [
                            void 0,
                            "page"
                        ]
                    }
                },
                convert: o.Converters.PAGES
            },
            {
                source: "pagetotal",
                target: "number-of-pages"
            },
            {
                source: "part",
                target: "part-number"
            },
            {
                source: [
                    "eprint",
                    "eprinttype"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT
            },
            {
                source: "location",
                target: "publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "publisher",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: !0,
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "paper-conference",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "webpage"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: [
                            "report",
                            "thesis"
                        ]
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: [
                    "pages",
                    "bookpagination"
                ],
                target: "section",
                when: {
                    source: {
                        bookpagination: "section"
                    },
                    target: {
                        page: !1
                    }
                },
                convert: {
                    toTarget (e) {
                        return e;
                    },
                    toSource (e) {
                        return [
                            e,
                            "section"
                        ];
                    }
                }
            },
            {
                source: "pubstate",
                target: "status",
                convert: o.Converters.STATUS
            },
            {
                source: "shorttitle",
                target: "title-short"
            },
            {
                source: "shorttitle",
                target: "shortTitle",
                when: {
                    source: !1,
                    target: {
                        "title-short": !1
                    }
                }
            },
            {
                source: [
                    "title",
                    "subtitle",
                    "titleaddon"
                ],
                target: "title",
                convert: o.Converters.TITLE
            },
            {
                source: "translator",
                target: "translator",
                convert: o.Converters.NAMES
            },
            {
                source: "url",
                target: "URL"
            },
            {
                source: "howpublished",
                target: "URL",
                convert: o.Converters.HOW_PUBLISHED,
                when: {
                    source: {
                        url: !1
                    },
                    target: !1
                }
            },
            {
                source: "version",
                target: "version"
            },
            {
                source: "volume",
                target: "volume"
            },
            {
                source: "volumes",
                target: "number-of-volumes"
            },
            {
                source: [
                    "issuetitle",
                    "issuesubtitle",
                    "issuetitleaddon"
                ],
                target: "volume-title",
                convert: o.Converters.TITLE
            }
        ]);
        _.default = St;
    });
    var ne8 = c7((T)=>{
        "use strict";
        Object.defineProperty(T, "__esModule", {
            value: !0
        });
        T.default = void 0;
        var Ct = h9("@citation-js/core"), Ot = h9("@citation-js/date"), oe = jt(O8()), l = x10();
        function jt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var At = new Ct.util.Translator([
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, Ot.format)(e)}]`;
                    }
                }
            },
            {
                source: "annote",
                target: "annote"
            },
            {
                source: "address",
                target: "publisher-place",
                convert: l.Converters.PICK
            },
            {
                source: "author",
                target: "author",
                convert: l.Converters.NAMES
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [l.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "booktitle",
                target: "container-title",
                when: {
                    target: {
                        type: [
                            "chapter",
                            "paper-conference"
                        ]
                    }
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        [l.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: l.Converters.NAMES
            },
            {
                source: l.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: l.Converters.LABEL
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [l.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "number" || typeof e == "string" && e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: l.Converters.YEAR_MONTH
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [l.TYPE]: [
                            "patent",
                            "report",
                            "techreport"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report"
                        ]
                    }
                }
            },
            {
                source: "pages",
                target: "page",
                convert: l.Converters.PAGES
            },
            {
                source: "publisher",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "paper-conference"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: "report"
                    }
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: {
                        type: "thesis"
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1,
                        school: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: "title",
                target: "title"
            },
            {
                source: [
                    l.TYPE,
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t) {
                        let r = oe.default.source[e] || "document";
                        return t ? [
                            r,
                            t
                        ] : e === "mastersthesis" ? [
                            r,
                            "Master's thesis"
                        ] : e === "phdthesis" ? [
                            r,
                            "PhD thesis"
                        ] : [
                            r
                        ];
                    },
                    toSource (e, t) {
                        let r = oe.default.target[e] || "misc";
                        return /^(master'?s|diploma) thesis$/i.test(t) ? [
                            "mastersthesis"
                        ] : /^(phd|doctoral) thesis$/i.test(t) ? [
                            "phdthesis"
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: l.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "howpublished",
                target: "URL",
                convert: l.Converters.HOW_PUBLISHED,
                when: {
                    target: {
                        publisher: !1
                    }
                }
            },
            {
                source: "volume",
                target: "volume"
            }
        ]);
        T.default = At;
    });
    var fe5 = c7((q)=>{
        "use strict";
        Object.defineProperty(q, "__esModule", {
            value: !0
        });
        q.crossref = de;
        function se(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function It(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? se(Object(r), !0).forEach(function(i) {
                    qt(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : se(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function qt(e, t, r) {
            return t = Mt(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Mt(e) {
            var t = Dt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Dt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var Lt = new Set([
            "book",
            "inbook",
            "bookinbook",
            "suppbook"
        ]), pe = new Set([
            "inbook",
            "bookinbook",
            "suppbook"
        ]), le = new Set([
            "collection",
            "reference",
            "incollection",
            "inreference",
            "suppcollection"
        ]), ue = new Set([
            "incollection",
            "inreference",
            "suppcollection"
        ]), Nt = new Set([
            "proceedings",
            "inproceedings"
        ]), Bt = new Set([
            "inproceedings"
        ]), Rt = new Set([
            "article",
            "suppperiodical"
        ]), ce = {
            mvbook: [
                "main",
                Lt
            ],
            mvcollection: [
                "main",
                le
            ],
            mvreference: [
                "main",
                le
            ],
            mvproceedings: [
                "main",
                Nt
            ],
            book: [
                "book",
                pe
            ],
            collection: [
                "book",
                ue
            ],
            reference: [
                "book",
                ue
            ],
            proceedings: [
                "book",
                Bt
            ],
            periodical: [
                "journal",
                Rt
            ]
        };
        function de(e, t, r) {
            if (t.crossref in r) {
                let i = r[t.crossref];
                if (i.properties === t) return t;
                let a = It({}, de(i.type, i.properties, r));
                if (delete a.ids, delete a.crossref, delete a.xref, delete a.entryset, delete a.entrysubtype, delete a.execute, delete a.label, delete a.options, delete a.presort, delete a.related, delete a.relatedoptions, delete a.relatedstring, delete a.relatedtype, delete a.shortand, delete a.shortandintro, delete a.sortkey, (i.type === "mvbook" || i.type === "book") && pe.has(e) && (a.bookauthor = a.author), i.type in ce) {
                    let [n, u] = ce[i.type];
                    u.has(e) && (a[n + "title"] = a.title, a[n + "subtitle"] = a.subtitle, n !== "journal" && (a[n + "titleaddon"] = a.titleaddon), delete a.title, delete a.subtitle, delete a.titleaddon, delete a.shorttitle, delete a.sorttitle, delete a.indextitle, delete a.indexsorttitle);
                }
                return Object.assign(a, t);
            }
            return t;
        }
    });
    var xe4 = c7((y)=>{
        "use strict";
        Object.defineProperty(y, "__esModule", {
            value: !0
        });
        y.format = Jt;
        y.formatBibtex = Ft;
        y.parse = Gt;
        y.parseBibtex = Ht;
        var v = x10(), me = he(ae8()), be = he(ne8()), Yt = fe5();
        function he(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function $t(e, t) {
            if (e == null) return {};
            var r = zt(e, t), i, a;
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                for(a = 0; a < n.length; a++)i = n[a], !(t.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(e, i) && (r[i] = e[i]);
            }
            return r;
        }
        function zt(e, t) {
            if (e == null) return {};
            var r = {}, i = Object.keys(e), a, n;
            for(n = 0; n < i.length; n++)a = i[n], !(t.indexOf(a) >= 0) && (r[a] = e[a]);
            return r;
        }
        function ge(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function Kt(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ge(Object(r), !0).forEach(function(i) {
                    Ut(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ge(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Ut(e, t, r) {
            return t = ve(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function ve(e) {
            var t = Wt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Wt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function ye(e, t) {
            let r = {};
            for (let i of e)r[i.label] = i;
            return e.map(({ type: i, label: a, properties: n })=>t.convertToTarget(Kt({
                    [v.TYPE]: i,
                    [v.LABEL]: a
                }, (0, Yt.crossref)(i, n, r))));
        }
        function we(e, t) {
            return e.map((r)=>{
                let i = t.convertToSource(r), { [v.TYPE]: a, [v.LABEL]: n } = i, u = $t(i, [
                    v.TYPE,
                    v.LABEL
                ].map(ve));
                return {
                    type: a,
                    label: n,
                    properties: u
                };
            });
        }
        function Ht(e) {
            return ye(e, be.default);
        }
        function Ft(e) {
            return we(e, be.default);
        }
        function Gt(e) {
            return ye(e, me.default);
        }
        function Jt(e) {
            return we(e, me.default);
        }
    });
    var ke5 = c7((N)=>{
        "use strict";
        Object.defineProperty(N, "__esModule", {
            value: !0
        });
        N.format = tr;
        var d = A8(), f = {};
        for(let e in d.commands)f[d.commands[e]] = e;
        for(let e in d.diacritics)f[d.diacritics[e]] = e;
        for(let e in d.ligatures)f[d.ligatures[e]] = e;
        var Vt = /[^a-zA-Z0-9\s!"#%&'()*+,\-./:;=?@[\]{}\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]/g, Xt = /.[\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]+/g, D = {
            separated: ",",
            list: " and "
        }, _e = {
            i: "\\textit{",
            b: "\\textbf{",
            sc: "\\textsc{",
            sup: "\\textsuperscript{",
            sub: "\\textsubscript{",
            'span style="font-variant:small-caps;"': "\\textsc{",
            'span class="nocase"': "{"
        };
        function L(e) {
            return e.normalize("NFKD").replace(Vt, (t)=>t in f ? f[t] in d.ligatures ? f[t] : `\\${f[t]}{}` : "").replace(Xt, (t)=>Array.from(t).reduce((r, i)=>`{\\${f[i]} ${r}}`));
        }
        function Te(e) {
            let t = [], r = e.split(/<(\/?(?:i|b|sc|sup|sub|span)|span .*?)>/g);
            return r = r.map((i, a)=>a % 2 === 0 ? L(i) : i in _e ? (t.push("/" + i.split(" ")[0]), _e[i]) : i === t[t.length - 1] ? (t.pop(), "}") : ""), r.join("");
        }
        function Zt(e) {
            if (e.family && !e.prefix && !e.given & !e.suffix) return e.family.includes(D.list) ? e.family : `{${e.family}}`;
            let t = [
                ""
            ];
            return e.prefix && e.family && (t[0] += e.prefix + " "), e.family && (t[0] += e.family), e.suffix ? (t.push(e.suffix), t.push(e.given || "")) : t.push(e.given), L(t.join(", ").trim());
        }
        function Qt(e) {
            return Te(e).split(/(:\s*)/).map((t, r)=>r % 2 ? t : t.replace(/(?!^)\b[a-z]*[A-Z].*?\b/g, "{$&}")).join("");
        }
        function M(e, t) {
            switch(t){
                case "title":
                    return Qt(e);
                case "literal":
                    return Te(e.toString());
                case "name":
                    return Zt(e);
                case "verbatim":
                case "uri":
                    return e.toString();
                default:
                    return L(e.toString());
            }
        }
        function er(e, t, r) {
            let i = D[r];
            return e.map((a)=>{
                let n = M(a, t);
                return n.includes(i) ? `{${n}}` : n;
            }).join(i);
        }
        function tr(e, t) {
            if (!(e in d.fieldTypes)) return M(t, "verbatim");
            let [r, i] = d.fieldTypes[e];
            return r in D ? er(t, i, r) : M(t, i);
        }
    });
    var Se3 = c7((k)=>{
        "use strict";
        Object.defineProperty(k, "__esModule", {
            value: !0
        });
        k.format = ir;
        k.formatBibtex = ar;
        var Ee = xe4(), rr = ke5();
        function Pe({ type: e, label: t, properties: r }) {
            let i = {};
            for(let a in r){
                let n = r[a];
                i[a] = (0, rr.format)(a, n);
            }
            return {
                type: e,
                label: t,
                properties: i
            };
        }
        function ir(e) {
            return (0, Ee.format)(e).map(Pe);
        }
        function ar(e) {
            return (0, Ee.formatBibtex)(e).map(Pe);
        }
    });
    var Ce5 = c7((B)=>{
        "use strict";
        Object.defineProperty(B, "__esModule", {
            value: !0
        });
        B.format = nr;
        function or({ type: e, label: t, properties: r }, i) {
            let a = Object.entries(r).map(([n, u])=>i.listItem.join(`${n} = {${u}},`));
            return i.entry.join(`@${e}{${t},${i.list.join(a.join(""))}}`);
        }
        function nr(e, t) {
            let r = e.map((i)=>or(i, t)).join("");
            return t.bibliographyContainer.join(r);
        }
    });
    var Oe5 = c7((R)=>{
        "use strict";
        Object.defineProperty(R, "__esModule", {
            value: !0
        });
        R.format = lr;
        function sr({ type: e, label: t, properties: r }, i) {
            let a = Object.entries(r).concat([
                [
                    "type",
                    e
                ]
            ]).map(([n, u])=>i.listItem.join(`${n}: ${u}`));
            return i.entry.join(`[${t}]${i.list.join(a.join(""))}`);
        }
        function lr(e, t) {
            let r = e.map((i)=>sr(i, t)).join(`
`);
            return t.bibliographyContainer.join(r);
        }
    });
    var z10 = c7((E)=>{
        "use strict";
        Object.defineProperty(E, "__esModule", {
            value: !0
        });
        E.default = void 0;
        var je = h9("@citation-js/core"), Y = Se3(), Ae = Ce5(), ur = Oe5(), $ = function(e, t) {
            return function(r, i = {}) {
                let { type: a, format: n = a || "text" } = i;
                if (r = e(r), n === "object") return r;
                if (je.plugins.dict.has(n)) return t(r, je.plugins.dict.get(n), i);
                throw new RangeError(`Output dictionary "${n}" not available`);
            };
        }, cr = {
            bibtex: $(Y.formatBibtex, Ae.format),
            biblatex: $(Y.format, Ae.format),
            bibtxt: $(Y.formatBibtex, ur.format)
        };
        E.default = cr;
    });
    var g13 = {};
    Re4(g13, {
        __esModule: ()=>pr1,
        default: ()=>fr
    });
    var qe4 = K7(z10());
    m10(g13, K7(z10()));
    var { __esModule: pr1 } = qe4, { default: Ie3, ...dr1 } = qe4, fr = Ie3 !== void 0 ? Ie3 : dr1;
    const mod69 = {
        __esModule: pr1,
        default: fr
    };
    var require7 = (n)=>{
        const c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/date":
                return c(mod54);
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var ke6 = Object.create;
    var S12 = Object.defineProperty;
    var Ee4 = Object.getOwnPropertyDescriptor;
    var Se4 = Object.getOwnPropertyNames;
    var Pe3 = Object.getPrototypeOf, Ce6 = Object.prototype.hasOwnProperty;
    var y12 = ((e)=>typeof require7 < "u" ? require7 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require7 < "u" ? require7 : t)[r]
        }) : e)(function(e) {
        if (typeof require7 < "u") return require7.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var p10 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), Oe6 = (e, t)=>{
        for(var r in t)S12(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, E9 = (e, t, r, i)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of Se4(t))!Ce6.call(e, a) && a !== r && S12(e, a, {
            get: ()=>t[a],
            enumerable: !(i = Ee4(t, a)) || i.enumerable
        });
        return e;
    }, m11 = (e, t, r)=>(E9(e, t, "default"), r && E9(r, t, "default")), B5 = (e, t, r)=>(r = e != null ? ke6(Pe3(e)) : {}, E9(t || !e || !e.__esModule ? S12(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var P13 = p10((tr, Ae)=>{
        Ae.exports = {
            source: {
                article: "article-journal",
                book: "book",
                mvbook: "book",
                inbook: "chapter",
                bookinbook: "book",
                booklet: "book",
                collection: "book",
                mvcollection: "book",
                incollection: "chapter",
                dataset: "dataset",
                manual: "report",
                misc: "document",
                online: "webpage",
                patent: "patent",
                periodical: "periodical",
                proceedings: "book",
                mvproceedings: "book",
                inproceedings: "paper-conference",
                reference: "book",
                mvreference: "book",
                inreference: "entry",
                report: "report",
                software: "software",
                thesis: "thesis",
                unpublished: "manuscript",
                artwork: "graphic",
                audio: "song",
                image: "figure",
                jurisdiction: "legal_case",
                legislation: "legislation",
                legal: "treaty",
                letter: "personal_communication",
                movie: "motion_picture",
                music: "musical_score",
                performance: "performance",
                review: "review",
                standard: "standard",
                video: "motion_picture",
                conference: "paper-conference",
                electronic: "webpage",
                mastersthesis: "thesis",
                phdthesis: "thesis",
                techreport: "report",
                www: "webpage"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                bill: "legislation",
                book: "book",
                broadcast: "audio",
                chapter: "inbook",
                classic: "unpublished",
                collection: "misc",
                dataset: "dataset",
                document: "misc",
                entry: "inreference",
                "entry-dictionary": "inreference",
                "entry-encyclopedia": "inreference",
                event: "misc",
                figure: "artwork",
                graphic: "artwork",
                hearing: "legal",
                interview: "audio",
                legal_case: "jurisdiction",
                legislation: "legislation",
                manuscript: "unpublished",
                motion_picture: "movie",
                musical_score: "music",
                "paper-conference": "inproceedings",
                patent: "patent",
                performance: "performance",
                periodical: "periodical",
                personal_communication: "letter",
                post: "online",
                "post-weblog": "online",
                regulation: "legal",
                report: "report",
                review: "review",
                "review-book": "review",
                software: "software",
                song: "music",
                speech: "audio",
                standard: "standard",
                thesis: "thesis",
                treaty: "legal",
                webpage: "online"
            }
        };
    });
    var C9 = p10((rr, je)=>{
        je.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var R10 = p10((ir, Ie)=>{
        Ie.exports = {
            biblatex: {
                article: [
                    "author",
                    "title",
                    "journaltitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                book: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvbook: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inbook: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                booklet: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                collection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvcollection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                dataset: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                online: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                patent: [
                    "author",
                    "title",
                    "number",
                    [
                        "year",
                        "date"
                    ]
                ],
                periodical: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                proceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvproceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                report: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                thesis: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                unpublished: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                conference: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                electronic: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                phdthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                www: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ]
            },
            bibtex: {
                article: [
                    "author",
                    "title",
                    "journal",
                    "year"
                ],
                book: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    "publisher",
                    "year"
                ],
                booklet: [
                    "title"
                ],
                inbook: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "chapter",
                        "pages"
                    ],
                    "publisher",
                    "year"
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    "publisher",
                    "year"
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    "year"
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                phdthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                proceedings: [
                    "title",
                    "year"
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    "year"
                ],
                unpublished: [
                    "author",
                    "title",
                    "note"
                ]
            }
        };
    });
    var Y5 = p10((ar, qe)=>{
        qe.exports = {
            abstract: [
                "field",
                "literal"
            ],
            addendum: [
                "field",
                "literal"
            ],
            afterword: [
                "list",
                "name"
            ],
            annotation: [
                "field",
                "literal"
            ],
            annotator: [
                "list",
                "name"
            ],
            author: [
                "list",
                "name"
            ],
            authortype: [
                "field",
                "key"
            ],
            bookauthor: [
                "list",
                "name"
            ],
            bookpagination: [
                "field",
                "key"
            ],
            booksubtitle: [
                "field",
                "literal"
            ],
            booktitle: [
                "field",
                "title"
            ],
            booktitleaddon: [
                "field",
                "literal"
            ],
            chapter: [
                "field",
                "literal"
            ],
            commentator: [
                "list",
                "name"
            ],
            date: [
                "field",
                "date"
            ],
            doi: [
                "field",
                "verbatim"
            ],
            edition: [
                "field",
                "literal"
            ],
            editor: [
                "list",
                "name"
            ],
            editora: [
                "list",
                "name"
            ],
            editorb: [
                "list",
                "name"
            ],
            editorc: [
                "list",
                "name"
            ],
            editortype: [
                "field",
                "key"
            ],
            editoratype: [
                "field",
                "key"
            ],
            editorbtype: [
                "field",
                "key"
            ],
            editorctype: [
                "field",
                "key"
            ],
            eid: [
                "field",
                "literal"
            ],
            entrysubtype: [
                "field",
                "literal"
            ],
            eprint: [
                "field",
                "verbatim"
            ],
            eprintclass: [
                "field",
                "literal"
            ],
            eprinttype: [
                "field",
                "literal"
            ],
            eventdate: [
                "field",
                "date"
            ],
            eventtitle: [
                "field",
                "title"
            ],
            eventtitleaddon: [
                "field",
                "literal"
            ],
            file: [
                "field",
                "verbatim"
            ],
            foreword: [
                "list",
                "name"
            ],
            holder: [
                "list",
                "name"
            ],
            howpublished: [
                "field",
                "literal"
            ],
            indextitle: [
                "field",
                "literal"
            ],
            institution: [
                "list",
                "literal"
            ],
            introduction: [
                "list",
                "name"
            ],
            isan: [
                "field",
                "literal"
            ],
            isbn: [
                "field",
                "literal"
            ],
            ismn: [
                "field",
                "literal"
            ],
            isrn: [
                "field",
                "literal"
            ],
            issn: [
                "field",
                "literal"
            ],
            issue: [
                "field",
                "literal"
            ],
            issuesubtitle: [
                "field",
                "literal"
            ],
            issuetitle: [
                "field",
                "literal"
            ],
            iswc: [
                "field",
                "literal"
            ],
            journalsubtitle: [
                "field",
                "literal"
            ],
            journaltitle: [
                "field",
                "literal"
            ],
            label: [
                "field",
                "literal"
            ],
            language: [
                "list",
                "key"
            ],
            library: [
                "field",
                "literal"
            ],
            location: [
                "list",
                "literal"
            ],
            mainsubtitle: [
                "field",
                "literal"
            ],
            maintitle: [
                "field",
                "title"
            ],
            maintitleaddon: [
                "field",
                "literal"
            ],
            month: [
                "field",
                "literal"
            ],
            nameaddon: [
                "field",
                "literal"
            ],
            note: [
                "field",
                "literal"
            ],
            number: [
                "field",
                "literal"
            ],
            organization: [
                "list",
                "literal"
            ],
            origdate: [
                "field",
                "date"
            ],
            origlanguage: [
                "list",
                "key"
            ],
            origlocation: [
                "list",
                "literal"
            ],
            origpublisher: [
                "list",
                "literal"
            ],
            origtitle: [
                "field",
                "title"
            ],
            pages: [
                "field",
                "range"
            ],
            pagetotal: [
                "field",
                "literal"
            ],
            pagination: [
                "field",
                "key"
            ],
            part: [
                "field",
                "literal"
            ],
            publisher: [
                "list",
                "literal"
            ],
            pubstate: [
                "field",
                "key"
            ],
            reprinttitle: [
                "field",
                "literal"
            ],
            series: [
                "field",
                "title"
            ],
            shortauthor: [
                "list",
                "name"
            ],
            shorteditor: [
                "list",
                "name"
            ],
            shorthand: [
                "field",
                "literal"
            ],
            shorthandintro: [
                "field",
                "literal"
            ],
            shortjournal: [
                "field",
                "literal"
            ],
            shortseries: [
                "field",
                "literal"
            ],
            shorttitle: [
                "field",
                "title"
            ],
            subtitle: [
                "field",
                "literal"
            ],
            title: [
                "field",
                "title"
            ],
            titleaddon: [
                "field",
                "literal"
            ],
            translator: [
                "list",
                "name"
            ],
            type: [
                "field",
                "title"
            ],
            url: [
                "field",
                "uri"
            ],
            urldate: [
                "field",
                "date"
            ],
            venue: [
                "field",
                "literal"
            ],
            version: [
                "field",
                "literal"
            ],
            volume: [
                "field",
                "integer"
            ],
            volumes: [
                "field",
                "integer"
            ],
            year: [
                "field",
                "literal"
            ],
            crossref: [
                "field",
                "entry key"
            ],
            entryset: [
                "separated",
                "literal"
            ],
            execute: [
                "field",
                "code"
            ],
            gender: [
                "field",
                "gender"
            ],
            langid: [
                "field",
                "identifier"
            ],
            langidopts: [
                "field",
                "literal"
            ],
            ids: [
                "separated",
                "entry key"
            ],
            indexsorttitle: [
                "field",
                "literal"
            ],
            keywords: [
                "separated",
                "literal"
            ],
            options: [
                "separated",
                "options"
            ],
            presort: [
                "field",
                "string"
            ],
            related: [
                "separated",
                "literal"
            ],
            relatedoptions: [
                "separated",
                "literal"
            ],
            relatedtype: [
                "field",
                "identifier"
            ],
            relatedstring: [
                "field",
                "literal"
            ],
            sortkey: [
                "field",
                "literal"
            ],
            sortname: [
                "list",
                "name"
            ],
            sortshorthand: [
                "field",
                "literal"
            ],
            sorttitle: [
                "field",
                "literal"
            ],
            sortyear: [
                "field",
                "integer"
            ],
            xdata: [
                "separated",
                "entry key"
            ],
            xref: [
                "field",
                "entry key"
            ],
            namea: [
                "list",
                "name"
            ],
            nameb: [
                "list",
                "name"
            ],
            namec: [
                "list",
                "name"
            ],
            nameatype: [
                "field",
                "key"
            ],
            namebtype: [
                "field",
                "key"
            ],
            namectype: [
                "field",
                "key"
            ],
            lista: [
                "list",
                "literal"
            ],
            listb: [
                "list",
                "literal"
            ],
            listc: [
                "list",
                "literal"
            ],
            listd: [
                "list",
                "literal"
            ],
            liste: [
                "list",
                "literal"
            ],
            listf: [
                "list",
                "literal"
            ],
            usera: [
                "field",
                "literal"
            ],
            userb: [
                "field",
                "literal"
            ],
            userc: [
                "field",
                "literal"
            ],
            userd: [
                "field",
                "literal"
            ],
            usere: [
                "field",
                "literal"
            ],
            userf: [
                "field",
                "literal"
            ],
            verba: [
                "field",
                "literal"
            ],
            verbb: [
                "field",
                "literal"
            ],
            verbc: [
                "field",
                "literal"
            ],
            address: [
                "list",
                "literal"
            ],
            annote: [
                "field",
                "literal"
            ],
            archiveprefix: [
                "field",
                "literal"
            ],
            journal: [
                "field",
                "literal"
            ],
            key: [
                "field",
                "literal"
            ],
            pdf: [
                "field",
                "verbatim"
            ],
            primaryclass: [
                "field",
                "literal"
            ],
            school: [
                "list",
                "literal"
            ],
            numpages: [
                "field",
                "integer"
            ],
            pmid: [
                "field",
                "literal"
            ],
            pmcid: [
                "field",
                "literal"
            ]
        };
    });
    var z11 = p10((or, De)=>{
        De.exports = {
            diacritics: {
                "`": "\u0300",
                "'": "\u0301",
                "^": "\u0302",
                "~": "\u0303",
                "=": "\u0304",
                u: "\u0306",
                ".": "\u0307",
                '"': "\u0308",
                r: "\u030A",
                H: "\u030B",
                v: "\u030C",
                b: "\u0332",
                d: "\u0323",
                c: "\u0327",
                k: "\u0328",
                t: "\u0361",
                textcommabelow: "\u0326"
            },
            commands: {
                textquotesingle: "'",
                textasciigrave: "`",
                textquotedbl: '"',
                textdollar: "$",
                textless: "<",
                textgreater: ">",
                textbackslash: "\\",
                textasciicircum: "^",
                textunderscore: "_",
                textbraceleft: "{",
                textbar: "|",
                textbraceright: "}",
                textasciitilde: "~",
                textexclamdown: "\xA1",
                textcent: "\xA2",
                textsterling: "\xA3",
                textcurrency: "\xA4",
                textyen: "\xA5",
                textbrokenbar: "\xA6",
                textsection: "\xA7",
                textasciidieresis: "\xA8",
                textcopyright: "\xA9",
                textordfeminine: "\xAA",
                guillemetleft: "\xAB",
                guillemotleft: "\xAB",
                textlnot: "\xAC",
                textregistered: "\xAE",
                textasciimacron: "\xAF",
                textdegree: "\xB0",
                textpm: "\xB1",
                texttwosuperior: "\xB2",
                textthreesuperior: "\xB3",
                textasciiacute: "\xB4",
                textmu: "\xB5",
                textparagraph: "\xB6",
                textperiodcentered: "\xB7",
                textonesuperior: "\xB9",
                textordmasculine: "\xBA",
                guillemetright: "\xBB",
                guillemotright: "\xBB",
                textonequarter: "\xBC",
                textonehalf: "\xBD",
                textthreequarters: "\xBE",
                textquestiondown: "\xBF",
                AE: "\xC6",
                DH: "\xD0",
                texttimes: "\xD7",
                O: "\xD8",
                TH: "\xDE",
                ss: "\xDF",
                ae: "\xE6",
                dh: "\xF0",
                textdiv: "\xF7",
                o: "\xF8",
                th: "\xFE",
                DJ: "\u0110",
                dj: "\u0111",
                i: "\u0131",
                IJ: "\u0132",
                ij: "\u0133",
                L: "\u0141",
                l: "\u0142",
                NG: "\u014A",
                ng: "\u014B",
                OE: "\u0152",
                oe: "\u0153",
                textflorin: "\u0192",
                j: "\u0237",
                textasciicaron: "\u02C7",
                textasciibreve: "\u02D8",
                textacutedbl: "\u02DD",
                textgravedbl: "\u02F5",
                texttildelow: "\u02F7",
                textbaht: "\u0E3F",
                SS: "\u1E9E",
                textcompwordmark: "\u200C",
                textendash: "\u2013",
                textemdash: "\u2014",
                textbardbl: "\u2016",
                textquoteleft: "\u2018",
                textquoteright: "\u2019",
                quotesinglbase: "\u201A",
                textquotedblleft: "\u201C",
                textquotedblright: "\u201D",
                quotedblbase: "\u201E",
                textdagger: "\u2020",
                textdaggerdbl: "\u2021",
                textbullet: "\u2022",
                textellipsis: "\u2026",
                textperthousand: "\u2030",
                textpertenthousand: "\u2031",
                guilsinglleft: "\u2039",
                guilsinglright: "\u203A",
                textreferencemark: "\u203B",
                textinterrobang: "\u203D",
                textfractionsolidus: "\u2044",
                textlquill: "\u2045",
                textrquill: "\u2046",
                textdiscount: "\u2052",
                textcolonmonetary: "\u20A1",
                textlira: "\u20A4",
                textnaira: "\u20A6",
                textwon: "\u20A9",
                textdong: "\u20AB",
                texteuro: "\u20AC",
                textpeso: "\u20B1",
                textcelsius: "\u2103",
                textnumero: "\u2116",
                textcircledP: "\u2117",
                textrecipe: "\u211E",
                textservicemark: "\u2120",
                texttrademark: "\u2122",
                textohm: "\u2126",
                textmho: "\u2127",
                textestimated: "\u212E",
                textleftarrow: "\u2190",
                textuparrow: "\u2191",
                textrightarrow: "\u2192",
                textdownarrow: "\u2193",
                textminus: "\u2212",
                Hwithstroke: "\u0126",
                hwithstroke: "\u0127",
                textasteriskcentered: "\u2217",
                textsurd: "\u221A",
                textlangle: "\u2329",
                textrangle: "\u232A",
                textblank: "\u2422",
                textvisiblespace: "\u2423",
                textopenbullet: "\u25E6",
                textbigcircle: "\u25EF",
                textmusicalnote: "\u266A",
                textmarried: "\u26AD",
                textdivorced: "\u26AE",
                textinterrobangdown: "\u2E18",
                textcommabelow: null,
                copyright: "\xA9",
                Gamma: "\u0393",
                Delta: "\u0394",
                Theta: "\u0398",
                Lambda: "\u039B",
                Xi: "\u039E",
                Pi: "\u03A0",
                Sigma: "\u03A3",
                Phi: "\u03A6",
                Psi: "\u03A8",
                Omega: "\u03A9",
                alpha: "\u03B1",
                beta: "\u03B2",
                gamma: "\u03B3",
                delta: "\u03B4",
                varepsilon: "\u03B5",
                zeta: "\u03B6",
                eta: "\u03B7",
                theta: "\u03B8",
                iota: "\u03B9",
                kappa: "\u03BA",
                lambda: "\u03BB",
                mu: "\u03BC",
                nu: "\u03BD",
                xi: "\u03BE",
                pi: "\u03C0",
                rho: "\u03C1",
                varsigma: "\u03C2",
                sigma: "\u03C3",
                tau: "\u03C4",
                upsilon: "\u03C5",
                varphi: "\u03C6",
                chi: "\u03C7",
                psi: "\u03C8",
                omega: "\u03C9",
                vartheta: "\u03D1",
                Upsilon: "\u03D2",
                phi: "\u03D5",
                varpi: "\u03D6",
                varrho: "\u03F1",
                epsilon: "\u03F5"
            }
        };
    });
    var A9 = p10((s)=>{
        "use strict";
        Object.defineProperty(s, "__esModule", {
            value: !0
        });
        s.sentenceCaseLanguages = s.required = s.mathScripts = s.mathScriptFormatting = s.ligatures = s.ligaturePattern = s.formattingEnvs = s.formattingCommands = s.formatting = s.fieldTypes = s.diacritics = s.defaultStrings = s.commands = s.argumentCommands = void 0;
        var Me = O(R10()), Le = O(Y5()), K = O(z11());
        function O(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Ne = Me.default;
        s.required = Ne;
        var Be = Le.default;
        s.fieldTypes = Be;
        var Re = K.default.diacritics;
        s.diacritics = Re;
        var Ye = K.default.commands;
        s.commands = Ye;
        var ze = {
            jan: "01",
            feb: "02",
            mar: "03",
            apr: "04",
            may: "05",
            jun: "06",
            jul: "07",
            aug: "08",
            sep: "09",
            oct: "10",
            nov: "11",
            dec: "12",
            acmcs: "ACM Computing Surveys",
            acta: "Acta Informatica",
            cacm: "Communications of the ACM",
            ibmjrd: "IBM Journal of Research and Development",
            ibmsj: "IBM Systems Journal",
            ieeese: "IEEE Transactions on Software Engineering",
            ieeetc: "IEEE Transactions on Computers",
            ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
            ipl: "Information Processing Letters",
            jacm: "Journal of the ACM",
            jcss: "Journal of Computer and System Sciences",
            scp: "Science of Computer Programming",
            sicomp: "SIAM Journal on Computing",
            tocs: "ACM Transactions on Computer Systems",
            tods: "ACM Transactions on Database Systems",
            tog: "ACM Transactions on Graphics",
            toms: "ACM Transactions on Mathematical Software",
            toois: "ACM Transactions on Office Information Systems",
            toplas: "ACM Transactions on Programming Languages and Systems",
            tcs: "Theoretical Computer Science"
        };
        s.defaultStrings = ze;
        var Ke = {
            it: "italics",
            itshape: "italics",
            sl: "italics",
            slshape: "italics",
            em: "italics",
            bf: "bold",
            bfseries: "bold",
            sc: "smallcaps",
            scshape: "smallcaps",
            rm: void 0,
            sf: void 0,
            tt: void 0
        };
        s.formattingEnvs = Ke;
        var $e = {
            textit: "italics",
            textsl: "italics",
            emph: "italics",
            mkbibitalic: "italics",
            mkbibemph: "italics",
            textbf: "bold",
            strong: "bold",
            mkbibbold: "bold",
            textsc: "smallcaps",
            textsuperscript: "superscript",
            textsubscript: "subscript",
            enquote: "quotes",
            mkbibquote: "quotes",
            textmd: void 0,
            textrm: void 0,
            textsf: void 0,
            texttt: void 0,
            textup: void 0
        };
        s.formattingCommands = $e;
        var Ue = {
            italics: [
                "<i>",
                "</i>"
            ],
            bold: [
                "<b>",
                "</b>"
            ],
            superscript: [
                "<sup>",
                "</sup>"
            ],
            subscript: [
                "<sub>",
                "</sub>"
            ],
            smallcaps: [
                '<span style="font-variant:small-caps;">',
                "</span>"
            ],
            nocase: [
                '<span class="nocase">',
                "</span>"
            ],
            quotes: [
                "\u201C",
                "\u201D"
            ]
        };
        s.formatting = Ue;
        var We = {
            ElsevierGlyph (e) {
                return String.fromCharCode(parseInt(e, 16));
            },
            href (e, t) {
                return e;
            },
            url (e) {
                return e;
            }
        };
        s.argumentCommands = We;
        var He = /---?|''|``|~/g;
        s.ligaturePattern = He;
        var Fe = {
            "--": "\u2013",
            "---": "\u2014",
            "``": "\u201C",
            "''": "\u201D",
            "~": "\xA0"
        };
        s.ligatures = Fe;
        var Ge = {
            "^": "superscript",
            sp: "superscript",
            _: "subscript",
            sb: "subscript",
            mathrm: void 0
        };
        s.mathScriptFormatting = Ge;
        var Je = {
            "^": {
                0: "\u2070",
                1: "\xB9",
                2: "\xB2",
                3: "\xB3",
                4: "\u2074",
                5: "\u2075",
                6: "\u2076",
                7: "\u2077",
                8: "\u2078",
                9: "\u2079",
                "+": "\u207A",
                "-": "\u207B",
                "=": "\u207C",
                "(": "\u207D",
                ")": "\u207E",
                i: "\u2071",
                n: "\u207F"
            },
            _: {
                0: "\u2080",
                1: "\u2081",
                2: "\u2082",
                3: "\u2083",
                4: "\u2084",
                5: "\u2085",
                6: "\u2086",
                7: "\u2087",
                8: "\u2088",
                9: "\u2089",
                "+": "\u208A",
                "-": "\u208B",
                "=": "\u208C",
                "(": "\u208D",
                ")": "\u208E",
                a: "\u2090",
                e: "\u2091",
                o: "\u2092",
                x: "\u2093",
                ə: "\u2094",
                h: "\u2095",
                k: "\u2096",
                l: "\u2097",
                m: "\u2098",
                n: "\u2099",
                s: "\u209A",
                p: "\u209B",
                t: "\u209C"
            }
        };
        s.mathScripts = Je;
        var Ve = [
            "american",
            "british",
            "canadian",
            "english",
            "australian",
            "newzealand",
            "usenglish",
            "ukenglish",
            "en",
            "eng",
            "en-au",
            "en-bz",
            "en-ca",
            "en-cb",
            "en-gb",
            "en-ie",
            "en-jm",
            "en-nz",
            "en-ph",
            "en-tt",
            "en-us",
            "en-za",
            "en-zw",
            "anglais"
        ];
        s.sentenceCaseLanguages = Ve;
    });
    var W8 = p10((w)=>{
        "use strict";
        Object.defineProperty(w, "__esModule", {
            value: !0
        });
        w.default = void 0;
        var Xe = U(P13()), Ze = U(C9()), Qe = et(A9());
        function $(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return ($ = function(i) {
                return i ? r : t;
            })(e);
        }
        function et(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = $(t);
            if (r && r.has(e)) return r.get(e);
            var i = {}, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var n in e)if (n !== "default" && Object.prototype.hasOwnProperty.call(e, n)) {
                var u = a ? Object.getOwnPropertyDescriptor(e, n) : null;
                u && (u.get || u.set) ? Object.defineProperty(i, n, u) : i[n] = e[n];
            }
            return i.default = e, r && r.set(e, i), i;
        }
        function U(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var tt = {
            constants: Qe,
            types: {
                biblatex: Xe.default,
                bibtex: Ze.default
            },
            parse: {
                biblatex: !0,
                strict: !1,
                sentenceCase: "never"
            },
            format: {
                useIdAsLabel: !1
            }
        };
        w.default = tt;
    });
    var x11 = p10((c)=>{
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.TYPE_KEYS = c.TYPE = c.STANDARD_NUMBERS_PATTERN = c.MONTHS = c.LABEL = c.Converters = void 0;
        c.formatLabel = X;
        c.parseDate = J;
        c.parseMonth = V;
        var rt = y12("@citation-js/core"), it = at(W8());
        function at(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var ot = new Set([
            "the",
            "a",
            "an"
        ]), j = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, nt = /[^\u0020-\u007F]+/g;
        function H(e) {
            return e ? e.normalize("NFKD").replace(nt, "").split(j).find((t)=>t.length && !ot.has(t.toLowerCase())) : "";
        }
        var F = new rt.util.Translator([
            {
                source: "given",
                target: "given"
            },
            {
                source: "family",
                target: "family"
            },
            {
                source: "suffix",
                target: "suffix"
            },
            {
                source: "prefix",
                target: "non-dropping-particle"
            },
            {
                source: "family",
                target: "literal",
                when: {
                    source: !1,
                    target: {
                        family: !1,
                        given: !1
                    }
                }
            }
        ]), st = [
            "jan",
            "feb",
            "mar",
            "apr",
            "may",
            "jun",
            "jul",
            "aug",
            "sep",
            "oct",
            "nov",
            "dec"
        ], lt = "BibTeX type";
        c.TYPE = lt;
        var ct = "BibTeX label";
        c.LABEL = ct;
        var h = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12,
            january: 1,
            february: 2,
            march: 3,
            april: 4,
            may: 5,
            june: 6,
            july: 7,
            august: 8,
            september: 9,
            october: 10,
            november: 11,
            december: 12
        };
        c.MONTHS = h;
        var ut = {
            bathesis: "Bachelor's thesis",
            mathesis: "Master's thesis",
            phdthesis: "PhD thesis",
            candthesis: "Candidate thesis",
            techreport: "technical report",
            resreport: "research report",
            software: "computer software",
            datacd: "data cd",
            audiocd: "audio cd",
            patent: "patent",
            patentde: "German patent",
            patenteu: "European patent",
            patentfr: "French patent",
            patentuk: "British patent",
            patentus: "U.S. patent",
            patreq: "patent request",
            patreqde: "German patent request",
            patreqeu: "European patent request",
            patreqfr: "French patent request",
            patrequk: "British patent request",
            patrequs: "U.S. patent request"
        };
        c.TYPE_KEYS = ut;
        var G = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
        c.STANDARD_NUMBERS_PATTERN = G;
        function J(e) {
            let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), i = +t[1], a = +t[2];
            return !i || i > 20 ? [
                r
            ] : a ? [
                r,
                i,
                a
            ] : [
                r,
                i
            ];
        }
        function V(e) {
            if (e == null) return [];
            if (+e) return [
                parseInt(e, 10)
            ];
            if (e = e.trim().toLowerCase(), e in h) return [
                h[e]
            ];
            let t = e.split(/\s+/), r, i;
            return t[0] in h ? (r = h[t[0]], i = parseInt(t[1])) : t[1] in h && (r = h[t[1]], i = parseInt(t[0])), i ? [
                r,
                i
            ] : r ? [
                r
            ] : [];
        }
        function X(e, t, r, i) {
            let a = "";
            return e && e[0] && (a += H(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (a += t["date-parts"][0][0]), r ? a += r : i && (a += H(i)), a;
        }
        var pt = {
            PICK: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            },
            DATE: {
                toTarget (e) {
                    let t = e.split("/").map((r)=>r && r !== ".." ? J(r) : void 0);
                    return isNaN(t[0][0]) ? {
                        literal: e
                    } : {
                        "date-parts": t
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
                }
            },
            YEAR_MONTH: {
                toTarget (e, t, r) {
                    return isNaN(+e) ? {
                        literal: e
                    } : !isNaN(+r) && !isNaN(+t) ? {
                        "date-parts": [
                            [
                                +e,
                                +t,
                                +r
                            ]
                        ]
                    } : {
                        "date-parts": [
                            [
                                +e,
                                ...V(t)
                            ]
                        ]
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) {
                        let [t, r, i] = e["date-parts"][0];
                        return [
                            t.toString(),
                            r ? i ? `${st[r - 1]} ${i}` : r : void 0
                        ];
                    } else return [];
                }
            },
            EPRINT: {
                toTarget (e, t) {
                    if (t === "pubmed") return e;
                },
                toSource (e) {
                    return [
                        e,
                        "pubmed"
                    ];
                }
            },
            EVENT_TITLE: {
                toTarget (e, t) {
                    return t && (e += " (" + t + ")"), e;
                },
                toSource (e) {
                    return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
                }
            },
            HOW_PUBLISHED: {
                toTarget (e) {
                    if (e.startsWith("http")) return e;
                }
            },
            KEYWORDS: {
                toTarget (e) {
                    return e.join(",");
                },
                toSource (e) {
                    return e.split(",");
                }
            },
            LABEL: {
                toTarget (e) {
                    return [
                        e,
                        e
                    ];
                },
                toSource (e, t, r, i, a, n) {
                    let u;
                    return e === null ? u = "null" : e === void 0 ? u = "undefined" : u = e.toString().replace(j, ""), it.default.format.useIdAsLabel ? u : t && !j.test(t) ? t : X(r, i, a, n) || u;
                }
            },
            NAMES: {
                toTarget (e) {
                    return e.map(F.convertToTarget);
                },
                toSource (e) {
                    return e.map(F.convertToSource);
                }
            },
            PAGES: {
                toTarget (e) {
                    return e.replace(/[–—]/, "-");
                },
                toSource (e) {
                    return e.replace("-", "--");
                }
            },
            STANDARD_NUMBERS: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    let t = e.toString().match(G);
                    return t ? t.slice(1, 5) : [];
                }
            },
            STATUS: {
                toSource (e) {
                    if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
                }
            },
            TITLE: {
                toTarget (e, t, r) {
                    return t && (e += ": " + t), e;
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            }
        };
        c.Converters = pt;
    });
    var Q5 = p10((T)=>{
        "use strict";
        Object.defineProperty(T, "__esModule", {
            value: !0
        });
        T.default = void 0;
        var dt = y12("@citation-js/core"), ft = y12("@citation-js/date"), Z = gt(P13()), o = x11();
        function gt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var mt = [
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1,
                        addendum: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, ft.format)(e)}]`;
                    }
                }
            },
            {
                source: "numpages",
                target: "number-of-pages",
                when: {
                    source: {
                        pagetotal: !1
                    },
                    target: !1
                }
            },
            {
                source: "pmid",
                target: "PMID",
                when: {
                    source: {
                        eprinttype (e) {
                            return e !== "pmid";
                        },
                        archiveprefix (e) {
                            return e !== "pmid";
                        }
                    },
                    target: !1
                }
            },
            {
                source: "pmcid",
                target: "PMCID",
                when: {
                    target: !1
                }
            },
            {
                source: "s2id",
                target: "custom",
                convert: {
                    toTarget (e) {
                        return {
                            S2ID: e
                        };
                    },
                    toSource ({ S2ID: e }) {
                        return e;
                    }
                }
            }
        ], ht = [
            {
                source: "annote",
                target: "annote",
                when: {
                    source: {
                        annotation: !1
                    },
                    target: !1
                }
            },
            {
                source: "address",
                target: "publisher-place",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        location: !1
                    },
                    target: !1
                }
            },
            {
                source: [
                    "eprint",
                    "archiveprefix"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT,
                when: {
                    source: {
                        eprinttype: !1
                    },
                    target: !1
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1,
                        booktitle: !1,
                        journaltitle: !1
                    },
                    target: !1
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: !1
                }
            }
        ], bt = new dt.util.Translator([
            ...ht,
            ...mt,
            {
                source: "abstract",
                target: "abstract"
            },
            {
                source: "urldate",
                target: "accessed",
                convert: o.Converters.DATE
            },
            {
                source: "annotation",
                target: "annote"
            },
            {
                source: "author",
                target: "author",
                convert: o.Converters.NAMES
            },
            {
                source: "library",
                target: "call-number"
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "bookauthor",
                target: "container-author",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    "maintitle",
                    "mainsubtitle",
                    "maintitleaddon"
                ],
                target: "container-title",
                when: {
                    source: !0,
                    target: {
                        "number-of-volumes": !0
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "booktitle",
                    "booksubtitle",
                    "booktitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        maintitle: !1
                    },
                    target: {
                        "number-of-volumes": !1,
                        type (e) {
                            return !e || !e.startsWith("article");
                        }
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: [
                    "journaltitle",
                    "journalsubtitle",
                    "journaltitleaddon"
                ],
                target: "container-title",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                },
                convert: o.Converters.TITLE
            },
            {
                source: "shortjournal",
                target: "container-title-short",
                when: {
                    source: {
                        [o.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "shortjournal",
                target: "journalAbbreviation",
                when: {
                    source: !1,
                    target: {
                        "container-title-short": !1
                    }
                }
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "bookinbook",
                            "suppbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "shortseries",
                target: "collection-title-short"
            },
            {
                source: "doi",
                target: "DOI"
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: o.Converters.NAMES
            },
            {
                source: [
                    o.TYPE,
                    "entrysubtype",
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t, r) {
                        return r || (e === "mastersthesis" && (r = "mathesis"), e === "phdthesis" && (r = "phdthesis"), e === "techreport" && (r = "techreport")), [
                            Z.default.source[e] || "document",
                            r || t
                        ];
                    },
                    toSource (e, t) {
                        let r = Z.default.target[e] || "misc";
                        return t in o.TYPE_KEYS ? [
                            r,
                            void 0,
                            t
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: o.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "eventdate",
                target: "event-date",
                convert: o.Converters.DATE
            },
            {
                source: "venue",
                target: "event-place"
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event-title",
                convert: o.Converters.EVENT_TITLE
            },
            {
                source: [
                    "eventtitle",
                    "eventtitleaddon"
                ],
                target: "event",
                convert: o.Converters.EVENT_TITLE,
                when: {
                    source: !1,
                    target: {
                        "event-title": !1
                    }
                }
            },
            {
                source: o.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: o.Converters.LABEL
            },
            {
                source: "isbn",
                target: "ISBN"
            },
            {
                source: "issn",
                target: "ISSN"
            },
            {
                source: "issue",
                target: "issue",
                when: {
                    source: {
                        number: !1,
                        [o.TYPE]: [
                            "article",
                            "periodical"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "string" && !e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [o.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return e && (typeof e == "number" || e.match(/\d+/));
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: "date",
                target: "issued",
                convert: o.Converters.DATE
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: o.Converters.YEAR_MONTH,
                when: {
                    source: {
                        date: !1
                    },
                    target: !1
                }
            },
            {
                source: "location",
                target: "jurisdiction",
                when: {
                    source: {
                        type: "patent"
                    },
                    target: {
                        type: "patent"
                    }
                }
            },
            {
                source: "keywords",
                target: "keyword",
                convert: o.Converters.KEYWORDS
            },
            {
                source: "language",
                target: "language",
                convert: o.Converters.PICK
            },
            {
                source: "langid",
                target: "language",
                when: {
                    source: {
                        language: !1
                    },
                    target: !1
                }
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "addendum",
                target: "note",
                when: {
                    source: {
                        note: !1
                    },
                    target: !1
                }
            },
            {
                source: "eid",
                target: "number",
                when: {
                    target: {
                        type: [
                            "article-journal"
                        ]
                    }
                }
            },
            {
                source: [
                    "isan",
                    "ismn",
                    "isrn",
                    "iswc"
                ],
                target: "number",
                convert: o.Converters.STANDARD_NUMBERS,
                when: {
                    source: {
                        [o.TYPE] (e) {
                            return e !== "patent";
                        }
                    },
                    target: {
                        type (e) {
                            return e !== "patent";
                        }
                    }
                }
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [o.TYPE]: [
                            "patent",
                            "report",
                            "techreport",
                            "legislation"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report",
                            "legislation"
                        ]
                    }
                }
            },
            {
                source: "origdate",
                target: "original-date",
                convert: o.Converters.DATE
            },
            {
                source: "origlocation",
                target: "original-publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "origpublisher",
                target: "original-publisher",
                convert: o.Converters.PICK
            },
            {
                source: "origtitle",
                target: "original-title"
            },
            {
                source: "pages",
                target: "page",
                when: {
                    source: {
                        bookpagination: [
                            void 0,
                            "page"
                        ]
                    }
                },
                convert: o.Converters.PAGES
            },
            {
                source: "pagetotal",
                target: "number-of-pages"
            },
            {
                source: "part",
                target: "part-number"
            },
            {
                source: [
                    "eprint",
                    "eprinttype"
                ],
                target: "PMID",
                convert: o.Converters.EPRINT
            },
            {
                source: "location",
                target: "publisher-place",
                convert: o.Converters.PICK
            },
            {
                source: "publisher",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: !0,
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "paper-conference",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "webpage"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: [
                            "report",
                            "thesis"
                        ]
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: o.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: [
                    "pages",
                    "bookpagination"
                ],
                target: "section",
                when: {
                    source: {
                        bookpagination: "section"
                    },
                    target: {
                        page: !1
                    }
                },
                convert: {
                    toTarget (e) {
                        return e;
                    },
                    toSource (e) {
                        return [
                            e,
                            "section"
                        ];
                    }
                }
            },
            {
                source: "pubstate",
                target: "status",
                convert: o.Converters.STATUS
            },
            {
                source: "shorttitle",
                target: "title-short"
            },
            {
                source: "shorttitle",
                target: "shortTitle",
                when: {
                    source: !1,
                    target: {
                        "title-short": !1
                    }
                }
            },
            {
                source: [
                    "title",
                    "subtitle",
                    "titleaddon"
                ],
                target: "title",
                convert: o.Converters.TITLE
            },
            {
                source: "translator",
                target: "translator",
                convert: o.Converters.NAMES
            },
            {
                source: "url",
                target: "URL"
            },
            {
                source: "howpublished",
                target: "URL",
                convert: o.Converters.HOW_PUBLISHED,
                when: {
                    source: {
                        url: !1
                    },
                    target: !1
                }
            },
            {
                source: "version",
                target: "version"
            },
            {
                source: "volume",
                target: "volume"
            },
            {
                source: "volumes",
                target: "number-of-volumes"
            },
            {
                source: [
                    "issuetitle",
                    "issuesubtitle",
                    "issuetitleaddon"
                ],
                target: "volume-title",
                convert: o.Converters.TITLE
            }
        ]);
        T.default = bt;
    });
    var te8 = p10((_)=>{
        "use strict";
        Object.defineProperty(_, "__esModule", {
            value: !0
        });
        _.default = void 0;
        var vt = y12("@citation-js/core"), yt = y12("@citation-js/date"), ee = wt(C9()), l = x11();
        function wt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var xt = new vt.util.Translator([
            {
                source: "note",
                target: "accessed",
                when: {
                    source: !1,
                    target: {
                        note: !1
                    }
                },
                convert: {
                    toSource (e) {
                        return `[Online; accessed ${(0, yt.format)(e)}]`;
                    }
                }
            },
            {
                source: "annote",
                target: "annote"
            },
            {
                source: "address",
                target: "publisher-place",
                convert: l.Converters.PICK
            },
            {
                source: "author",
                target: "author",
                convert: l.Converters.NAMES
            },
            {
                source: "chapter",
                target: "chapter-number"
            },
            {
                source: "number",
                target: "collection-number",
                when: {
                    source: {
                        [l.TYPE]: [
                            "book",
                            "mvbook",
                            "inbook",
                            "collection",
                            "mvcollection",
                            "incollection",
                            "suppcollection",
                            "manual",
                            "suppperiodical",
                            "proceedings",
                            "mvproceedings",
                            "refererence"
                        ]
                    },
                    target: {
                        type: [
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "dataset",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "figure",
                            "graphic",
                            "interview",
                            "legislation",
                            "legal_case",
                            "manuscript",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "post",
                            "post-weblog",
                            "personal_communication",
                            "review",
                            "review-book",
                            "song",
                            "speech",
                            "thesis",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "series",
                target: "collection-title"
            },
            {
                source: "booktitle",
                target: "container-title",
                when: {
                    target: {
                        type: [
                            "chapter",
                            "paper-conference"
                        ]
                    }
                }
            },
            {
                source: "journal",
                target: "container-title",
                when: {
                    source: {
                        [l.TYPE]: "article"
                    },
                    target: {
                        type: [
                            "article",
                            "article-newspaper",
                            "article-journal",
                            "article-magazine"
                        ]
                    }
                }
            },
            {
                source: "edition",
                target: "edition"
            },
            {
                source: "editor",
                target: "editor",
                convert: l.Converters.NAMES
            },
            {
                source: l.LABEL,
                target: [
                    "id",
                    "citation-key",
                    "author",
                    "issued",
                    "year-suffix",
                    "title"
                ],
                convert: l.Converters.LABEL
            },
            {
                source: "number",
                target: "issue",
                when: {
                    source: {
                        [l.TYPE]: [
                            "article",
                            "periodical",
                            "inproceedings"
                        ]
                    },
                    target: {
                        issue (e) {
                            return typeof e == "number" || typeof e == "string" && e.match(/\d+/);
                        },
                        type: [
                            "article",
                            "article-journal",
                            "article-newspaper",
                            "article-magazine",
                            "paper-conference",
                            "periodical"
                        ]
                    }
                }
            },
            {
                source: [
                    "year",
                    "month",
                    "day"
                ],
                target: "issued",
                convert: l.Converters.YEAR_MONTH
            },
            {
                source: "note",
                target: "note"
            },
            {
                source: "number",
                target: "number",
                when: {
                    source: {
                        [l.TYPE]: [
                            "patent",
                            "report",
                            "techreport"
                        ]
                    },
                    target: {
                        type: [
                            "patent",
                            "report"
                        ]
                    }
                }
            },
            {
                source: "pages",
                target: "page",
                convert: l.Converters.PAGES
            },
            {
                source: "publisher",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    target: {
                        type: [
                            "article",
                            "article-journal",
                            "article-magazine",
                            "article-newspaper",
                            "bill",
                            "book",
                            "broadcast",
                            "chapter",
                            "classic",
                            "collection",
                            "dataset",
                            "document",
                            "entry",
                            "entry-dictionary",
                            "entry-encyclopedia",
                            "event",
                            "figure",
                            "graphic",
                            "hearing",
                            "interview",
                            "legal_case",
                            "legislation",
                            "map",
                            "motion_picture",
                            "musical_score",
                            "pamphlet",
                            "patent",
                            "performance",
                            "periodical",
                            "personal_communication",
                            "post",
                            "post-weblog",
                            "regulation",
                            "review",
                            "review-book",
                            "software",
                            "song",
                            "speech",
                            "standard",
                            "treaty",
                            "webpage"
                        ]
                    }
                }
            },
            {
                source: "organization",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1
                    },
                    target: {
                        type: "paper-conference"
                    }
                }
            },
            {
                source: "institution",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1
                    },
                    target: {
                        type: "report"
                    }
                }
            },
            {
                source: "school",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        institution: !1,
                        organization: !1,
                        publisher: !1
                    },
                    target: {
                        type: "thesis"
                    }
                }
            },
            {
                source: "howpublished",
                target: "publisher",
                convert: l.Converters.PICK,
                when: {
                    source: {
                        publisher: !1,
                        organization: !1,
                        institution: !1,
                        school: !1
                    },
                    target: {
                        type: "manuscript"
                    }
                }
            },
            {
                source: "title",
                target: "title"
            },
            {
                source: [
                    l.TYPE,
                    "type"
                ],
                target: [
                    "type",
                    "genre"
                ],
                convert: {
                    toTarget (e, t) {
                        let r = ee.default.source[e] || "document";
                        return t ? [
                            r,
                            t
                        ] : e === "mastersthesis" ? [
                            r,
                            "Master's thesis"
                        ] : e === "phdthesis" ? [
                            r,
                            "PhD thesis"
                        ] : [
                            r
                        ];
                    },
                    toSource (e, t) {
                        let r = ee.default.target[e] || "misc";
                        return /^(master'?s|diploma) thesis$/i.test(t) ? [
                            "mastersthesis"
                        ] : /^(phd|doctoral) thesis$/i.test(t) ? [
                            "phdthesis"
                        ] : [
                            r,
                            t
                        ];
                    }
                }
            },
            {
                source: l.TYPE,
                when: {
                    target: {
                        type: !1
                    }
                },
                convert: {
                    toSource () {
                        return "misc";
                    }
                }
            },
            {
                source: "howpublished",
                target: "URL",
                convert: l.Converters.HOW_PUBLISHED,
                when: {
                    target: {
                        publisher: !1
                    }
                }
            },
            {
                source: "volume",
                target: "volume"
            }
        ]);
        _.default = xt;
    });
    var le7 = p10((I)=>{
        "use strict";
        Object.defineProperty(I, "__esModule", {
            value: !0
        });
        I.crossref = se;
        function re(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function Tt(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? re(Object(r), !0).forEach(function(i) {
                    _t(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : re(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function _t(e, t, r) {
            return t = kt(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function kt(e) {
            var t = Et(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Et(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var St = new Set([
            "book",
            "inbook",
            "bookinbook",
            "suppbook"
        ]), ne = new Set([
            "inbook",
            "bookinbook",
            "suppbook"
        ]), ie = new Set([
            "collection",
            "reference",
            "incollection",
            "inreference",
            "suppcollection"
        ]), ae = new Set([
            "incollection",
            "inreference",
            "suppcollection"
        ]), Pt = new Set([
            "proceedings",
            "inproceedings"
        ]), Ct = new Set([
            "inproceedings"
        ]), Ot = new Set([
            "article",
            "suppperiodical"
        ]), oe = {
            mvbook: [
                "main",
                St
            ],
            mvcollection: [
                "main",
                ie
            ],
            mvreference: [
                "main",
                ie
            ],
            mvproceedings: [
                "main",
                Pt
            ],
            book: [
                "book",
                ne
            ],
            collection: [
                "book",
                ae
            ],
            reference: [
                "book",
                ae
            ],
            proceedings: [
                "book",
                Ct
            ],
            periodical: [
                "journal",
                Ot
            ]
        };
        function se(e, t, r) {
            if (t.crossref in r) {
                let i = r[t.crossref];
                if (i.properties === t) return t;
                let a = Tt({}, se(i.type, i.properties, r));
                if (delete a.ids, delete a.crossref, delete a.xref, delete a.entryset, delete a.entrysubtype, delete a.execute, delete a.label, delete a.options, delete a.presort, delete a.related, delete a.relatedoptions, delete a.relatedstring, delete a.relatedtype, delete a.shortand, delete a.shortandintro, delete a.sortkey, (i.type === "mvbook" || i.type === "book") && ne.has(e) && (a.bookauthor = a.author), i.type in oe) {
                    let [n, u] = oe[i.type];
                    u.has(e) && (a[n + "title"] = a.title, a[n + "subtitle"] = a.subtitle, n !== "journal" && (a[n + "titleaddon"] = a.titleaddon), delete a.title, delete a.subtitle, delete a.titleaddon, delete a.shorttitle, delete a.sorttitle, delete a.indextitle, delete a.indexsorttitle);
                }
                return Object.assign(a, t);
            }
            return t;
        }
    });
    var he4 = p10((v)=>{
        "use strict";
        Object.defineProperty(v, "__esModule", {
            value: !0
        });
        v.format = Rt;
        v.formatBibtex = Nt;
        v.parse = Bt;
        v.parseBibtex = Lt;
        var b = x11(), ue = de(Q5()), pe = de(te8()), At = le7();
        function de(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function jt(e, t) {
            if (e == null) return {};
            var r = It(e, t), i, a;
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                for(a = 0; a < n.length; a++)i = n[a], !(t.indexOf(i) >= 0) && Object.prototype.propertyIsEnumerable.call(e, i) && (r[i] = e[i]);
            }
            return r;
        }
        function It(e, t) {
            if (e == null) return {};
            var r = {}, i = Object.keys(e), a, n;
            for(n = 0; n < i.length; n++)a = i[n], !(t.indexOf(a) >= 0) && (r[a] = e[a]);
            return r;
        }
        function ce(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter(function(a) {
                    return Object.getOwnPropertyDescriptor(e, a).enumerable;
                })), r.push.apply(r, i);
            }
            return r;
        }
        function qt(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? ce(Object(r), !0).forEach(function(i) {
                    Dt(e, i, r[i]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ce(Object(r)).forEach(function(i) {
                    Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(r, i));
                });
            }
            return e;
        }
        function Dt(e, t, r) {
            return t = fe(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function fe(e) {
            var t = Mt(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Mt(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var i = r.call(e, t || "default");
                if (typeof i != "object") return i;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function ge(e, t) {
            let r = {};
            for (let i of e)r[i.label] = i;
            return e.map(({ type: i, label: a, properties: n })=>t.convertToTarget(qt({
                    [b.TYPE]: i,
                    [b.LABEL]: a
                }, (0, At.crossref)(i, n, r))));
        }
        function me(e, t) {
            return e.map((r)=>{
                let i = t.convertToSource(r), { [b.TYPE]: a, [b.LABEL]: n } = i, u = jt(i, [
                    b.TYPE,
                    b.LABEL
                ].map(fe));
                return {
                    type: a,
                    label: n,
                    properties: u
                };
            });
        }
        function Lt(e) {
            return ge(e, pe.default);
        }
        function Nt(e) {
            return me(e, pe.default);
        }
        function Bt(e) {
            return ge(e, ue.default);
        }
        function Rt(e) {
            return me(e, ue.default);
        }
    });
    var ye4 = p10((L)=>{
        "use strict";
        Object.defineProperty(L, "__esModule", {
            value: !0
        });
        L.format = Wt;
        var d = A9(), f = {};
        for(let e in d.commands)f[d.commands[e]] = e;
        for(let e in d.diacritics)f[d.diacritics[e]] = e;
        for(let e in d.ligatures)f[d.ligatures[e]] = e;
        var Yt = /[^a-zA-Z0-9\s!"#%&'()*+,\-./:;=?@[\]{}\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]/g, zt = /.[\u0300-\u0308\u030a-\u030c\u0332\u0323\u0327\u0328\u0361\u0326]+/g, D = {
            separated: ",",
            list: " and "
        }, be = {
            i: "\\textit{",
            b: "\\textbf{",
            sc: "\\textsc{",
            sup: "\\textsuperscript{",
            sub: "\\textsubscript{",
            'span style="font-variant:small-caps;"': "\\textsc{",
            'span class="nocase"': "{"
        };
        function M(e) {
            return e.normalize("NFKD").replace(Yt, (t)=>t in f ? f[t] in d.ligatures ? f[t] : `\\${f[t]}{}` : "").replace(zt, (t)=>Array.from(t).reduce((r, i)=>`{\\${f[i]} ${r}}`));
        }
        function ve(e) {
            let t = [], r = e.split(/<(\/?(?:i|b|sc|sup|sub|span)|span .*?)>/g);
            return r = r.map((i, a)=>a % 2 === 0 ? M(i) : i in be ? (t.push("/" + i.split(" ")[0]), be[i]) : i === t[t.length - 1] ? (t.pop(), "}") : ""), r.join("");
        }
        function Kt(e) {
            if (e.family && !e.prefix && !e.given & !e.suffix) return e.family.includes(D.list) ? e.family : `{${e.family}}`;
            let t = [
                ""
            ];
            return e.prefix && e.family && (t[0] += e.prefix + " "), e.family && (t[0] += e.family), e.suffix ? (t.push(e.suffix), t.push(e.given || "")) : t.push(e.given), M(t.join(", ").trim());
        }
        function $t(e) {
            return ve(e).split(/(:\s*)/).map((t, r)=>r % 2 ? t : t.replace(/(?!^)\b[a-z]*[A-Z].*?\b/g, "{$&}")).join("");
        }
        function q(e, t) {
            switch(t){
                case "title":
                    return $t(e);
                case "literal":
                    return ve(e.toString());
                case "name":
                    return Kt(e);
                case "verbatim":
                case "uri":
                    return e.toString();
                default:
                    return M(e.toString());
            }
        }
        function Ut(e, t, r) {
            let i = D[r];
            return e.map((a)=>{
                let n = q(a, t);
                return n.includes(i) ? `{${n}}` : n;
            }).join(i);
        }
        function Wt(e, t) {
            if (!(e in d.fieldTypes)) return q(t, "verbatim");
            let [r, i] = d.fieldTypes[e];
            return r in D ? Ut(t, i, r) : q(t, i);
        }
    });
    var N10 = p10((k)=>{
        "use strict";
        Object.defineProperty(k, "__esModule", {
            value: !0
        });
        k.format = Ft;
        k.formatBibtex = Gt;
        var we = he4(), Ht = ye4();
        function xe({ type: e, label: t, properties: r }) {
            let i = {};
            for(let a in r){
                let n = r[a];
                i[a] = (0, Ht.format)(a, n);
            }
            return {
                type: e,
                label: t,
                properties: i
            };
        }
        function Ft(e) {
            return (0, we.format)(e).map(xe);
        }
        function Gt(e) {
            return (0, we.formatBibtex)(e).map(xe);
        }
    });
    var g14 = {};
    Oe6(g14, {
        __esModule: ()=>Jt3,
        default: ()=>Qt2,
        format: ()=>Vt2,
        formatBibtex: ()=>Xt1
    });
    var _e4 = B5(N10());
    m11(g14, B5(N10()));
    var { __esModule: Jt3, format: Vt2, formatBibtex: Xt1 } = _e4, { default: Te4, ...Zt2 } = _e4, Qt2 = Te4 !== void 0 ? Te4 : Zt2;
    const mod70 = {
        __esModule: Jt3,
        default: Qt2,
        format: Vt2,
        formatBibtex: Xt1
    };
    var require8 = (n)=>{
        const c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var O9 = Object.create;
    var g15 = Object.defineProperty;
    var j11 = Object.getOwnPropertyDescriptor;
    var Y6 = Object.getOwnPropertyNames;
    var z12 = Object.getPrototypeOf, H8 = Object.prototype.hasOwnProperty;
    var W9 = ((e)=>typeof require8 < "u" ? require8 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require8 < "u" ? require8 : t)[r]
        }) : e)(function(e) {
        if (typeof require8 < "u") return require8.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var u7 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), $5 = (e, t)=>{
        for(var r in t)g15(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, m12 = (e, t, r, a)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let l of Y6(t))!H8.call(e, l) && l !== r && g15(e, l, {
            get: ()=>t[l],
            enumerable: !(a = j11(t, l)) || a.enumerable
        });
        return e;
    }, c8 = (e, t, r)=>(m12(e, t, "default"), r && m12(r, t, "default")), y13 = (e, t, r)=>(r = e != null ? O9(z12(e)) : {}, m12(t || !e || !e.__esModule ? g15(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var k8 = u7((Ye, F)=>{
        F.exports = {
            source: {
                article: "article-journal",
                book: "book",
                mvbook: "book",
                inbook: "chapter",
                bookinbook: "book",
                booklet: "book",
                collection: "book",
                mvcollection: "book",
                incollection: "chapter",
                dataset: "dataset",
                manual: "report",
                misc: "document",
                online: "webpage",
                patent: "patent",
                periodical: "periodical",
                proceedings: "book",
                mvproceedings: "book",
                inproceedings: "paper-conference",
                reference: "book",
                mvreference: "book",
                inreference: "entry",
                report: "report",
                software: "software",
                thesis: "thesis",
                unpublished: "manuscript",
                artwork: "graphic",
                audio: "song",
                image: "figure",
                jurisdiction: "legal_case",
                legislation: "legislation",
                legal: "treaty",
                letter: "personal_communication",
                movie: "motion_picture",
                music: "musical_score",
                performance: "performance",
                review: "review",
                standard: "standard",
                video: "motion_picture",
                conference: "paper-conference",
                electronic: "webpage",
                mastersthesis: "thesis",
                phdthesis: "thesis",
                techreport: "report",
                www: "webpage"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                bill: "legislation",
                book: "book",
                broadcast: "audio",
                chapter: "inbook",
                classic: "unpublished",
                collection: "misc",
                dataset: "dataset",
                document: "misc",
                entry: "inreference",
                "entry-dictionary": "inreference",
                "entry-encyclopedia": "inreference",
                event: "misc",
                figure: "artwork",
                graphic: "artwork",
                hearing: "legal",
                interview: "audio",
                legal_case: "jurisdiction",
                legislation: "legislation",
                manuscript: "unpublished",
                motion_picture: "movie",
                musical_score: "music",
                "paper-conference": "inproceedings",
                patent: "patent",
                performance: "performance",
                periodical: "periodical",
                personal_communication: "letter",
                post: "online",
                "post-weblog": "online",
                regulation: "legal",
                report: "report",
                review: "review",
                "review-book": "review",
                software: "software",
                song: "music",
                speech: "audio",
                standard: "standard",
                thesis: "thesis",
                treaty: "legal",
                webpage: "online"
            }
        };
    });
    var v12 = u7((ze, U)=>{
        U.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var S13 = u7((He, G)=>{
        G.exports = {
            biblatex: {
                article: [
                    "author",
                    "title",
                    "journaltitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                book: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvbook: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inbook: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                booklet: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                collection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvcollection: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                dataset: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                online: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                patent: [
                    "author",
                    "title",
                    "number",
                    [
                        "year",
                        "date"
                    ]
                ],
                periodical: [
                    "editor",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                proceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                mvproceedings: [
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                report: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                thesis: [
                    "author",
                    "title",
                    "type",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                unpublished: [
                    "author",
                    "title",
                    [
                        "year",
                        "date"
                    ]
                ],
                conference: [
                    "author",
                    "title",
                    "booktitle",
                    [
                        "year",
                        "date"
                    ]
                ],
                electronic: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                phdthesis: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    [
                        "year",
                        "date"
                    ]
                ],
                www: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "year",
                        "date"
                    ],
                    [
                        "doi",
                        "eprint",
                        "url"
                    ]
                ]
            },
            bibtex: {
                article: [
                    "author",
                    "title",
                    "journal",
                    "year"
                ],
                book: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    "publisher",
                    "year"
                ],
                booklet: [
                    "title"
                ],
                inbook: [
                    [
                        "author",
                        "editor"
                    ],
                    "title",
                    [
                        "chapter",
                        "pages"
                    ],
                    "publisher",
                    "year"
                ],
                incollection: [
                    "author",
                    "title",
                    "booktitle",
                    "publisher",
                    "year"
                ],
                inproceedings: [
                    "author",
                    "title",
                    "booktitle",
                    "year"
                ],
                mastersthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                phdthesis: [
                    "author",
                    "title",
                    "school",
                    "year"
                ],
                proceedings: [
                    "title",
                    "year"
                ],
                techreport: [
                    "author",
                    "title",
                    "institution",
                    "year"
                ],
                unpublished: [
                    "author",
                    "title",
                    "note"
                ]
            }
        };
    });
    var T14 = u7((We, J)=>{
        J.exports = {
            abstract: [
                "field",
                "literal"
            ],
            addendum: [
                "field",
                "literal"
            ],
            afterword: [
                "list",
                "name"
            ],
            annotation: [
                "field",
                "literal"
            ],
            annotator: [
                "list",
                "name"
            ],
            author: [
                "list",
                "name"
            ],
            authortype: [
                "field",
                "key"
            ],
            bookauthor: [
                "list",
                "name"
            ],
            bookpagination: [
                "field",
                "key"
            ],
            booksubtitle: [
                "field",
                "literal"
            ],
            booktitle: [
                "field",
                "title"
            ],
            booktitleaddon: [
                "field",
                "literal"
            ],
            chapter: [
                "field",
                "literal"
            ],
            commentator: [
                "list",
                "name"
            ],
            date: [
                "field",
                "date"
            ],
            doi: [
                "field",
                "verbatim"
            ],
            edition: [
                "field",
                "literal"
            ],
            editor: [
                "list",
                "name"
            ],
            editora: [
                "list",
                "name"
            ],
            editorb: [
                "list",
                "name"
            ],
            editorc: [
                "list",
                "name"
            ],
            editortype: [
                "field",
                "key"
            ],
            editoratype: [
                "field",
                "key"
            ],
            editorbtype: [
                "field",
                "key"
            ],
            editorctype: [
                "field",
                "key"
            ],
            eid: [
                "field",
                "literal"
            ],
            entrysubtype: [
                "field",
                "literal"
            ],
            eprint: [
                "field",
                "verbatim"
            ],
            eprintclass: [
                "field",
                "literal"
            ],
            eprinttype: [
                "field",
                "literal"
            ],
            eventdate: [
                "field",
                "date"
            ],
            eventtitle: [
                "field",
                "title"
            ],
            eventtitleaddon: [
                "field",
                "literal"
            ],
            file: [
                "field",
                "verbatim"
            ],
            foreword: [
                "list",
                "name"
            ],
            holder: [
                "list",
                "name"
            ],
            howpublished: [
                "field",
                "literal"
            ],
            indextitle: [
                "field",
                "literal"
            ],
            institution: [
                "list",
                "literal"
            ],
            introduction: [
                "list",
                "name"
            ],
            isan: [
                "field",
                "literal"
            ],
            isbn: [
                "field",
                "literal"
            ],
            ismn: [
                "field",
                "literal"
            ],
            isrn: [
                "field",
                "literal"
            ],
            issn: [
                "field",
                "literal"
            ],
            issue: [
                "field",
                "literal"
            ],
            issuesubtitle: [
                "field",
                "literal"
            ],
            issuetitle: [
                "field",
                "literal"
            ],
            iswc: [
                "field",
                "literal"
            ],
            journalsubtitle: [
                "field",
                "literal"
            ],
            journaltitle: [
                "field",
                "literal"
            ],
            label: [
                "field",
                "literal"
            ],
            language: [
                "list",
                "key"
            ],
            library: [
                "field",
                "literal"
            ],
            location: [
                "list",
                "literal"
            ],
            mainsubtitle: [
                "field",
                "literal"
            ],
            maintitle: [
                "field",
                "title"
            ],
            maintitleaddon: [
                "field",
                "literal"
            ],
            month: [
                "field",
                "literal"
            ],
            nameaddon: [
                "field",
                "literal"
            ],
            note: [
                "field",
                "literal"
            ],
            number: [
                "field",
                "literal"
            ],
            organization: [
                "list",
                "literal"
            ],
            origdate: [
                "field",
                "date"
            ],
            origlanguage: [
                "list",
                "key"
            ],
            origlocation: [
                "list",
                "literal"
            ],
            origpublisher: [
                "list",
                "literal"
            ],
            origtitle: [
                "field",
                "title"
            ],
            pages: [
                "field",
                "range"
            ],
            pagetotal: [
                "field",
                "literal"
            ],
            pagination: [
                "field",
                "key"
            ],
            part: [
                "field",
                "literal"
            ],
            publisher: [
                "list",
                "literal"
            ],
            pubstate: [
                "field",
                "key"
            ],
            reprinttitle: [
                "field",
                "literal"
            ],
            series: [
                "field",
                "title"
            ],
            shortauthor: [
                "list",
                "name"
            ],
            shorteditor: [
                "list",
                "name"
            ],
            shorthand: [
                "field",
                "literal"
            ],
            shorthandintro: [
                "field",
                "literal"
            ],
            shortjournal: [
                "field",
                "literal"
            ],
            shortseries: [
                "field",
                "literal"
            ],
            shorttitle: [
                "field",
                "title"
            ],
            subtitle: [
                "field",
                "literal"
            ],
            title: [
                "field",
                "title"
            ],
            titleaddon: [
                "field",
                "literal"
            ],
            translator: [
                "list",
                "name"
            ],
            type: [
                "field",
                "title"
            ],
            url: [
                "field",
                "uri"
            ],
            urldate: [
                "field",
                "date"
            ],
            venue: [
                "field",
                "literal"
            ],
            version: [
                "field",
                "literal"
            ],
            volume: [
                "field",
                "integer"
            ],
            volumes: [
                "field",
                "integer"
            ],
            year: [
                "field",
                "literal"
            ],
            crossref: [
                "field",
                "entry key"
            ],
            entryset: [
                "separated",
                "literal"
            ],
            execute: [
                "field",
                "code"
            ],
            gender: [
                "field",
                "gender"
            ],
            langid: [
                "field",
                "identifier"
            ],
            langidopts: [
                "field",
                "literal"
            ],
            ids: [
                "separated",
                "entry key"
            ],
            indexsorttitle: [
                "field",
                "literal"
            ],
            keywords: [
                "separated",
                "literal"
            ],
            options: [
                "separated",
                "options"
            ],
            presort: [
                "field",
                "string"
            ],
            related: [
                "separated",
                "literal"
            ],
            relatedoptions: [
                "separated",
                "literal"
            ],
            relatedtype: [
                "field",
                "identifier"
            ],
            relatedstring: [
                "field",
                "literal"
            ],
            sortkey: [
                "field",
                "literal"
            ],
            sortname: [
                "list",
                "name"
            ],
            sortshorthand: [
                "field",
                "literal"
            ],
            sorttitle: [
                "field",
                "literal"
            ],
            sortyear: [
                "field",
                "integer"
            ],
            xdata: [
                "separated",
                "entry key"
            ],
            xref: [
                "field",
                "entry key"
            ],
            namea: [
                "list",
                "name"
            ],
            nameb: [
                "list",
                "name"
            ],
            namec: [
                "list",
                "name"
            ],
            nameatype: [
                "field",
                "key"
            ],
            namebtype: [
                "field",
                "key"
            ],
            namectype: [
                "field",
                "key"
            ],
            lista: [
                "list",
                "literal"
            ],
            listb: [
                "list",
                "literal"
            ],
            listc: [
                "list",
                "literal"
            ],
            listd: [
                "list",
                "literal"
            ],
            liste: [
                "list",
                "literal"
            ],
            listf: [
                "list",
                "literal"
            ],
            usera: [
                "field",
                "literal"
            ],
            userb: [
                "field",
                "literal"
            ],
            userc: [
                "field",
                "literal"
            ],
            userd: [
                "field",
                "literal"
            ],
            usere: [
                "field",
                "literal"
            ],
            userf: [
                "field",
                "literal"
            ],
            verba: [
                "field",
                "literal"
            ],
            verbb: [
                "field",
                "literal"
            ],
            verbc: [
                "field",
                "literal"
            ],
            address: [
                "list",
                "literal"
            ],
            annote: [
                "field",
                "literal"
            ],
            archiveprefix: [
                "field",
                "literal"
            ],
            journal: [
                "field",
                "literal"
            ],
            key: [
                "field",
                "literal"
            ],
            pdf: [
                "field",
                "verbatim"
            ],
            primaryclass: [
                "field",
                "literal"
            ],
            school: [
                "list",
                "literal"
            ],
            numpages: [
                "field",
                "integer"
            ],
            pmid: [
                "field",
                "literal"
            ],
            pmcid: [
                "field",
                "literal"
            ]
        };
    });
    var w10 = u7(($e, K)=>{
        K.exports = {
            diacritics: {
                "`": "\u0300",
                "'": "\u0301",
                "^": "\u0302",
                "~": "\u0303",
                "=": "\u0304",
                u: "\u0306",
                ".": "\u0307",
                '"': "\u0308",
                r: "\u030A",
                H: "\u030B",
                v: "\u030C",
                b: "\u0332",
                d: "\u0323",
                c: "\u0327",
                k: "\u0328",
                t: "\u0361",
                textcommabelow: "\u0326"
            },
            commands: {
                textquotesingle: "'",
                textasciigrave: "`",
                textquotedbl: '"',
                textdollar: "$",
                textless: "<",
                textgreater: ">",
                textbackslash: "\\",
                textasciicircum: "^",
                textunderscore: "_",
                textbraceleft: "{",
                textbar: "|",
                textbraceright: "}",
                textasciitilde: "~",
                textexclamdown: "\xA1",
                textcent: "\xA2",
                textsterling: "\xA3",
                textcurrency: "\xA4",
                textyen: "\xA5",
                textbrokenbar: "\xA6",
                textsection: "\xA7",
                textasciidieresis: "\xA8",
                textcopyright: "\xA9",
                textordfeminine: "\xAA",
                guillemetleft: "\xAB",
                guillemotleft: "\xAB",
                textlnot: "\xAC",
                textregistered: "\xAE",
                textasciimacron: "\xAF",
                textdegree: "\xB0",
                textpm: "\xB1",
                texttwosuperior: "\xB2",
                textthreesuperior: "\xB3",
                textasciiacute: "\xB4",
                textmu: "\xB5",
                textparagraph: "\xB6",
                textperiodcentered: "\xB7",
                textonesuperior: "\xB9",
                textordmasculine: "\xBA",
                guillemetright: "\xBB",
                guillemotright: "\xBB",
                textonequarter: "\xBC",
                textonehalf: "\xBD",
                textthreequarters: "\xBE",
                textquestiondown: "\xBF",
                AE: "\xC6",
                DH: "\xD0",
                texttimes: "\xD7",
                O: "\xD8",
                TH: "\xDE",
                ss: "\xDF",
                ae: "\xE6",
                dh: "\xF0",
                textdiv: "\xF7",
                o: "\xF8",
                th: "\xFE",
                DJ: "\u0110",
                dj: "\u0111",
                i: "\u0131",
                IJ: "\u0132",
                ij: "\u0133",
                L: "\u0141",
                l: "\u0142",
                NG: "\u014A",
                ng: "\u014B",
                OE: "\u0152",
                oe: "\u0153",
                textflorin: "\u0192",
                j: "\u0237",
                textasciicaron: "\u02C7",
                textasciibreve: "\u02D8",
                textacutedbl: "\u02DD",
                textgravedbl: "\u02F5",
                texttildelow: "\u02F7",
                textbaht: "\u0E3F",
                SS: "\u1E9E",
                textcompwordmark: "\u200C",
                textendash: "\u2013",
                textemdash: "\u2014",
                textbardbl: "\u2016",
                textquoteleft: "\u2018",
                textquoteright: "\u2019",
                quotesinglbase: "\u201A",
                textquotedblleft: "\u201C",
                textquotedblright: "\u201D",
                quotedblbase: "\u201E",
                textdagger: "\u2020",
                textdaggerdbl: "\u2021",
                textbullet: "\u2022",
                textellipsis: "\u2026",
                textperthousand: "\u2030",
                textpertenthousand: "\u2031",
                guilsinglleft: "\u2039",
                guilsinglright: "\u203A",
                textreferencemark: "\u203B",
                textinterrobang: "\u203D",
                textfractionsolidus: "\u2044",
                textlquill: "\u2045",
                textrquill: "\u2046",
                textdiscount: "\u2052",
                textcolonmonetary: "\u20A1",
                textlira: "\u20A4",
                textnaira: "\u20A6",
                textwon: "\u20A9",
                textdong: "\u20AB",
                texteuro: "\u20AC",
                textpeso: "\u20B1",
                textcelsius: "\u2103",
                textnumero: "\u2116",
                textcircledP: "\u2117",
                textrecipe: "\u211E",
                textservicemark: "\u2120",
                texttrademark: "\u2122",
                textohm: "\u2126",
                textmho: "\u2127",
                textestimated: "\u212E",
                textleftarrow: "\u2190",
                textuparrow: "\u2191",
                textrightarrow: "\u2192",
                textdownarrow: "\u2193",
                textminus: "\u2212",
                Hwithstroke: "\u0126",
                hwithstroke: "\u0127",
                textasteriskcentered: "\u2217",
                textsurd: "\u221A",
                textlangle: "\u2329",
                textrangle: "\u232A",
                textblank: "\u2422",
                textvisiblespace: "\u2423",
                textopenbullet: "\u25E6",
                textbigcircle: "\u25EF",
                textmusicalnote: "\u266A",
                textmarried: "\u26AD",
                textdivorced: "\u26AE",
                textinterrobangdown: "\u2E18",
                textcommabelow: null,
                copyright: "\xA9",
                Gamma: "\u0393",
                Delta: "\u0394",
                Theta: "\u0398",
                Lambda: "\u039B",
                Xi: "\u039E",
                Pi: "\u03A0",
                Sigma: "\u03A3",
                Phi: "\u03A6",
                Psi: "\u03A8",
                Omega: "\u03A9",
                alpha: "\u03B1",
                beta: "\u03B2",
                gamma: "\u03B3",
                delta: "\u03B4",
                varepsilon: "\u03B5",
                zeta: "\u03B6",
                eta: "\u03B7",
                theta: "\u03B8",
                iota: "\u03B9",
                kappa: "\u03BA",
                lambda: "\u03BB",
                mu: "\u03BC",
                nu: "\u03BD",
                xi: "\u03BE",
                pi: "\u03C0",
                rho: "\u03C1",
                varsigma: "\u03C2",
                sigma: "\u03C3",
                tau: "\u03C4",
                upsilon: "\u03C5",
                varphi: "\u03C6",
                chi: "\u03C7",
                psi: "\u03C8",
                omega: "\u03C9",
                vartheta: "\u03D1",
                Upsilon: "\u03D2",
                phi: "\u03D5",
                varpi: "\u03D6",
                varrho: "\u03F1",
                epsilon: "\u03F5"
            }
        };
    });
    var E10 = u7((i)=>{
        "use strict";
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.sentenceCaseLanguages = i.required = i.mathScripts = i.mathScriptFormatting = i.ligatures = i.ligaturePattern = i.formattingEnvs = i.formattingCommands = i.formatting = i.fieldTypes = i.diacritics = i.defaultStrings = i.commands = i.argumentCommands = void 0;
        var X = h(S13()), V = h(T14()), _ = h(w10());
        function h(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var Q = X.default;
        i.required = Q;
        var Z = V.default;
        i.fieldTypes = Z;
        var ee = _.default.diacritics;
        i.diacritics = ee;
        var te = _.default.commands;
        i.commands = te;
        var re = {
            jan: "01",
            feb: "02",
            mar: "03",
            apr: "04",
            may: "05",
            jun: "06",
            jul: "07",
            aug: "08",
            sep: "09",
            oct: "10",
            nov: "11",
            dec: "12",
            acmcs: "ACM Computing Surveys",
            acta: "Acta Informatica",
            cacm: "Communications of the ACM",
            ibmjrd: "IBM Journal of Research and Development",
            ibmsj: "IBM Systems Journal",
            ieeese: "IEEE Transactions on Software Engineering",
            ieeetc: "IEEE Transactions on Computers",
            ieeetcad: "IEEE Transactions on Computer-Aided Design of Integrated Circuits",
            ipl: "Information Processing Letters",
            jacm: "Journal of the ACM",
            jcss: "Journal of Computer and System Sciences",
            scp: "Science of Computer Programming",
            sicomp: "SIAM Journal on Computing",
            tocs: "ACM Transactions on Computer Systems",
            tods: "ACM Transactions on Database Systems",
            tog: "ACM Transactions on Graphics",
            toms: "ACM Transactions on Mathematical Software",
            toois: "ACM Transactions on Office Information Systems",
            toplas: "ACM Transactions on Programming Languages and Systems",
            tcs: "Theoretical Computer Science"
        };
        i.defaultStrings = re;
        var ie = {
            it: "italics",
            itshape: "italics",
            sl: "italics",
            slshape: "italics",
            em: "italics",
            bf: "bold",
            bfseries: "bold",
            sc: "smallcaps",
            scshape: "smallcaps",
            rm: void 0,
            sf: void 0,
            tt: void 0
        };
        i.formattingEnvs = ie;
        var ae = {
            textit: "italics",
            textsl: "italics",
            emph: "italics",
            mkbibitalic: "italics",
            mkbibemph: "italics",
            textbf: "bold",
            strong: "bold",
            mkbibbold: "bold",
            textsc: "smallcaps",
            textsuperscript: "superscript",
            textsubscript: "subscript",
            enquote: "quotes",
            mkbibquote: "quotes",
            textmd: void 0,
            textrm: void 0,
            textsf: void 0,
            texttt: void 0,
            textup: void 0
        };
        i.formattingCommands = ae;
        var le = {
            italics: [
                "<i>",
                "</i>"
            ],
            bold: [
                "<b>",
                "</b>"
            ],
            superscript: [
                "<sup>",
                "</sup>"
            ],
            subscript: [
                "<sub>",
                "</sub>"
            ],
            smallcaps: [
                '<span style="font-variant:small-caps;">',
                "</span>"
            ],
            nocase: [
                '<span class="nocase">',
                "</span>"
            ],
            quotes: [
                "\u201C",
                "\u201D"
            ]
        };
        i.formatting = le;
        var ne = {
            ElsevierGlyph (e) {
                return String.fromCharCode(parseInt(e, 16));
            },
            href (e, t) {
                return e;
            },
            url (e) {
                return e;
            }
        };
        i.argumentCommands = ne;
        var oe = /---?|''|``|~/g;
        i.ligaturePattern = oe;
        var se = {
            "--": "\u2013",
            "---": "\u2014",
            "``": "\u201C",
            "''": "\u201D",
            "~": "\xA0"
        };
        i.ligatures = se;
        var ue = {
            "^": "superscript",
            sp: "superscript",
            _: "subscript",
            sb: "subscript",
            mathrm: void 0
        };
        i.mathScriptFormatting = ue;
        var de = {
            "^": {
                0: "\u2070",
                1: "\xB9",
                2: "\xB2",
                3: "\xB3",
                4: "\u2074",
                5: "\u2075",
                6: "\u2076",
                7: "\u2077",
                8: "\u2078",
                9: "\u2079",
                "+": "\u207A",
                "-": "\u207B",
                "=": "\u207C",
                "(": "\u207D",
                ")": "\u207E",
                i: "\u2071",
                n: "\u207F"
            },
            _: {
                0: "\u2080",
                1: "\u2081",
                2: "\u2082",
                3: "\u2083",
                4: "\u2084",
                5: "\u2085",
                6: "\u2086",
                7: "\u2087",
                8: "\u2088",
                9: "\u2089",
                "+": "\u208A",
                "-": "\u208B",
                "=": "\u208C",
                "(": "\u208D",
                ")": "\u208E",
                a: "\u2090",
                e: "\u2091",
                o: "\u2092",
                x: "\u2093",
                ə: "\u2094",
                h: "\u2095",
                k: "\u2096",
                l: "\u2097",
                m: "\u2098",
                n: "\u2099",
                s: "\u209A",
                p: "\u209B",
                t: "\u209C"
            }
        };
        i.mathScripts = de;
        var ce = [
            "american",
            "british",
            "canadian",
            "english",
            "australian",
            "newzealand",
            "usenglish",
            "ukenglish",
            "en",
            "eng",
            "en-au",
            "en-bz",
            "en-ca",
            "en-cb",
            "en-gb",
            "en-ie",
            "en-jm",
            "en-nz",
            "en-ph",
            "en-tt",
            "en-us",
            "en-za",
            "en-zw",
            "anglais"
        ];
        i.sentenceCaseLanguages = ce;
    });
    var A10 = u7((f)=>{
        "use strict";
        Object.defineProperty(f, "__esModule", {
            value: !0
        });
        f.default = void 0;
        var pe = C(k8()), fe = C(v12()), me = ge(E10());
        function q(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (q = function(a) {
                return a ? r : t;
            })(e);
        }
        function ge(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = q(t);
            if (r && r.has(e)) return r.get(e);
            var a = {}, l = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var s in e)if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) {
                var o = l ? Object.getOwnPropertyDescriptor(e, s) : null;
                o && (o.get || o.set) ? Object.defineProperty(a, s, o) : a[s] = e[s];
            }
            return a.default = e, r && r.set(e, a), a;
        }
        function C(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var he = {
            constants: me,
            types: {
                biblatex: pe.default,
                bibtex: fe.default
            },
            parse: {
                biblatex: !0,
                strict: !1,
                sentenceCase: "never"
            },
            format: {
                useIdAsLabel: !1
            }
        };
        f.default = he;
    });
    var x12 = u7((n)=>{
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        });
        n.TYPE_KEYS = n.TYPE = n.STANDARD_NUMBERS_PATTERN = n.MONTHS = n.LABEL = n.Converters = void 0;
        n.formatLabel = I;
        n.parseDate = D;
        n.parseMonth = B;
        var be = W9("@citation-js/core"), xe = ye(A10());
        function ye(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var ke = new Set([
            "the",
            "a",
            "an"
        ]), b = /(?:<\/?.*?>|[\u0020-\u002F\u003A-\u0040\u005B-\u005E\u0060\u007B-\u007F])+/g, ve = /[^\u0020-\u007F]+/g;
        function M(e) {
            return e ? e.normalize("NFKD").replace(ve, "").split(b).find((t)=>t.length && !ke.has(t.toLowerCase())) : "";
        }
        var N = new be.util.Translator([
            {
                source: "given",
                target: "given"
            },
            {
                source: "family",
                target: "family"
            },
            {
                source: "suffix",
                target: "suffix"
            },
            {
                source: "prefix",
                target: "non-dropping-particle"
            },
            {
                source: "family",
                target: "literal",
                when: {
                    source: !1,
                    target: {
                        family: !1,
                        given: !1
                    }
                }
            }
        ]), Se = [
            "jan",
            "feb",
            "mar",
            "apr",
            "may",
            "jun",
            "jul",
            "aug",
            "sep",
            "oct",
            "nov",
            "dec"
        ], Te = "BibTeX type";
        n.TYPE = Te;
        var we = "BibTeX label";
        n.LABEL = we;
        var p = {
            jan: 1,
            feb: 2,
            mar: 3,
            apr: 4,
            may: 5,
            jun: 6,
            jul: 7,
            aug: 8,
            sep: 9,
            oct: 10,
            nov: 11,
            dec: 12,
            january: 1,
            february: 2,
            march: 3,
            april: 4,
            may: 5,
            june: 6,
            july: 7,
            august: 8,
            september: 9,
            october: 10,
            november: 11,
            december: 12
        };
        n.MONTHS = p;
        var _e = {
            bathesis: "Bachelor's thesis",
            mathesis: "Master's thesis",
            phdthesis: "PhD thesis",
            candthesis: "Candidate thesis",
            techreport: "technical report",
            resreport: "research report",
            software: "computer software",
            datacd: "data cd",
            audiocd: "audio cd",
            patent: "patent",
            patentde: "German patent",
            patenteu: "European patent",
            patentfr: "French patent",
            patentuk: "British patent",
            patentus: "U.S. patent",
            patreq: "patent request",
            patreqde: "German patent request",
            patreqeu: "European patent request",
            patreqfr: "French patent request",
            patrequk: "British patent request",
            patrequs: "U.S. patent request"
        };
        n.TYPE_KEYS = _e;
        var P = /(^(?:ISAN )?(?:[0-9a-f]{4}-){4}[0-9a-z](?:-(?:[0-9a-f]{4}-){2}[0-9a-z])?$)|(^(?:979-?0-?|M-?)(?:\d{9}|(?=[\d-]{11}$)\d+-\d+-\d)$)|(^ISRN .{1,36}$)|(^(?:ISWC )?T-?\d{9}-?\d$)/i;
        n.STANDARD_NUMBERS_PATTERN = P;
        function D(e) {
            let t = e.split("T")[0].replace(/[?~%]$/, "").split("-"), r = +t[0].replace(/^Y(?=-?\d{4}\d+)/, "").replace(/X/g, "0"), a = +t[1], l = +t[2];
            return !a || a > 20 ? [
                r
            ] : l ? [
                r,
                a,
                l
            ] : [
                r,
                a
            ];
        }
        function B(e) {
            if (e == null) return [];
            if (+e) return [
                parseInt(e, 10)
            ];
            if (e = e.trim().toLowerCase(), e in p) return [
                p[e]
            ];
            let t = e.split(/\s+/), r, a;
            return t[0] in p ? (r = p[t[0]], a = parseInt(t[1])) : t[1] in p && (r = p[t[1]], a = parseInt(t[0])), a ? [
                r,
                a
            ] : r ? [
                r
            ] : [];
        }
        function I(e, t, r, a) {
            let l = "";
            return e && e[0] && (l += M(e[0].family || e[0].literal)), t && t["date-parts"] && t["date-parts"][0] && (l += t["date-parts"][0][0]), r ? l += r : a && (l += M(a)), l;
        }
        var Ee = {
            PICK: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            },
            DATE: {
                toTarget (e) {
                    let t = e.split("/").map((r)=>r && r !== ".." ? D(r) : void 0);
                    return isNaN(t[0][0]) ? {
                        literal: e
                    } : {
                        "date-parts": t
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) return e["date-parts"].map((t)=>t.map((r)=>r.toString().padStart(2, "0")).join("-")).join("/");
                }
            },
            YEAR_MONTH: {
                toTarget (e, t, r) {
                    return isNaN(+e) ? {
                        literal: e
                    } : !isNaN(+r) && !isNaN(+t) ? {
                        "date-parts": [
                            [
                                +e,
                                +t,
                                +r
                            ]
                        ]
                    } : {
                        "date-parts": [
                            [
                                +e,
                                ...B(t)
                            ]
                        ]
                    };
                },
                toSource (e) {
                    if ("date-parts" in e) {
                        let [t, r, a] = e["date-parts"][0];
                        return [
                            t.toString(),
                            r ? a ? `${Se[r - 1]} ${a}` : r : void 0
                        ];
                    } else return [];
                }
            },
            EPRINT: {
                toTarget (e, t) {
                    if (t === "pubmed") return e;
                },
                toSource (e) {
                    return [
                        e,
                        "pubmed"
                    ];
                }
            },
            EVENT_TITLE: {
                toTarget (e, t) {
                    return t && (e += " (" + t + ")"), e;
                },
                toSource (e) {
                    return e.match(/^(.+)(?: \((.+)\))?$/).slice(1, 3);
                }
            },
            HOW_PUBLISHED: {
                toTarget (e) {
                    if (e.startsWith("http")) return e;
                }
            },
            KEYWORDS: {
                toTarget (e) {
                    return e.join(",");
                },
                toSource (e) {
                    return e.split(",");
                }
            },
            LABEL: {
                toTarget (e) {
                    return [
                        e,
                        e
                    ];
                },
                toSource (e, t, r, a, l, s) {
                    let o;
                    return e === null ? o = "null" : e === void 0 ? o = "undefined" : o = e.toString().replace(b, ""), xe.default.format.useIdAsLabel ? o : t && !b.test(t) ? t : I(r, a, l, s) || o;
                }
            },
            NAMES: {
                toTarget (e) {
                    return e.map(N.convertToTarget);
                },
                toSource (e) {
                    return e.map(N.convertToSource);
                }
            },
            PAGES: {
                toTarget (e) {
                    return e.replace(/[–—]/, "-");
                },
                toSource (e) {
                    return e.replace("-", "--");
                }
            },
            STANDARD_NUMBERS: {
                toTarget (...e) {
                    return e.find(Boolean);
                },
                toSource (e) {
                    let t = e.toString().match(P);
                    return t ? t.slice(1, 5) : [];
                }
            },
            STATUS: {
                toSource (e) {
                    if (/^(inpreparation|submitted|forthcoming|inpress|prepublished)$/i.test(e)) return e;
                }
            },
            TITLE: {
                toTarget (e, t, r) {
                    return t && (e += ": " + t), e;
                },
                toSource (e) {
                    return [
                        e
                    ];
                }
            }
        };
        n.Converters = Ee;
    });
    var d6 = {};
    $5(d6, {
        Converters: ()=>De5,
        LABEL: ()=>Pe4,
        MONTHS: ()=>Ne5,
        STANDARD_NUMBERS_PATTERN: ()=>Me4,
        TYPE: ()=>Ae5,
        TYPE_KEYS: ()=>Ce7,
        __esModule: ()=>qe5,
        default: ()=>Oe7,
        formatLabel: ()=>Be5,
        parseDate: ()=>Ie4,
        parseMonth: ()=>Le4
    });
    var R11 = y13(x12());
    c8(d6, y13(x12()));
    var { __esModule: qe5, TYPE_KEYS: Ce7, TYPE: Ae5, STANDARD_NUMBERS_PATTERN: Me4, MONTHS: Ne5, LABEL: Pe4, Converters: De5, formatLabel: Be5, parseDate: Ie4, parseMonth: Le4 } = R11, { default: L8, ...Re5 } = R11, Oe7 = L8 !== void 0 ? L8 : Re5;
    const mod71 = {
        Converters: De5,
        LABEL: Pe4,
        MONTHS: Ne5,
        STANDARD_NUMBERS_PATTERN: Me4,
        TYPE: Ae5,
        TYPE_KEYS: Ce7,
        __esModule: qe5,
        default: Oe7,
        formatLabel: Be5,
        parseDate: Ie4,
        parseMonth: Le4
    };
    var d7 = Object.create;
    var f7 = Object.defineProperty;
    var y14 = Object.getOwnPropertyDescriptor;
    var b9 = Object.getOwnPropertyNames;
    var $6 = Object.getPrototypeOf, x13 = Object.prototype.hasOwnProperty;
    var M12 = (t, e)=>()=>(e || t((e = {
                exports: {}
            }).exports, e), e.exports), O10 = (t, e)=>{
        for(var o in e)f7(t, o, {
            get: e[o],
            enumerable: !0
        });
    }, a7 = (t, e, o, n)=>{
        if (e && typeof e == "object" || typeof e == "function") for (let i of b9(e))!x13.call(t, i) && i !== o && f7(t, i, {
            get: ()=>e[i],
            enumerable: !(n = y14(e, i)) || n.enumerable
        });
        return t;
    }, s2 = (t, e, o)=>(a7(t, e, "default"), o && a7(o, e, "default")), m13 = (t, e, o)=>(o = t != null ? d7($6(t)) : {}, a7(e || !t || !t.__esModule ? f7(o, "default", {
            value: t,
            enumerable: !0
        }) : o, t));
    var l7 = M12((u)=>{
        "use strict";
        Object.defineProperty(u, "__esModule", {
            value: !0
        });
        u.format = h;
        function g({ type: t, label: e, properties: o }, n) {
            let i = Object.entries(o).concat([
                [
                    "type",
                    t
                ]
            ]).map(([c, j])=>n.listItem.join(`${c}: ${j}`));
            return n.entry.join(`[${e}]${n.list.join(i.join(""))}`);
        }
        function h(t, e) {
            let o = t.map((n)=>g(n, e)).join(`
`);
            return e.bibliographyContainer.join(o);
        }
    });
    var r1 = {};
    O10(r1, {
        __esModule: ()=>v13,
        default: ()=>I11,
        format: ()=>C10
    });
    var p11 = m13(l7());
    s2(r1, m13(l7()));
    var { __esModule: v13, format: C10 } = p11, { default: _12, ...E11 } = p11, I11 = _12 !== void 0 ? _12 : E11;
    const mod72 = {
        __esModule: v13,
        default: I11,
        format: C10
    };
    var require9 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m, c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/name":
                return c(mod50);
            case "fetch-ponyfill":
                return e(mod52);
            case "sync-fetch":
                return e(mod51);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var tr2 = Object.create;
    var ve4 = Object.defineProperty;
    var rr2 = Object.getOwnPropertyDescriptor;
    var nr2 = Object.getOwnPropertyNames;
    var ir2 = Object.getPrototypeOf, sr2 = Object.prototype.hasOwnProperty;
    var me3 = ((e)=>typeof require9 < "u" ? require9 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require9 < "u" ? require9 : t)[r]
        }) : e)(function(e) {
        if (typeof require9 < "u") return require9.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var o4 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), ar2 = (e, t)=>{
        for(var r in t)ve4(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, ge4 = (e, t, r, n)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let i of nr2(t))!sr2.call(e, i) && i !== r && ve4(e, i, {
            get: ()=>t[i],
            enumerable: !(n = rr2(t, i)) || n.enumerable
        });
        return e;
    }, j12 = (e, t, r)=>(ge4(e, t, "default"), r && ge4(r, t, "default")), Ke3 = (e, t, r)=>(r = e != null ? tr2(ir2(e)) : {}, ge4(t || !e || !e.__esModule ? ve4(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var _e5 = o4((V)=>{
        "use strict";
        Object.defineProperty(V, "__esModule", {
            value: !0
        });
        V.dataTypeOf = or;
        V.typeOf = be;
        function be(e) {
            switch(e){
                case void 0:
                    return "Undefined";
                case null:
                    return "Null";
                default:
                    return e.constructor.name;
            }
        }
        function or(e) {
            switch(typeof e){
                case "string":
                    return "String";
                case "object":
                    if (Array.isArray(e)) return "Array";
                    if (be(e) === "Object") return "SimpleObject";
                    if (be(e) !== "Null") return "ComplexObject";
                default:
                    return "Primitive";
            }
        }
    });
    var Oe8 = o4((K)=>{
        "use strict";
        Object.defineProperty(K, "__esModule", {
            value: !0
        });
        K.applyGraph = cr;
        K.removeGraph = ur;
        function cr(e, t) {
            if (e._graph) {
                let r = t.findIndex(({ type: n })=>n === "@else/list+object");
                r !== -1 && t.splice(r + 1, 0, ...e._graph.slice(0, -1));
            }
            return e._graph = t, e;
        }
        function ur(e) {
            return delete e._graph, e;
        }
    });
    var I12 = o4((H)=>{
        "use strict";
        Object.defineProperty(H, "__esModule", {
            value: !0
        });
        H.default = void 0;
        var S = {
            _output (e, t, r) {
                this._log.push(t, r), !(this._levels.indexOf(e) < this._levels.indexOf(this.level)) && this._console.log(t, ...r);
            },
            _console: null,
            _log: [],
            _levels: [
                "http",
                "debug",
                "unmapped",
                "info",
                "warn",
                "error",
                "silent"
            ],
            level: "silent"
        };
        for (let e of S._levels)S[e] = (t, ...r)=>S._output(e, t, r);
        typeof console.Console == "function" ? S._console = new console.Console(process2.stderr) : S._console = console;
        var lr = S;
        H.default = lr;
    });
    var L9 = o4((g)=>{
        "use strict";
        Object.defineProperty(g, "__esModule", {
            value: !0
        });
        g.addTypeParser = pr;
        g.hasTypeParser = hr;
        g.listTypeParser = gr;
        g.removeTypeParser = yr;
        g.treeTypeParser = vr;
        g.type = Qe;
        g.typeMatcher = void 0;
        var He = dr(I12()), fr = _e5();
        function dr(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var y = {}, T = {}, q = {};
        function ze(e, t) {
            switch(t){
                case "Array":
                    return e.length === 0 || e.every((r)=>Qe(r) === "@csl/object") ? "@csl/list+object" : "@else/list+object";
                case "SimpleObject":
                case "ComplexObject":
                    return "@csl/object";
                default:
                    return "@invalid";
            }
        }
        function Ye(e = [], t) {
            for (let r of e)if (y[r].predicate(t)) return Ye(y[r].extensions, t) || r;
        }
        function Qe(e) {
            let t = (0, fr.dataTypeOf)(e);
            return t === "Array" && e.length === 0 ? ze(e, t) : Ye(T[t], e) || ze(e, t);
        }
        function pr(e, { dataType: t, predicate: r, extends: n }) {
            let i = [];
            e in q && (i = q[e], delete q[e], He.default.debug("[core]", `Subclasses "${i}" finally registered to parent type "${e}"`));
            let s = {
                predicate: r,
                extensions: i
            };
            if (y[e] = s, n) {
                let a = y[n];
                a ? a.extensions.push(e) : (q[n] || (q[n] = []), q[n].push(e), He.default.debug("[core]", `Subclass "${e}" is waiting on parent type "${n}"`));
            } else (T[t] || (T[t] = [])).push(e);
        }
        function hr(e) {
            return Object.prototype.hasOwnProperty.call(y, e);
        }
        function yr(e) {
            delete y[e], [
                ...Object.keys(T).map((r)=>T[r]),
                ...Object.keys(y).map((r)=>y[r].extensions).filter((r)=>r.length > 0)
            ].forEach((r)=>{
                let n = r.indexOf(e);
                n > -1 && r.splice(n, 1);
            });
        }
        function gr() {
            return Object.keys(y);
        }
        function vr() {
            let e = (t)=>({
                    name: t,
                    children: y[t].extensions.map(e)
                });
            return {
                name: "Type tree",
                children: Object.keys(T).map((t)=>({
                        name: t,
                        children: T[t].map(e)
                    }))
            };
        }
        var mr = /^(?:@(.+?))(?:\/(?:(.+?)\+)?(?:(.+)))?$/;
        g.typeMatcher = mr;
    });
    var we5 = o4((_)=>{
        "use strict";
        Object.defineProperty(_, "__esModule", {
            value: !0
        });
        _.TypeParser = _.FormatParser = _.DataParser = void 0;
        var Xe = L9();
        function br(e, t, r) {
            return t = _r(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function _r(e) {
            var t = Or(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Or(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var n = r.call(e, t || "default");
                if (typeof n != "object") return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var z = class {
            constructor(t){
                br(this, "validDataTypes", [
                    "String",
                    "Array",
                    "SimpleObject",
                    "ComplexObject",
                    "Primitive"
                ]), this.data = t;
            }
            validateDataType() {
                let t = this.data.dataType;
                if (t && !this.validDataTypes.includes(t)) throw new RangeError(`dataType was ${t}; expected one of ${this.validDataTypes}`);
            }
            validateParseType() {
                let t = this.data.predicate;
                if (t && !(t instanceof RegExp || typeof t == "function")) throw new TypeError(`predicate was ${typeof t}; expected RegExp or function`);
            }
            validateTokenList() {
                let t = this.data.tokenList;
                if (t && typeof t != "object") throw new TypeError(`tokenList was ${typeof t}; expected object or RegExp`);
            }
            validatePropertyConstraint() {
                let t = this.data.propertyConstraint;
                if (t && typeof t != "object") throw new TypeError(`propertyConstraint was ${typeof t}; expected array or object`);
            }
            validateElementConstraint() {
                let t = this.data.elementConstraint;
                if (t && typeof t != "string") throw new TypeError(`elementConstraint was ${typeof t}; expected string`);
            }
            validateExtends() {
                let t = this.data.extends;
                if (t && typeof t != "string") throw new TypeError(`extends was ${typeof t}; expected string`);
            }
            validate() {
                if (this.data === null || typeof this.data != "object") throw new TypeError(`typeParser was ${typeof this.data}; expected object`);
                this.validateDataType(), this.validateParseType(), this.validateTokenList(), this.validatePropertyConstraint(), this.validateElementConstraint(), this.validateExtends();
            }
            parseTokenList() {
                let t = this.data.tokenList;
                if (t) t instanceof RegExp && (t = {
                    token: t
                });
                else return [];
                let { token: r, split: n = /\s+/, trim: i = !0, every: s = !0 } = t, a = (u)=>i ? u.trim() : u, b = s ? "every" : "some";
                return [
                    (u)=>a(u).split(n)[b]((h)=>r.test(h))
                ];
            }
            parsePropertyConstraint() {
                return [].concat(this.data.propertyConstraint || []).map(({ props: r, match: n, value: i })=>{
                    switch(r = [].concat(r), n){
                        case "any":
                        case "some":
                            return (s)=>r.some((a)=>a in s && (!i || i(s[a])));
                        case "none":
                            return (s)=>!r.some((a)=>a in s && (!i || i(s[a])));
                        case "every":
                        default:
                            return (s)=>r.every((a)=>a in s && (!i || i(s[a])));
                    }
                });
            }
            parseElementConstraint() {
                let t = this.data.elementConstraint;
                return t ? [
                    (r)=>r.every((n)=>(0, Xe.type)(n) === t)
                ] : [];
            }
            parsePredicate() {
                return this.data.predicate instanceof RegExp ? [
                    this.data.predicate.test.bind(this.data.predicate)
                ] : this.data.predicate ? [
                    this.data.predicate
                ] : [];
            }
            getCombinedPredicate() {
                let t = [
                    ...this.parsePredicate(),
                    ...this.parseTokenList(),
                    ...this.parsePropertyConstraint(),
                    ...this.parseElementConstraint()
                ];
                return t.length === 0 ? ()=>!0 : t.length === 1 ? t[0] : (r)=>t.every((n)=>n(r));
            }
            getDataType() {
                return this.data.dataType ? this.data.dataType : this.data.predicate instanceof RegExp || this.data.tokenList ? "String" : this.data.elementConstraint ? "Array" : "Primitive";
            }
            get dataType() {
                return this.getDataType();
            }
            get predicate() {
                return this.getCombinedPredicate();
            }
            get extends() {
                return this.data.extends;
            }
        };
        _.TypeParser = z;
        var W = class {
            constructor(t, { async: r } = {}){
                this.parser = t, this.async = r;
            }
            validate() {
                let t = this.parser;
                if (typeof t != "function") throw new TypeError(`parser was ${typeof t}; expected function`);
            }
        };
        _.DataParser = W;
        var Pe = class {
            constructor(t, r = {}){
                this.format = t, r.parseType && (this.typeParser = new z(r.parseType)), r.parse && (this.dataParser = new W(r.parse, {
                    async: !1
                })), r.parseAsync && (this.asyncDataParser = new W(r.parseAsync, {
                    async: !0
                }));
            }
            validateFormat() {
                let t = this.format;
                if (!Xe.typeMatcher.test(t)) throw new TypeError(`format name was "${t}"; didn't match expected pattern`);
            }
            validate() {
                this.validateFormat(), this.typeParser && this.typeParser.validate(), this.dataParser && this.dataParser.validate(), this.asyncDataParser && this.asyncDataParser.validate();
            }
        };
        _.FormatParser = Pe;
    });
    var it2 = o4((Ee)=>{
        "use strict";
        Object.defineProperty(Ee, "__esModule", {
            value: !0
        });
        Ee.clean = Dr;
        var Pr = me3("@citation-js/name");
        function Ze(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                t && (n = n.filter(function(i) {
                    return Object.getOwnPropertyDescriptor(e, i).enumerable;
                })), r.push.apply(r, n);
            }
            return r;
        }
        function et(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? Ze(Object(r), !0).forEach(function(n) {
                    wr(e, n, r[n]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Ze(Object(r)).forEach(function(n) {
                    Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
                });
            }
            return e;
        }
        function wr(e, t, r) {
            return t = jr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function jr(e) {
            var t = Tr(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Tr(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var n = r.call(e, t || "default");
                if (typeof n != "object") return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        var xr = 1, c = 2, O = 3, rt = 4, je = {
            article: !0,
            "article-journal": !0,
            "article-magazine": !0,
            "article-newspaper": !0,
            bill: !0,
            book: !0,
            broadcast: !0,
            chapter: !0,
            classic: !0,
            collection: !0,
            dataset: !0,
            document: !0,
            entry: !0,
            "entry-dictionary": !0,
            "entry-encyclopedia": !0,
            event: !0,
            figure: !0,
            graphic: !0,
            hearing: !0,
            interview: !0,
            legal_case: !0,
            legislation: !0,
            manuscript: !0,
            map: !0,
            motion_picture: !0,
            musical_score: !0,
            pamphlet: !0,
            "paper-conference": !0,
            patent: !0,
            performance: !0,
            periodical: !0,
            personal_communication: !0,
            post: !0,
            "post-weblog": !0,
            regulation: !0,
            report: !0,
            review: !0,
            "review-book": !0,
            software: !0,
            song: !0,
            speech: !0,
            standard: !0,
            thesis: !0,
            treaty: !0,
            webpage: !0,
            "journal-article": "article-journal",
            "book-chapter": "chapter",
            "posted-content": "manuscript",
            "proceedings-article": "paper-conference"
        }, tt = {
            author: c,
            chair: c,
            "collection-editor": c,
            compiler: c,
            composer: c,
            "container-author": c,
            contributor: c,
            curator: c,
            director: c,
            editor: c,
            "editorial-director": c,
            "executive-producer": c,
            guest: c,
            host: c,
            interviewer: c,
            illustrator: c,
            narrator: c,
            organizer: c,
            "original-author": c,
            performer: c,
            producer: c,
            "reviewed-author": c,
            recipient: c,
            "script-writer": c,
            "series-creator": c,
            translator: c,
            accessed: O,
            "available-date": O,
            container: O,
            "event-date": O,
            issued: O,
            "original-date": O,
            submitted: O,
            type: rt,
            categories: "object",
            custom: "object",
            id: [
                "string",
                "number"
            ],
            language: "string",
            journalAbbreviation: "string",
            shortTitle: "string",
            abstract: "string",
            annote: "string",
            archive: "string",
            archive_collection: "string",
            archive_location: "string",
            "archive-place": "string",
            authority: "string",
            "call-number": "string",
            "chapter-number": "string",
            "citation-number": "string",
            "citation-key": "string",
            "citation-label": "string",
            "collection-number": "string",
            "collection-title": "string",
            "container-title": "string",
            "container-title-short": "string",
            dimensions: "string",
            division: "string",
            DOI: "string",
            edition: [
                "string",
                "number"
            ],
            event: "string",
            "event-title": "string",
            "event-place": "string",
            "first-reference-note-number": "string",
            genre: "string",
            ISBN: "string",
            ISSN: "string",
            issue: [
                "string",
                "number"
            ],
            jurisdiction: "string",
            keyword: "string",
            locator: "string",
            medium: "string",
            note: "string",
            number: [
                "string",
                "number"
            ],
            "number-of-pages": "string",
            "number-of-volumes": [
                "string",
                "number"
            ],
            "original-publisher": "string",
            "original-publisher-place": "string",
            "original-title": "string",
            page: "string",
            "page-first": "string",
            "part-number": [
                "string",
                "number"
            ],
            "part-title": "string",
            PMCID: "string",
            PMID: "string",
            printing: "string",
            publisher: "string",
            "publisher-place": "string",
            references: "string",
            "reviewed-title": "string",
            "reviewed-genre": "string",
            scale: "string",
            section: "string",
            source: "string",
            status: "string",
            supplement: [
                "string",
                "number"
            ],
            title: "string",
            "title-short": "string",
            URL: "string",
            version: "string",
            volume: [
                "string",
                "number"
            ],
            "volume-title": "string",
            "volume-title-short": "string",
            "year-suffix": "string"
        };
        function nt(e, t) {
            if (typeof e == "object" && e !== null && (e.literal || e.given || e.family)) return e;
            if (t) {
                if (typeof e == "string") return (0, Pr.parse)(e);
            } else return;
        }
        function Er(e, t) {
            if (e instanceof Array) {
                let r = e.map((n)=>nt(n, t)).filter(Boolean);
                return r.length ? r : void 0;
            }
        }
        function Te(e, t) {
            return e.every((r)=>typeof r == "number") ? e : !t || e.some((r)=>isNaN(parseInt(r))) ? void 0 : e.map((r)=>parseInt(r));
        }
        function Cr(e, t) {
            let r = "date-parts";
            if (!(typeof e != "object" || e === null)) {
                if (e[r] instanceof Array && e[r].every((n)=>n instanceof Array)) {
                    let n = e[r].map((i)=>Te(i, t)).filter(Boolean);
                    return n.length ? et(et({}, e), {}, {
                        "date-parts": n
                    }) : void 0;
                } else if (e instanceof Array && e.every((n)=>n[r] instanceof Array)) {
                    let n = e.map((i)=>Te(i[r], t)).filter(Boolean);
                    return n.length ? {
                        "date-parts": n
                    } : void 0;
                } else if (e[r] instanceof Array) {
                    let n = Te(e[r], t);
                    return n && {
                        "date-parts": [
                            n
                        ]
                    };
                } else if ("literal" in e || "raw" in e) return e;
            }
        }
        function Mr(e, t) {
            return e = xe("language", e, t), je[e] === !0 ? e : t && e in je ? je[e] : void 0;
        }
        function xe(e, t, r) {
            let n = [].concat(tt[e]);
            switch(tt[e]){
                case xr:
                    return nt(t, r);
                case c:
                    return Er(t, r);
                case O:
                    return Cr(t, r);
                case rt:
                    return Mr(t, r);
            }
            if (r) {
                if (typeof t == "string" && n.includes("number") && !n.includes("string") && !isNaN(+t)) return parseFloat(t);
                if (typeof t == "number" && n.includes("string") && !n.includes("number")) return t.toString();
                if (Array.isArray(t) && t.length) return xe(e, t[0], r);
            }
            if (n.includes(typeof t)) return t;
        }
        function Dr(e, t = !0) {
            return e.map(function(r) {
                let n = {};
                for(let i in r){
                    let s = xe(i, r[i], t);
                    s !== void 0 && (n[i] = s);
                }
                return n;
            });
        }
    });
    var ut3 = o4((Y)=>{
        "use strict";
        Object.defineProperty(Y, "__esModule", {
            value: !0
        });
        Y.downgradeCsl = ct;
        Y.upgradeCsl = ot;
        function st(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                t && (n = n.filter(function(i) {
                    return Object.getOwnPropertyDescriptor(e, i).enumerable;
                })), r.push.apply(r, n);
            }
            return r;
        }
        function at(e) {
            for(var t = 1; t < arguments.length; t++){
                var r = arguments[t] != null ? arguments[t] : {};
                t % 2 ? st(Object(r), !0).forEach(function(n) {
                    Ar(e, n, r[n]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : st(Object(r)).forEach(function(n) {
                    Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
                });
            }
            return e;
        }
        function Ar(e, t, r) {
            return t = Sr(t), t in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function Sr(e) {
            var t = qr(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function qr(e, t) {
            if (typeof e != "object" || e === null) return e;
            var r = e[Symbol.toPrimitive];
            if (r !== void 0) {
                var n = r.call(e, t || "default");
                if (typeof n != "object") return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function ot(e) {
            return Array.isArray(e) ? e.map(ot) : (e = at({}, e), "event" in e && (e["event-title"] = e.event, delete e.event), e.type === "book" && "version" in e && (e.type = "software"), e);
        }
        function ct(e) {
            return Array.isArray(e) ? e.map(ct) : (e = at({}, e), "event-title" in e && (e.event = e["event-title"], delete e["event-title"]), e.type === "software" && (e.type = "book"), e);
        }
    });
    var Ce8 = o4((F)=>{
        "use strict";
        Object.defineProperty(F, "__esModule", {
            value: !0
        });
        F.deepCopy = Q;
        F.default = void 0;
        function Q(e, t = new Set) {
            if (typeof e != "object" || e === null || e.constructor !== Object && e.constructor !== Array) return e;
            if (t.has(e)) throw new TypeError("Recursively copying circular structure");
            t.add(e);
            let r;
            if (e.constructor === Array) r = e.map((n)=>Q(n, t));
            else {
                let n = {};
                for(let i in e)n[i] = Q(e[i], t);
                r = n;
            }
            return t.delete(e), r;
        }
        var $r = Q;
        F.default = $r;
    });
    var lt3 = o4((_i, kr)=>{
        kr.exports = {
            name: "@citation-js/core",
            version: "0.7.1",
            description: "Convert different bibliographic metadata sources",
            keywords: [
                "citation-js",
                "citation",
                "bibliography"
            ],
            author: "Lars Willighagen <lars.willighagen@gmail.com>",
            license: "MIT",
            main: "lib/index.js",
            module: "lib-mjs/index.js",
            directories: {
                lib: "src",
                test: "__tests__"
            },
            homepage: "https://citation.js.org/",
            repository: {
                type: "git",
                url: "https://github.com/citation-js/citation-js.git",
                directory: "packages/core"
            },
            bugs: {
                url: "https://github.com/citation-js/citation-js/issues"
            },
            engines: {
                node: ">=16.0.0"
            },
            files: [
                "lib",
                "lib-mjs"
            ],
            scripts: {
                test: "mocha -c -R dot test/*.spec.js"
            },
            dependencies: {
                "@citation-js/date": "^0.5.0",
                "@citation-js/name": "^0.4.2",
                "fetch-ponyfill": "^7.1.0",
                "sync-fetch": "^0.4.1"
            },
            gitHead: "771fade1be9060b5b500604b33a8afa5a05ca542"
        };
    });
    var mt1 = o4((x)=>{
        "use strict";
        Object.defineProperty(x, "__esModule", {
            value: !0
        });
        x.default = void 0;
        x.fetchFile = vt;
        x.fetchFileAsync = Fr;
        x.setUserAgent = Jr;
        var ft = X(me3("sync-fetch")), Rr = X(me3("fetch-ponyfill")), dt = X(I12()), Nr = X(lt3());
        function X(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var { fetch: Ir, Headers: Lr } = (0, Rr.default)(), pt = typeof location < "u" && typeof document < "u", Me = pt ? "" : `Citation.js/${Nr.default.version} Node.js/${process2.version}`;
        function ht(e) {
            let t = {}, r = e instanceof Lr || e instanceof ft.default.Headers ? Array.from(e) : Object.entries(e);
            for (let [n, i] of r)t[n.toLowerCase()] = i.toString();
            return t;
        }
        function yt(e = {}) {
            let t = {
                headers: {
                    accept: "*/*"
                },
                method: "GET",
                checkContentType: e.checkContentType
            };
            if (Me && !pt && (t.headers["user-agent"] = Me), e.body) {
                t.method = "POST";
                let r = typeof e.body != "string";
                t.body = r ? JSON.stringify(e.body) : e.body, t.headers["content-type"] = r ? "application/json" : "text/plain";
            }
            return e.headers && Object.assign(t.headers, ht(e.headers)), t;
        }
        function Wr(e, t) {
            if (!e.accept || e.accept === "*/*" || !t["content-type"]) return !0;
            let [r, n] = t["content-type"].split(";")[0].trim().split("/");
            return e.accept.split(",").map((i)=>i.split(";")[0].trim().split("/")).some(([i, s])=>(i === r || i === "*") && (s === n || s === "*"));
        }
        function gt(e, t) {
            let { status: r, headers: n } = e, i;
            if (r >= 400 ? i = new Error(`Server responded with status code ${r}`) : t.checkContentType === !0 && !Wr(t.headers, ht(n)) && (i = new Error(`Server responded with content-type ${n.get("content-type")}`)), i) throw i.status = r, i.headers = n, i.body = e.body, i;
            return e;
        }
        function vt(e, t) {
            let r = yt(t);
            return dt.default.http("[core]", r.method, e, r), gt((0, ft.default)(e, r), r).text();
        }
        async function Fr(e, t) {
            let r = yt(t);
            return dt.default.http("[core]", r.method, e, r), Ir(e, r).then((n)=>gt(n, r)).then((n)=>n.text());
        }
        function Jr(e) {
            Me = e;
        }
        var Br = vt;
        x.default = Br;
    });
    var bt2 = o4((Z)=>{
        "use strict";
        Object.defineProperty(Z, "__esModule", {
            value: !0
        });
        Z.default = void 0;
        function Ur(e, t) {
            let r;
            for(; r === void 0 || e.includes(r);)r = `${t}${Math.random().toString().slice(2)}`;
            return r;
        }
        var Gr = Ur;
        Z.default = Gr;
    });
    var _t2 = o4((ee)=>{
        "use strict";
        Object.defineProperty(ee, "__esModule", {
            value: !0
        });
        ee.default = void 0;
        var De = class e {
            constructor(t){
                this.stack = t, this.index = 0, this.current = this.stack[this.index];
            }
            static getPatternText(t) {
                return `"${t instanceof RegExp ? t.source : t}"`;
            }
            static getMatchCallback(t) {
                if (Array.isArray(t)) {
                    let r = t.map(e.getMatchCallback);
                    return (n)=>r.some((i)=>i(n));
                } else return t instanceof Function ? t : t instanceof RegExp ? (r)=>t.test(r) : (r)=>t === r;
            }
            tokensLeft() {
                return this.stack.length - this.index;
            }
            matches(t) {
                return e.getMatchCallback(t)(this.current, this.index, this.stack);
            }
            matchesSequence(t) {
                let r = this.stack.slice(this.index, this.index + t.length).join("");
                return typeof t == "string" ? r === t : t.every((n, i)=>e.getMatchCallback(n)(r[i]));
            }
            consumeToken(t = /^[\s\S]$/, { inverse: r = !1, spaced: n = !0 } = {}) {
                n && this.consumeWhitespace();
                let i = this.current;
                if (e.getMatchCallback(t)(i, this.index, this.stack)) this.current = this.stack[++this.index];
                else throw new SyntaxError(`Unexpected token at index ${this.index}: Expected ${e.getPatternText(t)}, got "${i}"`);
                return n && this.consumeWhitespace(), i;
            }
            consumeWhitespace(t = /^\s$/, { optional: r = !0 } = {}) {
                return this.consume(t, {
                    min: +!r
                });
            }
            consumeN(t) {
                if (this.tokensLeft() < t) throw new SyntaxError("Not enough tokens left");
                let r = this.index;
                for(; t--;)this.current = this.stack[++this.index];
                return this.stack.slice(r, this.index).join("");
            }
            consumeSequence(t) {
                if (this.matchesSequence(t)) return this.consumeN(t.length);
                throw new SyntaxError(`Expected "${t}", got "${this.consumeN(t.length)}"`);
            }
            consume(t = /^[\s\S]$/, { min: r = 0, max: n = 1 / 0, inverse: i = !1, tokenMap: s, tokenFilter: a } = {}) {
                let b = this.index, N = e.getMatchCallback(t);
                for(; N(this.current, this.index, this.stack) !== i;)this.current = this.stack[++this.index];
                let u = this.stack.slice(b, this.index);
                if (u.length < r) throw new SyntaxError(`Not enough ${e.getPatternText(t)}`);
                if (u.length > n) throw new SyntaxError(`Too many ${e.getPatternText(t)}`);
                return s && (u = u.map(s)), a && (u = u.filter(a)), u.join("");
            }
        }, Vr = De;
        ee.default = Vr;
    });
    var re6 = o4((te)=>{
        "use strict";
        Object.defineProperty(te, "__esModule", {
            value: !0
        });
        te.default = void 0;
        var Ae = class {
            constructor(t = {}){
                this.data = t;
            }
            set(t, r) {
                return this.data[t] = r, this;
            }
            add(...t) {
                return this.set(...t);
            }
            delete(t) {
                return delete this.data[t], this;
            }
            remove(...t) {
                return this.delete(...t);
            }
            get(t) {
                return this.data[t];
            }
            has(t) {
                return Object.prototype.hasOwnProperty.call(this.data, t);
            }
            list() {
                return Object.keys(this.data);
            }
        }, Kr = Ae;
        te.default = Kr;
    });
    var Ot2 = o4((ne)=>{
        "use strict";
        Object.defineProperty(ne, "__esModule", {
            value: !0
        });
        ne.Grammar = void 0;
        var Hr = Ce8(), Se = class {
            constructor(t, r){
                this.rules = t, this.defaultState = r, this.mainRule = Object.keys(t)[0], this.log = [];
            }
            parse(t, r) {
                return this.lexer = t, this.token = this.lexer.next(), this.state = (0, Hr.deepCopy)(this.defaultState), this.log = [], this.consumeRule(r || this.mainRule);
            }
            matchEndOfFile() {
                return !this.token;
            }
            matchToken(t) {
                return this.token && t === this.token.type;
            }
            consumeToken(t, r) {
                let n = this.token;
                if (!t || n && n.type === t) return this.token = this.lexer.next(), n;
                if (r) return;
                {
                    let i = n ? `"${n.type}"` : "EOF", s = new SyntaxError(this.lexer.formatError(n, `expected "${t}", got ${i}`));
                    throw s.message += ` (${this.log.join("->")})`, s;
                }
            }
            consumeRule(t) {
                this.log.push(t);
                let r = this.rules[t].call(this);
                return this.log.pop(), r;
            }
        };
        ne.Grammar = Se;
    });
    var wt2 = o4((ie)=>{
        "use strict";
        Object.defineProperty(ie, "__esModule", {
            value: !0
        });
        ie.Translator = void 0;
        function zr(e) {
            return function(r) {
                return typeof e == "boolean" ? e : Object.keys(e).every((n)=>{
                    let i = e[n];
                    return i === !0 ? n in r : i === !1 ? !(n in r) : typeof i == "function" ? i(r[n]) : Array.isArray(i) ? i.includes(r[n]) : r[n] === i;
                });
            };
        }
        function Yr(e, t) {
            let r, n, i, s;
            if (typeof e == "string") r = n = e;
            else if (e) r = t ? e.target : e.source, n = t ? e.source : e.target, e.convert && (i = t ? e.convert.toSource : e.convert.toTarget), e.when && (s = t ? e.when.target : e.when.source, s != null && (s = zr(s)));
            else return null;
            return r = [].concat(r).filter(Boolean), n = [].concat(n).filter(Boolean), {
                inputProp: r,
                outputProp: n,
                convert: i,
                condition: s
            };
        }
        function Pt(e, t) {
            return t = t === $.CONVERT_TO_SOURCE, e = e.map((r)=>Yr(r, t)).filter(Boolean), function(n) {
                let i = {};
                for (let { inputProp: s, outputProp: a, convert: b, condition: N } of e){
                    if (a.length === 0) continue;
                    if (N && !N(n)) continue;
                    if (s.length !== 0 && s.every((h)=>!(h in n))) continue;
                    let u = s.map((h)=>n[h]);
                    if (b) try {
                        let h = b.apply(n, u);
                        u = a.length === 1 ? [
                            h
                        ] : h;
                    } catch (h) {
                        throw new Error(`Failed to convert ${s} to ${a}`, {
                            cause: h
                        });
                    }
                    a.forEach((h, er)=>{
                        let Ve = u[er];
                        Ve !== void 0 && (i[h] = Ve);
                    });
                }
                return i;
            };
        }
        var $ = class e {
            constructor(t){
                this.convertToSource = Pt(t, e.CONVERT_TO_SOURCE), this.convertToTarget = Pt(t, e.CONVERT_TO_TARGET);
            }
        };
        ie.Translator = $;
        $.CONVERT_TO_SOURCE = Symbol("convert to source");
        $.CONVERT_TO_TARGET = Symbol("convert to target");
    });
    var $e3 = o4((d)=>{
        "use strict";
        Object.defineProperty(d, "__esModule", {
            value: !0
        });
        Object.defineProperty(d, "Grammar", {
            enumerable: !0,
            get: function() {
                return tn.Grammar;
            }
        });
        Object.defineProperty(d, "Register", {
            enumerable: !0,
            get: function() {
                return en.default;
            }
        });
        Object.defineProperty(d, "TokenStack", {
            enumerable: !0,
            get: function() {
                return Zr.default;
            }
        });
        Object.defineProperty(d, "Translator", {
            enumerable: !0,
            get: function() {
                return rn.Translator;
            }
        });
        Object.defineProperty(d, "deepCopy", {
            enumerable: !0,
            get: function() {
                return Qr.default;
            }
        });
        Object.defineProperty(d, "downgradeCsl", {
            enumerable: !0,
            get: function() {
                return jt.downgradeCsl;
            }
        });
        Object.defineProperty(d, "fetchFile", {
            enumerable: !0,
            get: function() {
                return qe.fetchFile;
            }
        });
        Object.defineProperty(d, "fetchFileAsync", {
            enumerable: !0,
            get: function() {
                return qe.fetchFileAsync;
            }
        });
        Object.defineProperty(d, "fetchId", {
            enumerable: !0,
            get: function() {
                return Xr.default;
            }
        });
        Object.defineProperty(d, "setUserAgent", {
            enumerable: !0,
            get: function() {
                return qe.setUserAgent;
            }
        });
        Object.defineProperty(d, "upgradeCsl", {
            enumerable: !0,
            get: function() {
                return jt.upgradeCsl;
            }
        });
        var jt = ut3(), Qr = se(Ce8()), qe = mt1(), Xr = se(bt2()), Zr = se(_t2()), en = se(re6()), tn = Ot2(), rn = wt2();
        function se(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
    });
    var ke7 = o4((v)=>{
        "use strict";
        Object.defineProperty(v, "__esModule", {
            value: !0
        });
        v.chainLinkAsync = v.chainLink = v.chainAsync = v.chain = void 0;
        var ae = $e3(), nn = an(I12()), sn = Re6(), oe = L9(), ue = le8(), Tt = Oe8();
        function an(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function on(e) {
            return e.reduce((t, r)=>{
                let n = t[t.length - 1];
                return n && n.type === r.type ? n.count = n.count + 1 || 2 : t.push(r), t;
            }, []).map((t)=>(t.count > 1 ? t.count + "x " : "") + t.type).join(" -> ");
        }
        var ce = class {
            constructor(t, r = {}){
                this.options = Object.assign({
                    generateGraph: !0,
                    forceType: (0, oe.type)(t),
                    maxChainLength: 10,
                    strict: !0,
                    target: "@csl/list+object"
                }, r), this.type = this.options.forceType, this.data = typeof t == "object" ? (0, ae.deepCopy)(t) : t, this.graph = [
                    {
                        type: this.type,
                        data: t
                    }
                ], this.iteration = 0;
            }
            iterate() {
                if (this.iteration !== 0) {
                    let t = (0, sn.get)(this.type);
                    t && t.outputs ? this.type = t.outputs : this.type = (0, oe.type)(this.data), this.graph.push({
                        type: this.type
                    });
                }
                return this.error || this.type === this.options.target ? !1 : this.iteration >= this.options.maxChainLength ? (this.error = new RangeError(`Max. number of parsing iterations reached (${on(this.graph)})`), !1) : (this.iteration++, !0);
            }
            end() {
                if (this.error) {
                    if (nn.default.error("[core]", this.error.message), this.options.strict !== !1) throw this.error;
                    return [];
                } else return this.options.target === "@csl/list+object" ? (0, ae.upgradeCsl)(this.data).map(this.options.generateGraph ? (t)=>(0, Tt.applyGraph)(t, this.graph) : Tt.removeGraph) : this.data;
            }
        }, cn = (...e)=>{
            let t = new ce(...e);
            for(; t.iterate();)try {
                t.data = (0, ue.data)(t.data, t.type);
            } catch (r) {
                t.error = r;
            }
            return t.end();
        };
        v.chain = cn;
        var un = (e)=>{
            let t = (0, oe.type)(e), r = t.match(/array|object/) ? (0, ae.deepCopy)(e) : e;
            return (0, ue.data)(r, t);
        };
        v.chainLink = un;
        var ln = async (...e)=>{
            let t = new ce(...e);
            for(; t.iterate();)t.data = await (0, ue.dataAsync)(t.data, t.type).catch((r)=>{
                t.error = r;
            });
            return t.end();
        };
        v.chainAsync = ln;
        var fn = async (e)=>{
            let t = (0, oe.type)(e), r = t.match(/array|object/) ? (0, ae.deepCopy)(e) : e;
            return (0, ue.dataAsync)(r, t);
        };
        v.chainLinkAsync = fn;
    });
    var le8 = o4((P)=>{
        "use strict";
        Object.defineProperty(P, "__esModule", {
            value: !0
        });
        P.addDataParser = pn;
        P.data = Et;
        P.dataAsync = dn;
        P.hasDataParser = Ct;
        P.listDataParser = yn;
        P.removeDataParser = hn;
        var xt = ke7(), k = {}, R = {}, Ne = {
            "@csl/object": (e)=>[
                    e
                ],
            "@csl/list+object": (e)=>e,
            "@else/list+object": (e)=>e.map(xt.chain).flat(),
            "@invalid": ()=>{
                throw new Error("This format is not supported or recognized");
            }
        }, Ie = {
            "@else/list+object": async (e)=>(await Promise.all(e.map(xt.chainAsync))).flat()
        };
        function Et(e, t) {
            if (typeof k[t] == "function") return k[t](e);
            if (typeof Ne[t] == "function") return Ne[t](e);
            throw new TypeError(`No synchronous parser found for ${t}`);
        }
        async function dn(e, t) {
            if (typeof R[t] == "function") return R[t](e);
            if (typeof Ie[t] == "function") return Ie[t](e);
            if (Ct(t, !1)) return Et(e, t);
            throw new TypeError(`No parser found for ${t}`);
        }
        function pn(e, { parser: t, async: r }) {
            r ? R[e] = t : k[e] = t;
        }
        function Ct(e, t) {
            return t ? R[e] || Ie[e] : k[e] || Ne[e];
        }
        function hn(e, t) {
            delete (t ? R : k)[e];
        }
        function yn(e) {
            return Object.keys(e ? R : k);
        }
    });
    var Re6 = o4((C)=>{
        "use strict";
        Object.defineProperty(C, "__esModule", {
            value: !0
        });
        C.add = vn;
        C.get = mn;
        C.has = _n;
        C.list = On;
        C.remove = bn;
        var gn = we5(), Mt = L9(), fe = le8(), E = {};
        function vn(e, t) {
            let r = new gn.FormatParser(e, t);
            r.validate();
            let n = E[e] || (E[e] = {});
            r.typeParser && ((0, Mt.addTypeParser)(e, r.typeParser), n.type = !0), r.dataParser && ((0, fe.addDataParser)(e, r.dataParser), n.data = !0), r.asyncDataParser && ((0, fe.addDataParser)(e, r.asyncDataParser), n.asyncData = !0), t.outputs && (n.outputs = t.outputs);
        }
        function mn(e) {
            return E[e];
        }
        function bn(e) {
            let t = E[e];
            t && (t.type && (0, Mt.removeTypeParser)(e), t.data && (0, fe.removeDataParser)(e), t.asyncData && (0, fe.removeDataParser)(e, !0), delete E[e]);
        }
        function _n(e) {
            return e in E;
        }
        function On() {
            return Object.keys(E);
        }
    });
    var At3 = o4((l)=>{
        "use strict";
        Object.defineProperty(l, "__esModule", {
            value: !0
        });
        var de = {
            util: !0
        };
        l.util = void 0;
        var Pn = pe(_e5()), wn = pe(Oe8()), jn = pe(we5()), Tn = pe(it2()), Le = Re6();
        Object.keys(Le).forEach(function(e) {
            e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(de, e) || e in l && l[e] === Le[e] || Object.defineProperty(l, e, {
                enumerable: !0,
                get: function() {
                    return Le[e];
                }
            });
        });
        var We = ke7();
        Object.keys(We).forEach(function(e) {
            e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(de, e) || e in l && l[e] === We[e] || Object.defineProperty(l, e, {
                enumerable: !0,
                get: function() {
                    return We[e];
                }
            });
        });
        var Fe = L9();
        Object.keys(Fe).forEach(function(e) {
            e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(de, e) || e in l && l[e] === Fe[e] || Object.defineProperty(l, e, {
                enumerable: !0,
                get: function() {
                    return Fe[e];
                }
            });
        });
        var Je = le8();
        Object.keys(Je).forEach(function(e) {
            e === "default" || e === "__esModule" || Object.prototype.hasOwnProperty.call(de, e) || e in l && l[e] === Je[e] || Object.defineProperty(l, e, {
                enumerable: !0,
                get: function() {
                    return Je[e];
                }
            });
        });
        function Dt(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (Dt = function(n) {
                return n ? r : t;
            })(e);
        }
        function pe(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = Dt(t);
            if (r && r.has(e)) return r.get(e);
            var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var s in e)if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) {
                var a = i ? Object.getOwnPropertyDescriptor(e, s) : null;
                a && (a.get || a.set) ? Object.defineProperty(n, s, a) : n[s] = e[s];
            }
            return n.default = e, r && r.set(e, n), n;
        }
        var xn = Object.assign({}, Pn, wn, jn, Tn);
        l.util = xn;
    });
    var St2 = o4((m)=>{
        "use strict";
        Object.defineProperty(m, "__esModule", {
            value: !0
        });
        m.add = Dn;
        m.format = $n;
        m.has = Sn;
        m.list = qn;
        m.register = void 0;
        m.remove = An;
        var En = Cn(re6());
        function Cn(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Mn(e, t) {
            if (typeof e != "string") throw new TypeError(`Invalid output format name, expected string, got ${typeof e}`);
            if (typeof t != "function") throw new TypeError(`Invalid formatter, expected function, got ${typeof t}`);
        }
        var M = new En.default;
        m.register = M;
        function Dn(e, t) {
            Mn(e, t), M.set(e, t);
        }
        function An(e) {
            M.remove(e);
        }
        function Sn(e) {
            return M.has(e);
        }
        function qn() {
            return M.list();
        }
        function $n(e, t, ...r) {
            if (!M.has(e)) throw new Error(`Output format "${e}" unavailable`);
            return M.get(e)(t, ...r);
        }
    });
    var qt3 = o4((p)=>{
        "use strict";
        Object.defineProperty(p, "__esModule", {
            value: !0
        });
        p.add = In;
        p.get = Jn;
        p.has = Wn;
        p.htmlDict = void 0;
        p.list = Fn;
        p.register = void 0;
        p.remove = Ln;
        p.textDict = void 0;
        var kn = Rn(re6());
        function Rn(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Nn(e, t) {
            if (typeof e != "string") throw new TypeError(`Invalid dict name, expected string, got ${typeof e}`);
            if (typeof t != "object") throw new TypeError(`Invalid dict, expected object, got ${typeof t}`);
            for(let r in t){
                let n = t[r];
                if (!Array.isArray(n) || n.some((i)=>typeof i != "string")) throw new TypeError(`Invalid dict entry "${r}", expected array of strings`);
            }
        }
        var D = new kn.default({
            html: {
                bibliographyContainer: [
                    '<div class="csl-bib-body">',
                    "</div>"
                ],
                entry: [
                    '<div class="csl-entry">',
                    "</div>"
                ],
                list: [
                    '<ul style="list-style-type:none">',
                    "</ul>"
                ],
                listItem: [
                    "<li>",
                    "</li>"
                ]
            },
            text: {
                bibliographyContainer: [
                    "",
                    `
`
                ],
                entry: [
                    "",
                    `
`
                ],
                list: [
                    `
`,
                    ""
                ],
                listItem: [
                    "	",
                    `
`
                ]
            }
        });
        p.register = D;
        function In(e, t) {
            Nn(e, t), D.set(e, t);
        }
        function Ln(e) {
            D.remove(e);
        }
        function Wn(e) {
            return D.has(e);
        }
        function Fn() {
            return D.list();
        }
        function Jn(e) {
            if (!D.has(e)) throw new Error(`Dict "${e}" unavailable`);
            return D.get(e);
        }
        var Bn = {
            wr_start: '<div class="csl-bib-body">',
            wr_end: "</div>",
            en_start: '<div class="csl-entry">',
            en_end: "</div>",
            ul_start: '<ul style="list-style-type:none">',
            ul_end: "</ul>",
            li_start: "<li>",
            li_end: "</li>"
        };
        p.htmlDict = Bn;
        var Un = {
            wr_start: "",
            wr_end: `
`,
            en_start: "",
            en_end: `
`,
            ul_start: `
`,
            ul_end: "",
            li_start: "	",
            li_end: `
`
        };
        p.textDict = Un;
    });
    var $t4 = o4((A)=>{
        "use strict";
        Object.defineProperty(A, "__esModule", {
            value: !0
        });
        A.add = Gn;
        A.get = Vn;
        A.has = Kn;
        A.list = zn;
        A.remove = Hn;
        var J = {};
        function Gn(e, t) {
            J[e] = t;
        }
        function Vn(e) {
            return J[e];
        }
        function Kn(e) {
            return Object.prototype.hasOwnProperty.call(J, e);
        }
        function Hn(e) {
            delete J[e];
        }
        function zn() {
            return Object.keys(J);
        }
    });
    var Wt2 = o4((f)=>{
        "use strict";
        Object.defineProperty(f, "__esModule", {
            value: !0
        });
        f.add = Yn;
        f.dict = f.config = void 0;
        f.has = Xn;
        f.input = void 0;
        f.list = Zn;
        f.output = void 0;
        f.remove = Qn;
        var kt = he(At3());
        f.input = kt;
        var Rt = he(St2());
        f.output = Rt;
        var Nt = he(qt3());
        f.dict = Nt;
        var It = he($t4());
        f.config = It;
        function Lt(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (Lt = function(n) {
                return n ? r : t;
            })(e);
        }
        function he(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = Lt(t);
            if (r && r.has(e)) return r.get(e);
            var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var s in e)if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) {
                var a = i ? Object.getOwnPropertyDescriptor(e, s) : null;
                a && (a.get || a.set) ? Object.defineProperty(n, s, a) : n[s] = e[s];
            }
            return n.default = e, r && r.set(e, n), n;
        }
        var Be = {
            input: kt,
            output: Rt,
            dict: Nt,
            config: It
        }, B = {};
        function Yn(e, t = {}) {
            let r = B[e] = {};
            for(let n in t){
                if (n === "config") {
                    r.config = {
                        [e]: t.config
                    }, Be.config.add(e, t.config);
                    continue;
                }
                let i = r[n] = {}, s = t[n];
                for(let a in s){
                    let b = s[a];
                    i[a] = !0, Be[n].add(a, b);
                }
            }
        }
        function Qn(e) {
            let t = B[e];
            for(let r in t){
                let n = t[r];
                for(let i in n)Be[r].remove(i);
            }
            delete B[e];
        }
        function Xn(e) {
            return e in B;
        }
        function Zn() {
            return Object.keys(B);
        }
    });
    var Ht3 = o4((U)=>{
        "use strict";
        Object.defineProperty(U, "__esModule", {
            value: !0
        });
        U.default = void 0;
        U.getJsonWrapper = ri;
        var Jt = Ut(Wt2()), Ue = Ut($e3()), ei = ti(I12());
        function ti(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        function Bt(e) {
            if (typeof WeakMap != "function") return null;
            var t = new WeakMap, r = new WeakMap;
            return (Bt = function(n) {
                return n ? r : t;
            })(e);
        }
        function Ut(e, t) {
            if (!t && e && e.__esModule) return e;
            if (e === null || typeof e != "object" && typeof e != "function") return {
                default: e
            };
            var r = Bt(t);
            if (r && r.has(e)) return r.get(e);
            var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for(var s in e)if (s !== "default" && Object.prototype.hasOwnProperty.call(e, s)) {
                var a = i ? Object.getOwnPropertyDescriptor(e, s) : null;
                a && (a.get || a.set) ? Object.defineProperty(n, s, a) : n[s] = e[s];
            }
            return n.default = e, r && r.set(e, n), n;
        }
        function Gt(e, t, r) {
            return e + (t < r.length - 1 ? "," : "");
        }
        function Vt(e, t) {
            let r = Array.isArray(e), n;
            return r ? n = e.map((i)=>Ft(i, t)) : n = Object.keys(e).filter((i)=>JSON.stringify(e[i])).map((i)=>`"${i}": ${Ft(e[i], t)}`), n = n.map(Gt).map((i)=>t.listItem.join(i)), n = t.list.join(n.join("")), r ? `[${n}]` : `{${n}}`;
        }
        function Ft(e, t) {
            return typeof e == "object" && e !== null ? e.length === 0 ? "[]" : Object.keys(e).length === 0 ? "{}" : Vt(e, t) : JSON.stringify(e);
        }
        function Kt(e, t) {
            let r = e.map((n)=>Vt(n, t));
            return r = r.map(Gt).map((n)=>t.entry.join(n)), r = r.join(""), t.bibliographyContainer.join(`[${r}]`);
        }
        function ri(e) {
            return Kt(e, Jt.dict.get("html"));
        }
        var ni = {
            data (e, { type: t, format: r = t || "text", version: n = "1.0.2" } = {}) {
                return n < "1.0.2" && (e = Ue.downgradeCsl(e)), r === "object" ? Ue.deepCopy(e) : r === "text" ? JSON.stringify(e, null, 2) : (ei.default.warn("[core]", "This feature (JSON output with special formatting) is unstable. See https://github.com/larsgw/citation.js/issues/144"), Kt(e, Jt.dict.get(r)));
            },
            ndjson (e, { version: t = "1.0.2" } = {}) {
                return t < "1.0.2" && (e = Ue.downgradeCsl(e)), e.map((r)=>JSON.stringify(r)).join(`
`);
            }
        };
        U.default = ni;
    });
    var Yt3 = o4((G)=>{
        "use strict";
        Object.defineProperty(G, "__esModule", {
            value: !0
        });
        G.default = void 0;
        G.getLabel = zt;
        function zt(e) {
            if ("citation-label" in e) return e["citation-label"];
            let t = "";
            return e.author && (t += e.author[0].family || e.author[0].literal), e.issued && e.issued["date-parts"] && e.issued["date-parts"][0] && (t += e.issued["date-parts"][0][0]), e["year-suffix"] ? t += e["year-suffix"] : e.title && (t += e.title.replace(/<\/?.*?>/g, "").match(/^(?:(?:the|a|an)\s+)?(\S+)/i)[1]), t;
        }
        var ii = {
            label (e) {
                return e.reduce((t, r)=>(t[r.id] = zt(r), t), {});
            }
        };
        G.default = ii;
    });
    var Ge2 = o4((ye)=>{
        "use strict";
        Object.defineProperty(ye, "__esModule", {
            value: !0
        });
        ye.default = void 0;
        var si = Qt(Ht3()), ai = Qt(Yt3());
        function Qt(e) {
            return e && e.__esModule ? e : {
                default: e
            };
        }
        var oi = Object.assign({}, si.default, ai.default);
        ye.default = oi;
    });
    var w11 = {};
    ar2(w11, {
        __esModule: ()=>ci2,
        default: ()=>li1
    });
    var Zt3 = Ke3(Ge2());
    j12(w11, Ke3(Ge2()));
    var { __esModule: ci2 } = Zt3, { default: Xt2, ...ui1 } = Zt3, li1 = Xt2 !== void 0 ? Xt2 : ui1;
    const mod73 = {
        __esModule: ci2,
        default: li1
    };
    var require10 = (n)=>{
        const e = (m)=>typeof m.default < "u" ? m.default : m, c = (m)=>Object.assign({}, m);
        switch(n){
            case "@citation-js/core/lib/plugin-common/output/index.js":
                return c(mod73);
            case "@citation-js/plugin-bibtex/lib/output/bibtxt.js":
                return c(mod72);
            case "@citation-js/plugin-bibtex/lib/mapping/shared.js":
                return c(mod71);
            case "@citation-js/plugin-bibtex/lib/output/entries.js":
                return c(mod70);
            case "@citation-js/plugin-bibtex/lib/output/index.js":
                return c(mod69);
            case "@citation-js/core/lib/plugin-common/input/index.js":
                return c(mod68);
            case "@citation-js/plugin-bibtex/lib/input/bibtxt.js":
                return c(mod67);
            case "@citation-js/plugin-bibtex/lib/input/entries.js":
                return c(mod66);
            case "@citation-js/plugin-bibtex/lib/input/index.js":
                return c(mod65);
            case "@citation-js/plugin-csl/lib/engines.js":
                return c(mod64);
            case "@citation-js/date":
                return c(mod54);
            case "@citation-js/name":
                return c(mod50);
            case "citeproc":
                return e(mod58);
            case "@citation-js/plugin-wikidata":
                return c(mod63);
            case "@citation-js/plugin-ris":
                return e(mod61);
            case "@citation-js/plugin-doi":
                return c(mod60);
            case "@citation-js/plugin-csl":
                return e(mod59);
            case "@citation-js/plugin-bibtex":
                return e(mod57);
            case "@citation-js/plugin-bibjson":
                return c(mod55);
            case "@citation-js/core":
                return c(mod53);
            default:
                throw new Error("module \"" + n + "\" not found");
        }
    };
    var _13 = Object.create;
    var f8 = Object.defineProperty;
    var T15 = Object.getOwnPropertyDescriptor;
    var $7 = Object.getOwnPropertyNames;
    var P14 = Object.getPrototypeOf, R12 = Object.prototype.hasOwnProperty;
    var n6 = ((e)=>typeof require10 < "u" ? require10 : typeof Proxy < "u" ? new Proxy(e, {
            get: (t, r)=>(typeof require10 < "u" ? require10 : t)[r]
        }) : e)(function(e) {
        if (typeof require10 < "u") return require10.apply(this, arguments);
        throw Error('Dynamic require of "' + e + '" is not supported');
    });
    var k9 = (e, t)=>()=>(t || e((t = {
                exports: {}
            }).exports, t), t.exports), z13 = (e, t)=>{
        for(var r in t)f8(e, r, {
            get: t[r],
            enumerable: !0
        });
    }, m14 = (e, t, r, p)=>{
        if (t && typeof t == "object" || typeof t == "function") for (let a of $7(t))!R12.call(e, a) && a !== r && f8(e, a, {
            get: ()=>t[a],
            enumerable: !(p = T15(t, a)) || p.enumerable
        });
        return e;
    }, d8 = (e, t, r)=>(m14(e, t, "default"), r && m14(r, t, "default")), O11 = (e, t, r)=>(r = e != null ? _13(P14(e)) : {}, m14(t || !e || !e.__esModule ? f8(r, "default", {
            value: e,
            enumerable: !0
        }) : r, e));
    var q10 = k9((Z, B)=>{
        B.exports = {
            source: {
                article: "article-journal",
                book: "book",
                booklet: "book",
                conference: "paper-conference",
                inbook: "chapter",
                incollection: "chapter",
                inproceedings: "paper-conference",
                manual: "report",
                mastersthesis: "thesis",
                misc: "document",
                phdthesis: "thesis",
                proceedings: "book",
                techreport: "report",
                unpublished: "manuscript"
            },
            target: {
                article: "article",
                "article-journal": "article",
                "article-magazine": "article",
                "article-newspaper": "article",
                book: "book",
                chapter: "inbook",
                manuscript: "unpublished",
                "paper-conference": "inproceedings",
                report: "techreport",
                review: "article",
                "review-book": "article"
            }
        };
    });
    var A11 = k9((ee, v)=>{
        var i = n6("@citation-js/core");
        n6("@citation-js/plugin-bibjson");
        n6("@citation-js/plugin-bibtex");
        n6("@citation-js/plugin-csl");
        n6("@citation-js/plugin-doi");
        n6("@citation-js/plugin-ris");
        n6("@citation-js/plugin-wikidata");
        var w = n6("citeproc"), x = n6("@citation-js/name"), j = n6("@citation-js/date");
        function L(e) {
            let t = {};
            for(let r in e)t[r] = typeof e[r] == "object" ? L(e[r]) : e[r];
            return t;
        }
        var C = {
            getAttributedEntry (e, t, r) {
                return e.replace(/^\s*<[a-z]+/i, `$& data-${t}="${r}"`);
            },
            getPrefixedEntry (e, t) {
                return C.getAttributedEntry(e, "csl-entry-id", t);
            },
            getWrappedEntry (e, t, r) {
                let p = (h, b)=>typeof b == "function" ? b(h) : b == null ? b : "";
                if (r.prepend == null && r.append == null) return e;
                let a = p(t, r.prepend), c = p(t, r.append), l = "", g = "", y = e.match(/^([^>]+>)([\s\S]+)(<[^<]+)$/i);
                return y && (l = y[1], e = y[2], g = y[3]), l + a + e + c + g;
            }
        };
        function s(e, t) {
            if (!(this instanceof s)) return new s(e, t);
            let r = new i.Cite(e, t);
            this._options = r._options, this.log = r.log, this.data = r.data;
        }
        s.prototype = Object.create(i.Cite.prototype);
        s.async = i.Cite.async;
        s.validateOptions = i.Cite.validateOptions;
        s.validateOutputOptions = i.Cite.validateOutputOptions;
        s.input = i.plugins.input.chain;
        s.inputAsync = i.plugins.input.chainAsync;
        s.util = Object.assign({
            attr: C
        }, i.util);
        s.version = {
            cite: i.version,
            citeproc: w.PROCESSOR_VERSION
        };
        var o = i.plugins.config.get("@csl");
        s.CSL = {
            engine: n6("@citation-js/plugin-csl/lib/engines.js").fetchEngine,
            item (e) {
                return (t)=>e.find((r)=>r.id === t);
            },
            locale (e) {
                return o.styles.get(o.styles.has(e) ? e : "en-US");
            },
            style (e) {
                return o.templates.get(o.templates.has(e) ? e : "apa");
            },
            register: {
                addTemplate: o.templates.add.bind(o.templates),
                getTemplate: o.templates.get.bind(o.templates),
                hasTemplate: o.templates.has.bind(o.templates),
                addLocale: o.locales.add.bind(o.locales),
                getLocale: o.locales.get.bind(o.locales),
                hasLocale: o.locales.has.bind(o.locales)
            }
        };
        s.plugins = L(i.plugins);
        delete s.plugins.input.util.clean;
        s.parse = Object.assign({
            input: {
                chain: i.plugins.input.chain,
                chainAsync: i.plugins.input.chainAsync,
                chainLink: i.plugins.input.chainLink,
                chainLinkAsync: i.plugins.input.chainLinkAsync,
                data: i.plugins.input.data,
                dataAsync: i.plugins.input.dataAsync,
                type: i.plugins.input.type,
                async: {
                    chain: i.plugins.input.chainAsync,
                    chainLink: i.plugins.input.chainLinkAsync,
                    data: i.plugins.input.dataAsync
                }
            },
            name: x.parse,
            date: j.parse,
            csl: i.plugins.input.util.clean,
            bibjson: n6("@citation-js/plugin-bibjson").parsers.json.record,
            bibtex: ((e, t, r)=>({
                    json (p) {
                        return p.parse([].concat(p));
                    },
                    prop (p, a) {
                        let c = t.parse([
                            {
                                type: "book",
                                properties: {
                                    [p]: a
                                }
                            }
                        ])[0], l = Object.keys(c).find(([g])=>g !== "type");
                        return [
                            l,
                            c[l]
                        ];
                    },
                    text (p) {
                        return e["@biblatex/text"].parse(p);
                    },
                    type (p) {
                        return r[p] || "book";
                    }
                }))(n6("@citation-js/plugin-bibtex/lib/input/index.js").formats, n6("@citation-js/plugin-bibtex/lib/input/entries.js"), q10().target),
            bibtxt: ((e)=>({
                    text: e.parse,
                    textEntry: e.textEntry
                }))(n6("@citation-js/plugin-bibtex/lib/input/bibtxt.js")),
            doi: ((e)=>({
                    api: e.parsers.api.parse,
                    id: e.parsers.id.parse,
                    async: {
                        api: e.parsers.api.parseAsync
                    }
                }))(n6("@citation-js/plugin-doi")),
            json: n6("@citation-js/core/lib/plugin-common/input/index.js").parsers.json.parse,
            wikidata: ((e)=>({
                    json: e.parsers.entity.parse,
                    list: e.parsers.id.parse,
                    prop: e.parsers.prop.parse,
                    type: e.parsers.prop.parseType,
                    async: {
                        json: e.parsers.entity.parseAsync,
                        prop (...t) {
                            return Promise.resolve(e.parsers.prop.parse.apply(this, t));
                        }
                    }
                }))(n6("@citation-js/plugin-wikidata"))
        }, s.plugins.input);
        s.get = Object.assign({
            dict: s.plugins.dict,
            name: x.format,
            date: j.format,
            bibtex: ((e, t, r, p)=>({
                    json (a) {
                        return t.formatBibtex([
                            a
                        ])[0];
                    },
                    label ({ id: a, "citation-label": c, author: l, issued: g, "year-suffix": y, title: h }) {
                        return r.LABEL.toSource(a, c, l, g, y, h);
                    },
                    text (a, c) {
                        return e.bibtex(a, {
                            format: c ? "html" : "text"
                        });
                    },
                    type (a) {
                        return p[a] || "misc";
                    }
                }))(n6("@citation-js/plugin-bibtex/lib/output/index.js").default, n6("@citation-js/plugin-bibtex/lib/output/entries.js"), n6("@citation-js/plugin-bibtex/lib/mapping/shared.js").Converters, q10().target),
            bibtxt: n6("@citation-js/plugin-bibtex/lib/output/bibtxt.js").format,
            json: n6("@citation-js/core/lib/plugin-common/output/index.js").default.data,
            label: n6("@citation-js/core/lib/plugin-common/output/index.js").default.label
        }, s.plugins.output);
        v.exports = s;
    });
    var u8 = {};
    z13(u8, {
        CSL: ()=>H9,
        async: ()=>N11,
        default: ()=>X3,
        get: ()=>M13,
        input: ()=>W10,
        inputAsync: ()=>D7,
        parse: ()=>K8,
        plugins: ()=>J4,
        prototype: ()=>I13,
        util: ()=>F8,
        validateOptions: ()=>U7,
        validateOutputOptions: ()=>V7,
        version: ()=>G4
    });
    var S14 = O11(A11());
    d8(u8, O11(A11()));
    var { prototype: I13, async: N11, validateOptions: U7, validateOutputOptions: V7, input: W10, inputAsync: D7, util: F8, version: G4, CSL: H9, plugins: J4, parse: K8, get: M13 } = S14, { default: E12, ...Q6 } = S14, X3 = E12 !== void 0 ? E12 : Q6;
    const textToBibHtml = (text)=>{
        const example = new X3({
            id: "a",
            title: "Item A"
        });
        return text;
        const output = example.format("bibliography", {
            format: "html",
            template: "apa",
            lang: "en-US"
        });
        return output;
    };
    console.log(textToBibHtml(""));
    return {
        textToBibHtml: textToBibHtml
    };
})();

function textToBibHtml(...args){ return main.textToBibHtml(...args);}